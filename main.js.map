{"version":3,"file":"main.js","mappings":"uOACA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,MACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OAIAM,EAAAN,EAAA,OACAO,EAAAP,EAAA,OACAQ,EAAAR,EAAA,OACAS,EAAAT,EAAA,OACAU,EAAAV,EAAA,iBAEMW,YAAiB,CACnB,CAAEC,KAAM,eAAgBC,UAAWR,EAAAS,uBACnC,CAAEF,KAAM,MAAOC,UAAWP,EAAAS,mBAC1B,CACIH,KAAM,GACNI,YAAa,CAACX,EAAAY,qBACdC,QAAS,CAACb,EAAAY,qBACVE,SAAU,CACN,CACIP,KAAM,UACNC,UAAWX,EAAAkB,sBAEf,CACIR,KAAM,OACNO,SAAU,CACN,CAAEP,KAAM,SAAUC,UAAWX,EAAAkB,sBAC7B,CAAER,KAAM,iBAAkBC,UAAWV,EAAAkB,2BACrC,CAAET,KAAM,UAAWC,UAAWJ,EAAAa,yBAC9B,CAAEV,KAAM,kBAAmBC,UAAWH,EAAAa,gCACtC,CAAEX,KAAM,QAASC,UAAWN,EAAAiB,sBAC5B,CAAEZ,KAAM,gBAAiBC,UAAWL,EAAAiB,+BAG5C,CACIb,KAAM,gBACNC,UAAWZ,EAAAyB,oBAEf,CACId,KAAM,kBACNC,UAAWV,EAAAkB,2BAEf,CACIT,KAAM,WACNC,UAAWT,EAAAuB,2BAEf,CAAEf,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAGrD,CAAEjB,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAGjDC,mBAI6B,eAAAC,EAAhBC,EAAgBC,EAAA,SAAAD,IAAAE,EAAAC,KAAAH,EAAA,GAAAD,SAAhBC,yCAAgB,iDAAhBA,uDAHCjC,EAAAqC,aAAaC,QAAQ1B,EAAQ,CAAE2B,SAAS,IACxCvC,EAAAqC,gBAEDJ,CAAgB,iNC5D7BhC,EAAA,OACAA,EAAA,MADA,IAEAuC,EAAAvC,EAAA,MACAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,OAYA0C,GADA1C,EAAA,MACAA,EAAA,QACA2C,EAAA3C,EAAA,MAEA4C,EAAA5C,EAAA,4FAKA8B,eAS0B,eAAAe,EAAbC,EAAa,SAAAC,GAGtB,SAAAD,EACYE,EACAC,EACAC,EACAC,GAAsB,IAAAC,EAAAlB,SAAAC,KAAAW,IAE9BM,EAAAC,EAAAlB,KAAAW,IALQE,YACAI,EAAAH,OACAG,EAAAF,SACAE,EAAAD,YANZC,EAAAE,MAAQ,gBAAgBF,CASxB,CAACG,SAAAT,EAAAC,GAAAd,EAAAa,EAAA,EAAAU,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACHC,eAAQC,KAAI,+BACZC,OAAOC,QAAQC,aAAe,SAACC,EAAYC,GAAkB,KAE7DpC,EAAAqC,KAAI,MAAO,SAAUlC,IAAK,EAE1BH,EAAAsC,iBAAgB5C,KAAKgB,WACrBoB,QAAQC,KAAI,uCAAwCJ,EAAAE,KAAA,EAC9CnC,KAAKa,UAAUgC,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClEb,eAAQC,KAAI,+CAAgDJ,EAAAE,KAAA,GACtDe,OAAOC,UAAS,QACtBf,eAAQC,KAAI,wBAAyBJ,EAAAE,KAAA,GAC/BnC,KAAKoD,kBAAiB,QACkB,GAA9ChB,QAAQC,KAAI,mCAAkC,EAC1ChC,EAAAgD,SAAO,CAAApB,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAAStD,KAAKuD,qBAAmB,QAC5CnB,eAAQC,KAAI,uBAAwBJ,EAAAC,KAAA,GAEhCE,QAAQC,KAAI,gCACZrC,KAAKwD,QACD,QACA,WACI,KAAM,+BACV,EACA,KAEE3B,EAAkB,QAATD,EAAGsB,cAAM,IAAAtB,GAAM,QAANA,EAANA,EAAQ6B,YAAI,IAAA7B,OAAA,EAAZA,EAAc8B,iBAAgBzB,EAAAE,KAAA,GAC7BN,GAAa8B,QAAQC,UAAS,QACtB,GADrB9B,EAAGG,EAAA4B,KACT7D,KAAK8D,aAAa,SACbhC,EAAG,CAAAG,EAAAE,KAAA,cAAQ,gCAA+B,QAC/CC,eAAQC,KAAI,wBAAA0B,OAAyBjC,IACrCkC,eAAeC,QAAQ,eAAgBnC,GAAKG,EAAAE,KAAA,GACtCnC,KAAKoD,iBAAgB,GAAM,QACjCpD,KAAKuD,oBAAoBtB,EAAAE,KAAA,iBAEO,GAFPF,EAAAC,KAAA,GAAAD,EAAAiC,GAAAjC,EAAAkC,MAAA,IAEzB/B,QAAQC,KAAK+B,KAAKC,UAASpC,EAAAiC,KAChB,QADqBnC,EAC3BmB,cAAM,IAAAnB,GAAS,QAATA,EAANA,EAAQuC,eAAO,IAAAvC,GAAfA,EAAiBwC,GAAE,CAAAtC,EAAAE,KAAA,SACpBC,eAAQC,KAAI,gCAAiCJ,EAAAE,KAAA,GACvCnC,KAAKoD,iBAAgB,GAAM,QAAAnB,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAE3BnC,KAAKwE,0BAAyB,yBAAAvC,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,cAG/C,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAAA,eAAAuD,EAAArD,EAEO,eAAAsD,EAAA9E,KAAsB+E,IAAKH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAAO,OAAAnD,IAAAC,KAAA,SAAAwD,IAAA,IAAAC,EAAA,OAAA1D,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACtC,SAAA7B,EAAA+E,YAAWP,EAAKjE,UAAUyE,IAAI,oBACxBH,EAAWL,EAAKjE,UAAUyE,IAAI,aAAe,IAC1CC,YAAcR,EACvBI,EAASK,QAAU,QACnBL,EAASM,OACHX,EAAKjE,UAAUyE,IAAI,SACrBI,SAASC,OAAOC,SAAS,mBAAmBR,EAAAjD,KAAA,KAC1C7B,EAAAuF,YAAWV,GAAShB,MAAO,SAACnB,GAAC,OAAKZ,QAAQ0D,MAAM9C,EAAE,GAAC,wBAAAoC,EAAAX,OAAA,EAAAS,EAAA,EARnBzD,EAQmB,GAC5D,gBAAA2B,IAAA,OAAAyB,EAAAF,MAAA3E,KAAA4E,UAAA,EAXA,IAWA,CAAAvD,IAAA,oBAAAC,MAAA,eAAAyE,EAAAvE,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAAC,EAAAC,EAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACJ,SAAA7B,EAAA8F,YAAWpG,KAAKe,QACXf,KAAKa,UAAUyE,IAAI,yBACpBtF,KAAKwD,QAAQ,gBAAiB,kBAAM0C,EAAKG,aAAa,EAAE,KAC3DF,EAAAhE,KAAA,EACK7B,EAAAgG,aAAaxD,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OACtDjD,KAAK8D,aAAa,kBAAe,EACjCtD,EAAA+F,sBAAkBjG,EAAAkG,iBAAa,EAC/BjG,EAAAkG,uBACIzG,KAAKa,UAAUyE,IAAI,qCAAmC,IAAAvB,OACjC,QADiCkC,KAC9C3F,EAAAkG,sBAAa,IAAAP,GAAO,QAAPA,EAAbA,EAAeS,aAAK,IAAAT,OAAA,EAApBA,EAAsBU,MAAM,KAAK,KAC3C,wBAAAR,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACL,gBAAAuD,IAAA,OAAAwC,EAAApB,MAAA3E,KAAA4E,UAAA,EAdA,IAcA,CAAAvD,IAAA,0BAAAC,MAAA,eAAAsF,EAAApF,EAAAC,IAAAC,KAEO,SAAAmF,IAAA,IAAAC,EAAA9G,KAAA,OAAAyB,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAwByC,GAvB7CC,QAAQC,KAAI,iCACZrC,KAAKwD,QAAQ,cAAe,WACxB,IAAM/E,EAAI,GAAAsF,OAAM2B,SAASC,QAAM5B,OAAG2B,SAASsB,SAAQ,iBACnD5E,QAAQC,KAAI,kDAAA0B,OAC0CtF,IAEtDyE,OAAOoB,QAAQC,GAAG0C,mBACdxI,EACA,CAAEyI,OAAQ,GAAIC,MAAO,IACrB,SAACC,GACGhF,QAAQC,KAAI,4CACZ,IAAMgF,EAASD,EAAO9F,MACtB+F,EAAOC,gBACHpE,OAAOqE,UAAUC,sBACjB,SAACnE,GACOA,MAAOhD,EAAAoH,UAASpE,GACpByD,EAAKvD,oBACL8D,EAAOK,OACX,EAER,EAER,GACAtF,QAAQC,KAAI,QAAA0B,OAASzB,OAAOoD,SAASiC,QAEjCrF,OAAOoD,SAASiC,KAAK/B,SAAS,kBAC9B5B,eAAe4D,QAAQ,WAAU,CAAAb,EAAA5E,KAAA,SAEjC6B,sBAAeC,QAAQ,UAAW,QAClC7B,QAAQC,KAAI,+CACZrC,KAAK8D,aAAa,eAAeiD,EAAA5E,KAAA,EAC3BnC,KAAKoD,iBAAgB,GAAM,aAC5B/C,EAAAgD,SAAO,CAAA0D,EAAA5E,KAAA,gBAAA4E,EAAAzD,OAAA,kBACZJ,OAAOoB,QAAQC,GAAGsD,iBAAcxH,EAAAgD,UAAW,IAAI,yBAAA0D,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IAEtD,gBAAAwE,IAAA,OAAAoC,EAAAjC,MAAA3E,KAAA4E,UAAA,EAtCA,IAsCA,CAAAvD,IAAA,cAAAC,MAEO,WAAW,IAAAwG,GACf,EAAIzH,EAAA0H,WAAyB,QAAjBD,KAAIxH,EAAAkG,sBAAa,IAAAsB,GAAbA,EAAeE,kBAC/B3H,EAAA4H,mBACAvC,SAASwC,SACb,KAjHC,IAAA3G,CAiHA,CA3HqB,CAAQjB,EAAA6H,cAAYzH,SAAjCC,0CAAYyH,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAC,UAAAP,EAAAC,4BAAAO,EAAAC,aAAA,kDAAZlI,EAAYmI,UAAA,eAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAJjBhB,EAFAkB,oBAAA,kBAEAlB,CAF+B,mBAE/BA,CADiC,qGAK5BzH,CAAa,wJCjC1B,IAAA4I,EAAA1L,EAAA,OACA2L,EAAA3L,EAAA,OACA4L,EAAA5L,EAAA,OACA6L,EAAA7L,EAAA,OAEA8L,EAAA9L,EAAA,MACA+L,EAAA/L,EAAA,OACAgM,EAAAhM,EAAA,OAEAiM,EAAAjM,EAAA,OACAkM,EAAAlM,EAAA,OACAmM,EAAAnM,EAAA,OACAoM,EAAApM,EAAA,MACAqM,EAAArM,EAAA,OAEAsM,EAAAtM,EAAA,OACAuM,EAAAvM,EAAA,OACAwM,EAAAxM,EAAA,OACAyM,EAAAzM,EAAA,OACA0M,EAAA1M,EAAA,OACA2M,EAAA3M,EAAA,OAQA4M,EAAA5M,EAAA,KACA6M,EAAA7M,EAAA,OACA8M,EAAA9M,EAAA,iBAGA,SAAgB+M,EAAkBC,GAC9B,OAAO,IAAIH,EAAAI,oBAAoBD,EAAM,mBAAoB,QAC7D,iBAFAlL,oBAAAiL,EAIAjL,YAqCsB,eAAAoL,EAATC,EAASlL,EAAA,SAAAkL,IAAAjL,EAAAC,KAAAgL,EAAA,GAAAD,SAATC,yCAAS,iDAATA,EAASC,UAAA,CA3BNb,EAAAzJ,oEA0BQ,CAAC6J,EAAAU,aAAWzB,EAAA0B,sBAAkB1B,EAAA2B,4BAA0BC,QAAA,CA1BvC7B,EAAA8B,cACjC5B,EAAA6B,wBACAlB,EAAAxK,iBACAyK,EAAAkB,WACAjB,EAAAkB,sBACA/B,EAAA6B,wBACAhC,EAAAmC,YACA9B,EAAA+B,oBACAhC,EAAAiC,kBACAjB,EAAAkB,gBACA/B,EAAAgC,eACA9B,EAAA+B,aACA7B,EAAA8B,iBACAzC,EAAA0C,oBACAhC,EAAAiC,qBACAnC,EAAAoC,oBACA1B,EAAA2B,gBAAgBlM,QAAQ,CACpBmM,gBAAiB,KACjBC,OAAQ,CACJC,QAAS9B,EAAA+B,gBACTC,WAAY7B,EACZ8B,KAAM,CAACjD,EAAAkD,eAGf9C,EAAA+C,oBAAoBC,SAAS,iBAAkB,CAC3CC,QAAS3C,EAAA4C,YAAYC,gBAEpBhC,CAAS,4IC1EtBnN,EAAA,gCAEA8B,oBAkC8B,eAAAsN,EAAjBrO,EAAiB,WACW,OAAAkB,EAArC,SAAAlB,EAAmBsO,GAAcnN,EAAAC,KAAApB,GAAdoB,KAAAkN,QAAiB,EAAC,EAAA7L,IAAA,WAAAC,MAErC,WAAkB,IAAC,CAHO,GAGP2L,SAHVrO,0CAAiBwJ,EAAAC,4BAAAC,EAAA6E,QAAA,kDAAjBvO,EAAiBkK,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,iaAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzBlBhB,EANGiF,yBAAA,UAMHjF,CAJP,cAIOA,CADH,WAEOA,EAAAkB,oBAAA,WAMJlB,EAAAkF,yBAGQlF,EAFRiF,yBAAA,UAEQjF,CAFwB,UAExBA,CADc,YAEVA,EAAAmF,iBAAA,qBAGZnF,EAH0BkF,wBAG1BlF,KAEIA,EADJiF,yBAAA,UACIjF,CAD4B,YAExBA,EAAAmF,iBAAA,iBACAnF,EAAAiF,yBAAA,aAA8BjF,EAAAmF,iBAAA,IAAiBnF,EAAAkF,yBAAQlF,EAAAmF,iBAAA,uBAKvEnF,EAHYkF,wBAGZlF,cAL8CA,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,IAAApE,EAAA6D,OAAAQ,IAAA,SAOrC9O,CAAiB,gJCrC9Bf,EAAA,UACA8P,EAAA9P,EAAA,OACA+P,EAAA/P,EAAA,OAEA8L,EAAA9L,EAAA,MACAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACA8M,EAAA9M,EAAA,OACAqQ,EAAArQ,EAAA,OACA4M,EAAA5M,EAAA,OACAsQ,EAAAtQ,EAAA,OACAuQ,EAAAvQ,EAAA,OACAwQ,EAAAxQ,EAAA,OACAyQ,EAAAzQ,EAAA,OACA0Q,EAAA1Q,EAAA,OACA2Q,EAAA3Q,EAAA,OACA4Q,EAAA5Q,EAAA,OACA6Q,EAAA7Q,EAAA,OACA8Q,EAAA9Q,EAAA,OACA+Q,EAAA/Q,EAAA,OAEAgR,GADAhR,EAAA,OACAA,EAAA,QACAiR,EAAAjR,EAAA,OACAK,EAAAL,EAAA,OACA6L,EAAA7L,EAAA,iBA4BA8B,wBAgBkC,eAAAoP,EAArBtD,EAAqB3L,EAAA,SAAA2L,IAAA1L,EAAAC,KAAAyL,EAAA,GAAAsD,SAArBtD,yCAAqB,iDAArBA,uDAbL/B,EAAA6B,wBACAsD,EAAAG,qBACAF,EAAAG,mBACA/Q,EAAAgR,iBA7BJtB,EAAAuB,gBACAxF,EAAAiC,kBACAiC,EAAAuB,oBACAtB,EAAAuB,gBACAtB,EAAAuB,mBACAV,EAAAW,cACAvB,EAAAwB,eACAvB,EAAAwB,yBACAjB,EAAAkB,qBACA/B,EAAAgC,sBACAhF,EAAAkB,gBACAqC,EAAA0B,eACAnF,EAAAoF,gBACA1B,EAAA2B,cACA1B,EAAA2B,kBACAtB,EAAAuB,mBACA3B,EAAA4B,cACAvB,EAAAwB,eACA5B,EAAA6B,iBACA5B,EAAA6B,eACAzB,EAAA0B,gBAcIxB,EAAAG,qBACAF,EAAAG,mBACA/Q,EAAAgR,oBAGKzD,CAAqB,oLCtElC5N,EAAA,OACAA,EAAA,OADA,0DAGA8B,uBAmCiC,eAAA2Q,EAApBjR,EAAoB,WAUzB,OAAAS,EAHJ,SAAAT,EACYkR,EACAC,GAAe,IAAAvP,EAAAjB,KAAAD,EAAAC,KAAAX,GADfW,KAAAuQ,WACAvQ,KAAAwQ,UARIxQ,KAAAyQ,UAAY,kBAAMxP,EAAKsP,SAASE,WAAW,CASxD,EAAC,EAAApP,IAAA,OAAAiE,IAPJ,WACI,OAAOtF,KAAKuQ,SAASG,IACzB,GAAC,CAAArP,IAAA,cAAAC,OAAAqP,EAAAnP,EAAAC,IAAAC,KAOM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKuQ,SAASK,cAAa,OACjC5Q,KAAKwQ,QAAQK,SAAS,CAAC,QAAS,QAAS,YAAY,wBAAA5O,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACxD,SAAA8Q,IAAA,OAAAH,EAAAhM,MAAA3E,KAAA4E,UAAA,MAVA,IAAA+L,CAUA,CAf4B,GAe5BL,SAfQjR,0CAAoB+I,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAA2E,QAAA,kDAApB9N,EAAoByJ,UAAA,mBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0UAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA5BjBhB,EAJRiF,yBAAA,UAIQjF,CAJkC,UAIlCA,CADH,UACwCA,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAC9ClF,EAAAkB,oBAAA,uBAIIlB,EAHJiF,yBAAA,UAGIjF,CADH,cAMOA,EAAA4I,qBAAA,0BAAS3H,EAAAyH,aAAa,GAEtB1I,EAAAmF,iBAAA,iBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,0BAAS3H,EAAAoH,WAAW,GAEpBrI,EAAAmF,iBAAA,kBAIhBnF,EAHYkF,wBAGZlF,cAfgBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,EAAAqH,KAAApP,MAAA4P,oEAmBX7R,CAAoB,wLCtCjCxB,EAAA,WACAyC,EAAAzC,EAAA,+MA6DwBuK,EAAAiF,yBAAA,qBAKIjF,EAAAmF,iBAAA,eACJnF,EAAAkF,uFAQAlF,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADsB,qBAGlBA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAEbF,EAAAZ,KAAAe,WAAgB,CAAAC,mBAAAP,EACZ,SAAW,KAE5B,GAE0B/I,EAAAmF,iBAAA,sBAGZnF,EAFQkF,wBAERlF,gDAXYA,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,YAAAK,EAAAZ,KAAApP,MAAAoQ,mBAMAtJ,CAN2C,iBAAAA,EAAAuJ,0BAAA,EAAAC,8BA2BnDxJ,EAFRiF,yBAAA,cAEQjF,CAFkC,SAElCA,CADyC,WAIrCA,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,mBACzBnF,EADsCkF,wBACtClF,GACAA,EAAAkB,oBAAA,yBAKJlB,EAAAkF,kEAJQlF,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,OAAAK,EAAAZ,KAAApP,MAAAuQ,KACAzJ,CADwB,WAAAkJ,EAAAZ,KAAApP,MAAAwQ,wEAlGxB1J,EAPZiF,yBAAA,UAOYjF,CAHX,cAGWA,CAFa,SAEbA,CADyC,WAIrCA,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,aACzBnF,EADgCkF,wBAChClF,GAGQA,EAFRiF,yBAAA,UAEQjF,CAF8C,UAE9CA,CAD8B,aACXA,EAAAmF,iBAAA,gBAASnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAC1CA,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,eAMAlB,EAAAiF,yBAAA,gBAAWjF,EAAAmF,iBAAA,iCAEnBnF,EAF6CkF,wBAE7ClF,KAEIA,EADJiF,yBAAA,WACIjF,CAD8B,eACZA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GACpCA,EAAAiF,yBAAA,sBACIjF,EAAAmF,iBAAA,4CAGZnF,EAFQkF,wBAERlF,KAGQA,EAFRiF,yBAAA,YAEQjF,CAFiC,YAEjCA,CADsB,eACEA,EAAAmF,iBAAA,iBAAUnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAChDA,EAAAiF,yBAAA,sBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,IAAiB,GAG1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD+B,eACTA,EAAAmF,iBAAA,eAAQnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAC5CA,EAAAkB,oBAAA,0BASAlB,EAAA4J,qBAAA,GAAAC,EAAA,uBAQR7J,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAE,EAAA,cAkBJ9J,EAAAkF,yBAIQlF,EAFRiF,yBAAA,eAEQjF,CAFa,UAEbA,CADyC,YAIrCA,EAAAmF,iBAAA,UACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,WACzBnF,EAD6BkF,wBAC7BlF,GACAA,EAAAkB,oBAAA,yBACJlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAG,EAAA,kBAeJ/J,EAAAkF,qEA3GIlF,EAAA6I,qBAAA,YAAAK,EAAAZ,MAoCgBtI,EAAAoF,oBAAA,IAEApF,EAFA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAuQ,KAEAzJ,CAF2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAU3BxJ,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,cAAAmB,EAAAd,EAAAZ,KAAApL,IAAA,cAAA8M,EAAA9Q,MAGA8G,CAHgC,UAGhCA,CAFe,SAEfA,CADU,WAMTA,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAe,eASRjK,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAgB,kBA6BalK,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAiB,eAlGlC5S,2BAqHsC,eAAA6S,EAAzBC,EAAyB,SAAA7R,GAOlC,SAAA6R,EACYlC,EACA1P,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAyS,IAElCxR,EAAAC,EAAAlB,KAAAyS,IAHQlC,WACAtP,EAAAJ,YARII,EAAAyP,KAAOzP,EAAKsP,SAASG,KAAKzP,CAW1C,CAACG,SAAAqR,EAAA7R,GAAAd,EAAA2S,EAAA,EAAApR,IAAA,eAAAiE,IATD,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAC9B,GAAC,CAAAjE,IAAA,WAAAC,MASM,WAAQ,IAAAoR,EAAA5N,EAAA9E,KACXA,KAAKuQ,SAASoC,WAAW,CAAEC,KAAM,SACjC5S,KAAK6S,aACD,SAEqB,QAFbH,EACR1S,KAAKuQ,SAASG,KACTpL,IAAI,oBAAY,IAAAoN,GACH,QADGA,EADrBA,EAEMI,oBAAY,IAAAJ,OAAA,EAFlBA,EAEoBK,UAAU,SAACC,GAAI,OAC3BA,EAAKhO,OAASF,EAAKmO,gBAAgBD,EAAK,IAAM,EAAE,GAGhE,GAAC,CAAA3R,IAAA,kBAAAC,MAEO,SAAgB4R,GAAU,IAAAC,EAAAC,EACzBF,GACLlT,KAAKuQ,SAASG,KAAKe,WAAW,CAC1BP,SAAUgC,GAAMG,GAChBC,WAAYJ,EAAKK,KACjBC,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBG,aAAc,OACdC,MAAOT,EAAKU,KAAO,CAAU,QAAVT,EAACD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWU,UAAoB,QAAXT,EAAEF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,IAAM,GAC3DS,cAAeZ,GAEvB,IAAC,CArCiC,CAAQ5S,EAAA6H,cAAYqK,SAA7CC,0CAAwBrK,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAxBkK,EAAwB3J,UAAA,wBAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kqCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlH7BhB,EAAA4J,qBAAA,EAAA+B,EAAA,oBAEK3L,EAAA6I,qBAAA,OAAA5H,EAAAqH,yTAgHA+B,CAAyB,sJCzHtC5U,EAAA,6HAqBYuK,EAAAiF,yBAAA,OACIjF,EAAAmF,iBAAA,oEACJnF,EAAAkF,0BArBZ3N,8BAoCwC,eAAAqU,EAA3B1U,EAA2BQ,EAGpC,SAAAR,EAAoBiR,GAA4BxQ,EAAAC,KAAAV,GAA5BU,KAAAuQ,WAFJvQ,KAAAiU,aAAejU,KAAKuQ,SAAS0D,YAEM,GAACD,SAH3C1U,0CAA2B8I,EAAAC,4BAAAC,EAAAyI,oBAAA,kDAA3BzR,EAA2BwJ,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kPAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9B5BhB,EAHJiF,yBAAA,UAGIjF,CADH,UACwBA,EAAAmF,iBAAA,wBAAkBnF,EAAAkF,yBACvClF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,OACIjF,EAAAmF,iBAAA,6BACAnF,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GAAwDnF,EAAAkF,yBAC3DlF,EAAAmF,iBAAA,4FAOJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAkC,EAAA,WAGA9L,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,oBAERnF,EADIkF,wBACJlF,UAfWA,EAAAoF,oBAAA,GAAApF,EAAA+L,6BAAA,MAAA9K,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAAX,cAAA,MAAAjK,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAA/C,WACH9I,EAAAoF,sBAAApF,EAAAgM,6BAAA,yCAAAhM,EAAAiM,sBAAA,UAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,KAAA,uBAAAzJ,EAAAiM,sBAAA,WAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,KAAA,mBAAAzJ,EAAAiM,sBAAA,aAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,MAAA,UAAAxI,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAAnC,UAAA,sBAQA1J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAGiB7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA7I,EAAAuJ,0BAAA,GAAAC,qMAcpBtS,CAA2B,kJCtCxCzB,EAAA,OAIAA,EAAA,OAJA,IAKAyC,EAAAzC,EAAA,OAEAyW,GADAzW,EAAA,OACAA,EAAA,yEAEA8B,0BAkCoC,eAAA4U,EAAvBpV,EAAuB,WAa5B,OAAAW,EAJJ,SAAAX,EACYoR,EACAC,EACAgE,GAA6B,IAAAvT,EAAAjB,KAAAD,EAAAC,KAAAb,GAF7Ba,KAAAuQ,WACAvQ,KAAAwQ,UACAxQ,KAAAwU,gBATIxU,KAAAyQ,UAAY,kBAAMxP,EAAKsP,SAASE,WAAW,CAUxD,EAAC,EAAApP,IAAA,OAAAiE,IARJ,WACI,OAAOtF,KAAKuQ,SAASG,IACzB,GAAC,CAAArP,IAAA,cAAAC,MAQM,WAAW,IAAA2E,EAAAnB,EAAA9E,KAGd,GAFKA,KAAK0Q,KAAKpP,MAAMmT,MACjBzU,KAAK0Q,KAAKe,WAAW,CAAEgD,KAAmB,QAAfxO,KAAE3F,EAAAkG,sBAAa,IAAAP,OAAA,EAAbA,EAAeS,SAC3C1G,KAAK0Q,KAAKgE,MACX,SAAOpU,EAAAqU,aAAW,6BAAA5Q,UACezD,EAAAsU,kBAAiB5U,KAAK0Q,MAAMmE,KACrD,MACH,MAET7U,KAAK8U,UAAY9U,KAAKwU,cAAcO,KAAKT,EAAAU,6BACzChV,KAAK8U,UAAUG,SAASC,YAAa,EACrClV,KAAK8U,UAAUK,iBAAiBpC,UAAU,SAACzR,GACnCA,IACAwD,EAAK0L,QAAQK,SAAS,CAAC,QAAS,UAAW,YAC3C/L,EAAKyL,SAAS6E,QAAQ,WAE9B,EACJ,IAAC,CAhC+B,GAgC/Bb,SAhCQpV,0CAAuBiJ,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAA2E,QAAA/E,EAAAC,4BAAAK,EAAA4M,gBAAA,kDAAvBnW,EAAuB2J,UAAA,sBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,+TAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3BpBhB,EAJRiF,yBAAA,UAIQjF,CAJkC,UAIlCA,CADH,UACwCA,EAAAmF,iBAAA,kBAAYnF,EAAAkF,yBACjDlF,EAAAkB,oBAAA,0BAIIlB,EAHJiF,yBAAA,UAGIjF,CADH,cAKOA,EAAA4I,qBAAA,0BAAS3H,EAAAyH,aAAa,GAEtB1I,EAAAmF,iBAAA,oBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,0BAAS3H,EAAAoH,WAAW,GAEpBrI,EAAAmF,iBAAA,kBAIhBnF,EAHYkF,wBAGZlF,oEAIKjJ,CAAuB,2LC3CpCtB,EAAA,WACAyC,EAAAzC,EAAA,OAQA0X,GAFA1X,EAAA,OACAA,EAAA,MACAA,EAAA,0WAiDgCuK,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAuE,GAEApN,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+H,EAAAC,cAAAD,EAAAjC,KAAA,mEAhBZnL,EAJJiF,yBAAA,WAIIjF,CADH,cACsBA,EAAAmF,iBAAA,cAAQnF,EAAAkF,yBAEvBlF,EADJiF,yBAAA,sBACIjF,CADgD,6GAI5CA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,EAAAoE,YAAAvE,GAAmB,GAOpC/I,EAAA4J,qBAAA,EAAA2D,EAAA,mDAQZvN,EAFQkF,wBAERlF,kDAhBYA,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAuE,UAGAzN,CAH4B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG5BxJ,CADuC,sBAAAgK,EAAAhK,EAAAwN,sBAAA,IAAAtE,EAAAuE,WAAA,KAAAzD,EAAAqD,gBAAA,OAAArD,EAAAhK,EAAAwN,sBAAA,IAAAtE,EAAAuE,WAAA,KAAAzD,EAAAmB,OAOnBnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAtE,EAAAwE,mCAsDxB1N,EAAAiF,yBAAA,qBAIKjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,gDAKhBlF,EADJiF,yBAAA,WACIjF,CAD4C,cAC1BA,EAAAmF,iBAAA,UAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAAQnF,EAAPkF,wBAAOlF,GACpCA,EAAAkB,oBAAA,0BAIJlB,EAAAkF,uFAKAlF,EAFRiF,yBAAA,cAEQjF,CAFqC,SAErCA,CADoC,WAIhCA,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAC9BlF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAA0E,oBAAmB,GAE5B5N,EAAAmF,iBAAA,oBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAA2E,WAAAC,WAAA5E,EAAA2E,WAAAC,UAAA,GAEA9N,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAIlBnF,EAFUkF,wBAEVlF,KACAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,2BAKRlB,EADIkF,wBACJlF,8CAdsBA,EAAAoF,oBAAA,IAAApF,EAAA+L,4BAAA7C,EAAA2E,WAAAC,UAAA,6BAOd9N,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2E,WAAAC,UAAA,6EAuCA9N,EAFRiF,yBAAA,cAEQjF,CAFkC,SAElCA,CADoC,WAIhCA,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,cAAQnF,EAAAkF,yBAC7BlF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAA2E,WAAAG,UAAA9E,EAAA2E,WAAAG,SAAA,GAEAhO,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAIlBnF,EAFUkF,wBAEVlF,KACAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,6BASRlB,EADIkF,wBACJlF,8CAlBsBA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA2E,WAAAG,SAAA,6BAOdhO,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2E,WAAAG,SAAA,eAIIhO,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAiO,0BAAA,EAAAC,EAAAhF,EAAAZ,KAAApP,MAAAuQ,KAAAP,EAAAZ,KAAApP,MAAAwQ,SAAA,MAAAR,EAAAZ,KAAApP,MAAAiV,UAAA,UAAAjF,EAAAZ,KAAApP,MAAAiV,UAAA,GAAAC,MAAA,KAAAlF,EAAAZ,KAAApP,MAAAiV,UAAA,GAAAC,MAAA3C,sCAwCJzL,EAFRiF,yBAAA,cAEQjF,CAFiC,UAEjCA,CADyC,WAIrCA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,WACzBnF,EAD8BkF,wBAC9BlF,GAEIA,EADJiF,yBAAA,WACIjF,CAD8B,cACXA,EAAAmF,iBAAA,uCAAiCnF,EAAAkF,yBACpDlF,EAAAkB,oBAAA,wBAMRlB,EADIkF,wBACJlF,4CAZYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAmF,aAAA,2EAlPJrO,EAPZiF,yBAAA,UAOYjF,CAHX,cAGWA,CAFa,SAEbA,CADoC,WAIhCA,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAqBjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBAC5BlF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA2E,WAAAS,SAAApF,EAAA2E,WAAAS,QAAA,GAEAtO,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,IAIlBnF,EAFUkF,wBAEVlF,KACAA,EAAAiF,yBAAA,YAIIjF,EAAA4J,qBAAA,GAAA2E,EAAA,8CA2BQvO,EAFRiF,yBAAA,YAEQjF,CAF2C,YAE3CA,CADsB,eACHA,EAAAmF,iBAAA,gBAASnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAC1CA,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAMAlB,EAAAiF,yBAAA,gBACKjF,EAAAmF,iBAAA,iCAGbnF,EAHuCkF,wBAGvClF,KAEIA,EADJiF,yBAAA,YACIjF,CADsB,eACJA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GACpCA,EAAAiF,yBAAA,sBACIjF,EAAAmF,iBAAA,4CAGZnF,EAFQkF,wBAERlF,KAGQA,EAFRiF,yBAAA,YAEQjF,CAFiC,YAEjCA,CADsB,eAEjBA,EAAAmF,iBAAA,iBAAUnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAE7BA,EAAAiF,yBAAA,sBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAE7BF,EAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,IACjB,GAEsB/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD+B,eACTA,EAAAmF,iBAAA,eAAQnF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAAQnF,EAAPkF,wBAAOlF,GAC5CA,EAAAiF,yBAAA,0BAMIjF,EAAAmF,iBAAA,2CACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA4E,EAAA,uBAORxO,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA6E,EAAA,cAQRzO,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA8E,EAAA,mBAsCQ1O,EAFRiF,yBAAA,eAEQjF,CAFa,UAEbA,CADoC,YAIhCA,EAAAmF,iBAAA,UACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACzBlF,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA2E,WAAAM,WAAAjF,EAAA2E,WAAAM,UAAA,GAEAnO,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAIlBnF,EAFUkF,wBAEVlF,KACAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,0BAKRlB,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA+E,EAAA,mBAmCQ3O,EAFRiF,yBAAA,eAEQjF,CAFa,UAEbA,CADoC,YAIhCA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAC3BlF,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA2E,WAAAe,QAAA1F,EAAA2E,WAAAe,OAAA,GAEA5O,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAIlBnF,EAFUkF,wBAEVlF,KACAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,0BAMRlB,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAiF,EAAA,mBAkBJ7O,EAAAkF,qEAnQIlF,EAAA6I,qBAAA,YAAAK,EAAAZ,MAgBsBtI,EAAAoF,oBAAA,IAAApF,EAAA+L,4BAAA7C,EAAA2E,WAAAS,QAAA,6BAOdtO,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2E,WAAAS,QAAA,eAIKtO,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAmB,EAAAhK,EAAAwN,sBAAA,MAAAtE,EAAAwE,YAAA,KAAA1D,EAAApN,QAAA,GAoDOoD,EAAAoF,oBAAA,IAIApF,EAJA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAuQ,KAIAzJ,CAJ2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAY3BxJ,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,aAAAK,EAAAZ,MAAA,MAAAY,EAAAZ,KAAApP,MAAA,KAAAgQ,EAAAZ,KAAApP,MAAAuQ,KACAzJ,CAD0B,MAAAkJ,EAAA4F,cAOzB9O,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAe,eAMPjK,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA6F,qBASQ/O,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA8F,gBAkDAhP,EAAAoF,oBAAA,IAAApF,EAAA+L,4BAAA7C,EAAA2E,WAAAM,UAAA,6BAOdnO,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2E,WAAAM,UAAA,eAQcnO,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAmF,cAsCVrO,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAmF,aAAA,aASUrO,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA2E,WAAAe,OAAA,6BAOd5O,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2E,WAAAe,OAAA,eAGI5O,EAAAoF,sBACApF,EADA6I,qBAAA,OAAAK,EAAAZ,KAAApP,MAAAuQ,KACAzJ,CADwB,WAAAkJ,EAAAZ,KAAApP,MAAAwQ,UAMd1J,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA+F,aAvPlC1X,8BA8QyC,eAAA2X,EAA5BC,EAA4B,SAAA3W,GA2DrC,SAAA2W,EACYhH,EACA1P,EACA2W,EACA1W,GAAyB,IAAAG,GAAAlB,SAAAC,KAAAuX,IAEjCtW,GAAAC,EAAAlB,KAAAuX,IALQhH,WACAtP,GAAAJ,YACAI,GAAAuW,UACAvW,GAAAH,OA9DIG,GAAAyP,KAAOzP,GAAKsP,SAASG,KAE9BzP,GAAAgV,WAAsC,GAE7BhV,GAAA4U,SAAW5U,GAAKH,KAAK2W,gBACrBxW,GAAA6U,UAAY7U,GAAKH,KAAK4W,cAAczW,EA4DpD,CAACG,SAAAmW,EAAA3W,GAAAd,EAAAyX,EAAA,EAAAlW,IAAA,eAAAiE,IA1DD,WACI,QACMtF,KAAKa,UAAUyE,IAAI,kCACnBtF,KAAKa,UAAUyE,IAAI,0BAE7B,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,wBAChC,GAAC,CAAAjE,IAAA,iBAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,4BAChC,GAAC,CAAAjE,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAjE,IAAA,sBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iCAC9B,GAAC,CAAAjE,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,2BAC9B,GAAC,CAAAjE,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,0BAC9B,GAAC,CAAAjE,IAAA,oBAAAC,MAEM,WAAiB,IAAAwD,EAAA9E,KACpB2X,EAAiD3X,KAAK0Q,KAAKpP,MAA7BuQ,GAAI8F,EAAJ9F,KAAMC,GAAQ6F,EAAR7F,SAC9B8F,GAAM5X,KAAKwX,QAAQzC,KAAKQ,EAAAsC,+BAAgC,CAC1DpV,KAAM,CACFqV,MAHSH,EAATzB,UAIAzB,KAJoBkD,EAATI,YAILA,EAAazX,EAAAkG,eACnBqL,QACAC,eAGR8F,GAAII,cAAcjF,UAAU,SAACkF,IACpBA,IACLnT,EAAK4L,KAAKe,WAAW,CACjBI,KAAM+F,GAAIM,kBAAkBrG,KAC5BqE,UAAW0B,GAAIM,kBAAkBJ,MAAMK,WACvCrG,SAAU8F,GAAIM,kBAAkBpG,UAExC,EACJ,GAAC,CAAAzQ,IAAA,cAAAC,MAWM,SAAY8W,GACfpY,KAAKc,KAAK+U,SAAWuC,EACrBpY,KAAKc,KAAKuX,aAAaD,EAAI/E,GAC/B,IAAC,CAvEoC,CAAQ/S,EAAA6H,cAAYmP,SAAhDC,0CAA2BnP,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAA4P,WAAAlQ,EAAAC,4BAAAO,EAAAH,qBAAA,kDAA3B8O,EAA2BzO,UAAA,2BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,osDAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA3QhChB,EAAA4J,qBAAA,EAAAuG,EAAA,oBAEKnQ,EAAA6I,qBAAA,OAAA5H,EAAAqH,4fAuQG,CAACpQ,EAAAkY,mCAEJjB,CAA4B,yJCzRzC1Z,EAAA,yGAEA8B,iCAyC2C,eAAA8Y,EAA9BrZ,EAA8BU,EAGvC,SAAAV,EAAoBmR,GAA0BxQ,EAAAC,KAAAZ,GAA1BY,KAAAuQ,WAFJvQ,KAAAiU,aAAejU,KAAKuQ,SAAS0D,YAEI,GAACwE,SAHzCrZ,0CAA8BgJ,EAAAC,4BAAAC,EAAA+M,kBAAA,kDAA9BjW,EAA8B0J,UAAA,8BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,uOAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAnC/BhB,EAHJiF,yBAAA,UAGIjF,CADH,UACwBA,EAAAmF,iBAAA,wBAAkBnF,EAAAkF,yBACvClF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,OACIjF,EAAAmF,iBAAA,gCACAnF,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GAEDnF,EAAAkF,yBACFlF,EAAAmF,iBAAA,4FAOJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,UAOIjF,EAAAmF,iBAAA,oBAERnF,EADIkF,wBACJlF,UApBWA,EAAAoF,oBAAA,GAAApF,EAAA+L,6BAAA,MAAA9K,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAAvO,YAAA,MAAA2D,EAAA4K,cAAA,MAAA5K,EAAA4K,aAAAyE,OAAA,KAAArP,EAAA4K,aAAAyE,OAAAjD,eAGHrN,EAAAoF,sBAAApF,EAAAgM,6BAAA,yCAAAhM,EAAAiM,sBAAA,UAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,KAAA,uBAAAzJ,EAAAiM,sBAAA,WAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,KAAA,mBAAAzJ,EAAAiM,sBAAA,aAAAhL,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAApC,MAAA,UAAAxI,EAAA4K,aAAA,KAAA5K,EAAA4K,aAAAnC,UAAA,sBAYA1J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA7I,EAAAuJ,0BAAA,GAAAC,iMAgBHxS,CAA8B,qIC3C3C,IAAAkB,EAAAzC,EAAA,OACA0L,EAAA1L,EAAA,OACAD,EAAAC,EAAA,OACA8L,EAAA9L,EAAA,MACA+L,EAAA/L,EAAA,OAIAC,EAAAD,EAAA,MAEAqM,EAAArM,EAAA,OACA0M,EAAA1M,EAAA,OACAK,EAAAL,EAAA,OACA8a,EAAA9a,EAAA,OACA+a,EAAA/a,EAAA,iBAOMgb,YAAkB,CACpB,CACIpa,KAAM,OACNC,UAAWZ,EAAAyB,sBAInBI,aA4BuB,eAAAmZ,EAAVtN,EAAU1L,EAAA,SAAA0L,IAAAzL,EAAAC,KAAAwL,EAAA,GAAAsN,SAAVtN,yCAAU,iDAAVA,uDAfLlL,EAAAyY,aACAnb,EAAAqC,aAAa+Y,SAASH,GACtBtO,EAAAkB,sBACAlC,EAAAmC,YACAnC,EAAA0C,oBACArC,EAAA+B,oBACA/B,EAAAqP,iBACA/O,EAAA8B,iBACA4M,EAAAM,qBACAtP,EAAA+B,oBACAhC,EAAAiC,kBACA+M,EAAAQ,sBACAjb,EAAAgR,oBAGK1D,CAAU,oJCxDvB3N,EAAA,OACAA,EAAA,OADA,IAGAub,EAAAvb,EAAA,6DAEA8B,4BAKsC,eAAA0Z,EAAzBna,EAAyB,WAWuC,OAAAY,EAAzE,SAAAZ,EAAoBoa,EAAkC9I,GAAezQ,EAAAC,KAAAd,GAAjDc,KAAAsZ,SAAkCtZ,KAAAwQ,SAAkB,EAAC,EAAAnP,IAAA,OAAAiE,IAVzE,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,WAAAC,MAUD,WAAQ,IAAAiY,EAAAC,EAAAC,EAAAC,EAAAC,EACJ3Z,KAAK0F,SAAmC,QAA3B6T,EAAGvZ,KAAKsZ,OAAOrF,oBAAY,IAAAsF,OAAA,EAAxBA,EAA0B7T,SAC1C1F,KAAK6R,QAAOuH,EAAAQ,IAA2B,QAAzBJ,EAACxZ,KAAKsZ,OAAOrF,oBAAY,IAAAuF,OAAA,EAAxBA,EAA0B3H,MACzC7R,KAAK6Z,eAAcT,EAAAQ,IACf,IAAIE,KAA6B,QAAzBL,EAACzZ,KAAKsZ,OAAOrF,oBAAY,IAAAwF,OAAA,EAAxBA,EAA0B5H,MAAMkI,mBACrC,QACA,CACIC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAIpBla,KAAK8R,SAAmC,QAA3B4H,EAAG1Z,KAAKsZ,OAAOrF,oBAAY,IAAAyF,OAAA,EAAxBA,EAA0B5H,SAC1C9R,KAAKma,aAAYf,EAAAQ,IACb,IAAIE,MACwB,QAAxBH,EAAA3Z,KAAKsZ,OAAOrF,oBAAY,IAAA0F,OAAA,EAAxBA,EAA0B9H,MAAuB,GAAhB7R,KAAK8R,SAAgB,KACxDiI,mBAAmB,QAAS,CAC1BC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAA7Y,IAAA,aAAAC,MACD,WACItB,KAAKwQ,QAAQK,SAAS,CAAC,eAC3B,IAAC,CAvCiC,GAuCjCwI,SAvCQna,0CAAyBkJ,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAA2E,QAAA,kDAAzBjO,EAAyB4J,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,okBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICHtBhB,EARhBiF,yBAAA,UAQgBjF,CARyD,cAQzDA,CALX,UAKWA,CAFP,UAEOA,CADc,YAEVA,EAAAmF,iBAAA,yBAERnF,EAF0BkF,wBAE1BlF,GACAA,EAAAiF,yBAAA,SACIjF,EAAAkB,oBAAA,WACJlB,EAAAkF,yBAGIlF,EADJiF,yBAAA,UACIjF,CAD+C,YAE1CA,EAAAmF,iBAAA,+HAOTnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,WACIjF,CADgC,eAI5BA,EAAA4I,qBAAA,0BAAS3H,EAAA+Q,YAAY,GAGrBhS,EAAAiF,yBAAA,cAAsBjF,EAAAmF,iBAAA,kBAK1CnF,EALqDkF,wBAKrDlF,kBApBqBA,EAAAoF,oBAAA,IAAApF,EAAAiS,6BAAA,yBAAAhR,EAAA3D,SAAA,yCAAA0C,EAAAiM,sBAAA,KAAAjM,EAAAwN,sBAAA,KAAAvM,EAAAwI,MAAA,uBAAAzJ,EAAAwN,sBAAA,KAAAvM,EAAAwQ,aAAA,MAAAzR,EAAAwN,sBAAA,MAAAvM,EAAA8Q,WAAA,2DDPRjb,CAAyB,qLEVtC,IAAAka,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SAEAA,EAAA,2BAEA8B,wBAGkC,eAAA2a,EAArBC,EAAqB,WAmC7B,OAAAza,EAFD,SAAAya,EAAoBjB,GAAwBvZ,EAAAC,KAAAua,GAAxBva,KAAAsZ,SAhCbtZ,KAAAwa,QAA+Bxa,KAAKsZ,OAAOmB,iBAE3Cza,KAAA0a,uBACH,IAAItB,EAAAuB,iBAAyB,GAEjC3a,KAAA4a,mBAA2C,IAAIxB,EAAAuB,gBAAqB,MACpE3a,KAAA6a,mBACI7a,KAAK4a,mBAAmBE,eAK5B9a,KAAA+a,UAAkC,IAAI3B,EAAAuB,gBAAqB,MAC3D3a,KAAAgb,UAA6Bhb,KAAK+a,UAAUD,eAQ5C9a,KAAAib,cAAuB,CACnB,CAAE1H,KAAM,wBAAyBF,GAAI,UAAW/R,OAAO,GACvD,CAAEiS,KAAM,mBAAoBF,GAAI,YAAa/R,OAAO,GACpD,CAAEiS,KAAM,2BAA4BF,GAAI,WAAY/R,OAAO,GAC3D,CAAEiS,KAAM,aAAcF,GAAI,UAAW/R,OAAO,GAC5C,CAAEiS,KAAM,aAAcF,GAAI,aAAc/R,OAAO,GAC/C,CAAEiS,KAAM,WAAYF,GAAI,WAAY/R,OAAO,GAC3C,CAAEiS,KAAM,YAAaF,GAAI,YAAa/R,OAAO,GAC7C,CAAEiS,KAAM,QAASF,GAAI,QAAS/R,OAAO,IAIrCtB,KAAK+a,UAAU5Y,KAAKnC,KAAKib,cAC7B,EAAC,EAAA5Z,IAAA,oBAAAiE,IA1BD,WACI,OAAOtF,KAAK4a,mBAAmBzC,UACnC,GAAC,CAAA9W,IAAA,WAAAiE,IAOD,WACI,OAAOtF,KAAK+a,UAAU5C,UAC1B,EAAC+C,IALD,SAAaC,GACTnb,KAAK+a,UAAU5Y,KAAKgZ,EACxB,GAAC,CAAA9Z,IAAA,sBAAAC,OAAA8Z,EAAA5Z,EAAAC,IAAAC,KAoBD,SAAAC,IAAA,IAAA0Z,EAAA,OAAA5Z,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAAnC,KAAK6a,mBAAqB7a,KAAKgb,UAAUlY,QACrC1C,EAAAkb,KAAI,SAACC,GAAG,OAAKA,EAAIC,OAAO,SAACC,GAAI,OAAmB,GAAdA,EAAKna,KAAa,EAAC,IACvDW,EAAAE,KAAA,EACInC,KAAK6a,mBAAmB/X,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAChC,QAAvBoY,EAAArb,KAAK6a,0BAAkB,IAAAQ,GAAvBA,EAAyBtI,UAAU/S,KAAK4a,oBAAoB,wBAAA3Y,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC/D,SAAA2b,IAAA,OAAAP,EAAAzW,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,cAAAC,MAAA,eAAAsa,EAAApa,EAAAC,IAAAC,KACD,SAAAwD,IAAA,IAAA2W,EAAAC,EAAA7a,EAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACUnC,KAAK6a,mBAAmB/X,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAAmC,SAAAjD,KAAA,EAEtBnC,KAAK+b,qBAClC/b,KAAKgc,mBACR,OAFKF,SAAkB1W,EAAAvB,KAIxB7D,KAAKic,gBAAkBjc,KAAKwa,QAAQ1X,QAChC1C,EAAAkb,KAAI,SAACY,GAAe,OAChBA,EAAOV,OAAO,SAACW,GACX,OAAOlb,EAAKmb,eAAeD,EAAME,cAAczW,SAC3CkW,EAER,EAAE,IAER1W,EAAAjD,KAAA,EACwB,QADxB0Z,EACI7b,KAAKic,uBAAe,IAAAJ,OAAA,EAApBA,EAAsB/Y,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OACrDjD,KAAK0a,uBAAuBvY,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC1C,gBAAAsc,IAAA,OAAAV,EAAAjX,MAAA3E,KAAA4E,UAAA,EAnBA,IAmBA,CAAAvD,IAAA,iBAAAC,MAED,SAAeib,GACX,OAAOA,GAAOC,OAAO3H,MACzB,GAAC,CAAAxT,IAAA,uBAAAC,MAAA,eAAAmb,EAAAjb,EAAAC,IAAAC,KAED,SAAAsE,EAA2BuW,GAAY,OAAA9a,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACRoa,GAAOjB,IAAI,SAACG,GAAI,OAAKA,EAAKpI,EAAE,GAAC,OAApDqJ,OAAcvW,EAAA7C,OAAA,SACXtD,KAAKoc,eADMjW,EAAAtC,OACwB,wBAAAsC,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAC7C,gBAAA+b,EAAAY,GAAA,OAAAF,EAAA9X,MAAA3E,KAAA4E,UAAA,EALA,IAKA,CAAAvD,IAAA,cAAAC,MAED,WAAW,IAAAsb,EACP5c,KAAK4a,mBAAmBzY,KAAK,MACX,QAAlBya,EAAA5c,KAAKib,qBAAa,IAAA2B,GAAlBA,EAAoBtB,IAAI,SAACH,GAAO,OAAMA,EAAQ7Z,OAAQ,CAAK,GAC3DtB,KAAK+a,UAAU5Y,KAAKnC,KAAKib,eACzBjb,KAAK0a,uBAAuBvY,MAAK,EACrC,GAAC,CAAAd,IAAA,YAAAC,MAED,WAAS,IAAAub,EACY,QAAjBA,EAAA7c,KAAK8c,oBAAY,IAAAD,GAAjBA,EAAmBE,aACvB,KAjEC,IAAA3B,CAiEA,CAlF6B,GAkF7Bd,SAlFQC,0CAAqBnS,EAAA4U,mBAAA1U,EAAA+M,kBAAA,qDAArBkF,EAAqB0C,QAArB1C,EAAqB2C,UAAAC,WAFlB,SAEH5C,CAAqB,+ICPlC,IAAA3B,EAAA/a,EAAA,UAIAA,EAAA,OACAA,EAAA,OACAA,EAAA,wPCqBoBuK,EAAAiF,yBAAA,cAIIjF,EAAAmF,iBAAA,gBACJnF,EAAAkF,mDAeQlF,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAuE,GAEApN,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+H,EAAAC,cAAAD,EAAAjC,KAAA,mEAVRnL,EAPJiF,yBAAA,sBAOIjF,CADH,iDAIOA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,EAAAoE,YAAAvE,GAAmB,GAGpC/I,EAAA4J,qBAAA,EAAAoL,EAAA,mDAORhV,EADIkF,wBACJlF,8CAXQA,EAAAoF,sBAEApF,EAFA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAuE,UAEAzN,CAF4B,iBAAAA,EAAAuJ,0BAAA,EAAA2E,IAKRlO,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwE,0EAuExB1N,EAFRiF,yBAAA,QAEQjF,CAFuC,WAEvCA,CAD4B,UACrBA,EAAAmF,iBAAA,GAAkBnF,EAAAkF,yBACzBlF,EAAAiF,yBAAA,qBACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAmM,EAAAlV,EAAAgJ,wBAAA2E,GAAAwH,UAAAnV,SAAAoV,6BAAAF,EAAAhc,MAAA6P,KAAAmM,EAAAhc,MAAA6P,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAGA/I,EAAA4I,qBAAA,oBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAUF,EAAAqK,sBAAqB,GAG3CvT,EAFSkF,wBAETlF,+BAReA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6P,EAAA/J,KAAA,IAEHnL,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAH,EAAAhc,OAEA8G,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,EAAA2E,kEApHRlO,EARhBiF,yBAAA,WAQgBjF,CARsB,cAQtBA,CALX,UAKWA,CAFP,UAEOA,CADoC,cACbA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAoM,aAAY,GACxCtV,EAAAiF,yBAAA,gBAEKjF,EAAAmF,iBAAA,WAETnF,EAFckF,wBAEdlF,GAEAA,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oBAIhBnF,EAJ6BkF,wBAI7BlF,OAKQA,EAJRiF,yBAAA,cAIQjF,CAJ6D,WAI7DA,CADH,aAC6BA,EAAAmF,iBAAA,cAAOnF,EAAAkF,yBAEjClF,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAA2L,EAAA,+CAOAvV,EAAA4J,qBAAA,GAAA4L,EAAA,wDAuBIxV,EADJiF,yBAAA,YACIjF,CADuB,eAEnBA,EAAAmF,iBAAA,aACJnF,EAAAkF,yBACAlF,EAAAkB,oBAAA,sBAOQlB,EAFRiF,yBAAA,YAEQjF,CAFoC,YAEpCA,CADoC,eAIhCA,EAAAmF,iBAAA,oBACJnF,EAAAkF,yBAEAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAE7BF,EAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,IACrB,GAE0B/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD4C,eAIxCA,EAAAmF,iBAAA,kBACJnF,EAAAkF,yBACAlF,EAAAkB,oBAAA,0BAYxBlB,EALoBkF,wBAKpBlF,WAMQA,EAJRiF,yBAAA,eAIQjF,CAJ6D,WAI7DA,CADH,aAC6BA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBAEhClF,EADJiF,yBAAA,YACIjF,CAD4B,WACtBA,EAAAmF,iBAAA,gCAAyBnF,EAAAkF,yBAC/BlF,EAAAkB,oBAAA,sBAGZlB,EAFQkF,wBAERlF,KAIQA,EAFRiF,yBAAA,gBAEQjF,CAFuC,YAEvCA,CADqD,aAC3BA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBAEpClF,EAAA4J,qBAAA,GAAA6L,EAAA,6CAYRzV,EADIkF,wBACJlF,GAKIA,EAHJiF,yBAAA,gBAGIjF,CADH,gBAKOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAwM,eAAc,GAGvB1V,EAAAiF,yBAAA,cAAejF,EAAAmF,iBAAA,oBAG3BnF,EAHwCkF,wBAGxClF,qDAjJmBA,EAAA6I,qBAAA,YAAAK,EAAAZ,MA8BEtI,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,eAAA8M,EAAA3V,EAAAwN,sBAAA,MAAAtE,EAAAwE,YAAA,KAAAiI,EAAA/Y,QAAA,GAUAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAA+M,EAAA5V,EAAAwN,sBAAA,MAAAtE,EAAAwE,YAAA,KAAAkI,EAAAhZ,QAAA,GAsBGoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2M,SAaQ7V,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,gBAAAK,EAAAZ,KAAA,KAAAY,EAAAZ,KAAApP,MAAAuQ,KAIAzJ,CAJ4B,iBAAAA,EAAAuJ,0BAAA,GAAA2E,IAc5BlO,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,aAAAK,EAAAZ,KAAA,KAAAY,EAAAZ,KAAApP,MAAAuQ,KAGAzJ,CAHyB,UAGzBA,CAFe,SAEfA,CADU,WA2BLA,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAtE,EAAA0J,aD5GzCrb,uBAKiC,eAAAue,EAApBC,EAAoB,WAczB,OAAAre,EANJ,SAAAqe,EAC0C1b,EAC9B2b,EACAC,EACA/E,EACAxY,GAAyB,IAAAG,EAAAjB,KAAAD,EAAAC,KAAAme,GAJKne,KAAAyC,OAC9BzC,KAAAoe,kBACApe,KAAAqe,yBACAre,KAAAsZ,SACAtZ,KAAAc,OAZHd,KAAA8V,UAAY9V,KAAKc,KAAK4W,cACtB1X,KAAA6V,SAAW7V,KAAKc,KAAK2W,gBAC9BzX,KAAAie,QAAgB,IAAInE,KAGJ9Z,KAAA0V,YAAc,SAAC4I,GAAC,OAAKrd,EAAKH,KAAK+U,SAAWyI,CAAC,CAQxD,EAAC,EAAAjd,IAAA,WAAAC,MAEJ,WACItB,KAAKgb,UAAYhb,KAAKqe,uBAAuBrD,SACjD,GAAC,CAAA3Z,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,eAAAC,MAED,WACItB,KAAKoe,gBAAgBG,QAAQve,KAAK0Q,MAClC1Q,KAAKqe,uBAAuB/B,aAChC,GAAC,CAAAjb,IAAA,sBAAAC,MAED,WACItB,KAAKqe,uBAAuB1C,qBAChC,GAAC,CAAAta,IAAA,aAAAC,MAED,WACItB,KAAKoe,gBAAgBG,SACzB,IAAC,CAnC4B,GAmC5BL,SAnCQC,0CAAoB/V,EAAAC,4BASjBuQ,EAAA4F,uBAAqBpW,EAAAC,4BAAAC,EAAAmW,mBAAArW,EAAAC,4BAAAG,EAAA+R,uBAAAnS,EAAAC,4BAAAK,EAAA2M,kBAAAjN,EAAAC,4BAAAO,EAAAH,qBAAA,kDATxB0V,EAAoBrV,UAAA,yBAAA4V,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,wwDAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBjChB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA2M,EAAA,gBAkJJvW,EAAAkF,gCAlJWlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAqH,yTDeEyN,CAAoB,iJEhBjC,IAAAvU,EAAA/L,EAAA,SACAA,EAAA,sCAEA8B,yBAKmC,eAAAif,EAAtBC,EAAsB/e,EALnC,SAAA+e,IAAA,IAAA5d,EAAAjB,KAAAD,EAAAC,KAAA6e,GAOoB7e,KAAA8e,UAAoB,EACnB9e,KAAA+e,eAAiB,IAAInV,EAAAoV,aAE7Bhf,KAAAif,eAAiB,kBAAMhe,EAAK8d,eAAeG,MAAMje,EAAK6d,SAAS,IAC3EF,SANYC,yCAAsB,kDAAtBA,EAAsB/V,UAAA,sBAAAqW,OAAA,CAAAhD,MAAA,QAAA2C,SAAA,YAAAM,QAAA,CAAAL,eAAA,kBAAA9V,MAAA,GAAAC,KAAA,EAAAkE,OAAA,oOAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICRnChB,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAA4V,gBAAgB,GAGrB7W,EADJiF,yBAAA,UACIjF,CADqD,gBAC3BA,EAAAmF,iBAAA,kBAAYnF,EAAAkF,yBACtClF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,UACIjF,CADqD,gBAC3BA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,SAAKjF,EAAAmF,iBAAA,IAEbnF,EAF8CkF,wBAE9ClF,YAdIA,EADAiX,sBAAA,aAAAhW,EAAAyV,SACA1W,CAD6B,aAAAiB,EAAAyV,UAOrB1W,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,WAAAjW,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAAf,gBAAA,MAAApM,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAAjD,MAAA,YAAAlK,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA1G,gBAAA,MAAApM,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA5I,MAAA,KAMCnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAAoD,WAAA,4DDRAV,CAAsB,2PEPnChhB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MAHA,IAKAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MACA2hB,EAAA3hB,EAAA,OAKAyC,GAJAzC,EAAA,OACAA,EAAA,OAEAA,EAAA,MACAA,EAAA,WAEAA,EAAA,6OCWwBuK,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,iCAEJnF,EAAAkF,kEAFIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAArF,EAAAwN,sBAAA,IAAAtE,GAAAuJ,oBAAA7V,OAAA,6EAmEAoD,EAAAiF,yBAAA,wBAIIjF,EAAA4I,qBAAA,0BAAAG,IAAA,IAAAsO,GAAArX,EAAAgJ,wBAAAC,IAAAkM,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE1BF,GAAAoO,gBAAAD,GAAAtO,IACJ,GAE0B/I,EAAAkF,oFANIlF,EADA6I,qBAAA,QAAAwO,GACArX,CADe,WAAAkJ,GAAAqO,WAAAF,GAAApM,+BAHvBjL,EAAAiF,yBAAA,SACIjF,EAAA4J,qBAAA,EAAA4N,EAAA,wDAUJxX,EAAAkF,mEAT0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAkJ,oCA+BVpS,EAAAiF,yBAAA,mBAKKjF,EAAAmF,iBAAA,GAAenF,EAAAkF,kDADhBlF,EAAA6I,qBAAA,QAAA4O,IACCzX,EAAAoF,sBAAApF,EAAA+L,4BAAA0L,GAAArJ,sEAdTpO,EALRiF,yBAAA,QAKQjF,CALsC,sBAKtCA,CADH,mBAEOA,EAAAiV,2BAAA,yBAAAlM,IAAA/I,EAAAgJ,wBAAA2E,IAAA,IAAAzE,GAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,GAAAwO,eAAA3O,MAAAG,GAAAwO,eAAA3O,IAAA/I,EAAAoJ,sBAAAL,GAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA2E,IAAA,IAAAzE,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAEvBF,GAAAyO,oBAAA5O,IACf,GACsC/I,EAAAiF,yBAAA,iDACKjF,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBAEflF,EAAA4J,qBAAA,EAAAgO,EAAA,mDASZ5X,EAFQkF,wBAERlF,iDAjBYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,GAAAwO,gBAKY1X,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAtE,GAAA2O,aAMzB7X,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAA2O,uCAcS7X,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,kHAQJlB,EAAAkF,kFAPQlF,EAAAoF,sBAGApF,EAHA6I,qBAAA,YAAAiP,GAAA,KAAAA,GAAA1M,OAGApL,CAHmB,SAAAA,EAAAwN,sBAAA,IAAAtE,GAAA6O,aAGnB/X,CAF8B,WAAAA,EAAAwN,sBAAA,IAAAtE,GAAA8O,eAE9BhY,CADkC,UAAAA,EAAAwN,sBAAA,IAAAtE,GAAA+O,yCAR9CjY,EAAAiF,yBAAA,SACIjF,EAAA4J,qBAAA,EAAAsO,EAAA,eAaJlY,EAAAkF,mEAZwBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,GAAAwO,0CAexB1X,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,kHAQJlB,EAAAkF,mEAPQlF,EAAAoF,sBAGApF,EAHA6I,qBAAA,YAAAK,GAAAwO,eAAA,KAAAxO,GAAAwO,eAAAtM,OAGApL,CAH8B,SAAAA,EAAAwN,sBAAA,IAAAtE,GAAA6O,aAG9B/X,CAF8B,WAAAA,EAAAwN,sBAAA,IAAAtE,GAAA8O,eAE9BhY,CADkC,UAAAA,EAAAwN,sBAAA,IAAAtE,GAAA+O,yCA7B9CjY,EAAAiF,yBAAA,YAsBIjF,EAjBA4J,qBAAA,EAAAuO,EAAA,aAiBAnY,CAjBoC,EAAAoY,EAAA,eA8BxCpY,EAAAkF,mEA9BUlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,GAAAwO,eAAA,KAAAxO,GAAAwO,eAAA9a,QAkBDoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAK,GAAAwO,gBAAAxO,GAAAwO,eAAA9a,mCAvDboD,EAAAiF,yBAAA,YAOIjF,EAAA4J,qBAAA,EAAAyO,EAAA,4CAyBArY,EAAA4J,qBAAA,EAAA0O,EAAA,cAoCJtY,EAAAkF,sEA7DUlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA0P,GAAAvY,EAAAwN,sBAAA,IAAAtE,GAAA2O,aAAA,KAAAU,GAAA3b,QAAA,GA0BDoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,GAAAwO,0CAhDb1X,EAAAwY,kCAAA,GAeIxY,EAZA4J,qBAAA,EAAA6O,EAAA,aAYAzY,CAZsC,EAAA0Y,EAAA,4CAkFtC1Y,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,oCACJnF,EAAAkF,0GApFMlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,mBAAAK,GAAAyP,YAaD3Y,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAAK,GAAAyP,aAAA,OAAAJ,GAAAvY,EAAAwN,sBAAA,IAAAtE,GAAA8O,gBAAA,KAAAO,GAAA3b,QAAA,8BAjBboD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAgP,EAAA,oKACK5Y,EAAAoF,sBAAqCpF,EAArC6I,qBAAA,eAAA+M,GAAA5V,EAAAwN,sBAAA,IAAAtE,GAAAkJ,UAAA,KAAAwD,GAAAhZ,QAAA,EAAqCoD,CAAA,WAAA6Y,4BA2F1C7Y,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,oCACPnF,EADqCkF,wBACrClF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,uCAQb7I,EAHJiF,yBAAA,WAGIjF,CADH,OAEOA,EAAAmF,iBAAA,mEAGRnF,EADIkF,wBACJlF,mEAQJA,EADJiF,yBAAA,QACIjF,CADoC,eAIhCA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA8P,IAAA,IAAA5P,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA6P,kBAAiB,GAG1B/Y,EAAAiF,yBAAA,aAAejF,EAAAmF,iBAAA,eAEvBnF,EAFgCkF,wBAEhClF,MDpMZzI,qBA2BgC,eAAAyhB,EAAnB7hB,EAAmB,SAAAqB,IA6D5B,SAAArB,GACY8hB,GACAvgB,GACAwgB,GACAhI,GACA+E,GACAkD,GACAC,GACAhR,IAAe,IAAAvP,GAAAlB,SAAAC,KAAAT,KAEvB0B,GAAAC,EAAAlB,KAAAT,KATQ8hB,gBACApgB,GAAAH,QACAG,GAAAqgB,WACArgB,GAAAqY,UACArY,GAAAod,0BACApd,GAAAsgB,eACAtgB,GAAAugB,uBACAvgB,GAAAuP,WAhEZvP,GAAAwgB,gBAA2B,GAC3BxgB,GAAAygB,sBAA0CtI,EAAAQ,KAAG,GAM7C3Y,GAAA0gB,cAAkD,IAAIvI,EAAAuB,gBAEpD,MACF1Z,GAAAof,aAAyC,KACzCpf,GAAAkf,YAA0C,KASnClf,GAAA0e,WAA+B,GAC/B1e,GAAA2gB,WAAsB,GACtB3gB,GAAA4gB,iBAAmB,CACtB,CAAEtO,KAAM,eAAgBjS,MAAO,GAC/B,CAAEiS,KAAM,gBAAiBjS,MAAO,GAChC,CAAEiS,KAAM,kBAAmBjS,MAAO,GAClC,CAAEiS,KAAM,kBAAmBjS,MAAO,IAClC,CAAEiS,KAAM,aAAcjS,MAAO,KAGjBL,GAAA6U,UAAY7U,GAAKH,KAAK4W,cACtBzW,GAAA4U,SAAW5U,GAAKH,KAAK2W,gBAErBxW,GAAA6gB,UAAS1I,EAAA2I,eAAc,CACnC9gB,GAAK4U,SACL5U,GAAKqY,OAAO0I,UACblf,QACC1C,EAAAob,QAAO,SAAAvV,IAAG,QAAHgc,EAAAhc,GAAA,GAAG,EAAS,MACnB7F,EAAAkb,KAAI,SAAA4G,IAAA,IAAAC,GAAAF,EAAAC,GAAA,GAAK,OACL,CACI7O,GAAIpS,GAAKH,KAAK+U,SAASxC,GACvBE,KAAM,eACTxP,OAAAqe,EACEnhB,GAAKH,KAAKuhB,kBALRF,GAAA,KAK8B,IAI3BlhB,GAAAqhB,QAAUrhB,GAAKqY,OAAOgJ,QACtBrhB,GAAA+gB,QAAU/gB,GAAKqY,OAAO0I,QAEtB/gB,GAAAuZ,QAA+BvZ,GAAKqY,OAAOmB,iBAC3CxZ,GAAA8H,SAAW9H,GAAKqgB,QAAQvY,SAExB9H,GAAAyU,YAAc,SAAC4I,IAAC,OAAMrd,GAAKH,KAAK+U,SAAWyI,EAAC,EAC5Crd,GAAA0R,WAAa,SAAC4P,IAAC,OAAKthB,GAAKqY,OAAO3G,WAAW4P,GAAE,EAACthB,EAa9D,CAACG,SAAA7B,GAAAqB,IAAAd,EAAAP,GAAA,EAAA8B,IAAA,OAAAiE,IAnDD,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,WAAAC,OAAAC,GAAAC,EAAAC,IAAAC,KAmDM,SAAAC,KAAA,IAAA0Z,GAAAmH,GAAA1d,GAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAnC,KAAK+gB,WAAa,WAElB/gB,KAAK6a,mBACD7a,KAAKqe,uBAAuBxD,mBAChC7a,KAAKsZ,OAAOlE,QAAQ,QACpBpV,KAAKyiB,eAAexgB,GAAAE,KAAA,EAEdnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,EACzDnC,KAAKshB,QAAQze,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,GAC5DnC,KAAKsZ,OAAOmB,iBAAiB3X,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,QAE5D,OAAAjD,KAAK0V,YAAY1V,KAAKc,KAAK+U,UAC3B7V,KAAK2f,WAAa,GAClB3f,KAAK6S,aACD,WACuB,QADbwI,GACVrb,KAAK6a,0BAAkB,IAAAQ,QAAA,EAAvBA,GAAyBtI,UAAU,SAAC2P,IAAC,OACjC5d,GAAK6N,WAAW,CAAE5J,SAAU2Z,IAAK,IAAK,IAE5CzgB,GAAAE,KAAA,GAEInC,KAAKuhB,YAAYoB,aAAa3iB,KAAKwa,SAAQ,QAEjD,OAAAxa,KAAK4iB,kBAAoB5iB,KAAKuhB,YAAYqB,kBAE1C5iB,KAAKigB,WAAwC,QAA9BuC,GAAGxiB,KAAKuhB,YAAYtB,kBAAU,IAAAuC,QAAA,EAA3BA,GAA6B1f,QAC3C1C,EAAAyiB,KAAI,SAACC,IAAI,OAAMhe,GAAKgb,eAAiBgD,EAAI,IAC3C7gB,GAAAE,KAAA,GAEInC,KAAKuhB,YAAYwB,iBAClBjgB,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,QAAOA,EAAC,IACrBC,YAAW,QAEhBjD,KAAKgjB,sBAELhjB,KAAK2hB,cAAcxf,KAAKnC,KAAKuhB,YAAY0B,cACzCjjB,KAAKogB,cAAgBpgB,KAAK2hB,cAAc7G,eACxC9a,KAAKqgB,aAAergB,KAAKuhB,YAAYlB,aAAa,yBAAApe,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IACrD,SAAA0E,KAAA,OAAAnD,GAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAEM,SAAgB6a,IAAkC,IAApB+G,KAAAte,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACjC5E,KAAK2f,WAAWxD,GAAM9I,IAAM6P,GAC5BljB,KAAKwhB,oBAAoB7B,WAAa3f,KAAK2f,WAC3C3f,KAAKwhB,oBAAoB9B,gBAAgBvD,GAAO+G,IAChDljB,KAAK0hB,sBAAqBtI,EAAAQ,KAAG,GAC7B5Z,KAAKwhB,oBAAoB2B,oBAAoBhH,GACjD,GAAC,CAAA9a,IAAA,aAAAC,MAED,WACItB,KAAKojB,eAAiBpjB,KAAKqhB,aAAatM,KAAKyK,EAAArB,qBAAsB,CAC/D1b,KAAMzC,KAAK8V,WAEnB,GAAC,CAAAzU,IAAA,kBAAAC,MAED,WACItB,KAAKwhB,oBAAoB6B,eAAerjB,KAAKsjB,eACjD,GAAC,CAAAjiB,IAAA,aAAAC,MAED,WACItB,KAAK0hB,sBAAqBtI,EAAAQ,KAAG,EACjC,GAAC,CAAAvY,IAAA,eAAAC,MAED,WAAY,IAAAiiB,GAAAC,GAAAC,GACRzjB,KAAK6Z,eAAcT,EAAAQ,IACf,IAAIE,KAAc,QAAVyJ,GAACvjB,KAAK0Q,YAAI,IAAA6S,IAAU,QAAVA,GAATA,GAAWG,gBAAQ,IAAAH,IAAM,QAANA,GAAnBA,GAAqB1R,YAAI,IAAA0R,QAAA,EAAzBA,GAA2BjiB,OAAOyY,mBACvC,QACA,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAGtDla,KAAK2jB,iBAA4B,QAAZH,GAAGxjB,KAAK0Q,YAAI,IAAA8S,IAAU,QAAVA,GAATA,GAAWE,gBAAQ,IAAAF,IAAU,QAAVA,GAAnBA,GAAqB1R,gBAAQ,IAAA0R,QAAA,EAA7BA,GAA+BliB,MACvD,IAAMsiB,IACO,QAATH,GAAAzjB,KAAK0Q,YAAI,IAAA+S,IAAU,QAAVA,GAATA,GAAWC,gBAAQ,IAAAD,IAAM,QAANA,GAAnBA,GAAqB5R,YAAI,IAAA4R,QAAA,EAAzBA,GAA2BniB,OACH,GAAxBtB,KAAK2jB,iBAAwB,IACjC3jB,KAAKma,aAAYf,EAAAQ,IACb,IAAIE,KAAK8J,IAAK7J,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAA7Y,IAAA,sBAAAC,MAED,SAAoBuiB,IAAC,IAAAC,GACjB9jB,KAAK8f,eAAiB+D,GACE,QAApBC,GAAC9jB,KAAK8f,sBAAc,IAAAgE,IAAnBA,GAAqB9e,QACtBhF,KAAKgjB,qBAEb,GAAC,CAAA3hB,IAAA,sBAAAC,MAED,WAAmB,IAAA4E,GAAAlG,KACfA,KAAKwD,QACD,OACA,WACI0C,GAAK6d,iBACL7d,GAAK8d,eACT,EACA,KAER,GAAC,CAAA3iB,IAAA,iBAAAC,MAED,WACItB,KAAKogB,cAAgBpgB,KAAKuhB,YAAYnB,aAC1C,GAAC,CAAA/e,IAAA,gBAAAC,MAED,WACItB,KAAKmgB,eAAc/G,EAAAQ,IAAG,CAAC5Z,KAAKuhB,YAAY0C,WAC5C,GAAC,CAAA5iB,IAAA,aAAAC,MAED,WACItB,KAAKwQ,QAAQK,SAAS,CAAC,iBACvB7Q,KAAKqe,uBAAuB6F,aAChC,KAlKC,IAAA3iB,EAkKA,CAzL2B,CAAQjB,EAAA6H,cAAYiZ,SAAvC7hB,4CAAkB6I,EAAAC,4BAAAC,EAAAgN,gBAAAlN,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAyb,eAAA/b,EAAAC,4BAAAO,EAAAyM,kBAAAjN,EAAAC,4BAAA+b,EAAA7J,uBAAAnS,EAAAC,4BAAAgc,EAAAC,YAAAlc,EAAAC,4BAAAkc,EAAAC,oBAAApc,EAAAC,4BAAAoc,EAAAtX,QAAA,kDAAlB5N,EAAkBuJ,UAAA,iBAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,s0EAAAjE,SAAA,SAAAC,GAAAC,IAAA,KAAAD,GAAA,uCCxCfhB,EAJhBiF,yBAAA,UAIgBjF,CAJ8D,cAI9DA,CAHwB,UAGxBA,CAF+C,UAE/CA,CADoC,cAC5BA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAASnI,GAAAqU,aAAY,GACzBtV,EAAAiF,yBAAA,gBAEKjF,EAAAmF,iBAAA,WAETnF,EAFckF,wBAEdlF,GAEAA,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,iBAERnF,EAFkBkF,wBAElBlF,GAIQA,EAFRiF,yBAAA,UAEQjF,CAFqD,YAErDA,CADoC,gBAIhCA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAASnI,GAAAqb,aAAY,GAGrBtc,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAEZlF,EAAA4J,qBAAA,GAAA2S,EAAA,8CAKRvc,EADIkF,wBACJlF,GAGIA,EADJiF,yBAAA,YACIjF,CADqB,iCAGjBA,EAAAiV,2BAAA,yBAAAlM,IAAA/I,SAAAgJ,wBAAAW,IAAA3J,EAAAoV,6BAAAnU,GAAA0X,WAAA5P,MAAA9H,GAAA0X,WAAA5P,IAAA/I,EAAAoJ,sBAAAL,GAAA,GACA/I,EAAA4I,qBAAA,oBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAAUnI,GAAAub,aAAY,GAMjBxc,EAHLiF,yBAAA,0BAGKjF,CAAA,cACIA,EAAAmF,iBAAA,UACJnF,EADOkF,wBACPlF,GAKAA,EAHLiF,yBAAA,0BAGKjF,CAAA,cACIA,EAAAmF,iBAAA,WAKrBnF,EALyBkF,wBAKzBlF,SAEAA,EAAAkB,oBAAA,iBAuBQlB,EAFRiF,yBAAA,gBAEQjF,CAFqC,YAErCA,CADuB,cACeA,EAAAmF,iBAAA,eAAOnF,EAAAkF,yBAC7ClF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,mCAGZnF,EAH8DkF,wBAG9DlF,KAEAA,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAA6S,GAAA,sDAoGAzc,EARA4J,qBAAA,GAAA8S,GAAA,yBAAA1c,EAAA2c,iCAQA3c,CARyB,GAAA4c,GAAA,yBAAA5c,EAAA2c,kCAmBjC3c,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,iBAGIjF,EAAA4J,qBAAA,GAAAiT,GAAA,6CAYZ7c,EAFQkF,wBAERlF,uDA9L+BA,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,cAAA8M,GAAA3V,EAAAwN,sBAAA,KAAAvM,GAAAwR,qBAAA,KAAAkD,GAAA/Y,QAUPoD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,GAAA0X,YA+CA3Y,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,YAAA2E,GAAAhK,EAAAwN,sBAAA,KAAAvM,GAAAmR,UAAA,KAAApI,GAAApN,SAAA,oBAMOoD,EAAAoF,oBAAA,GAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,MAAAvM,GAAAiZ,SAA0Bla,CAAA,WAAA8c,IAmHvC9c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,MAAAvM,GAAAqY,2yBDhKLniB,CAAmB,kOE3ChC,IAAA6Z,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAGAK,EAAAL,EAAA,OAEAyC,EAAAzC,EAAA,OAEAsnB,GADAtnB,EAAA,OACAA,EAAA,WACAA,EAAA,oCAeA8B,aAGwB,eAAAylB,EAAXd,EAAW,SAAA1jB,GA8DpB,SAAA0jB,EACYjD,EACAG,GAAuC,IAAAvgB,EAAAlB,SAAAC,KAAAskB,IAE/CrjB,EAAAC,EAAAlB,KAAAskB,IAHQjD,eACApgB,EAAAugB,sBA9DLvgB,EAAAgjB,UAA0B,GAGzBhjB,EAAA0gB,cACJ,IAAIvI,EAAAuB,gBAAiC,IAClC1Z,EAAAmf,cACHnf,EAAK0gB,cAAc7G,eAYf7Z,EAAAokB,YACJ,IAAIjM,EAAAuB,iBAAyB,GACxB1Z,EAAAqkB,YAAmCrkB,EAAKokB,YAAYvK,eAErD7Z,EAAAskB,iBACJ,IAAInM,EAAAuB,iBAAyB,GACxB1Z,EAAA8hB,iBACL9hB,EAAKskB,iBAAiBzK,eAE1B7Z,EAAAukB,gBACIvkB,EAAKugB,oBAAoBgE,gBAGrBvkB,EAAAwkB,kBACJ,IAAIrM,EAAAuB,gBAA6B,IAErC1Z,EAAA2hB,kBACI3hB,EAAKwkB,kBAAkB3K,eAWnB7Z,EAAAykB,WAA0C,IAAItM,EAAAuB,gBAClD,IAGJ1Z,EAAAgf,WAA8Bhf,EAAKykB,WAAW5K,eAAe7Z,CAe7D,CAACG,SAAAkjB,EAAA1jB,GAAAd,EAAAwkB,EAAA,EAAAjjB,IAAA,eAAAiE,IAzDD,WACI,OAAOtF,KAAK2hB,cAAcxJ,UAC9B,EAAC+C,IAED,SAAiBnS,GACb/I,KAAK2hB,cAAcxf,KAAK4G,EAC5B,GAAC,CAAA1H,IAAA,mBAAAiE,IA2BD,WACI,OAAOtF,KAAKylB,kBAAkBtN,UAClC,EAAC+C,IAND,SAAqBiB,GACjBnc,KAAKylB,kBAAkBtjB,KAAKga,EAChC,GAAC,CAAA9a,IAAA,YAAAiE,IAiBD,WACI,OAAOtF,KAAK0lB,WAAWvN,UAC3B,EAAC+C,IAND,SAAcI,GACVtb,KAAK0lB,WAAWvjB,KAAKmZ,EACzB,GAAC,CAAAja,IAAA,eAAAC,OAAAqkB,EAAAnkB,EAAAC,IAAAC,KAaD,SAAAC,EAAmB8Y,GAAqC,IAAAmL,EAAA9gB,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC9CsY,GAAkB3X,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAEjDwX,UAAkB1H,UACd,SAACmJ,GAAM,OACFpX,EAAK+gB,iBAAmB3J,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7C9I,GAAI8I,EAAM9I,GACVE,KAAM4I,EAAM5I,KACZC,OAAQ2I,EAAM3I,OACdgD,MAAO2F,EAAM3F,MAChB,EAAE,GACTvU,EAAAE,KAAA,EAC0B,QAD1ByjB,EACI5lB,KAAK4iB,yBAAiB,IAAAgD,OAAA,EAAtBA,EAAwB9iB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EAC3DnC,KAAK8lB,UAAS,OAAA7jB,SAAAE,KAAA,EACdnC,KAAKwD,QACP,OACA,WACIsB,EAAKif,gBACT,EACA,KACH,OAAA9hB,SAAAE,KAAA,GAEKnC,KAAKgkB,gBAAe,QAE1BhkB,KAAKqgB,aAAe5F,GAAkB3X,QAClC1C,EAAAkb,KAAI,SAACY,GAAe,OAChBA,EAAOZ,IACH,SAACa,GAAY,MACR,CACG9I,GAAI8I,EAAM3I,OACVuS,OAAQ,QACRC,SAAU,WACNlhB,EAAKmhB,aAAa9J,EACtB,EACY,EACvB,IAEP,yBAAAla,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACL,SAAA2iB,EAAAhG,GAAA,OAAAgJ,EAAAhhB,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAAA,eAAA4kB,EAAA1kB,EAAAC,IAAAC,KAED,SAAAwD,IAAA,IAAAihB,EAAAC,EAAA,OAAA3kB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACInC,KAAKqlB,YAAYljB,MAAK,GACtBnC,KAAKigB,WAAmC,QAAzBkG,EAAGnmB,KAAK4iB,yBAAiB,IAAAuD,OAAA,EAAtBA,EAAwBrjB,QACtC1C,EAAAkb,KAAI,SAACY,GAAmB,OACpBA,EAAOZ,IAAI,SAACa,GAAgB,MAAM,CAC9B3I,OAAQ2I,EAAM3F,MAAMhD,OACpBgD,MAAO2F,EAAM3F,MAAMjD,KACtB,EAAE,IAIXvT,KAAKigB,WAA4B,QAAlBmG,EAAGpmB,KAAKigB,kBAAU,IAAAmG,OAAA,EAAfA,EAAiBtjB,QAC/B1C,EAAAkb,KAAI,SAAC+K,GAAoB,OAAAjE,EAClB,IAAIkE,IAAID,EAAS/K,IAAI,SAACoH,GAAC,MAAK,CAACA,EAAElP,OAAQkP,EAAE,IAAG6D,SAAQ,IAI/DvmB,KAAKqlB,YAAYljB,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC/B,gBAAA8lB,IAAA,OAAAI,EAAAvhB,MAAA3E,KAAA4E,UAAA,EApBA,IAoBA,CAAAvD,IAAA,iBAAAC,MAEM,WAEH,IAAIklB,EADJxmB,KAAKulB,iBAAiBpjB,MAAK,GAE3BnC,KAAK4iB,kBAAkB7P,UAAU,SAACmJ,GAAM,OACpCA,EACOsK,EAAQtK,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7BzW,SAAUyW,EAAM3I,OAChBiT,QAASvoB,EAAAwoB,gBACTjkB,KAAM,CAAE8Q,KAAM4I,EAAM5I,MACpBoT,QAAS,GACTC,KAAM,IACT,GACD,EAAE,GAEZ5mB,KAAKijB,aAAeuD,EACpBxmB,KAAKulB,iBAAiBpjB,MAAK,EAC/B,GAAC,CAAAd,IAAA,gBAAAC,MAEM,WAIHtB,KAAKikB,UAHwB,CAC7B4C,SAAmB,CAAEC,QAAS,QAC9BD,SAAmB,CAAEC,QAAS,QAElC,GAAC,CAAAzlB,IAAA,eAAAC,MACD,SAAa6a,GACcnc,KAAKqhB,aAAatM,KAAKoQ,EAAA4B,kBAAmB,CAC7DC,WAAY,2BACZvkB,KAAM0Z,IAGVnc,KAAKwhB,oBAAoB9B,gBAAgBvD,GAAO,EACpD,KAxGC,IAAAwJ,CAwGA,CAhKmB,CAAQrlB,EAAA6H,cAAYid,SAA/Bd,0CAAUlc,EAAA4U,mBAAA1U,EAAAgN,gBAAAlN,EAAA4U,mBAAAxU,EAAAgc,oBAAA,qDAAVF,EAAUrH,QAAVqH,EAAUpH,UAAAC,WAFP,SAEHmH,CAAW,oLC3BxB,IAAAhkB,EAAAzC,EAAA,OAIAopB,GAHAppB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,qPCGgBuK,EAPZiF,yBAAA,WAOYjF,CAP0B,cAO1BA,CAJP,UAIOA,CADH,YAC8CA,EAAAmF,iBAAA,gBAASnF,EAAAkF,yBAM5ClF,EAJRiF,yBAAA,UAIQjF,CAJmB,UAInBA,CADH,UACSA,EAAAmF,iBAAA,OACVnF,EADWkF,wBACXlF,GACAA,EAAAiF,yBAAA,WAAiCjF,EAAAmF,iBAAA,cACrCnF,EAD4CkF,wBAC5ClF,GAGIA,EADJiF,yBAAA,WACIjF,CADuB,eACeA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBAChDlF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAORlB,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,WACIjF,CADuB,eACeA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAC3ClF,EAAAkB,oBAAA,sBAKJlB,EAAAkF,yBAGQlF,EAFRiF,yBAAA,YAEQjF,CAFmC,YAEnCA,CAD6B,eAEzBA,EAAAmF,iBAAA,oBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,IAAiB,GAI1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAEjCA,EAAAmF,iBAAA,kBACJnF,EAAAkF,yBACAlF,EAAAkB,oBAAA,0BAWhBlB,EAHYkF,wBAGZlF,OAYgBA,EAVhBiF,yBAAA,gBAUgBjF,CARf,WAQeA,CALX,WAKWA,CAJmB,WAInBA,CADH,WACSA,EAAAmF,iBAAA,QACVnF,EADWkF,wBACXlF,GACAA,EAAAiF,yBAAA,YAAiCjF,EAAAmF,iBAAA,gBACrCnF,EAD8CkF,wBAC9ClF,GAGIA,EADJiF,yBAAA,WACIjF,CADuB,eAEnBA,EAAAmF,iBAAA,sBACJnF,EAAAkF,yBAEAlF,EAAAiF,yBAAA,2BAIIjF,EAAA4I,qBAAA,sBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAYF,EAAA4V,mBAAkB,GAI9C9e,EAHakF,wBAGblF,OAGIA,EADJiF,yBAAA,gBACIjF,CAD4D,gBAKxDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6V,YAAW,GAGpB/e,EAAAiF,yBAAA,cAAsBjF,EAAAmF,iBAAA,gBAC1BnF,EADmCkF,wBACnClF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAb,YAAW,GAGpBrI,EAAAiF,yBAAA,cAAsBjF,EAAAmF,iBAAA,iBAGlCnF,EAH4CkF,wBAG5ClF,mDAnHmBA,EAAA6I,qBAAA,YAAAK,EAAAZ,MAgCCtI,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,OAAAK,EAAA8V,UAWIhf,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAuQ,KAEAzJ,CAF2B,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAW3BxJ,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,cAAA0P,EAAArP,EAAAZ,KAAApL,IAAA,cAAAqb,EAAArf,MAGA8G,CAHgC,UAGhCA,CAFe,SAEfA,CADU,WAiCdA,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,uBDnFxBtR,uBAWiC,eAAA0nB,EAApBpoB,EAAoB,WAmBzB,OAAAa,EALJ,SAAAb,EAC8BqoB,EAClBpa,EACAoM,EACA+E,GAA6C,IAAApd,EAAAjB,KAAAD,EAAAC,KAAAf,GAH3Be,KAAAsnB,YAClBtnB,KAAAkN,SACAlN,KAAAsZ,SACAtZ,KAAAqe,yBAjBLre,KAAAunB,aAAc,EACdvnB,KAAAwnB,aAAc,EAErBxnB,KAAAonB,SAAiB,IAAItN,KAML9Z,KAAAyQ,UAAY,WACxBxP,EAAKqY,OAAO7I,WAChB,CAOG,EAAC,EAAApP,IAAA,OAAAiE,IAbJ,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,WAAAC,MAaD,WACItB,KAAKsZ,OAAOmO,UACZznB,KAAKqe,uBAAuB6F,aAChC,GAAC,CAAA7iB,IAAA,YAAAC,OAAAomB,EAAAlmB,EAAAC,IAAAC,KAED,SAAAC,IAAA,IAAAsE,EAAA,OAAAxE,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG6D,GAFzDnC,KAAK0Q,KAAKiX,mBACL3nB,KAAK0Q,KAAKpP,MAAMmT,MACjBzU,KAAK0Q,KAAKe,WAAW,CAAEgD,KAAmB,QAAfxO,KAAEghB,EAAAzgB,sBAAa,IAAAP,OAAA,EAAbA,EAAeS,QAC3C1G,KAAK0Q,KAAKgE,MAAK,CAAAzS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAAArB,SAAAE,KAAA,EACdnC,KAAKsZ,OAAOsO,YAAW,OAC7B5nB,KAAKkN,OAAO2D,SAAS,CAAC,mBAAmB,wBAAA5O,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5C,SAAAmnB,IAAA,OAAAO,EAAA/iB,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,mBAAAC,MAED,WACIgB,OAAOyS,KAAK,sBAChB,KAbC,IAAA2S,CAaA,CArC4B,GAqC5BL,SArCQpoB,0CAAoBmJ,EAAAC,4BAejB/H,EAAAunB,UAAQzf,EAAAC,4BAAAC,EAAA6E,QAAA/E,EAAAC,4BAAAG,EAAA6M,kBAAAjN,EAAAC,4BAAAK,EAAA6R,uBAAA,kDAfXtb,EAAoB6J,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,w/CAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IClBjChB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA8V,EAAA,gBAoHJ1f,EAAAkF,gCApHWlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAqH,kbDiBEzR,CAAoB,iLEjBjCpB,EAAA,WACAub,EAAAvb,EAAA,OAKAkqB,GAJAlqB,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,QACAmqB,EAAAnqB,EAAA,UACAA,EAAA,uEAEA8B,qBAG+B,eAAAsoB,EAAlBzD,EAAkB,WA+B1B,OAAA1kB,EAXD,SAAA0kB,EACYnD,EACAnU,EACAoM,EACAgI,EACA4G,GAAsB,IAAAC,EAAAlnB,EAAAjB,KAAAD,EAAAC,KAAAwkB,GAJtBxkB,KAAAqhB,eACArhB,KAAAkN,SACAlN,KAAAsZ,SACAtZ,KAAAshB,UACAthB,KAAAkoB,cAvBLloB,KAAA2f,WAA+B,GAC/B3f,KAAA4hB,WAAsB,GAE7B5hB,KAAAooB,gBAA0C,IAAIhP,EAAAuB,gBAAuB,MACrE3a,KAAAwlB,gBAAqCxlB,KAAKooB,gBAAgBtN,eAqBtD9a,KAAK2f,WAAa,KACgB,QAAhBwI,EAAAnoB,KAAKsZ,OAAO5I,YAAI,IAAAyX,GAAkB,QAAlBA,EAAhBA,EAAkB7iB,IAAI,oBAAY,IAAA6iB,OAAA,EAAlCA,EAAoC7mB,QAAS,IACrD+mB,QAAQ,SAACrlB,GAAC,OAAM/B,EAAK0e,WAAW3c,EAAEqQ,KAAM,CAAI,GACtDrT,KAAK4hB,WAAa5hB,KAAKshB,QAAQ9F,OAAO,SAAC8M,GAAC,OAAKrnB,EAAK0e,WAAW2I,EAAEjV,GAAG,EACtE,EAAC,EAAAhS,IAAA,iBAAAiE,IAvBD,WACI,OAAOtF,KAAKooB,gBAAgBjQ,UAChC,EAAC+C,IAED,SAAmBiB,GACfnc,KAAKooB,gBAAgBjmB,KAAKga,EAC9B,GAAC,CAAA9a,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,iBAAAC,OAAAinB,EAAA/mB,EAeD,eAAAsD,EAAA9E,KAAqBmc,EAAKvX,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG5E,KAAKsjB,eAAc,OAAA7hB,IAAAC,KAAA,SAAAC,IAAA,IAAA6mB,EAAA,OAAA/mB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtCqmB,SAAmB1jB,EAAKuc,aAAatM,KAAKgT,EAAAU,qBAAsB,CAClEhmB,KAAM0Z,IACRla,EAAAE,KAAA,EAEIqmB,EACDrT,iBACApC,UAAU,SAAC2V,GAAa,OACrBA,EAAgB5jB,EAAK6jB,gBAAgBD,GAAiB,IAAI,GAC7D,wBAAAzmB,EAAAwC,OAAA,EAAA9C,EAAA,EATuCF,EASvC,GACR,SAAA4hB,IAAA,OAAAkF,EAAA5jB,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAED,SAAgB6a,GACRA,GACoBnc,KAAKqhB,aAAatM,KAAKiT,EAAAY,qBAAsB,CAC7DnmB,KAAM0Z,GAGlB,GAAC,CAAA9a,IAAA,sBAAAC,MAED,SAAoB6a,GACZA,IAAOnc,KAAKsjB,eAAiBnH,EACrC,GAAC,CAAA9a,IAAA,kBAAAC,MAED,SAAgB6a,GAAkC,IAApB+G,IAAAte,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAC1B5E,KAAK2f,WAAa,GAClB3f,KAAK2f,WAAWxD,EAAM9I,IAAM6P,CAChC,GAAC,CAAA7hB,IAAA,WAAAC,MAAA,eAAAunB,EAAArnB,EAAAC,IAAAC,KAED,SAAAwD,EAAeiX,GAAM,IAAA2M,EAAA5M,EAAAhW,EAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACX2mB,SAAUC,OAAOC,KAAKhpB,KAAK2f,YAAYnE,OAAO,SAAAnI,GAAE,OAAInN,EAAKyZ,WAAWtM,EAAG,GAACjO,EAAAjD,KAAA,EACzDwB,QAAQslB,IAAIH,EAAQxN,IAAI,SAAAjI,GAAE,OAAInN,EAAKgiB,YAAYgB,UAAU7V,EAAG,IAAE,OACnFrT,KAAK0Q,KAAKe,WAAW,CAAE8E,UADjB2F,EAAM9W,EAAAvB,KAC8B6U,OAAQwD,EAAO,KACzDlc,KAAK4hB,WAAa5hB,KAAKshB,QAAQ9F,OAAO,SAAC8M,GAAC,OAAKpiB,EAAKyZ,WAAW2I,EAAEjV,GAAG,GAClErT,KAAKmpB,WAAW,wBAAA/jB,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACnB,gBAAAopB,EAAAzM,GAAA,OAAAkM,EAAAlkB,MAAA3E,KAAA4E,UAAA,EARA,IAQA,CAAAvD,IAAA,WAAAC,MAAA,eAAA+nB,EAAA7nB,EAAAC,IAAAC,KAED,SAAAsE,IAAA,OAAAvE,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACUnC,KAAKsZ,OAAO6P,WAAUhlB,MAAO,SAACmlB,GAAG,OAAKlnB,QAAQ0D,MAAMwjB,EAAI,GAAC,OAC3DtpB,KAAKsZ,OAAOrF,cACZjU,KAAKkN,OAAO2D,SAAS,CAAC,qBAAqB,wBAAA1K,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAClD,gBAAAmpB,IAAA,OAAAE,EAAA1kB,MAAA3E,KAAA4E,UAAA,EANA,MAlDA,IAAA2jB,CAwDA,CA1E0B,GA0E1BN,SA1EQzD,0CAAkBpc,EAAA4U,mBAAA1U,EAAAgN,gBAAAlN,EAAA4U,mBAAAxU,EAAA2E,QAAA/E,EAAA4U,mBAAAtU,EAAA2M,kBAAAjN,EAAA4U,mBAAApU,EAAAub,eAAA/b,EAAA4U,mBAAAoH,EAAAlZ,WAAA,qDAAlBsZ,EAAkBvH,QAAlBuH,EAAkBtH,UAAAC,WAFf,SAEHqH,CAAkB,oLCb/B,IAAA5L,EAAA/a,EAAA,UAKAA,EAAA,OACAA,EAAA,oHCiDoBuK,EALRiF,yBAAA,WAKQjF,CAFP,UAEOA,CADuB,iBAElBA,EAAAmF,iBAAA,YAETnF,EAFekF,wBAEflF,GAEIA,EADJiF,yBAAA,UACIjF,CADuB,aACFA,EAAAmF,iBAAA,GAE7BnF,EAFkDkF,wBAElDlF,6BAF6BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAAoV,EAAA,KAAAA,EAAA7iB,QDlDzC/G,uBAKiC,eAAA6pB,EAApBZ,EAAoB,WAmBzB,OAAA9oB,EALJ,SAAA8oB,EAC0CnmB,EAC9BgnB,EACAnQ,EACAkI,GAAuCzhB,EAAAC,KAAA4oB,GAHT5oB,KAAAyC,OAC9BzC,KAAAypB,kBACAzpB,KAAAsZ,SACAtZ,KAAAwhB,sBAXZxhB,KAAA0pB,oBAA8B,EAKvB1pB,KAAAsiB,QAAUtiB,KAAKsZ,OAAOgJ,OAO1B,EAAC,EAAAjhB,IAAA,OAAAiE,IAVJ,WACI,OAAOtF,KAAKsZ,OAAO5I,IACvB,GAAC,CAAArP,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAUD,SAAAC,IAAA,IAAA4hB,EAAAC,EAAAC,EAAAkG,EAAAC,EAAA,OAAAnoB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACInC,KAAK6pB,UAAqB,QAAZtG,EAAGvjB,KAAK0Q,YAAI,IAAA6S,GAAU,QAAVA,EAATA,EAAWG,gBAAQ,IAAAH,OAAA,EAAnBA,EAAqB1R,KAAKvQ,MAC3CtB,KAAK8pB,WAAa,IAAIhQ,KAAK9Z,KAAK6pB,WAAW9P,mBAAmB,QAAS,CACnEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEN0P,EAAmC,QAApBpG,EAAWxjB,KAAK0Q,YAAI,IAAA8S,GAAU,QAAVA,EAATA,EAAWE,gBAAQ,IAAAF,OAAA,EAAnBA,EAAqB1R,SAASxQ,MAE9DtB,KAAK+pB,SAAW,IAAIjQ,KADR9Z,KAAK6pB,UAA8B,GAAlBD,EAAuB,KACtB7P,mBAAmB,QAAS,CACtDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEZla,KAAKkW,UAAqB,QAAZuN,EAAGzjB,KAAK0Q,YAAI,IAAA+S,GAAU,QAAVA,EAATA,EAAWC,gBAAQ,IAAAD,OAAA,EAAnBA,EAAqBvN,UAAU5U,MAChDtB,KAAKmc,MAAQnc,KAAKyC,KAClBzC,KAAKmB,MAAiB,QAAZwoB,EAAG3pB,KAAK0Q,YAAI,IAAAiZ,GAAU,QAAVA,EAATA,EAAWjG,gBAAQ,IAAAiG,OAAA,EAAnBA,EAAqBxoB,MAAMG,MAAM,wBAAAW,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjD,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,aAAAC,MAED,WACItB,KAAKypB,gBAAgBlL,QAAQ,SACjC,GAAC,CAAAld,IAAA,iBAAAC,MAED,WACItB,KAAK0pB,oBAAqB,EAC1B1pB,KAAKwhB,oBAAoB4H,SAASppB,KAAKmc,MAC3C,KApCC,IAAA5a,CAoCA,CA/C4B,GA+C5BioB,SA/CQZ,0CAAoBxgB,EAAAC,4BAejBuQ,EAAA4F,uBAAqBpW,EAAAC,4BAAAC,EAAAmW,mBAAArW,EAAAC,4BAAAG,EAAA6M,kBAAAjN,EAAAC,4BAAAK,EAAA8b,oBAAA,kDAfxBoE,EAAoB9f,UAAA,mBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,4mCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICXrBhB,EALZiF,yBAAA,UAKYjF,CAHX,cAGWA,CAFqD,UAErDA,CAD8D,cACvCA,EAAA4I,qBAAA,0BAAS3H,EAAAqU,YAAY,GACxCtV,EAAAiF,yBAAA,gBAEKjF,EAAAmF,iBAAA,WAETnF,EAFckF,wBAEdlF,GACAA,EAAAiF,yBAAA,YAAyCjF,EAAAmF,iBAAA,2BAEjDnF,EAFqEkF,wBAErElF,KAIQA,EAFRiF,yBAAA,cAEQjF,CAFoE,UAEpEA,CADuB,aACCA,EAAAkB,oBAAA,YAC5BlB,EAD0DkF,wBAC1DlF,GAEIA,EADJiF,yBAAA,WACIjF,CADuB,cAElBA,EAAAmF,iBAAA,IACLnF,EAAAkF,yBAGIlF,EADJiF,yBAAA,YACIjF,CADsD,kBAEjDA,EAAAmF,iBAAA,qBAAcnF,EAAAkF,yBAEnBlF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,kCAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADsD,kBAEjDA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAEblF,EAAAiF,yBAAA,cAAmBjF,EAAAmF,iBAAA,IAG/BnF,EAH+DkF,wBAG/DlF,OAIQA,EAFRiF,yBAAA,eAEQjF,CAFoE,WAEpEA,CADuB,aACCA,EAAAkB,oBAAA,YAC5BlB,EAD0DkF,wBAC1DlF,GAGIA,EADJiF,yBAAA,WACIjF,CADuB,cAElBA,EAAAmF,iBAAA,iBACLnF,EAAAkF,yBAEAlF,EAAA4J,qBAAA,GAAAgY,EAAA,cAgBQ5hB,EAFRiF,yBAAA,YAEQjF,CAF2D,WAE3DA,CADuB,kBAElBA,EAAAmF,iBAAA,aAETnF,EAFekF,wBAEflF,GAEIA,EADJiF,yBAAA,WACIjF,CADuB,WACjBA,EAAAmF,iBAAA,IAItBnF,EAJ0DkF,wBAI1DlF,SAIQA,EAFRiF,yBAAA,gBAEQjF,CAF2C,WAE3CA,CADuB,aACCA,EAAAkB,oBAAA,YAC5BlB,EAD0DkF,wBAC1DlF,GAEIA,EADJiF,yBAAA,WACIjF,CADuB,cAC8BA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAGvDlF,EADJiF,yBAAA,YACIjF,CADsD,kBAEjDA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBAEjBlF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADsD,kBAEjDA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBAETlF,EAAAiF,yBAAA,cAAoBjF,EAAAmF,iBAAA,IAGhCnF,EAHwDkF,wBAGxDlF,OAKIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAGOA,EAAA4I,qBAAA,0BAAS3H,EAAA4gB,gBAAgB,GAIzB7hB,EAAAiF,yBAAA,cAAejF,EAAAmF,iBAAA,cAG3BnF,EAHkCkF,wBAGlClF,cA7FiBA,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,GAAApE,EAAAlI,MAAA,KAQGiH,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,KAAAhL,EAAAwgB,UAAA,qBAOezhB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,GAAAjW,EAAAygB,WAAA,KAAAzgB,EAAA0gB,SAAA,IAiBE3hB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA6M,WAmBX9N,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA9K,EAAAqH,MAAA,MAAArH,EAAAqH,KAAAgT,UAAA,MAAAra,EAAAqH,KAAAgT,SAAAwG,QAAA,KAAA7gB,EAAAqH,KAAAgT,SAAAwG,QAAA5oB,OAkBN8G,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA5I,KAAA,KAOgBnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAAjD,KAAA,IAWxBnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,EAAAqgB,kGD5FCd,CAAoB,+IEfjC,IAAAhQ,EAAA/a,EAAA,iGCAIuK,EAAAiF,yBAAA,gBAIIjF,EAAAkB,oBAAA,YAQJlB,EAAAkF,iEANQlF,EAAAoF,sBACApF,EADA6I,qBAAA,SAAAkZ,EAAAhO,MAAAiO,OAAA,GACAhiB,CAD0B,mBAAA+hB,EAAAhO,MAAA1G,cAAA0U,EAAAhO,MAAA5I,8BAmBtBnL,EANJiF,yBAAA,cAMIjF,CADH,aAC4BA,EAAAmF,iBAAA,qBAC7BnF,EAD4CkF,wBAC5ClF,0BAQIA,EANJiF,yBAAA,cAMIjF,CADH,aAC4BA,EAAAmF,iBAAA,wBAC7BnF,EAD+CkF,wBAC/ClF,0BAkCQA,EADJiF,yBAAA,QACIjF,CADyB,iBAEpBA,EAAAmF,iBAAA,cAETnF,EAFiBkF,wBAEjBlF,0BAEIA,EADJiF,yBAAA,QACIjF,CAD6B,iBAExBA,EAAAmF,iBAAA,wBAETnF,EAF2BkF,wBAE3BlF,0BAEIA,EADJiF,yBAAA,QACIjF,CAD2B,iBAEtBA,EAAAmF,iBAAA,mBAETnF,EAFsBkF,wBAEtBlF,0BAEIA,EADJiF,yBAAA,QACIjF,CAD8B,iBAEzBA,EAAAmF,iBAAA,+BAETnF,EAFkCkF,wBAElClF,0BAEIA,EADJiF,yBAAA,QACIjF,CAD4B,iBAEvBA,EAAAmF,iBAAA,UAETnF,EAFakF,wBAEblF,0BAEIA,EADJiF,yBAAA,QACIjF,CADwB,iBAEnBA,EAAAmF,iBAAA,gCAETnF,EAFmCkF,wBAEnClF,6BA9BJA,EAJJiF,yBAAA,WAIIjF,CADH,YA2BOA,EAzBA4J,qBAAA,EAAAqY,EAAA,aAyBAjiB,CAzB6B,EAAAkiB,EAAA,aAyB7BliB,CApBiC,EAAAmiB,EAAA,aAoBjCniB,CAf+B,EAAAoiB,EAAA,aAe/BpiB,CAVkC,EAAAqiB,EAAA,aAUlCriB,CALgC,EAAAsiB,EAAA,cAUpCtiB,EAAAkF,yBAEAlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2BApCSA,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAA0Z,GACKviB,EAAAoF,sBAAApF,EAAA6I,qBAAA,wBAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,4BAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,0BAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,6BAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,2BAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,uBAQN7I,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAkd,EAAA,+BAxCRviB,EAJJiF,yBAAA,eAIIjF,CADH,aAC0CA,EAAAmF,iBAAA,qBAAenF,EAAAkF,yBAEtDlF,EAAA4J,qBAAA,EAAA4Y,EAAA,eAyCJxiB,EAAAkF,iEAxC6BlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,gBAAAkZ,EAAAhO,MAAA,KAAAgO,EAAAhO,MAAAE,4EA4CzBjU,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAA8Y,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAU,OAAM,GAEfziB,EAAAiF,yBAAA,aAA6BjF,EAAAmF,iBAAA,UACjCnF,EADqCkF,wBACrClF,iEACAA,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAX,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAU,OAAM,GAEfziB,EAAAiF,yBAAA,aAAyBjF,EAAAmF,iBAAA,aAC7BnF,EADoCkF,wBACpClF,IDrHRzI,uBAKiC,eAAAorB,EAApBtC,EAAoB,WAOzB,OAAA3oB,EAHJ,SAAA2oB,EAC0ChmB,EAC9BgnB,GAAwD1pB,EAAAC,KAAAyoB,GAD1BzoB,KAAAyC,OAC9BzC,KAAAypB,kBAJZzpB,KAAAgrB,YAAsB,CAKnB,EAAC,EAAA3pB,IAAA,WAAAC,MAEJ,WACItB,KAAKmc,MAAQnc,KAAKyC,IACtB,GAAC,CAAApB,IAAA,aAAAC,MAED,WACItB,KAAKgrB,YAAchrB,KAAKgrB,UAC5B,GAAC,CAAA3pB,IAAA,OAAAC,MAED,WAEQtB,KAAKypB,gBAAgBlL,QADrBve,KAAKgrB,WACwBhrB,KAAKmc,MAEL,KAErC,IAAC,CAvB4B,GAuB5B4O,SAvBQtC,0CAAoBrgB,EAAAC,4BAKjBuQ,EAAA4F,uBAAqBpW,EAAAC,4BAAAC,EAAAmW,mBAAA,kDALxBgK,EAAoB3f,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,yhEAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICdjChB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAiZ,EAAA,iBAgBI7iB,EAHJiF,yBAAA,cAGIjF,CADH,YACyCA,EAAAmF,iBAAA,GAAiBnF,EAAAkF,yBAEvDlF,EAAAiF,yBAAA,WAAKjF,EAAA4I,qBAAA,0BAAS3H,EAAA6hB,YAAY,GAUtB9iB,EATA4J,qBAAA,EAAAmZ,EAAA,eASA/iB,CAJC,EAAAgjB,EAAA,gBAaThjB,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,cAGIjF,CADH,YACqCA,EAAAmF,iBAAA,cAAOnF,EAAAkF,yBAErClF,EADJiF,yBAAA,WACIjF,CADiD,kBAE5CA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAEXlF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,IAERnF,EAFoCkF,wBAEpClF,GAEIA,EADJiF,yBAAA,YACIjF,CADiD,kBACGA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACxDlF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,IAGZnF,EAHmEkF,wBAGnElF,KACAA,EAAA4J,qBAAA,GAAAqZ,EAAA,kBAgDAjjB,EAAAiF,yBAAA,aAYIjF,EATA4J,qBAAA,GAAAsZ,EAAA,gBASAljB,CAHC,GAAAmjB,EAAA,iBAaTnjB,EADIkF,wBACJlF,UA7HSA,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAA5H,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAAiO,OAAA,KAAA/gB,EAAA8S,MAAAiO,OAAAplB,QAAA,GAcqCoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA5I,KAAA,IAI7BnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2hB,YASA5iB,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2hB,YAkBD5iB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAAoD,SAAA,WAMAnX,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,UAAAjW,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAAjD,KAAA,WAAAlK,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAA3C,UAAA,IAMPzL,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAA5H,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAAE,aAAArX,QAAA,GAkDIoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA2hB,YASA5iB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2hB,8HDzGAvC,CAAoB,4IEbjC,IAAA7P,EAAA/a,EAAA,UAKAA,EAAA,wGCOgBuK,EAAAkB,oBAAA,mDAGIlB,EAAA6I,qBAAA,SAAAkZ,EAAAhO,MAAAiO,OAAA,2BAQAhiB,EADJiF,yBAAA,QACIjF,CADoC,iBAG/BA,EAAAmF,iBAAA,WAETnF,EAFckF,wBAEdlF,IDpBhBzI,oBAK8B,eAAA6rB,EAAjBzE,EAAiB,WAMtB,OAAAjnB,EAJJ,SAAAinB,EAC0CtkB,EAC9BgnB,EACAjI,GAAuCzhB,EAAAC,KAAA+mB,GAFT/mB,KAAAyC,OAC9BzC,KAAAypB,kBACAzpB,KAAAwhB,qBACT,EAAC,EAAAngB,IAAA,WAAAC,MAEJ,WACItB,KAAKmc,MAAQnc,KAAKyC,IACtB,GAAC,CAAApB,IAAA,iBAAAC,MAED,WACItB,KAAKwhB,oBAAoB6B,eAAerjB,KAAKmc,MACjD,GAAC,CAAA9a,IAAA,SAAAC,MAED,WACItB,KAAKypB,gBAAgBlL,QAAQ,KACjC,IAAC,CAlByB,GAkBzBiN,SAlBQzE,0CAAiB3e,EAAAC,4BAGduQ,EAAA4F,uBAAqBpW,EAAAC,4BAAAC,EAAAmW,mBAAArW,EAAAC,4BAAAG,EAAAgc,oBAAA,kDAHxBuC,EAAiBje,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,opCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICV1BhB,EAHJiF,yBAAA,UAGIjF,CADH,WAGOA,EAAA4I,qBAAA,0BAAS3H,EAAAga,gBAAgB,GAKrBjb,EAHJiF,yBAAA,UAGIjF,CADH,WAcOA,EAVA4J,qBAAA,EAAAyZ,EAAA,YAUArjB,CAFE,EAAAsjB,EAAA,aAQNtjB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD4B,YAExBA,EAAAmF,iBAAA,GAAiBnF,EAAAkF,yBAIjBlF,EADJiF,yBAAA,UACIjF,CADwD,iBAGnDA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBAETlF,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,IAGRnF,EAFqCkF,wBAErClF,GAGIA,EADJiF,yBAAA,WACIjF,CADwD,iBAGnDA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAEXlF,EAAAiF,yBAAA,cAA6BjF,EAAAmF,iBAAA,IAKjDnF,EALsEkF,wBAKtElF,WAIIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAIOA,EAAA4I,qBAAA,0BAAS3H,EAAAsiB,QAAQ,GAGjBvjB,EAAAiF,yBAAA,cAA6BjF,EAAAmF,iBAAA,WAErCnF,EAFyCkF,wBAEzClF,YArDqBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA5H,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAAiO,OAAA,KAAA/gB,EAAA8S,MAAAiO,OAAAplB,QAAA,GAQCoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,iBAAA5H,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAAiO,OAAA,KAAA/gB,EAAA8S,MAAAiO,OAAAplB,SASFoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA5I,KAAA,IASInL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,UAAAjW,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAAjD,KAAA,WAAAlK,EAAA8S,OAAA,MAAA9S,EAAA8S,MAAA3F,MAAA,KAAAnN,EAAA8S,MAAA3F,MAAA3C,UAAA,IAUyBzL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAAoD,SAAA,kFDtCpCwH,CAAiB,yLEZ9B,IAAAzmB,EAAAzC,EAAA,OACAiR,EAAAjR,EAAA,UAEAA,EAAA,+FAmBwBuK,EAAAkB,oBAAA,oEAEIlB,EAAA6I,qBAAA,QAAA2a,4BAGAxjB,EAAAkB,oBAAA,sEAAclB,EAAA6I,qBAAA,UAAA2a,6BARtBxjB,EAAAwY,kCAAA,GAOIxY,EAJA4J,qBAAA,EAAA6Z,EAAA,mBAIAzjB,CADC,EAAA0jB,EAAA,yBAAA1jB,EAAA2c,0JAFI3c,EAAAoF,sBAAqBpF,EAArB6I,qBAAA,OAAA8a,EAAAC,QAAAJ,GAAqBxjB,CAAA,WAAA6jB,6BAPlC7jB,EAAAwY,kCAAA,GAGIxY,EAAA4J,qBAAA,EAAAka,EAAA,iIACqB9jB,EAAAoF,sBAAoBpF,EAApB6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAAI,SAAoB/jB,CAAA,eAAA2jB,EAAAK,qCARjDhkB,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAqa,EAAA,oDAeJjkB,EAAAkF,gGAdSlF,EAAAoF,sBAAiCpF,EAAjC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAI,UAAA,KAAAnO,EAAAhZ,OAAiCoD,CAAA,WAAAkkB,0BAiB1ClkB,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,4BACPnF,EAD6BkF,wBAC7BlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,sCASb7I,EAJJiF,yBAAA,WAIIjF,CADH,OACMA,EAAAmF,iBAAA,uBACPnF,EADwBkF,wBACxBlF,IA3CZzI,4BAgDuC,eAAA4sB,EAA1B/sB,EAA0B,SAAAoB,GAKnC,SAAApB,EAAoBgtB,GAA+B,IAAAvrB,EAAAlB,SAAAC,KAAAR,IAC/CyB,EAAAC,EAAAlB,KAAAR,IADgBgtB,YAJbvrB,EAAAwrB,QAAOnsB,EAAAkG,eACEvF,EAAAyrB,SAAWzrB,EAAKurB,UAAUlK,QAC1BrhB,EAAAkrB,QAAUlrB,EAAKurB,UAAUG,kBAAkB1rB,CAI3D,CAACG,SAAA5B,EAAAoB,GAAAd,EAAAN,EAAA,EAAA6B,IAAA,WAAAC,MAEM,WACHtB,KAAKwsB,UAAUI,WAAW,QAAQ,GAClC5sB,KAAKwsB,UAAUI,WAAW,WAAW,GACrC5sB,KAAK6S,aAAa,OAAQ7S,KAAKwsB,UAAUK,eAC7C,GAAC,CAAAxrB,IAAA,UAAAC,MAEM,SAAQma,GACX,OAAOA,aAAgB3M,EAAAge,aAC3B,GAAC,CAAAzrB,IAAA,YAAAC,MAEM,SAAU0B,EAAWyY,GACxB,OAAOA,GAAMpI,EACjB,IAAC,CArBkC,CAAQ/S,EAAA6H,cAAYokB,SAA9C/sB,0CAAyB4I,EAAAC,4BAAAC,EAAAykB,sBAAA,kDAAzBvtB,EAAyBsJ,UAAA,gCAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,isBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA5C1BhB,EADJiF,yBAAA,UACIjF,CAD4D,UAExDA,EAAAmF,iBAAA,qBACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAgb,EAAA,2CAoBJ5kB,EAAAkF,yBAUAlF,EATA4J,qBAAA,EAAAib,EAAA,yBAAA7kB,EAAA2c,iCASA3c,CATyB,EAAA8kB,EAAA,yBAAA9kB,EAAA2c,yEAnBhB3c,EAAAoF,oBAAA,GAA2BpF,EAA3B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAqjB,UAA2BtkB,CAAA,WAAA+kB,oHAuC/B3tB,CAA0B,0FCtD1BG,cAAc,CACvBqN,YAAY,oCCDhBpD,EAAA/L,EAAA,MAGAuvB,EAAAvvB,EAAA,OACAA,EAAA,OAEIkP,YAAYC,eACZpD,EAAAyjB,kBAGJC,EAAAC,kBACKC,gBAAgBJ,EAAApiB,WAAU7G,MACpB,SAACmlB,GAAG,OAAKlnB,QAAQ0D,MAAMwjB,EAAI,8QCXtCzrB,EAAA,OACAA,EAAA,OADA,IAGAyC,EAAAzC,EAAA,OAMAiR,EAAAjR,EAAA,OAMA2M,GADA3M,EAAA,MACAA,EAAA,uMAKQuK,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAiN,UAAS,GAElBnW,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,yBAGIA,EAAAkB,oBAAA,6CAcQlB,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,YAAUjF,EAAAmF,iBAAA,GACdnF,EADwCkF,wBACxClF,2CADcA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAmc,gDA4CErlB,EAFRiF,yBAAA,aAEQjF,CAFuC,WAEvCA,CAD2B,iBACJA,EAAAmF,iBAAA,cAAQnF,EAAAkF,yBAC/BlF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2BAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAigB,EAAAna,MAAAma,EAAAhnB,MAAA,+BAXpB0B,EALJiF,yBAAA,eAKIjF,CADH,gBACuCA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAEpClF,EADJiF,yBAAA,WACIjF,CAD2B,QAC3BA,EAAAulB,iBAAA,KAGAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADe,wBAEXA,EAAA4J,qBAAA,EAAA4b,EAAA,mBAShBxlB,EAHYkF,wBAGZlF,+CAdYA,EAAAoF,oBAAA,GAA+BpF,EAA/BylB,oBAAAvc,EAAAwc,MAAA5X,UAAAlR,OAA+BoD,CAAFkJ,EAAAwc,MAAA5X,UAAAlR,mCAKEoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAwc,MAAA5X,qCAcnC9N,EAAAwY,kCAAA,GAEQxY,EADJiF,yBAAA,WACIjF,CADqC,cAC3BA,EAAAmF,iBAAA,kBAAYnF,EAAAkF,yBACtBlF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGRnF,EADIkF,wBACJlF,8FAHQA,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,WAAAhO,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAf,gBAAA,MAAAnE,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAjD,MAAA,KAAAwa,EAAAtY,cAAAsY,EAAAxa,KAAA,+BAPhBnL,EADJiF,yBAAA,eACIjF,CAD0D,gBACtBA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAEpClF,EADJiF,yBAAA,WACIjF,CAD2B,QAC3BA,EAAAulB,iBAAA,KAAoBvlB,EAAAkF,yBACpBlF,EAAA4J,qBAAA,EAAAgc,EAAA,uBAUI5lB,EADJiF,yBAAA,WACIjF,CADqC,cAC3BA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,IAGjBnF,EAH+BkF,wBAG/BlF,+CAdoCA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAwc,MAAAvX,WAWnBnO,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA5L,wEAKb0C,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6X,WAAU,GANvB/gB,EAAAulB,iBAAA,KAUAvlB,EAAAkF,0BA/GZ3N,8BAiJyC,eAAAsuB,EAA5BjZ,EAA4B,SAAApU,GA+DrC,SAAAoU,EACwBkZ,EACZC,EACArtB,EACAonB,EACA1Q,EACA3W,GAA0B,IAAAI,GAAAlB,SAAAC,KAAAgV,IAElC/T,GAAAC,EAAAlB,KAAAgV,IAPoBkZ,aACZjtB,GAAAktB,cACAltB,GAAAH,OACAG,GAAAinB,cACAjnB,GAAAuW,UACAvW,GAAAJ,YApEII,GAAAiU,YAAsB,EAEtBjU,GAAAqhB,QAAUrhB,GAAKktB,YAAY7L,QAE3BrhB,GAAAkoB,SAAQ3nB,EAAAC,IAAAC,KAAG,SAAAC,KAAA,OAAAF,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,UAClBlB,GAAKkb,MAAK,CAAAla,GAAAE,KAAA,QAAAF,UAAAE,KAAA,KACU7B,EAAA8tB,kBACjB,CACIjtB,MAAO,8BACPslB,QACI,2DACJ4H,KAAM,CAAE5H,QAAS,oBAErBxlB,GAAKuW,SACR,OARW,GASU,SATVvV,GAAA4B,KASDyqB,OAAiB,CAAArsB,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,iBAAArB,UAAAE,KAAA,EAE1BlB,GAAKktB,YAAYhF,WAAUhlB,MAAO,SAACnB,GACrC,QAAA1C,EAAAqU,aAAY3R,GACNA,CACV,GAAE,OACF/B,GAAKsd,SAAQ,GAAM,wBAAAtc,GAAAwC,OAAA,EAAA9C,GAAA,IAEPV,GAAAstB,WAAa,kBAAMttB,GAAKktB,YAAYK,gBAAgB,EACpDvtB,GAAAsd,QAAU,SAACsF,IAAE,IAAA4K,GAAA,OAAoB,QAApBA,GAAKxtB,GAAKitB,kBAAU,IAAAO,QAAA,EAAfA,GAAiBlQ,QAAQsF,GAAE,EAErD5iB,GAAAytB,OAASztB,GAAK6sB,MAAMvX,UAAU,GAAGtV,EA6CzC,CAACG,SAAA4T,EAAApU,GAAAd,EAAAkV,EAAA,EAAA3T,IAAA,cAAAiE,IA3CD,WACI,OAAOtF,KAAK8tB,MAAMhc,SAAW,IACjC,GAAC,CAAAzQ,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,uBAAAiE,IAED,WACI,SAAOwJ,EAAA8f,kBAAgBC,IAAA,GAChB7uB,KAAK8tB,MAAMgB,YAAU,IACxBC,MAAO/uB,KAAK8tB,MAAMjc,MAAQ7R,KAAK8tB,MAAMgB,WAAWC,QAExD,GAAC,CAAA1tB,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAKmuB,YAAYzd,KAAKse,aACjC,GAAC,CAAA3tB,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAK0uB,MAChB,GAAC,CAAArtB,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAKc,KAAKmuB,YAAYjvB,KAAKmc,MAAMxI,MAC5C,GAAC,CAAAtS,IAAA,WAAAiE,IAED,WAAmB,IAAAR,EAAA9E,KACT6V,EAAW7V,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,OACxC8B,EAAKqX,MAAMxI,MAAM/N,SAAS5C,EAAEqQ,GAAG,GAEnC,OAAOwC,GAAUsZ,SAAWtZ,GAAUJ,cAAgBI,GAAUtC,IACpE,GAAC,CAAAlS,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAaM,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EAEQnC,KAAKkoB,YAAYgB,UAAUlpB,KAAK8tB,MAAMvX,UAAU,GAAG7P,OAAM,UAAAtB,EAAAlB,GAAAkB,EAAAvB,KAAAuB,EAAAlB,GAAA,CAAAkB,EAAAjD,KAAA,QAAAiD,EAAAlB,GAChElE,KAAK0uB,OAAM,OAFf1uB,KAAK0uB,OAAMtpB,EAAAlB,GAAA,wBAAAkB,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAGd,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,aAAAC,MAEM,SAAWma,GAAkB,IAAA2T,EAChC,OAAuB,QAAvBA,EAAO3T,EAAK4T,mBAAW,IAAAD,OAAA,EAAhBA,EAAkB9T,IAAI,SAACtY,GAAC,OAAKA,EAAEuQ,IAAI,GAAEsB,KAAK,KACrD,KArBC,IAAAtT,CAqBA,CAlFoC,CAAQjB,EAAA6H,cAAY8lB,SAAhDjZ,0CAA2B5M,EAAAC,4BAAAC,EAAAmW,kBAAA,GAAArW,EAAAC,4BAAAG,EAAA6M,kBAAAjN,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAsC,WAAA9C,EAAAC,4BAAA+b,EAAA9L,WAAAlQ,EAAAC,4BAAAgc,EAAA9b,iBAAA,kDAA3ByM,EAA2BlM,UAAA,2BAAAqW,OAAA,CAAAjK,WAAA,cAAAnM,SAAA,CAAAX,EAAAknB,6BAFzB,CAAC9kB,EAAAU,YAAU9C,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,aAlILC,UAAAC,MAAAC,EAAA,0GAqD4BF,UAAAG,MAAAD,EAAA,2NADxBF,UAAAI,MAAAF,EAAA,6GACL,gBAA6BG,GAkBxBL,UAAAM,MAAAJ,EAAA,4FAyBZF,UAAAO,MAAAL,EAAA,okCA1GLtnB,EAAA4J,qBAAA,EAAAge,EAAA,gBAUI5nB,EADJiF,yBAAA,aACIjF,CADmD,QACnDA,EAAAulB,iBAAA,KAAgCvlB,EAAAkF,yBAChClF,EAAA4J,qBAAA,EAAAie,EAAA,mDACJ7nB,EAAAkF,yBAEIlF,EADJiF,yBAAA,cACIjF,CADwC,gBACJA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAEpClF,EADJiF,yBAAA,WACIjF,CAD2B,SACvBA,EAAAmF,iBAAA,IAAsCnF,EAAAkF,yBAEtClF,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,aAAUjF,EAAAmF,iBAAA,kCACdnF,EADiDkF,wBACjDlF,GACAA,EAAA4J,qBAAA,GAAAke,EAAA,cAQI9nB,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAClBlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,wLAuBhBnF,EAHYkF,wBAGZlF,OAwBAA,EAvBA4J,qBAAA,GAAAme,EAAA,kBAuBA/nB,CAnBC,GAAAgoB,EAAA,mBAsCDhoB,EAAAiF,yBAAA,gBACIjF,EAAA4J,qBAAA,GAAAqe,EAAA,gDAqBJjoB,EAAAkF,gCAnHKlF,EAAA6I,qBAAA,OAAA5H,EAAA6L,YAO2B9M,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,UAKpBla,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAykB,MAAA3sB,OAAA,mBAGUiH,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,aAITzJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA5H,EAAAykB,MAAAgB,WAAA,KAAAzlB,EAAAykB,MAAAgB,WAAAwB,SAQGloB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAknB,YAAAnoB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,UAAAxI,EAAAykB,MAAA0C,QAAA,GAAApoB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,KAAAxI,EAAAslB,cAAA,MAAAvmB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAA2C,SAAA,UAAApnB,EAAAykB,MAAA0C,QAAA,GAAApoB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAA2C,SAAA,KAAApnB,EAAAslB,cAAAtlB,EAAAykB,MAAA0C,QAAA,UAAApoB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAAxI,EAAAslB,aAAA,MAAAvmB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,GAAAxI,EAAAykB,MAAAhc,SAAA,IAAAzI,EAAAslB,YAAA,aA2BXvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAykB,MAAA5X,UAAAlR,QAoBwCoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA9I,IAyBpCjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAiZ,qcAuCJtN,CAA4B,oSClKzCnX,EAAA,WACAgR,EAAAhR,EAAA,OAQAyC,EAAAzC,EAAA,OAQAiR,EAAAjR,EAAA,OAMA6yB,GADA7yB,EAAA,MACAA,EAAA,QACAwC,EAAAxC,EAAA,OACA8yB,EAAA9yB,EAAA,OAWAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,2DAaA8B,uBAGkC,eAAAixB,EAArB7D,EAAqB,SAAAnsB,GA+W9B,SAAAmsB,EACYlsB,EACAC,EACA+vB,EACArZ,EACAsZ,GAAwB,IAAA7vB,EAAAlB,SAAAC,KAAA+sB,IAEhC9rB,EAAAC,EAAAlB,KAAA+sB,IANQlsB,YACAI,EAAAH,OACAG,EAAA4vB,WACA5vB,EAAAuW,UACAvW,EAAA6vB,WAnXJ7vB,EAAA8vB,MAAQ,IAAI3X,EAAAuB,gBAAgB,GAC5B1Z,EAAA+vB,WAAa,IAAI5X,EAAAuB,gBAA8B,OAC/C1Z,EAAAgwB,SAAW,IAAI7X,EAAAuB,iBAAgB,GAC/B1Z,EAAAiwB,SAAW,IAAI9X,EAAAuB,gBAAgB,CACnCwW,YAAa,CACT,QACA,OACA,UACA,UACA,SACA,iBAGAlwB,EAAAmwB,MAAQ,IAAIhY,EAAAuB,gBAAgBb,KAAKuX,OACjCpwB,EAAAqwB,WAAUlY,EAAA2I,eAAc,CAAC9gB,EAAKmwB,MAAOnwB,EAAK8vB,QAAQjuB,QACtD1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,EAAKgwB,SAAS9uB,MAAK,EAAK,IAG/BlB,EAAAuwB,SAAqB,GAErBvwB,EAAAwwB,gBACJxwB,EAAKH,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAsxB,yBAAwB,OAAI,EAC5BtxB,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,EAAK0wB,UAAU,QAAQ,MAClCvxB,EAAAwxB,WAAU,SAAA3rB,GAAW,IAARoN,EAAEpN,EAAFoN,GACTpS,SAAKgwB,SAAS9uB,MAAK,IAAI,EAChBuuB,EAAAmB,sBAAqBxe,EAChC,IAAC,EACDjT,EAAA0xB,sBAAqB,SAAAhqB,EAAAoa,GAAU,OAAVD,EAAAna,EAAA,GAAI,KAAAma,EAAAC,EAAA,GAAM,EAAe,MAC9C9hB,EAAAwxB,WAAU,SAAC5e,GACP/R,SAAKgwB,SAAS9uB,MAAK,IAAK,EACjBiX,EAAA2I,gBACF/O,GAAQ,IAAIsI,IAAI,SAACa,GACd,IAAM4V,KAAU1xB,EAAA2xB,WAAU7V,EAAM9I,GAAI,YAAY0e,QAC5C,YAEEE,EAAMF,EAAQG,SAASpvB,QACzB1C,EAAAkb,KAAI,SAAC6W,GAAU,OACVA,GAAc,IAAI7W,IACf,SAAC8W,GAAC,OACE,IAAItjB,EAAAge,cAAa+B,IAAA,GACVuD,GAAC,IACJ7b,UAAW6b,EAAElc,UAAUsF,OACnB,SAACxY,GAAC,OACEA,EAAE0D,QAAUyV,EAAMzV,OAClB1D,EAAEqvB,QAAQ,GAElB3Z,OAAQyD,IACV,EACT,MAEL/b,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,IAE5B,OAAK3Y,EAAKsxB,gBAAe,QAAAxuB,OAASoY,EAAM9I,MACpCpS,EAAK4R,aAAY,QAAA9O,OACLoY,EAAM9I,IACd0e,EAAQS,QAGTP,CACX,GAER,IAAC,EACD7xB,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAmyB,SAAuBzvB,EAAE,MACpC5C,EAAAsyB,aAAY,IAGJzxB,EAAA0xB,aAAYvZ,EAAA2I,eAAc,CACtC9gB,EAAKwwB,gBACLxwB,EAAKqwB,UACNxuB,QACC1C,EAAAkb,KAAI,SAAAsX,GAAgB,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAd5vB,EAAC6vB,EAAA,GAAGhhB,EAAHoQ,EAAA4Q,EAAA,MAAO,GACJpG,KAAOnsB,EAAAkG,eACb,OAAOxD,EAAEwY,OACL,SAACxY,GAAC,IAAA8vB,EAAA,SACEnC,EAAAoC,WAAU/vB,EAAE6O,KAAMA,KACjB7O,EAAEyR,KAAKue,gBAAkBvG,EAAK/lB,MAAMssB,eACjChwB,EAAEkT,UAAUgZ,KACR,SAAC+D,GAAC,OACEA,EAAEvsB,MAAMssB,gBACRvG,EAAK/lB,MAAMssB,aAAa,OAElB,QAAlBF,EAAC9vB,EAAEkwB,uBAAe,IAAAJ,GAAjBA,EAAmB5D,KAChB,SAAC5Q,GAAC,MAAwB,gBAAnBA,EAAE5K,YAA8B,GAC1C,EAEb,IAGYzS,EAAAkyB,WAA0ClyB,EAAKqwB,QAAQxuB,QACnE1C,EAAAwxB,WAAU,SAAAwB,GAAW,IAATvhB,EAASoQ,EAAAmR,EAAA,GAAL,GACNC,EAAQ,CACVC,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,KAErC,OAAO5Q,EAAKJ,UAAUyE,IAAI,4BAAyB,EAC7CuJ,EAAA8kB,eAAa9E,IAAA,GAAMwE,GAAK,IAAEzgB,KAAM,UAAU9P,QACtC1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEsY,IAAI,SAAC8W,GAAC,SAAKtjB,EAAA8kB,6BAA4BxB,EAAE,EAAC,MACvDhyB,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,KAAC,EAE7B9K,EAAA+kB,aAAWhF,EAAA,GAAMwE,IAASvwB,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GACjE,IAAC,EACDxZ,EAAAsyB,aAAY,IAGAzxB,EAAA6yB,UAAS1a,EAAA2I,eAAc,CAAC9gB,EAAK+vB,aAAaluB,QACtD1C,EAAAwxB,WAAU,SAAAmC,GAAG,MAAa,QAAhB9R,EAAA8R,EAAA,GAAG,GAAqB9yB,EAAKkyB,WAAalyB,EAAK0xB,SAAS,IAAC,EACnEvyB,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAGAzxB,EAAA+yB,SAAkC/yB,EAAKqwB,QAAQxuB,QAC3D1C,EAAAwxB,WAAU,SAAAqC,GAAA,IAAEpiB,EAAFoQ,EAAAgS,EAAA,GAAM,YACZplB,EAAA8kB,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,IACjCe,KAAM,YACP9P,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAgB,GAAE,MAEnDxZ,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEwY,OAAO,SAACxY,GAAC,OAAMA,EAAE6Q,YAAc7Q,EAAEkxB,YAAY,EAAC,MAC3D9zB,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAGAzxB,EAAAkzB,MAA+BlzB,EAAKqwB,QAAQxuB,QACxD1C,EAAAwxB,WAAU,SAAAwC,GAAA,IAAEviB,EAAFoQ,EAAAmS,EAAA,GAAM,YACZvlB,EAAA8kB,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,IACjCwiB,qBAAqB,EACrBzhB,KAAM,SACP9P,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAAE,MAEtCxZ,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAGAzxB,EAAAqzB,QAAiCrzB,EAAKqwB,QAAQxuB,QAC1D1C,EAAAwxB,WAAU,SAAA2C,GAAA,IAAE1iB,EAAFoQ,EAAAsS,EAAA,GAAM,YACZ1lB,EAAA8kB,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,IACjCe,KAAM,UACN4hB,gBAAiB,cAClB1xB,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAAE,MAEtCxZ,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAGAzxB,EAAAwzB,aAAsCxzB,EAAKqwB,QAAQxuB,QAC/D1C,EAAAwxB,WAAU,SAAA8C,GAAA,IAAE7iB,EAAFoQ,EAAAyS,EAAA,GAAM,YACZ7lB,EAAA8kB,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,IACjCe,KAAM,gBACP9P,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAAE,MAEtCxZ,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAGAzxB,EAAA0zB,WAAiCvb,EAAA2I,eAAc,CAC3D9gB,EAAKH,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAsxB,yBAAwB,OAE5BzwB,EAAK4vB,SAAS+D,WACf9xB,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAS,eAAAiD,EAAArzB,EAAC,SAAAszB,GAAA,IAAWH,EAAX1S,EAAA6S,EAAA,GAAkB,UAAArzB,IAAAC,KAAA,SAAAC,IAAA,IAAAozB,EAAAC,EAAA,OAAAvzB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACsB,GAAxC4yB,EAAY9zB,EAAKH,KAAKixB,QAAQ,WACtB,CAAA9vB,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS,CAAC,GAAIqxB,IAAQ,OAC9BK,YAAM30B,EAAA2xB,WAAU+C,EAAW,mBAAkB9yB,EAAAE,KAAA,EAC1B6yB,EACpBC,QAAQ,2BAA0B9wB,MAC5B,SAACnB,GAAC,MAAK,EAAE,GAAC,OAFfkyB,OAAUjzB,EAAAqB,OAAA,SAGT,CAHSrB,EAAA4B,KAGI8wB,IAAQ,wBAAA1yB,EAAAwC,OAAA,EAAA9C,EAAA,EAPJF,EAOI,GAC/B,gBAAAkb,GAAA,OAAAkY,EAAAlwB,MAAA3E,KAAA4E,UAAA,EARQ,KAQR,EACDxE,EAAAkb,KAAI,SAAA6Z,GAA0B,IAAAC,EAAAnT,EAAAkT,EAAA,GAAZR,EAAOS,EAAA,GACrB,OADYA,EAAA,GAEP9Z,IAAI,SAAC8W,GAAK,IAAAiD,EACDC,EAAUX,EAAqBzF,KACjC,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAO+e,EAAEmD,SAAS,GAE/B,OAAKD,GAAYlD,EAAE5b,OAAU4b,EAAEvc,UAC/Buc,EAAE5b,MAAQ4b,EAAE5b,OAAS8e,GAAQE,SAC7BpD,EAAEvc,SACEuc,EAAEvc,WACuC,QAD/Bwf,EACVp0B,EAAKH,KAAKmuB,YAAY,CAACqG,GAAQE,kBAAU,IAAAH,OAAA,EAAzCA,EAA2CxhB,WACxC,IAAIhF,EAAA4mB,QAAQ,CACf5jB,QAAM8e,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAC7B5jB,SAAU,KACV3Q,MAAO,iBACPsS,YAAa2e,EAAEuD,YACfjiB,aAAc,SACd8c,SAAS,EACTtf,SAAUokB,EAAO9hB,OACjBF,WAAY8e,EAAEuD,YACdhiB,MAAO,CAACye,EAAEvc,SAAUuc,EAAE5b,OACtBof,eAAgB,CACZ,KAhByC,IAmBrD,GACCpa,OAAO,SAACC,GAAI,OAAKA,CAAI,EAC9B,IAAC,EACDrb,EAAAkyB,YAAW,SAACzO,GACRzhB,eAAQ0D,MAAM+d,IAAC,EACRzK,EAAAQ,IAAG,GACd,IAAC,EACDxZ,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKgwB,SAAS9uB,MAAK,EAAM,EAAC,MACtE/B,EAAAsyB,aAAY,IAIAzxB,EAAA40B,YAAWzc,EAAA2I,eAAc,CACrC9gB,EAAK6yB,OACL7yB,EAAK+yB,SACL/yB,EAAKkzB,MACLlzB,EAAKqzB,QACLrzB,EAAK0zB,QACL1zB,EAAKwzB,eACN3xB,QACC1C,EAAAkb,KACI,SAAAwa,GAOU,IAAAC,EAAA9T,EAAA6T,EAAA,GALN9B,EAAQ+B,EAAA,GACR5B,EAAK4B,EAAA,GACLzB,EAAOyB,EAAA,GACPpB,EAAOoB,EAAA,GACPtB,EAAYsB,EAAA,GAENC,EAPAD,EAAA,GAOyBva,OAC3B,SAACya,GAAE,IAAAC,EAAA,OACE/B,EAAMjF,KACH,SAACiH,GAAG,MAAK,GAAApyB,OAAGkyB,EAAGG,cAAU,GAAAryB,OAAUoyB,EAAI9iB,GAAI,IAEP,iBAAnB,QAArB6iB,EAAAD,EAAG/C,gBAAgB,UAAE,IAAAgD,OAAA,EAArBA,EAAuBxiB,aAA8B,GAE7D,MAAO,GAAA3P,OAAAqe,EACA4T,GAAe5T,EACf4R,GAAQ5R,EACR+R,GAAK/R,EACLkS,GAAOlS,EACPuS,GAAOvS,EACPqS,IACLjY,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEphB,KAAOyM,EAAEzM,IAAI,EACpC,IAIQ5Q,EAAA0rB,qBAAoBvT,EAAA2I,eAAc,CAC9C9gB,EAAK40B,SACL50B,EAAKiwB,WACNpuB,QACC1C,EAAAkb,KAAI,SAAA+a,GAAA,IAAAC,EAAArU,EAAAoU,EAAA,GAAQE,EAAOD,EAAA,UAATA,EAAA,GACD9a,OACD,SAACxY,GAAC,IAAAwzB,EAAAC,EAAA,OACIx1B,EAAKuwB,SAAS5rB,SAAS5C,EAAEqQ,KACvBrQ,aAAa8L,EAAAge,gBACN,MAAPyJ,GAAoB,QAAbC,EAAPD,EAASpF,mBAAW,IAAAqF,OAAA,EAApBA,EAAsB5wB,SAAS,YAC5B,MAAP2wB,GAAoB,QAAbE,EAAPF,EAASpF,mBAAW,IAAAsF,OAAA,EAApBA,EAAsB7wB,SAAU5C,EAAU0Q,cAAa,EAC9D,IAIOzS,EAAAs1B,QAAUt1B,EAAKiwB,SAASpW,eAExB7Z,EAAA4Q,KAAO5Q,EAAKmwB,MAAMtW,eAElB7Z,EAAAqhB,QAAUrhB,EAAKgwB,SAASnW,eAEhC7Z,EAAAy1B,eAA2B,GAC3Bz1B,EAAA01B,gBAAevd,EAAA2I,eAAc,CACjCzhB,EAAAgG,gBACA8S,EAAAwd,UAAS,KAAW9zB,QAAK1C,EAAAy2B,WAAU,MACpC/zB,QACC1C,EAAAob,QAAO,SAAAsb,GAAG,QAAH7U,EAAA6U,EAAA,GAAG,EAAS,MACnB12B,EAAAkb,KAAG,eAAAyb,EAAAv1B,EAAC,SAAAw1B,GAAA,IAAQvK,EAARxK,EAAA+U,EAAA,GAAY,UAAAv1B,IAAAC,KAAA,SAAAwD,EAAA+xB,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1kB,EAAA2kB,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,EAAAC,EAAA1wB,GAAA,OAAA3F,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAE+C,GADrD+0B,EAA4B,QAAlBzK,EAAK/mB,YACfyxB,EAAel2B,EAAKJ,UAAUyE,IAAI,sBAGpC4xB,IACCC,EAAaY,YAAcZ,EAAaC,cACnB,QAD+BH,EACrDE,EAAa5gB,iBAAS,IAAA0gB,GAAtBA,EAAwBjyB,QAAM,CAAAI,GAAAjD,KAAA,SAExBi1B,EAAcY,KAAKC,IAAI,GAAId,EAAaC,aAAe,GAAEC,EAAAa,EAC5Cf,EAAa5gB,WAASnR,GAAAlD,KAAA,EAAAm1B,EAAA/O,IAAA,WAAAgP,EAAAD,EAAAc,KAAAC,KAAA,CAAAhzB,GAAAjD,KAAA,SAA9ByQ,SAAI0kB,EAAAh2B,MAAA8D,GAAAjD,KAAA,MACY0M,EAAA8kB,eAAc,CACjCL,gBAAc3C,EAAA4C,gBAAY5C,EAAA0H,eAAcve,KAAKuX,QAC7CoC,cAAY9C,EAAA4C,gBACR5C,EAAA2H,YACIxe,KAAKuX,OACJ8F,EAAaY,YAAc,GAAKX,IAGzCxkB,SACD3P,YAAW,QACRs0B,GACDJ,EAAaY,YAAc,GAAKX,EAAWI,GAAAU,EAXlC9yB,GAAAvB,MAYgBuB,GAAAlD,KAAA,GAAAs1B,GAAAlP,IAAA,YAAAmP,GAAAD,GAAAW,KAAAC,KAAA,CAAAhzB,GAAAjD,KAAA,SAAZ,KAEVlB,EAAKy1B,eAAe9wB,UAFjB8xB,GAAOD,GAAAn2B,OAE2B+R,KACrCqkB,GAAQa,YACRb,GAAQc,UAAQ,CAAApzB,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,uBAWnB,GAPDrC,EAAKuW,QAAQihB,cACPd,MAAOhH,EAAA+H,wBACT/H,EAAA2H,YACIZ,GAAQ7lB,KACRslB,EAAaY,YAAc,GAE/Bje,KAAKuX,QAEEkG,GAAeI,GAAO,GAAC,CAAAvyB,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,uBAC5Bs0B,aAAOjH,EAAA2H,YACTZ,GAAQ7lB,KACRslB,EAAaY,YAAc,GAEzBF,KAAclH,EAAAgI,0BAChBf,GAAKgB,UAAY,IACjB9e,KAAKuX,OAEHyG,EACO,YAATllB,EAAqB,cAAgB,UAASxN,GAAAjD,KAAA,MAC7B7B,EAAA8tB,kBACjB,CACIjtB,MAAK,QAAA4C,OAAU6O,EAAI,KAAA7O,OAAI+zB,GACvBrR,QAAO,yFAAA1iB,OACC+zB,EAAO,aAAA/zB,OACX2zB,GAAQpkB,YAAcokB,GAAQv2B,MAClC,aAAA4C,UAAY4sB,EAAAkI,QACRnB,GAAQ7lB,KACR5Q,EAAKJ,UAAU8tB,aAClB,0BAAA5qB,UAAyB4sB,EAAAkI,QACtBjB,GACA32B,EAAKJ,UAAU8tB,aAClB,0EAAA5qB,OAC0B+zB,EAAO,KAClCzJ,KAAM,CAAE5H,QAAS,cACjBqS,aAAc,OACdC,YAAa,UACbC,YAAanB,GAEjB52B,EAAKuW,SACR,QApBW,GAqBU,UArBhBpQ,GAAMhC,GAAAvB,MAqBDyqB,OAAiB,CAAAlpB,GAAAjD,KAAA,SACxBlB,SAAKy1B,eAAeuC,KAAKvB,GAAQrkB,IAAIjO,GAAA9B,OAAA,uBAGzC8D,UAAOkb,QAAQ,0BAA0Bld,GAAAjD,KAAA,MACnC0M,EAAAqqB,gBAAexB,GAAQrkB,IAAI,GAAMpQ,YAAW,QAClDmE,GAAOM,QAAQ,QAAAtC,GAAAjD,KAAA,iBAAAiD,GAAAjD,KAAA,iBAAAiD,GAAAlD,KAAA,GAAAkD,GAAAlB,GAAAkB,GAAAjB,MAAA,IAAAqzB,GAAA3T,EAAAze,GAAAlB,IAAA,QAAAkB,UAAAlD,KAAA,GAAAs1B,GAAA2B,IAAA/zB,GAAAg0B,OAAA,YAAAh0B,GAAAjD,KAAA,gBAAAiD,GAAAjD,KAAA,iBAAAiD,GAAAlD,KAAA,GAAAkD,GAAAi0B,GAAAj0B,GAAAjB,MAAA,GAAAkzB,EAAAxT,EAAAze,GAAAi0B,IAAA,QAAAj0B,UAAAlD,KAAA,GAAAm1B,EAAA8B,IAAA/zB,GAAAg0B,OAAA,6BAAAh0B,GAAAX,OAAA,EAAAS,EAAA,oCA7EfzD,EA6Ee,GAI9B,gBAAA63B,GAAA,OAAAvC,EAAApyB,MAAA3E,KAAA4E,UAAA,EAjFE,KA4FH3D,EAAK4R,aACD,YACA5R,EAAKH,KAAK2W,gBAAgB1E,UAAU,kBAChC9R,EAAK+vB,WAAW7uB,KACZlB,EAAKJ,UAAUyE,IAAI,8BACb,KACA,MACT,IAGTrE,EAAK4R,aACD,aACA5R,EAAKJ,UACAqxB,OAAO,sBACPnf,UAAU,kBAAM9R,EAAKs4B,aAAa,IAE3Ct4B,EAAK4R,aAAa,aAAc5R,EAAK01B,aAAa5jB,aAClD9R,EAAKuwB,SAAWptB,KAAKo1B,MACjBx1B,eAAe4D,QAAQ,2BAA6B,MACtD3G,CACN,CAACG,SAAA2rB,EAAAnsB,GAAAd,EAAAitB,EAAA,EAAA1rB,IAAA,cAAAC,MAEM,WACHtB,KAAK+wB,MAAM5uB,KAAK2X,KAAKuX,MACzB,GAAC,CAAAhwB,IAAA,eAAAC,MAEM,WAA8B,IAAAwD,EAAA9E,KACjC,OAAAA,KAAK42B,SAAS,OAAQ,kBAAM9xB,EAAKisB,MAAM5uB,KAAK2X,KAAKuX,MAAM,EADlCzsB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,KAEjB,kBAAME,EAAK20B,aAAa,CACnC,GAAC,CAAAp4B,IAAA,cAAAC,MAEM,WACHtB,KAAK05B,cAAc,OACvB,GAAC,CAAAr4B,IAAA,UAAAC,MAEM,SAAQuQ,GACX7R,KAAKoxB,MAAMjvB,KAAK0P,EACpB,GAAC,CAAAxQ,IAAA,aAAAC,MAEM,SAAWma,GACdzb,KAAK25B,aAAale,EAAKpI,IACvBrT,KAAK+wB,MAAM5uB,KAAK2X,KAAKuX,MACzB,GAAC,CAAAhwB,IAAA,eAAAC,MAEM,SAAa+R,GAChBrT,KAAKwxB,SAASyH,KAAK5lB,GACnBrP,eAAeC,QACX,yBACAG,KAAKC,UAAUrE,KAAKwxB,UAE5B,GAAC,CAAAnwB,IAAA,aAAAC,OAAAs4B,EAAAp4B,EAEM,SAAiB+R,GAAY,IAAArN,EAAAlG,KAAE65B,EAAAj1B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAsB,OAAAnD,IAAAC,KAAA,SAAAsE,IAAA,IAAAuwB,EAAApF,EAAA,OAAA1vB,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAClDo0B,EAAUrwB,EAAKgrB,SAAS/Y,YAAc,CAAEgZ,YAAa,KACnDA,EAAgBoF,EAAhBpF,eACYA,EAAYvrB,SAAS2N,IAASsmB,GAC9C3zB,EAAKgrB,SAAS/uB,KAAI0sB,IAAA,GACX0H,GAAO,IACVpF,YAAaA,EAAY3V,OAAO,SAACxY,GAAC,OAAKA,IAAMuQ,CAAI,MAGrDrN,EAAKgrB,SAAS/uB,KAAI0sB,IAAA,GACX0H,GAAO,IACVpF,YAAW,GAAAptB,OAAAqe,EAAM+O,GAAW,CAAE5d,OAErC,wBAAApN,EAAA1B,OAAA,EAAAuB,EAAA,EAbuDvE,EAavD,GACJ,SAAAmrB,EAAAkN,GAAA,OAAAF,EAAAj1B,MAAA3E,KAAA4E,UAAA,MAhBA,IAAAg1B,CAgBA,CAzb6B,CAAQt5B,EAAA6H,cAAYyoB,SAAzC7D,0CAAoB3kB,EAAA4U,mBAAA1U,EAAAC,iBAAAH,EAAA4U,mBAAAxU,EAAAC,qBAAAL,EAAA4U,mBAAAtU,EAAAqxB,gBAAA3xB,EAAA4U,mBAAApU,EAAA0P,WAAAlQ,EAAA4U,mBAAAtU,EAAAsxB,gBAAA,qDAApBjN,EAAoB9P,QAApB8P,EAAoB7P,UAAAC,WAFjB,SAEH4P,CAAqB,sFCtDlCkN,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,0OCFA,IAAAw6B,EAAAt8B,EAAA,OACAu8B,EAAAv8B,EAAA,iBAEMw8B,EAAiC,GAEjCC,EAAoB,IAAIH,EAAAI,WAE9B,SAAgBC,EAAqBC,GAA6B,IACtBnD,EADsBD,EAAAa,EACrCuC,GAAe,QAAAC,EAAA,WAAE,IAA/BC,EAAUrD,EAAAh2B,MACZ+4B,EAAiBnL,KAAK,SAAAjpB,GAAK,OAAAA,EAAFoN,KAAgBsnB,EAAWtnB,EAAE,IACvDgnB,EAAiBpB,KAAK0B,EAE9B,EAJA,IAAAtD,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAIC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,CANAx5B,uBAAA66B,EAQA76B,iBAG2B,eAAAi7B,EAAdC,EAAc,kBAAA/6B,EAAA,SAAA+6B,IAAA96B,EAAAC,KAAA66B,EAAA,IAAAx5B,IAAA,YAAAC,OACvBw5B,EAAAt5B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBo5B,GAAgB,IAAAC,EAAAC,EAAA,OAAAx5B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC9B44B,EAAQ,CAAA94B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASg3B,GAAiB,OAC6B,KAAhEU,EAAcX,EAAiBnL,KAAK,SAAApnB,GAAK,OAAAA,EAAFuL,KAAgB0nB,CAAQ,IACpD,CAAA94B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS03B,GAAW,OAAA/4B,SAAAE,KAAA,KACfi4B,EAAAc,gBAAeH,GAC9B93B,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,OAFZ,KAALi4B,EAAKh5B,EAAA4B,MAGF,CAAA5B,EAAAE,KAAA,SACL64B,SAAWnM,EAAA,GAAQoM,GACnBZ,EAAiBpB,KAAK+B,GAAa/4B,EAAAqB,OAAA,SAC5B03B,GAAW,eAAA/4B,EAAAqB,OAAA,SAEfg3B,GAAiB,yBAAAr4B,EAAAwC,OAAA,EAAA9C,EAAA,IAC3B,SAAAunB,EAAAvM,GAAA,OAAAme,EAAAn2B,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,uBAAAC,MAEM,SAAqBm5B,GACxBD,EAAqBC,EACzB,KArBA,IAAAK,CAqBC,CAtBsB,GAsBtBF,SAtBQC,yCAAc,gEAAdA,EAAcM,MAAA,IAAdN,CAAc,2MCpB3B,IAAAjxB,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAIAu9B,GAHAv9B,EAAA,OACAA,EAAA,OAEAA,EAAA,QAEAw9B,GADAx9B,EAAA,OACAA,EAAA,QACAyC,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,uHAqCgCuK,EATJiF,yBAAA,WASIjF,CADH,cACaA,EAAAmF,iBAAA,mBACdnF,EAD2BkF,wBAC3BlF,mFARIA,EAAA6I,qBAAA,aAAA8a,EAAAuP,YAAAC,kEAiERnzB,EAJJiF,yBAAA,WAIIjF,CADH,YAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAA0Z,GAAAvN,UAAAge,EAAAnzB,EAAAmJ,0BAAAgM,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA0P,kBAAAF,EAAAC,GAAgC,GAEzCpzB,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,eAUIjF,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAA0Z,GAAAvN,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAA2P,gBAAAF,GAAqB,GAE9BpzB,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,8DAlCQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA+tB,EAAAjoB,MAAA,YAKAnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,KAAA+tB,EAAAG,SAAA,KAoBAvzB,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,gBAAA0M,EAAA6P,UAAAh2B,SAAA41B,EAAAnoB,KALAjL,EAAA6I,qBAAA,aAAA8a,EAAA6P,UAAAh2B,SAAA41B,EAAAnoB,IAAA,8CAQUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAA6P,UAAAh2B,SAAA41B,EAAAnoB,IAAA,4FA1GVjL,EAVhBiF,yBAAA,UAUgBjF,CAJf,UAIeA,CAHiC,UAGjCA,CAFY,UAEZA,CADqC,SAEjCA,EAAAmF,iBAAA,6DAQJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA6pB,EAAA,aAYRzzB,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,uBAAAuqB,EAAAnzB,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA+P,iBAAAP,GAAyB,GAElCnzB,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,mBACdnF,EAD0BkF,wBAC1BlF,GACAA,EAAAiF,yBAAA,gBAIIjF,EAAA4I,qBAAA,uBAAAuqB,EAAAnzB,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAgQ,YAAAR,GAAoB,GAE7BnzB,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,WACdnF,EADkBkF,wBAClBlF,GACAA,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,uBAAAuqB,EAAAnzB,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAiQ,cAAAT,GAAsB,GAE/BnzB,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,aACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,gBAQIjF,EAAA4I,qBAAA,uBAAAuqB,EAAAnzB,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAAkQ,aAAAV,EAAAloB,KAAA0Y,EAAAkQ,aAAAV,EAAAloB,IAAA,GAIAjL,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,aAIIjF,EAAA4J,qBAAA,GAAAkqB,EAAA,eAyCR9zB,EADIkF,wBACJlF,2DAvHIA,EADAiX,sBAAA,eAAA0M,EAAAhC,SAAAwR,EAAAY,WACA/zB,CADoD,kBAAA2jB,EAAAhC,UAAAwR,EAAAY,YAOpC/zB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,gBAAAlX,EAAAiM,sBAAA,KAAAknB,EAAAa,gBAAA,qBAAAh0B,EAAAiM,sBAAA,KAAAknB,EAAAa,gBAAArQ,EAAA4C,aAAA,KAYCvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAhC,UAAAwR,EAAAY,YAAApQ,EAAAsQ,aAAAz2B,SAAA21B,EAAAloB,KAAAkoB,EAAAe,UAsCTl0B,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,aAAA8a,EAAAkQ,aAAAV,EAAAloB,IAAA,uCAUIjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAkQ,aAAAV,EAAAloB,IAAA,iCAURjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA8a,EAAAkQ,aAAAV,EAAAloB,IAAA,eAIqBjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAsqB,EAAAgB,QA3FzC,IAAMC,EAAuB,GAE7B78B,0BA2JoC,eAAA88B,EAAvBC,EAAuB,WAwC5B,OAAA58B,EAJJ,SAAA48B,EACY77B,EACA2W,EACA8B,GAAyB,IAAArY,EAAAjB,KAAAD,EAAAC,KAAA08B,GAFzB18B,KAAAa,YACAb,KAAAwX,UACAxX,KAAAsZ,SAtCItZ,KAAAgiB,QAKZ,GACYhiB,KAAAq8B,aAAyB,GAClCr8B,KAAA28B,eAAiC,GACjC38B,KAAA48B,UAAW,EACX58B,KAAAi8B,aAAwC,GASxCj8B,KAAA8e,SAA2B,GA4DlB9e,KAAA68B,iBAAmB,SAACC,GAA+B,OAC9D77B,EAAK87B,UAAYD,CAAE,EACR98B,KAAAg9B,kBAAoB,SAACF,GAA+B,OAC/D77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CA3ClE,EAAC,EAAAjnB,IAAA,cAAAC,MA7BG,SAAY67B,GACf,OAAOn9B,KAAKq8B,aAAaz2B,SAASu3B,EAAQ9pB,KAAO8pB,EAAQb,SACnD,sEACA,0EACV,GAAC,CAAAj7B,IAAA,YAAAiE,IAMD,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuBk3B,CAC/D,GAAC,CAAAn7B,IAAA,WAAAiE,IAED,WACI,IAAMsyB,GACD53B,KAAKgiB,QAAQnQ,MAAQiI,KAAKuX,OACK,IAA/BrxB,KAAKgiB,QAAQlQ,UAAY,IAAW,IACzC,OAAO9R,KAAKgiB,QAAQwO,WAAUG,EAAA+C,UAASkE,GAAMlC,UAAYkC,CAC7D,GAAC,CAAAv2B,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,aAAe,WACzC,GAAC,CAAAttB,IAAA,cAAAC,MAQM,SAAY87B,GAAsB,IAAAt4B,EAAA9E,KACjCo9B,EAAQpb,UACRhiB,KAAK28B,gBAAkB38B,KAAK28B,gBAAkB,IAAIrhB,IAC9C,SAACtY,GAAC,OAAK,IAAIq4B,EAAAgC,aAAYxO,IAAA,GAAM7rB,GAAC,IAAE8qB,MAAOhpB,EAAKkd,UAAiB,GAEjEhiB,KAAKsZ,OAAO3G,WAAW,CACnBd,KAAM7R,KAAKgiB,QAAQnQ,KACnBC,SAAU9R,KAAKgiB,QAAQlQ,WAGnC,GAEA,CAAAzQ,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAK28B,eAAiBW,EAClBt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAK28B,eAC5C,GAEA,CAAAt7B,IAAA,aAAAC,MAIO,SAAWA,GAAqB,IAAA4E,EAAAlG,KACnCoC,QAAQO,IAAI,YAAarB,GACzBtB,KAAK28B,gBAAkBr7B,GAAS,IAAIga,IAChC,SAACtY,GAAC,OACE,IAAIq4B,EAAAgC,aAAYxO,IAAA,GACT7rB,GAAC,IACJ8qB,MAAO5nB,EAAK8b,QACZub,MAAOv6B,EAAEu6B,QACX,EAEd,GAAC,CAAAl8B,IAAA,cAAAC,MAQM,WAAoD,IAGzBg2B,EAHyBxwB,EAAA9G,KAAxCw9B,EAAA54B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,IAAIy2B,EAAAgC,aACnCI,EAAaz9B,KAAK28B,eAAenhB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAChEqqB,EAAoC,GAAGrG,EAAAa,EACzBuF,GAAU,IAA9B,IAAApG,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAgC,KACEuF,EADlBC,EAAA1F,EAAAZ,EAAAh2B,MACai7B,OAAK,IAA9B,IAAAqB,EAAAtV,MAAAqV,EAAAC,EAAAzF,KAAAC,MAAgC,KAArB3c,EAAIkiB,EAAAr8B,MACXo8B,EAAUjiB,EAAKpI,KACVqqB,EAAUjiB,EAAKpI,KAAO,GAAKoI,GAAMkgB,UAAY,CACtD,CAAC,OAAArS,GAAAsU,EAAA/Z,EAAAyF,EAAA,SAAAsU,EAAAzE,GAAA,CACL,CAAC,OAAA7P,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,IAAMvhB,EAAM5X,KAAKwX,QAAQzC,KAAKqmB,EAAAyC,0BAA2B,CACrDp7B,KAAM,CACF85B,MAAOiB,EAAMjB,MACb7lB,QAAOmY,IAAA,GACA7uB,KAAKgiB,SAAO,IACfnQ,KAAM7R,KAAKgiB,QAAQwO,WACbG,EAAA6C,YAAWxzB,KAAKgiB,QAAQnQ,MAAM6jB,UAC9B11B,KAAKgiB,QAAQnQ,KACnBC,SAAU9R,KAAKgiB,QAAQwO,QACjBwH,KAAK8F,IAAI,KAAS99B,KAAKgiB,QAAQlQ,UAC/B9R,KAAKgiB,QAAQlQ,WAEvBisB,aAAcP,EAAMQ,aACpBC,OAAQT,EAAMU,eACdC,WAAYX,EAAMY,mBAClBV,eAGR9lB,EAAII,cAAcjF,UAAU,SAACwpB,GACzB,IAAM8B,EAASv3B,EAAK61B,eAAenhB,OAAO,SAACxY,IAAC,OAAKA,GAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAClE,GAAU,MAALkpB,KAAOv3B,OAAe,KACHyyB,EADGD,EAAAU,EACRqE,GAAK,QAAA7B,EAAA,WAAE,IAAA4D,GAAf7iB,EAAIgc,EAAAn2B,MACX,GAAwB,QAAxBg9B,GAAK7iB,EAAazE,cAAM,IAAAsnB,IAAnBA,GAAqBt5B,OAAQ,CAC9B,IAAMgO,EAAO,GACbyI,EAAK8iB,SAAW,IAAIC,MAAM/iB,EAAKkgB,UAC1B8C,KAAK,GACLnjB,IAAI,SAACtY,IAGF,QAFIqQ,GAAK,KAGHA,IAAML,EAAKpN,SAASyN,MAFd,EAGCoI,EAAazE,OAAOhS,QAE7BqO,GAAMoI,EAAazE,UACf1W,EAAAo+B,WAAWjjB,EAAazE,OAAOhS,SACjCqO,GAENL,SAAKimB,KAAK5lB,IACHA,EACX,EACR,CACJ,EApBA,IAAAmkB,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAAsC,GAoBC,OAAApR,IAAAkO,EAAA3T,EAAAyF,GAAA,SAAAkO,EAAA2B,GAAA,CACD,IAmBkCwF,GAnB5B/G,EAAO,IAAI9d,KAAKhT,EAAKkb,QAAQnQ,MAC7B+sB,EAAY,IAAIvD,EAAAgC,aAAYxO,IAAA,GAC3B2O,GAAK,IACRlB,UAAU,EACVuC,SACIrB,EAAMqB,UACNrB,EAAMjB,MAAMrN,KACR,SAAClsB,IAAC,IAAA87B,GAAA,OACoC,QAAlCA,GAAAvC,EAAMrN,KAAK,SAAC6P,GAAE,OAAKA,EAAG1rB,KAAOrQ,GAAEqQ,EAAE,UAAC,IAAAyrB,QAAA,EAAlCA,GAAoCnD,YACpC34B,GAAE24B,QAAQ,GAEtBY,MAAOA,EAAMjhB,IAAI,SAACtY,IAAC,OAAA6rB,EAAA,GAAW7rB,GAAC,GAC/B8qB,MAAOhnB,EAAKkb,QACZkc,eAAgBtmB,EAAIM,kBAAkB+lB,OACtCD,aAAcpmB,EAAIM,kBAAkB6lB,WAC9BnG,EAAKoH,WAAapH,EAAKqH,aAAe,GACtC,KACNb,mBAAoBxmB,EAAIM,kBAAkBimB,YAAc,KACzDe,EAAAhH,EACgB0G,EAAUrC,OAAK,QAkBjC4C,GAlBiCC,GAAA,WAAE,IAAzB3jB,GAAIkjB,GAAAr9B,MAQX,GAPc+8B,EAAOgB,OACjB,SAACC,EAAGC,IAAC,IAAAC,GAAA,OACAF,IACwC,QAArCE,GAAAD,GAAEhD,MAAMrN,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOoI,GAAKpI,EAAE,UAAC,IAAAmsB,QAAA,EAArCA,GAAuC7D,WACvC,EAAC,EACT,GAEQlgB,GAAKkgB,SAAYlgB,GAAazE,OAAOhS,OAC7C,SAAA1E,EAAAqU,aAAW,gDAAA5Q,OACyC0X,GAAKlI,KAAI,kGAEzDtO,OACAA,EACA,CAAE6M,SAAU,MACd,CAAA4Q,OAAA,EAGV,EAlBA,IAAAwc,EAAA5W,MAAAqW,GAAAO,EAAA/G,KAAAC,MAAA,GAAA+G,GAAAC,KAAA,OAAAD,GAAAzc,CAkBC,OAAA4G,IAAA4V,EAAArb,EAAAyF,GAAA,SAAA4V,EAAA/F,GAAA,CACGyF,EAAUa,YAAc,GAC5B34B,EAAK44B,SAAQ,GAAA37B,OAAAqe,EAAKic,GAAM,CAAEO,IAAU,CACxC,EACJ,GAAC,CAAAv9B,IAAA,gBAAAC,MAEM,SAAc67B,GACjB,IAAMwC,EAAe3/B,KAAK28B,eAAenhB,OACrC,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO8pB,EAAQ9pB,EAAE,GAE9BrT,KAAK0/B,SAASC,EAClB,GAAC,CAAAt+B,IAAA,mBAAAC,MAEM,SAAiBk8B,GACpB,IAAMoB,EAAY,IAAIvD,EAAAgC,aAAYxO,IAAA,GAC3B2O,GAAK,IACRnqB,GAAE,SAAAtP,UAAWzD,EAAAs/B,cAAa,OAE9B5/B,KAAK0/B,SAAQ,GAAA37B,OAAAqe,EAAKpiB,KAAK28B,gBAAc,CAAEiC,IAC3C,GAAC,CAAAv9B,IAAA,oBAAAC,MAEM,SAAkBk8B,EAAqB/hB,GAC1C,IAAMmjB,EAAY,IAAIvD,EAAAgC,aAAYxO,IAAA,GAC3B2O,GAAK,IACRjB,MAAOiB,EAAMjB,MAAM/gB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,MAE/CssB,EAAe3/B,KAAK28B,eAAenhB,OACrC,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAGxBrT,KAAK0/B,SADLd,EAAUrC,MAAMv3B,OAAS,EACZ,GAAAjB,OAAAqe,EAAKud,GAAY,CAAEf,IACfe,EACzB,GAAC,CAAAt+B,IAAA,kBAAAC,MAEM,SAAgBu+B,GACnB,IAAMC,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASi6B,EAAMxsB,IAEvCrT,KAAKa,UAAUm/B,gBAAgB,mBAD/BD,EACiD,GAAAh8B,OAAAqe,EAC1C0d,GAAQ,CACXD,EAAMxsB,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAM68B,EAAMxsB,EAAE,GAGjD,IAAC,CA7N+B,GA6N/BopB,SA7NQC,0CAAuBt0B,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA8P,WAAAlQ,EAAAC,4BAAAK,EAAAu3B,mBAAA,kDAAvBvD,EAAuB5zB,UAAA,uBAAAqW,OAAA,CAAA6C,QAAA,UAAAqa,aAAA,gBAAAtzB,SAAA,CAAAX,EAAAknB,6BAVrB,CACP,CACI/iB,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAM1D,CAAuB,GACrD2D,OAAO,KAEdj4B,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,o9CAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IArJGhB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAuuB,EAAA,eA6HJn4B,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,0BAAS3H,EAAA0yB,aAAa,GAGlB3zB,EADJiF,yBAAA,UACIjF,CADoD,cAC1CA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,eAEdnF,EAFuBkF,wBAEvBlF,YAxI4BA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAszB,gBAiIxBv0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAA5H,EAAAuzB,gHAkBI,CAACt8B,EAAAkY,mCAEJkkB,CAAuB,0JC7KpC,IAAAp8B,EAAAzC,EAAA,OAEA8yB,EAAA9yB,EAAA,OAiBA,SAAS2iC,EAAcrD,GAAqB,IAAAsD,EAAAC,EACpC7uB,GAAoB,QAAb4uB,EAAAtD,EAAQrP,aAAK,IAAA2S,OAAA,EAAbA,EAAe5uB,OAASsrB,EAAgBwD,MACnD,OAAIxD,EAAQa,eACRnsB,KAAO8e,EAAAzV,KAAIrJ,EAAM,CACb+uB,MAAO5I,KAAK6I,MAAM1D,EAAQa,cAC1B8C,QAAU3D,EAAQa,aAAe,EAAK,KACvCtI,YAEHyH,EAAQiB,mBAAqB,GAAkB,QAAjBsC,EAAIvD,EAAQrP,aAAK,IAAA4S,GAAbA,EAAelQ,WACjD3e,KAAO8e,EAAAoQ,YAAQpQ,EAAA6C,YAAW3hB,GAAOsrB,EAAQiB,oBAAoB1I,YAAO,EAEjE/E,EAAA2H,YAAWzmB,EAAMsrB,EAAQe,gBAAgBxI,SACpD,CAEA/1B,eAAyB,WAuFpB,OAAAG,EArCD,SAAAu9B,IAAiC,IAAA2D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApgC,EAAAjB,KAArByC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAY,GAAS7E,EAAAC,KAAAq9B,GApB1Br9B,KAAAs8B,UAAW,EACXt8B,KAAA6+B,UAAW,EAIV7+B,KAAA2gC,SAAQhQ,EAAA0H,eAAcve,KAAKuX,OAAOqE,UAgBtC11B,KAAKqT,GAAK5Q,EAAK4Q,IAAE,SAAAtP,UAAazD,EAAAo+B,WAAU,QAAW,MACnD1+B,KAAKshC,SAAW7+B,EAAK6+B,UAAY7+B,EAAKoR,WAAa,GACnD7T,KAAKu8B,MACD95B,EAAK85B,QACS,QADJyE,EACVv+B,EAAK8+B,iBAAS,IAAAP,OAAA,EAAdA,EAAgB1lB,IAAI,SAACtY,GAAC,MAAM,CAAEqQ,GAAIrQ,EAAG24B,SAAU,EAAG,KAClD,GACJ37B,KAAKy/B,WAAaz/B,KAAKu8B,MAAM8C,OACzB,SAACmC,EAAQ/lB,GAAI,OAAK+lB,EAAS/lB,EAAKkgB,QAAQ,EACxC,GAEJ37B,KAAKyhC,QACDh/B,EAAI,GAAAsB,OAAI/D,KAAKshC,SAAQ,aACrB7+B,EAAKi/B,SACJj/B,EAAKmzB,gBAAkB,IAAE,GAAA7xB,OAAK/D,KAAKshC,SAAQ,cACzB,QADmCL,EACtDx+B,EAAKmzB,sBAAc,IAAAqL,OAAA,EAAnBA,EAAqBS,SACrB,aACJ1hC,KAAK8tB,MAAQrrB,EAAKqrB,OAASrrB,GAAQ,KACnC,IAAMi1B,EAAoB,QAAbwJ,EAAGlhC,KAAK8tB,aAAK,IAAAoT,GAAiB,QAAjBA,EAAVA,EAAYhO,uBAAe,IAAAgO,OAAA,EAA3BA,EAA6BhS,KACzC,SAAClsB,GAAC,OAAKA,EAAE4yB,eAAe+L,aAAe1gC,EAAKoS,EAAE,GAElDrT,KAAK4hC,SAAWlK,GAAWj1B,EAAKi1B,SAAW,KAC3C13B,KAAK6+B,WAAap8B,EAAKo8B,WAAanH,EACpC13B,KAAK6hC,MAAQp/B,EAAKo/B,OAASp/B,EAAKgR,aAAe,GAC/CzT,KAAKg+B,aACDv7B,EAAKu7B,eAAmC,QAAvBmD,EAAI1+B,EAAKmzB,sBAAc,IAAAuL,OAAA,EAAnBA,EAAqBnD,oBAAgB/4B,EAC9DjF,KAAKk+B,eACDz7B,EAAKy7B,iBAAqC,QAAvBkD,EAAI3+B,EAAKmzB,sBAAc,IAAAwL,OAAA,EAAnBA,EAAqBlD,iBAAkB,EAClEl+B,KAAKo+B,mBACD37B,EAAK27B,qBACc,QADIiD,EACvB5+B,EAAKmzB,sBAAc,IAAAyL,OAAA,EAAnBA,EAAqBjD,qBACrB,EACJp+B,KAAKo8B,gBAAkBoE,EAAcxgC,MACrCA,KAAKs8B,WAAa75B,EAAK65B,SACvBt8B,KAAK8hC,OAAM,GAAA/9B,OAAM/D,KAAKo8B,gBAAe,KAAAr4B,OAAI/D,KAAKu8B,MACzCjhB,IAAI,SAACtY,GAAC,SAAAe,OAAQf,EAAEqQ,GAAE,KAAAtP,OAAIf,EAAE24B,SAAQ,GAChC9mB,KAAK,KACd,EAAC,EAAAxT,IAAA,aAAAiE,IAlDD,WACI,OAAOk7B,EAAcxgC,KACzB,GAAC,CAAAqB,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKyhC,OAChB,EAACvmB,IAED,SAAkB5Z,GACdtB,KAAKyhC,QAAUngC,EACftB,KAAI,GAAA+D,OAAI/D,KAAKshC,SAAQ,YAAahgC,CACtC,GAAC,CAAAD,IAAA,SAAAC,MAyCM,WACH,IAAMygC,EAAIlT,EAAA,GAAQ7uB,MAClB,cAAO+hC,EAAKjU,aACLiU,EAAKlD,gBACLkD,EAAKN,eACLM,EAAKpB,aACLoB,EAAK3F,uBACL2F,EAAK5F,WACZ4F,EAAKxF,MAAQwF,EAAKxF,MAAMjhB,IAAI,SAACtY,GAAC,MAAM,CAChCqQ,GAAIrQ,EAAEqQ,GACN2uB,YAAah/B,EAAEg/B,YACfrG,SAAU34B,EAAE24B,SACZpoB,KAAMvQ,EAAEuQ,KACRgrB,SAAUv7B,EAAEu7B,SACf,GACMwD,CACX,IAAC,CAzGoB,+ICjCzB,IAAAn4B,EAAA/L,EAAA,SAOAA,EAAA,+IAKQuK,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eACIjF,EAAAkB,oBAAA,sBAIAlB,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAGrB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2wB,UAAA/iB,OAAgB,GAGzB9W,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,KAIYA,EAHZiF,yBAAA,UAGYjF,CAH0C,eAG1CA,CAFuD,SAEvDA,CADC,WAEGA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAORnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,kBACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAmK,KAAAkgB,SAAAxqB,KAAAG,EAAAmK,KAAAkgB,SAAAxqB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA4wB,YAAAhjB,KAAA/N,GAAwB,GAQjD/I,EADKkF,wBACLlF,GACAA,EAAAkB,oBAAA,SAEIlB,EADJiF,yBAAA,gBACIjF,CAD+B,YACCA,EAAAmF,iBAAA,cAAOnF,EAAAkF,yBAEnClF,EADJiF,yBAAA,YACIjF,CADqC,QAClCA,EAAAmF,iBAAA,IAGfnF,EAHyDkF,wBAGzDlF,OAEIA,EADJiF,yBAAA,YACIjF,CADuD,gBAOnDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAD,SAAA6wB,QAAA7wB,EAAA6wB,OAAA/5B,EAAAoJ,sBAA2BF,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAAyB,GAGhD/5B,EADJiF,yBAAA,YACIjF,CAD0C,kBAEtCA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAMhBnF,EAHYkF,wBAGZlF,qFAhFQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAAK,EAAAmK,KAAA2O,QAgBAhiB,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,oBAAA/N,EAAA+wB,IACAj6B,CAD+B,WAAAkJ,EAAA+wB,KAM3Bj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA+wB,IAAA,kCAQIj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAmK,KAAAlI,KAAA,KAGAnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAmK,KAAA6mB,UAAAhxB,EAAAmK,KAAA6mB,UAAA,MAAAhxB,EAAAmK,KAAAzE,OAAA,KAAA1F,EAAAmK,KAAAzE,OAAAhS,SAAA,iBASJoD,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAmK,KAAAkgB,UAGAvzB,EADA6I,qBAAA,QACA7I,CADS,aAAAkJ,EAAAmK,KAAA6mB,UAAAhxB,EAAAmK,KAAA6mB,UAAA,MAAAhxB,EAAAmK,KAAAzE,OAAA,KAAA1F,EAAAmK,KAAAzE,OAAAhS,SAAA,GAYNoD,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAmK,KAAAhI,aAAA,kBASPrL,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,UAAA/N,EAAA6wB,QAMQ/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6wB,OAAA,oBAGA/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6wB,OAAA,iEAaZ/5B,EAJJiF,yBAAA,WAIIjF,CADH,UAEOA,EAAAmF,iBAAA,4CAERnF,EADIkF,wBACJlF,IAhGZzI,wBAgHkC,eAAA4iC,EAArBC,EAAqB,WAmBjC,OAAA1iC,EAnID,SAAA0iC,IAAAziC,EAAAC,KAAAwiC,GAkHoBxiC,KAAAmiC,QAAkB,EAClBniC,KAAAqiC,KAAe,EAEdriC,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAAoiC,aAAe,IAAIx4B,EAAAoV,aACnBhf,KAAAkiC,YAAc,IAAIt4B,EAAAoV,aAClBhf,KAAA0H,MAAQ,IAAIkC,EAAAoV,cAWhC,EAAA3d,IAAA,WAAAC,MATU,WACCtB,KAAKyb,OAASzb,KAAKyb,KAAKkgB,WAAU37B,KAAKyb,KAAKkgB,SAAW,EAC/D,GAAC,CAAAt6B,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQ3hB,MAAQzb,KAAKyb,OAChBzb,KAAKyb,KAAKkgB,WAAU37B,KAAKyb,KAAKkgB,SAAW,GAEtD,IAAC,CAlB6B,GAkB7B4G,SAlBQC,yCAAqB,kDAArBA,EAAqB15B,UAAA,oBAAAqW,OAAA,CAAA1D,KAAA,OAAA0mB,OAAA,SAAAE,IAAA,OAAAjjB,QAAA,CAAA6iB,UAAA,YAAAG,aAAA,eAAAF,YAAA,cAAAx6B,MAAA,SAAAqB,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,i6BAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,GAxB1BhB,EArFA4J,qBAAA,EAAAywB,EAAA,uBAqFAr6B,CArF6C,EAAAs6B,EAAA,yBAAAt6B,EAAA2c,wEAAlB3c,EAAZ6I,qBAAA,OAAA5H,EAAAoS,KAAYrT,CAAA,WAAAu6B,uUA6GtBH,CAAqB,qKCvHlC7iC,+BAKyC,eAAAijC,EAA5BC,EAA4B/iC,EAAA,SAAA+iC,IAAA9iC,EAAAC,KAAA6iC,EAAA,GAAAD,SAA5BC,yCAA4B,kDAA5BA,EAA4B/5B,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAA5Bw5B,CAA4B,2MCPzC,IAAAj5B,EAAA/L,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QACA8yB,EAAA9yB,EAAA,2KAsBQuK,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,mDAmBgBlF,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAA6xB,EAAAzvB,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAyuB,EAAAxhC,MAAA,iFAdhB8G,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,WAAOjF,EAAAmF,iBAAA,mBAAanF,EAAAkF,yBAKhBlF,EAJJiF,yBAAA,sBAIIjF,CADH,mBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAA6sB,WAAAhtB,KAAAG,EAAA6sB,WAAAhtB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,EAAAyxB,iBAAA5gC,KAAAgP,GAA6B,GAE9C/I,EAAA4J,qBAAA,EAAAgxB,EAAA,qBAOR56B,EADIkF,wBACJlF,kFAVQA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAA6sB,YAIoB/1B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA2xB,2EAlBhC76B,EADJiF,yBAAA,UACIjF,CAD4C,qBAExCA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA4xB,QAAA/xB,KAAAG,EAAA4xB,QAAA/xB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA6xB,cAAAhhC,KAAAgP,GAA0B,GAG3C/I,EAAAmF,iBAAA,kBACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAoxB,EAAA,uBAmBAh7B,EAAAiF,yBAAA,WAAOjF,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBACrBlF,EAAAiF,yBAAA,uDACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA2sB,OAAA9sB,KAAAG,EAAA2sB,OAAA9sB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA+xB,aAAAlhC,KAAAgP,GAAyB,GASlD/I,EADKkF,wBACLlF,+CArCQA,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAA4xB,SAEA96B,EAAA6I,qBAAA,aAAAK,EAAAgyB,eAIWl7B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2xB,YAAAj+B,OAAA,GAqBXoD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAA2sB,QAQA71B,EANA6I,qBAAA,OAAAK,EAAA6sB,WAAA,EAAA7sB,EAAAiyB,cAAA,OAAA5iB,EAAAvY,EAAAwN,sBAAA,IAAAtE,EAAA0Q,UAAA,KAAArB,EAAA9O,KAMAzJ,CAJC,OAAAkJ,EAAAkyB,cAIDp7B,CAHsB,MAAAkJ,EAAAmyB,WAGtBr7B,CAFkB,MAAAkJ,EAAAoyB,WAAA,EAElBt7B,CADsB,WAAAkJ,EAAAqyB,iCAI9Bv7B,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,uFAMIlF,EAAAiF,yBAAA,mDAIIjF,EAAA4I,qBAAA,+BAAA4yB,EAAAx7B,EAAAgJ,wBAAA2E,GAAAwH,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAuyB,eAAAD,EAAAvwB,IAAuB,GAExCjL,EAAAmF,iBAAA,GACJnF,EAAAkF,iFAJIlF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwyB,YAAAF,EAAAvwB,sCAGAjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAm2B,EAAArwB,KAAA,MAvEhB5T,wBAqFmC,eAAAokC,EAAtBC,EAAsB,SAAApjC,GA0D/B,SAAAojC,EACY1qB,EACAzY,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAgkC,IAElC/iC,EAAAC,EAAAlB,KAAAgkC,IAHQ1qB,SACArY,EAAAJ,YA3DII,EAAAgjC,QAAS,EAEThjC,EAAAiiC,SAAU,EACTjiC,EAAAkiC,cAAgB,IAAIv5B,EAAAoV,aACrB/d,EAAAg9B,OAAS,EACRh9B,EAAAoiC,aAAe,IAAIz5B,EAAAoV,aACpB/d,EAAAk9B,WAAa,EACZl9B,EAAA8hC,iBAAmB,IAAIn5B,EAAAoV,aAEhC/d,EAAAijC,YAAc,EACdjjC,EAAAkjC,YAAc,GAENljC,EAAAmjC,aAAenjC,EAAKqY,OAAO2qB,OAC3BhjC,EAAA6iC,SAAW7iC,EAAKqY,OAAOwqB,SACvB7iC,EAAAojC,WAAapjC,EAAKqY,OAAOgrB,cACzBrjC,EAAA+gB,QAAU/gB,EAAKqY,OAAO0I,QAEtB/gB,EAAAqiC,cACZ,6HAkCGriC,EAAAgiC,YAAc,GAELhiC,EAAAsjC,UAAY,SAACjc,GAAC,OAAKrnB,EAAKqY,OAAOirB,UAAUjc,EAAE,EAC3CrnB,EAAA4iC,eAAiB,SAACtE,GAAC,OAAKt+B,EAAKqY,OAAOuqB,eAAetE,EAAE,EAACt+B,CAOtE,CAACG,SAAA4iC,EAAApjC,GAAAd,EAAAkkC,EAAA,EAAA3iC,IAAA,gBAAAiE,IA1CD,WACI,SAAOqrB,EAAA6C,eACH7C,EAAAoQ,SAAQ/gC,KAAKsZ,OAAOkrB,aAAa3yB,KAAM7R,KAAKm+B,aAC9CzI,SACN,GAAC,CAAAr0B,IAAA,aAAAiE,IAED,WACI,OAAOtF,KAAKm+B,WAAa,EAAI,EAAIn+B,KAAKkkC,WAC1C,GAAC,CAAA7iC,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,6BAA+B,CAC7D,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,IAAMse,EAAMoU,KAAKC,OACbtH,EAAA+C,aACI/C,EAAAoQ,SAAQ/gC,KAAKsZ,OAAOkrB,aAAa3yB,KAAM7R,KAAKm+B,aAC9CzI,WAAO,EACT/E,EAAA2H,YACIt4B,KAAKsZ,OAAOkrB,aAAa3yB,KACzB7R,KAAKsZ,OAAOkrB,aAAa1yB,UAC3B4jB,WAEAiC,KAAOhH,EAAA+H,qBAAoB9U,EAAK5jB,KAAKsZ,OAAOkrB,aAAa3yB,MAC/D,OAAOmmB,KAAKC,IAAIN,EAAMK,KAAKC,IAAI,KAAaj4B,KAAKmkC,aACrD,GAAC,CAAA9iC,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,WAAAC,MAcM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAKkkC,YAAclM,KAAK8F,IACpB99B,KAAKa,UAAUyE,IAAI,yBACnB,GAEJtF,KAAK6S,aACD,UACA7S,KAAKsZ,OAAO0I,QAAQjP,UAAU,WAC1BjO,EAAKq/B,YAAcnM,KAAK8F,IACpB,IACCh5B,EAAKwU,OAAOkrB,aAAa1yB,UAAY,IAClChN,EAAKjE,UAAUyE,IAAI,0BAE3BR,EAAK2/B,mBACT,IAEJzkC,KAAKykC,mBACT,GAAC,CAAApjC,IAAA,oBAAAC,MAEO,WACJ,IAAAojC,EAA2B1kC,KAAKsZ,OAAOkrB,aAA/B3yB,EAAI6yB,EAAJ7yB,KAAMC,EAAQ4yB,EAAR5yB,SACd,GAAIA,GAAY,KAAS,OAAQ9R,KAAKijC,YAAc,GAKpD,QAJI0B,KAAMhU,EAAA6C,YAAW3hB,GACjB+yB,EAAQ,EACNhhB,KAAM+M,EAAA+C,aAAS/C,EAAA2H,YAAWzmB,EAAMC,IAAW4jB,UAC3C1T,EAAU,GACT2iB,EAAIjP,WAAa9R,GACpB5B,EAAQiX,KAAK,CAAE5lB,GAAIuxB,EAAOtjC,MAAOqjC,EAAIjP,YACrCiP,KAAMhU,EAAAoQ,SAAQ4D,EAAK,GACnBC,IAEJ5kC,KAAKijC,YAAcjhB,CACvB,IAAC,CAjG8B,CAAQ1hB,EAAA6H,cAAY47B,SAA1CC,0CAAqB57B,EAAAC,4BAAAC,EAAA23B,mBAAA73B,EAAAC,4BAAAG,EAAAD,iBAAA,kDAArBy7B,EAAqBl7B,UAAA,oBAAAqW,OAAA,CAAA8kB,OAAA,SAAAf,QAAA,UAAAjF,OAAA,SAAAE,WAAA,cAAA/e,QAAA,CAAA+jB,cAAA,gBAAAE,aAAA,eAAAN,iBAAA,oBAAAh6B,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAvE6CoiB,UAAAC,MAAAC,EAAA,yFA2CAF,UAAAG,MAAAD,EAAA,23BApD/DtnB,EAFRiF,yBAAA,UAEQjF,CAFgD,qBAEhDA,CADqD,gBACjBA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAC1ClF,EAAAiF,yBAAA,2CAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAk7B,UAAApzB,EAAiB,GAI9C/I,EAPQkF,wBAORlF,KA4CAA,EA3CA4J,qBAAA,EAAA6yB,EAAA,WA2CAz8B,CA3CuE,EAAA08B,EAAA,aA2CvE18B,CAxCgD,EAAA28B,EAAA,YA2ChD38B,EAAAiF,yBAAA,WAKIjF,EAAA4J,qBAAA,GAAAgzB,EAAA,sDAQJ58B,EAAAkF,gCAtE4BlF,EAAAiX,sBAAA,aAAAhW,EAAA46B,QAKhB77B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAA+6B,eAMuCh8B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAGlB77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAwCkB77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAK/C77B,EAAAoF,sBACApF,EADAiX,sBAAA,YAAAhW,EAAA46B,OACA77B,CAD0B,WAAAiB,EAAA46B,QAIL77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAg7B,6ZAmBpBL,CAAsB,kLChGnC,IAAAp6B,EAAA/L,EAAA,MASAub,GAFAvb,EAAA,OAEAA,EAAA,QACAuC,EAAAvC,EAAA,2GAiCoCuK,EAJJiF,yBAAA,WAIIjF,CADH,aAEOA,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,qDAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAw3B,EAAAtJ,UAAA,gCAGRvzB,EAAAkB,oBAAA,6DAOIlB,EAAA6I,qBAAA,SAAAg0B,EAAA7a,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEA1BZlB,EANJiF,yBAAA,UAMIjF,CADH,eAIOA,EAAA4I,qBAAA,uBAAAi0B,EAAA78B,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAmZ,YAAAD,GAAkB,GAE3B78B,EAAAiF,yBAAA,YAoBIjF,EAjBA4J,qBAAA,EAAAmzB,EAAA,aAiBA/8B,CAdC,EAAAg9B,EAAA,aAcDh9B,CADE,EAAAi9B,EAAA,yBAAAj9B,EAAA2c,kCAON3c,EAAAkF,yBAKQlF,EAJRiF,yBAAA,WAIQjF,CAJgC,WAIhCA,CADH,SACQA,EAAAmF,iBAAA,IAA2BnF,EAAAkF,yBAChClF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,QAEOA,EAAAmF,iBAAA,IAShBnF,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAi0B,EAAA78B,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAkW,UAAA/iB,KAAA+lB,GAAqB,GAE9B78B,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,2FA3DiBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAjN,SAAAlZ,SAAAq/B,EAAA5xB,KAQAjL,EAAAoF,sBAGbpF,EAHa6I,qBAAA,aAAAg0B,EAAA7a,OAAA,KAAA6a,EAAA7a,OAAAplB,OAGboD,CAAA,WAAAk9B,GAeiBl9B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA8wB,EAAA1xB,MAAA,SAEDnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAw3B,EAAAnB,SAAA,KAOA17B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAw3B,EAAA3C,YAAA,MAAA2C,EAAAjuB,OAAA,KAAAiuB,EAAAjuB,OAAAhS,SAAA,mBAeZoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,YAAA0M,EAAAwZ,YAAAN,EAAA5xB,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAwZ,YAAAN,EAAA5xB,IAAA,wDAzEtBjL,EAAAiF,yBAAA,UAIIjF,EAAA4J,qBAAA,EAAAwzB,EAAA,2CA4EJp9B,EAAAkF,kEA1E0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAA/U,mCAP9B5O,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAyzB,EAAA,qJAEKr9B,EAAAoF,sBAAgCpF,EAAhC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAA/U,SAAA,KAAAgH,EAAAhZ,OAAgCoD,CAAA,WAAAs9B,0BAsFrCt9B,EAJJiF,yBAAA,WAIIjF,CADH,UAEOA,EAAAmF,iBAAA,4DAERnF,EADIkF,wBACJlF,0BAGAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAsBjF,EAAAmF,iBAAA,iCAC1BnF,EADqDkF,wBACrDlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBA3G7BtR,qBAyH+B,eAAAgmC,EAAlBC,EAAkB,WAwC4B,OAAA9lC,EAAvD,SAAA8lC,EAAoBC,GAA+B,IAAA5kC,EAAAjB,KAAAD,EAAAC,KAAA4lC,GAA/B5lC,KAAA6lC,eAvCJ7lC,KAAA8e,SAAmB,GACnB9e,KAAA47B,UAAsB,GACtB57B,KAAA8lC,eAA+B,GAC/B9lC,KAAA09B,UAAoC,GACnC19B,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aAExBhf,KAAAgmC,iBAAmB,IAAI5sB,EAAAuB,gBAAwC,IAEvD3a,KAAAimC,OAAS,IAAI7sB,EAAAuB,gBAAwC,IAErD3a,KAAAsiB,QAAUtiB,KAAK6lC,aAAavjB,QAC5BtiB,KAAAgX,UAASoC,EAAA2I,eAAc,CACnC/hB,KAAKimC,OACLjmC,KAAK6lC,aAAaK,gBAClBlmC,KAAKgmC,mBACNljC,QACC1C,EAAAkb,KAAI,SAAArV,GAAgC,IACPqxB,EADOxvB,EAAAma,EAAAhc,EAAA,GAA9BggC,EAAMn+B,EAAA,GAAEkP,EAAMlP,EAAA,GAAE41B,EAAS51B,EAAA,GAAAuvB,EAAAa,EACRlhB,GAAM,QAAA0jB,EAAA,WAAE,IAAhBjf,EAAI6b,EAAAh2B,MACXma,EAAKkgB,SAAWsK,EAAOxqB,EAAKpI,KAAO,EACnC,IAIsCirB,EAJhCxf,EAAW7d,EAAK6kC,eAAe5W,KACjC,SAACkD,GAAC,OAAKA,EAAE/e,KAAOoI,EAAKpI,EAAE,GAEvByL,IAAUA,EAAS9H,OAASyE,EAAKzE,aACV/R,IAAvBy4B,EAAUjiB,EAAKpI,MACdoI,EAAa6mB,UAAYtK,KAAK8F,MACf,QAAXQ,EAAA7iB,EAAKzE,cAAM,IAAAsnB,OAAA,EAAXA,EAAat5B,SAAU,GAAK04B,EAAUjiB,EAAKpI,IAC5C,GAGZ,EAZA,IAAAgkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAYC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOniB,EAAOwE,OACV,SAACxY,GAAM,IAAAmjC,EAAA,OACa,MAAfnjC,EAAEs/B,WAAqBt/B,EAAEs/B,UAAY,GACtB,MAAft/B,EAAEs/B,YAA6B,QAAR6D,EAAAnjC,EAAEgU,cAAM,IAAAmvB,OAAA,EAARA,EAAUnhC,QAAS,CAAE,EAEzD,GAGkD,EAAC,EAAA3D,IAAA,cAAAC,MAEhD,SAAY87B,GAAsB,IAAAgJ,EACrC,GAAIhJ,EAAQ0I,gBAAqC,QAAvBM,EAAIpmC,KAAK8lC,sBAAc,IAAAM,GAAnBA,EAAqBphC,OAAQ,CACvD,IACsCyyB,EADhCwO,EAAS,GAAGzO,EAAAU,EACCl4B,KAAK8lC,gBAAc,IAAtC,IAAAtO,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAwC,KAA7B3c,EAAIgc,EAAAn2B,MACX2kC,EAAOxqB,EAAKpI,IAAMoI,EAAKkgB,QAC3B,CAAC,OAAArS,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACDn5B,KAAKimC,OAAO9jC,KAAK8jC,EACrB,CACI7I,EAAQM,WACR19B,KAAKgmC,iBAAiB7jC,KAAKnC,KAAK09B,UAExC,GAAC,CAAAr8B,IAAA,cAAAC,MAEM,SAAY4P,GACf,OAAOlR,KAAK47B,UAAUh2B,SAASsL,EACnC,GAAC,CAAA7P,IAAA,cAAAC,MAEM,SAAYu+B,GACf7/B,KAAK+lC,SAAS7mB,KAAK2gB,EACvB,IAAC,CA7D0B,GA6D1B8F,SA7DQC,0CAAkBx9B,EAAAC,4BAAAC,EAAA23B,mBAAA,kDAAlB2F,EAAkB98B,UAAA,iBAAAqW,OAAA,CAAAL,SAAA,WAAA8c,UAAA,YAAAkK,eAAA,iBAAApI,UAAA,aAAAte,QAAA,CAAA6iB,UAAA,YAAA8D,SAAA,YAAAh9B,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,ksDAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IArHnBhB,EADJiF,yBAAA,UACIjF,CADsD,UAC3BA,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,iCACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAq0B,EAAA,oDAmFJj+B,EAAAkF,yBAWAlF,EAVA4J,qBAAA,EAAAs0B,EAAA,yBAAAl+B,EAAA2c,iCAUA3c,CAV0B,GAAAm+B,EAAA,yBAAAn+B,EAAA2c,4EAtFlB3c,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAsQ,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAA2N,SAAA,KAAA+G,EAAA/Y,SAAA,uBAEWoD,EAAAoF,oBAAA,GAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAAo+B,mQAiHxCZ,CAAkB,uKCpI/B,IAAA93B,EAAAjQ,EAAA,UACAA,EAAA,OAEAA,EAAA,2LAgEgBuK,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAm1B,UAAqB,KAAI,GAEzBr+B,EAAAmF,iBAAA,YACJnF,EAAAkF,0BAvEhB,IAAMkvB,EAAuB,GAE7B78B,4BAyHsC,eAAA+mC,EAAzB7I,EAAyB,WA+CjC,OAAA/9B,EAvBD,SAAA+9B,EACYh9B,EACAyY,EAEAqtB,GAOP,IAAAC,EAAA7mC,EAAAC,KAAA69B,GAVO79B,KAAAa,YACAb,KAAAsZ,SAEAtZ,KAAA2mC,QA3BL3mC,KAAAymC,UAA+B,KAC/BzmC,KAAA8e,SAAQsD,EAAsBpiB,KAAK2mC,MAAMpK,OAAS,IAClDv8B,KAAA+9B,WAAkC,QAAxB6I,EAAG5mC,KAAK2mC,MAAM5I,kBAAU,IAAA6I,KAClC5mC,KAAA09B,UAAY19B,KAAK2mC,MAAMjJ,UAiC1B,IAAQ5rB,EAAa9R,KAAK2mC,MAAMjwB,QAAxB5E,SACR9R,KAAKsZ,OAAO3G,WAAW3S,KAAK2mC,MAAMjwB,SAClC1W,KAAKi+B,OAASjG,KAAKC,IACfD,KAAK8F,IACD99B,KAAKa,UAAUyE,IAAI,yBACnBtF,KAAK2mC,MAAM1I,QAAU,IAExBnsB,GAAY,IAAM9R,KAAKa,UAAUyE,IAAI,0BAE1CtF,KAAKm+B,WAAan+B,KAAK2mC,MAAMxI,YAAc,CAC/C,EAAC,EAAA98B,IAAA,YAAAiE,IAvCD,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuBk3B,CAC/D,GAAC,CAAAn7B,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,IAC/C,GAAC,CAAAxT,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAK8e,SAASugB,OAAO,SAACC,EAAGlN,GAAM,OAAKkN,EAAIlN,EAAEuJ,QAAQ,EAAE,EAC/D,GAAC,CAAAt6B,IAAA,aAAAC,MAEM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MA2BM,SAAY25B,EAAmBsC,GAClC,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO4nB,EAAM5nB,EAAE,GACtDkqB,GAAOvqB,EAAKimB,KAAKgC,GACrBj7B,KAAK8e,SAAQsD,EAAOpP,EACxB,GAAC,CAAA3R,IAAA,sBAAAC,MAEM,SAAoBsjC,GAAa,IAAA3jC,EAAAjB,KACpC,GAAKA,KAAKymC,UACV,KAAMhrB,EAAOzb,KAAK8e,SAASoQ,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOpS,EAAKwlC,UAAUpzB,EAAE,GAC7DoI,IACAA,EAAKkgB,SAAWiJ,EAChBnpB,EAAKzE,OAAShX,KAAKymC,UAAUzvB,QAErC,GAAC,CAAA3V,IAAA,kBAAAC,MAEM,SAAgBu+B,GACnB,IAAMC,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASi6B,EAAMxsB,IAEvCrT,KAAKa,UAAUm/B,gBAAgB,mBAD/BD,EACiD,GAAAh8B,OAAAqe,EAC1C0d,GAAQ,CACXD,EAAMxsB,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAM68B,EAAMxsB,EAAE,GAGjD,IAAC,CA9EiC,GA8EjCqzB,SA9EQ7I,0CAAyBz1B,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAy3B,mBAAA73B,EAAAC,4BA2BtByF,EAAAg5B,iBAAe,kDA3BlBjJ,EAAyB/0B,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,4qDAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjHlBhB,EALZiF,yBAAA,UAKYjF,CAHX,aAGWA,CAF2C,aAE3CA,CAD8C,cACpCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAIjF,EAAAmF,iBAAA,gBACRnF,EADkBkF,wBAClBlF,GAOQA,EANRiF,yBAAA,WAMQjF,CAJP,UAIOA,CADH,qBAKOA,EAFAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA00B,WAAA5sB,KAAA9H,EAAA00B,WAAA5sB,IAAA,EAEA/I,CAFwB,wBAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAA40B,OAAA9sB,KAAA9H,EAAA40B,OAAA9sB,IAAA,EAExB/I,CADmB,4BAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAA80B,WAAAhtB,KAAA9H,EAAA80B,WAAAhtB,IAAA,GAG3B/I,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,8BAGAlB,EAAAiF,yBAAA,mBAMIjF,EADA4I,qBAAA,qBAAAG,GAAA,OAAa9H,EAAAqyB,gBAAAvqB,EAAuB,EACpC/I,CADqC,oBAAA+I,GAAA,OAAA9H,EAAAo9B,UAAAt1B,CAAA,GAI7C/I,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,sBAaIjF,EAPA4I,qBAAA,wBAAAG,GAAA,OAAgB9H,EAAA09B,YAAA19B,EAAAo9B,UAAAt1B,EAA+B,EAO/C/I,CAPgD,uBAAA+I,GAAA,OACjC9H,EAAA29B,oBAAA71B,EAA2B,EAM1C/I,CAN2C,8BAK9BiB,EAAAqyB,gBAAAryB,EAAAo9B,UAA2B,EACxCr+B,CADyC,0BAAAiB,EAAAo9B,UACpB,IAAI,GAEjCr+B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAAi1B,EAAA,iBAUA7+B,EAAAiF,yBAAA,gBAQIjF,EAAAmF,iBAAA,kBAERnF,EADIkF,wBACJlF,GAWYA,EAVZiF,yBAAA,eAUYjF,CARX,eAQWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAA4BjF,EAAAmF,iBAAA,mBAEpCnF,EAFgDkF,wBAEhDlF,KACAA,EAAAiF,yBAAA,WAA8BjF,EAAAmF,iBAAA,IAA0BnF,EAAAkF,yBACxDlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAA09B,YAAA19B,EAAAo9B,WAAwBp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAA0B,GAGvDjL,EADJiF,yBAAA,YACIjF,CAD2B,kBAEvBA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IASpBnF,EAJgBkF,wBAIhBlF,gBAjGgBA,EAAAoF,oBAAA,GAEApF,EAFAqV,2BAAA,UAAApU,EAAA00B,WAEA31B,CAFwB,SAAAiB,EAAA40B,OAExB71B,CADmB,aAAAiB,EAAA80B,YAWnB/1B,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,WAAA5H,EAAAw9B,aAGAz+B,CAHyB,YAAAiB,EAAAuyB,UAGzBxzB,CAFuB,iBAAAiB,EAAAyV,SAEvB1W,CAD2B,YAAAiB,EAAAq0B,WAU/Bt1B,EAAAoF,sBACApF,EADAiX,sBAAA,UAAAhW,EAAAo9B,UACAr+B,CAD2B,UAAAiB,EAAAo9B,WAK3Br+B,EAPA6I,qBAAA,OAAA5H,EAAAo9B,UAOAr+B,CAPmB,SAAAiB,EAAAw9B,aAAAjhC,UAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAAA,IAOnBjL,CAHqD,QAAAiB,EAAAo9B,WAAAp9B,EAAAuyB,UAAAh2B,UAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAAA,KAmBpDjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAUDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAaA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAQ0B1W,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAApE,EAAAu7B,MAAA,mBAK1Bx8B,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KADAjL,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAMQr+B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,oBAGAjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,uNAafwqB,CAAyB,oMChItC,IAAAzkB,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MASAu8B,EAAAv8B,EAAA,OAKAspC,EAAAtpC,EAAA,OACA8yB,EAAA9yB,EAAA,OASAupC,EAAAvpC,EAAA,OAEAwpC,GADAxpC,EAAA,MACAA,EAAA,QACAwC,EAAAxC,EAAA,2BAUA8B,oBAG8B,eAAA2nC,EAAjBrH,EAAiB,WA8HuB,OAAAngC,EAAjD,SAAAmgC,EAAoBn/B,GAAyB,IAAAG,EAAAjB,KAAAD,EAAAC,KAAAigC,GAAzBjgC,KAAAc,OA7HZd,KAAAunC,SAAW,IAAInuB,EAAAuB,gBAA8B,CAAE9I,KAAMiI,KAAKuX,QAC1DrxB,KAAAwnC,QAAU,IAAIpuB,EAAAuB,gBAAwB,IACtC3a,KAAAynC,UAAY,IAAIruB,EAAAuB,gBAA0B,IAC1C3a,KAAAixB,SAAW,IAAI7X,EAAAuB,gBAAwB,IAE/B3a,KAAAikC,OAASjkC,KAAKwnC,QAAQ1sB,eACtB9a,KAAA8jC,SAAW9jC,KAAKynC,UAAU3sB,eAC1B9a,KAAAgiB,QAAUhiB,KAAKunC,SAASzsB,eACxB9a,KAAAsiB,QAAUtiB,KAAKixB,SAASnW,eAExB9a,KAAA0nC,SAAQtuB,EAAA2I,eAAc,CAClC/hB,KAAKunC,SACLvnC,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAob,QAAO,SAAAvV,GAAQ,QAARgc,EAAAhc,EAAA,GAAQ,EAAW,MAC1B7F,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAA1P,GAAmB,IAAAC,EAAAF,EAAAC,EAAA,GAAjBF,EAAOG,EAAA,GAAE/J,EAAG+J,EAAA,GACpBlhB,SAAKgwB,SAAS9uB,KAAKlB,EAAKgwB,SAAS9Y,WAAa,YAAS,EAChDkvB,EAAAM,sBAAqBvvB,EAAI/E,IAAM2O,EAAQpO,MAAQ,GAC1D,IAAC,EACDxT,EAAAyiB,KAAI,SAAC7f,GAAC,OACF/B,EAAKgwB,SAAS9uB,KACVlB,EAAKgwB,SAAS9Y,WAAWyvB,QAAQ,aAAc,IAClD,MAELxnC,EAAAsyB,aAAY,IAGA1yB,KAAA6nC,cAAazuB,EAAAQ,IAAG,GAAG9W,QAC/B1C,EAAAwxB,WAAU,WACN3wB,SAAKgwB,SAAS9uB,KAAKlB,EAAKgwB,SAAS9Y,WAAa,aAAU,EACjDiiB,EAAA0N,cACX,IAAC,EACD1nC,EAAAyiB,KAAI,SAAC7f,GAAC,OACF/B,EAAKgwB,SAAS9uB,KACVlB,EAAKgwB,SAAS9Y,WAAWyvB,QAAQ,cAAe,IACnD,MAELxnC,EAAAsyB,aAAY,IAGA1yB,KAAA+nC,eAAiB/nC,KAAKunC,SAASzkC,QAC3C1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAAoW,GAAmB,IAAhBp0B,EAAIo0B,EAAJp0B,KAAM/B,EAAIm2B,EAAJn2B,KACf5Q,SAAKgwB,SAAS9uB,KAAKlB,EAAKgwB,SAAS9Y,WAAa,eAAY,EACnDgvB,EAAAxT,eAAc,CACjBhgB,MAAOC,GAAQ,GACf0f,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,IACjCe,KAAM,iBAEd,IAAC,EACDxS,EAAAyiB,KAAI,SAAC7f,GAAC,OACF/B,EAAKgwB,SAAS9uB,KACVlB,EAAKgwB,SAAS9Y,WAAWyvB,QAAQ,gBAAiB,IACrD,MAELxnC,EAAAsyB,aAAY,IAGA1yB,KAAAioC,oBAAmB7uB,EAAA2I,eAAc,CAC7C/hB,KAAKunC,SACLvnC,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAAgB,GAA4C,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAAsV,EAAArV,EAAA,GAAlChhB,EAAIq2B,EAAJr2B,KAAMC,EAAQo2B,EAARp2B,SAAUq2B,EAAMD,EAANC,OAChC,SAAO/N,EAAAgO,wBACH,CACIz0B,MAHqCkf,EAAA,GAG1Bxf,IAHL60B,EAAJt0B,MAGuB,GACzB0f,gBAAc3C,EAAA4C,gBAAY5C,EAAA0H,eAAcxmB,IACxC4hB,cAAY9C,EAAA4C,gBACR5C,EAAA0X,gBAAY1X,EAAA2H,YAAWzmB,EAAMC,GAAY,MAE7Cc,KAAM,gBACN4lB,UAAU,GAEd2P,GACFrlC,QAAK1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAmB,GAClD,IAAC,EACDxZ,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKwJ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE1f,KAAK+0B,cAAchqB,EAAE/K,KAAK,EAAC,MAC/DnT,EAAAyiB,KAAI,SAAC7f,GAAC,SAAKokC,EAAA5M,sBAAqBx3B,EAAE,MAClC5C,EAAAsyB,aAAY,IAGA1yB,KAAAskC,cAAgBtkC,KAAKc,KAAK2W,gBAAgB3U,QACtD1C,EAAAwxB,WAAU,SAACxZ,GAAG,SAAKgiB,EAAAmO,sBAAqB,CAAEC,QAASpwB,EAAI/E,IAAK,MAC5DjT,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEwZ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE1f,KAAK+0B,cAAchqB,EAAE/K,KAAK,EAAC,MACzDnT,EAAAsyB,aAAY,IAGA1yB,KAAAkmC,mBAAkB9sB,EAAA2I,eAAc,CAC5C/hB,KAAKwnC,QACLxnC,KAAKynC,UACLznC,KAAKioC,iBACLjoC,KAAK0nC,QACN5kC,QACC1C,EAAAkb,KAAI,SAAA8X,GAAsC,IAAAqV,EAAAxmB,EAAAmR,EAAA,GAA5B0Q,EAAQ2E,EAAA,GAAEzxB,EAAMyxB,EAAA,GAAEf,EAAKe,EAAA,GAC3BngB,EADEmgB,EAAA,GACSzV,cASjB,OARWhc,EAAOwE,OACd,SAACxY,GAAC,IAAAmjC,EAAA,OACU,QAARA,EAAAnjC,EAAEgU,cAAM,IAAAmvB,OAAA,EAARA,EAAUnhC,WACR8+B,EAAS9+B,QAAU8+B,EAASl+B,SAAS5C,EAAEg/B,gBACxCh/B,EAAEuQ,KAAKyf,cAAcptB,SAAS0iB,IAC3BtlB,EAAEyQ,YAAYuf,cAAcptB,SAAS0iB,MAAC,EAC1C+e,EAAAqB,gBAAe1lC,EAAG0kC,EAAOzmC,EAAKsmC,SAASpvB,WAAkB,EAGrE,IAAC,EACD/X,EAAAsyB,aAAY,IAGA1yB,KAAAmF,YAAWiU,EAAA2I,eAAc,CAAC/hB,KAAKc,KAAK2W,kBAAkB3U,QAClE1C,EAAAob,QAAO,SAAAuY,GAAG,QAAH9R,EAAA8R,EAAA,GAAG,EAAS,MACnB3zB,EAAAwxB,WAAU,SAAAqC,GAAA,IAAA0U,EAAA1mB,EAAAgS,EAAA,GAAG,SACT5zB,EAAAuoC,cADSD,EAAA,GACMt1B,GAAI,mBAAmBvQ,QAClC1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAoB,GAC5C,MAELxZ,EAAAkb,KAAI,SAACtY,GAAC,OAAMA,EAAE0T,SAAmC,EAAE,MACnDtW,EAAAsyB,aAAY,IAEA1yB,KAAA6oC,eAAiB7oC,KAAKmF,SAASrC,QAC3C1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE6lC,gBAAkB,EAAE,GAGW,EAAC,EAAAxnC,IAAA,YAAAC,MAE1C,SAAUA,GACbtB,KAAKwnC,QAAQrlC,KAAI,GAAA4B,OAAIzC,GACzB,GAAC,CAAAD,IAAA,iBAAAC,MAEM,SAAeA,GAClB,IAAM+iC,EAAarkC,KAAKynC,UAAUtvB,WAC9BksB,EAAWz+B,SAAStE,GACpBtB,KAAKynC,UAAUtlC,KAAKkiC,EAAW7oB,OAAO,SAACxY,GAAC,OAAKA,IAAM1B,CAAK,IAExDtB,KAAKynC,UAAUtlC,KAAI,GAAA4B,OAAAqe,EAAKiiB,GAAU,CAAE/iC,IAE5C,GAAC,CAAAD,IAAA,aAAAC,MAEM,WACH,OAAOtB,KAAKunC,SAASpvB,UACzB,GAAC,CAAA9W,IAAA,aAAAC,MAEM,SAAW0gB,GACdhiB,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASjmC,OAAU0gB,GACpD,IAAC,CAnJyB,GAmJzBslB,SAnJQrH,0CAAiB73B,EAAA4U,mBAAA1U,EAAAG,qBAAA,qDAAjBw3B,EAAiBhjB,QAAjBgjB,EAAiB/iB,UAAAC,WAFd,SAEH8iB,CAAiB,kLC1C9BtgC,gBAA0BG,EAQtB,SAAAgpC,EAAYrmC,GAA6B1C,EAAAC,KAAA8oC,GAPzC9oC,KAAAqT,GAAa,GACbrT,KAAAuT,KAAe,GACfvT,KAAAyT,YAAsB,GACtBzT,KAAA+oC,mBAA8B,GAC9B/oC,KAAAgpC,WAAqBlvB,KAAKuX,MAC1BrxB,KAAAipC,WAAqBnvB,KAAKuX,MAGtBtI,OAAOmgB,OAAOlpC,KAAMyC,EACxB,GAGJ9C,qBAA+BG,EAW3B,SAAAqpC,EAAY1mC,GAAkC1C,EAAAC,KAAAmpC,GAC1CpgB,OAAOmgB,OAAOlpC,KAAMyC,EACxB,GAGJ9C,aAAuBG,EAiBnB,SAAAy6B,EAAY93B,GAA0B1C,EAAAC,KAAAu6B,GAPtCv6B,KAAAoqB,OAAmB,GAQfrB,OAAOmgB,OAAOlpC,KAAMyC,EACxB,GAGJ9C,QAAkBG,EAYd,SAAAspC,EAAY3mC,GAAqB1C,EAAAC,KAAAopC,GAXjCppC,KAAAqT,GAAa,GACbrT,KAAAqpC,QAAkB,GAClBrpC,KAAAyT,YAAsB,GACtBzT,KAAAspC,cAAwB,GACxBtpC,KAAAupC,QAAkB,GAClBvpC,KAAAwpC,WAAqB,GACrBxpC,KAAAypC,WAAkC,GAClCzpC,KAAA0pC,kBAA4B,GAC5B1pC,KAAAgpC,WAAqBlvB,KAAKuX,MAC1BrxB,KAAAipC,WAAqBnvB,KAAKuX,MAGtBtI,OAAOmgB,OAAOlpC,KAAMyC,EACxB,sPCjEJ,IAAA8G,EAAA1L,EAAA,OACAs8B,EAAAt8B,EAAA,OAMAyC,EAAAzC,EAAA,OAGA8yB,EAAA9yB,EAAA,OACAuC,EAAAvC,EAAA,MACAwC,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OAGA8B,4BAAA,SAAgBgqC,IAA6D,IAAnC7F,EAAAl/B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAChE,OAAO,IAAI2E,EAAAqgC,UAAU,CACjBv2B,GAAI,IAAI9J,EAAAsgC,YAAY/F,EAASzwB,IAC7BE,KAAM,IAAIhK,EAAAsgC,YAAY/F,EAASvwB,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WACvDhB,mBAAoB,IAAIx/B,EAAAsgC,YAAY/F,EAASiF,qBAErD,EAEAppC,iCAAA,SAAgBqqC,IACyB,IAArCxM,EAAA54B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA4B,GAE5B,OAAO,IAAI2E,EAAAqgC,UAAU,CACjBv2B,GAAI,IAAI9J,EAAAsgC,YAAYrM,EAAMnqB,IAC1B42B,aAAc,IAAI1gC,EAAAsgC,YACdrM,EAAMyM,cAAiBzM,EAAc0M,uBAAyB,GAC9D,CAAC3gC,EAAAugC,WAAWC,WAEhBI,eAAgB,IAAI5gC,EAAAsgC,YAAYrM,EAAM2M,gBAAkB,IACxDC,WAAY,IAAI7gC,EAAAsgC,YAAYrM,EAAM4M,YAAc,GAChDC,cAAe,IAAI9gC,EAAAsgC,YAAkC,IAAtBrM,EAAM6M,eAAwB,MAC7DC,4BAA6B,IAAI/gC,EAAAsgC,YACO,IAApCrM,EAAM8M,6BACD9M,EAAc+M,yBACf,MAERC,0BAA2B,IAAIjhC,EAAAsgC,YACO,IAAlCrM,EAAMgN,2BACDhN,EAAciN,uBACf,OAGhB,EAEA9qC,yBAAA,SAAgB+qC,IAA2D,IAApCzP,EAAAr2B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,IAAIu1B,EAAAI,WAC3D,OAAO,IAAIhxB,EAAAqgC,UAAU,CACjBv2B,GAAI,IAAI9J,EAAAsgC,YAAY5O,EAAM5nB,IAC1B2uB,YAAa,IAAIz4B,EAAAsgC,YAAY5O,EAAM+G,aAAe,GAAI,CAClDz4B,EAAAugC,WAAWC,WAEf3f,OAAQ,IAAI7gB,EAAAsgC,YAAY5O,EAAM7Q,QAAU,IACxCugB,MAAO,IAAIphC,EAAAsgC,YAAY5O,EAAM0P,OAAS,IACtCp3B,KAAM,IAAIhK,EAAAsgC,YAAY5O,EAAM1nB,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WACpDt2B,YAAa,IAAIlK,EAAAsgC,YAAY5O,EAAMxnB,aAAe,KAE1D,EAEA9T,oBAAA,SAAgBirC,IAA4C,IAA1B/K,EAAAj7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAIu1B,EAAAiP,MACjD,OAAO,IAAI7/B,EAAAqgC,UAAU,CACjBv2B,GAAI,IAAI9J,EAAAsgC,YAAYhK,EAAMxsB,IAC1Bg2B,QAAS,IAAI9/B,EAAAsgC,YAAYhK,EAAMwJ,SAAW,GAAI,CAAC9/B,EAAAugC,WAAWC,WAC1Dt2B,YAAa,IAAIlK,EAAAsgC,YAAYhK,EAAMpsB,aAAe,IAClD61B,cAAe,IAAI//B,EAAAsgC,YAAYhK,EAAMyJ,eAAiB,IACtDC,QAAS,IAAIhgC,EAAAsgC,YAAYhK,EAAM0J,SAAW,IAC1CC,WAAY,IAAIjgC,EAAAsgC,YAAYhK,EAAM2J,YAAc,IAChDC,WAAY,IAAIlgC,EAAAsgC,YAAYhK,EAAM4J,YAAc,IAChDC,kBAAmB,IAAIngC,EAAAsgC,YAAYhK,EAAM6J,oBAEjD,EAEA,IAAMmB,EAAuE,GAE7ElrC,uBAAA,SAAgBgoC,EAAqBa,GACjC,OAAKA,KACAqC,EAAcrC,IAF+B5jC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,MAG9CimC,EAAcrC,IAAO,EAAInoC,EAAAuoC,cAAaJ,EAAS,iBAAiB1lC,QAC5D1C,EAAAkb,KACI,SAACtY,GAAC,OACGA,EAAE0T,mBAAmB8nB,MAChBx7B,EAAE0T,QACF,EAAE,IAA8B,EAE9CtW,EAAAkyB,YAAW,SAACzO,GAAC,SAAKzK,EAAAQ,IAAG,GAAgC,KAEtDixB,EAAcrC,KAAO,EAXPpvB,EAAAQ,IAAG,GAY5B,EAEAja,iBAAA,SAAgB+oC,EACZjtB,EACAisB,EACA5Z,GAEA,IA4EwBwJ,EA5ElBwT,EAAehxB,KAAKuX,MACpB0Z,EAAa,IAAIjxB,KAAKgU,EAAMjc,MAE5Bm5B,EAAc,SAACC,GAA6B,IAAAC,EAAA,OAC9CzvB,EAAKlI,OAAS03B,EAAK13B,MACnBkI,EAAKqoB,SAASvwB,KAAK3N,SAASqlC,EAAK13B,OACjCua,EAAMvX,UAAU40B,KAAK,SAAC9Y,GAAQ,OAC1BA,EAAS1e,MAAM/N,SAASqlC,EAAK13B,KAAK,KAE3B,QADV23B,EACDpd,EAAM3R,aAAK,IAAA+uB,OAAA,EAAXA,EAAav3B,MAAM/N,SAASqlC,EAAK13B,QACnB,MAAd03B,EAAK13B,IAAY,EAgEX8jB,EAAAa,EAESwP,GAAK,IAAxB,IAAArQ,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0B,KAAf6S,EAAI3T,EAAAh2B,MACX,GAAI0pC,EAAYC,IACKA,EAjEhBvD,MAAMrI,OAAO,SAAC+L,EAASC,GACxB,OAAQA,EAAU,IACd,IAAK,YACD,OACID,MACCza,EAAA2a,UACGR,KACAna,EAAA4a,UAASR,EAAYM,EAAU,KAE7B,EACA,GAEd,IAAK,eACD,OACID,MACCza,EAAA6a,SACGV,KACAna,EAAA4a,UAASR,EAAYM,EAAU,KAE7B,EACA,GAEd,IAAK,aACD,OACID,MACCza,EAAA6a,SAAQT,KAAYpa,EAAA8a,UAASV,EAAYM,EAAU,KAC9C,EACA,GAEd,IAAK,cACD,OACID,MACCza,EAAA2a,UACGP,KACApa,EAAA8a,UAASV,EAAYM,EAAU,KAE7B,EACA,GAEd,IAAK,aACD,OACID,GACCtd,EAAMhc,aAAYxR,EAAAorC,iBAAgBL,EAAU,IACvC,EACA,GAEd,IAAK,aACD,OACID,GACCtd,EAAMhc,aAAYxR,EAAAorC,iBAAgBL,EAAU,IACvC,EACA,GAEd,IAAK,eACD,OACID,GACCtd,EAAM6d,IAAI,kBAAoBN,EAAU,GAAK,EAAI,GAE1D,QACI,OAAOD,EAAU,EAE7B,EAAG,GAI0BH,EAAKvD,MAAM1iC,OAChC,OAAO,CAGnB,CAAC,OAAAskB,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAO,CACX,26BCrLA,IAAA94B,EAAAxC,EAAA,OACA+tC,EAAA/tC,EAAA,OACAuC,EAAAvC,EAAA,MAOAub,EAAAvb,EAAA,OACA8yB,EAAA9yB,EAAA,OACAspC,EAAAtpC,EAAA,OAMAguC,EAAAhuC,EAAA,OACAyC,EAAAzC,EAAA,OACAw9B,EAAAx9B,EAAA,OAEMiuC,EAAgB,iBAMtB,SAAgBvD,IAAoC,IAC1CwD,KAAIH,EAAAI,eADuBpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE9C,SAAOvE,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,qBAAA/nC,OAAoBgoC,EAAI,IAAMA,EAAI,KAAMjpC,QAC/D1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAoB,GAEvC,CAEA,SAAgBipC,EAAiBnI,GAC7B,SAAOzjC,EAAA6rC,MAAI,GAAAnoC,OACJ+nC,EAAa,wBAChBzrC,EAAA8rC,aAAYrI,EAAU,MAAC7+B,EAAW,KAAM,MAC1CnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAkB,GACxC,CAEA,SAAgBopC,EACZ/4B,EACAywB,GAEA,SAAOzjC,EAAAgsC,KAAG,GAAAtoC,OACH+nC,EAAa,sBAAA/nC,OAAqBsP,IAAE,EACvChT,EAAA8rC,aAAYrI,EAAU,MAAC7+B,EAAW,KAAM,MAC1CnC,QAAK1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAkB,GACxC,CAsBA,SAAgBspC,IAAgC,IACtCP,KAAIH,EAAAI,eADmBpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE1C,SAAOvE,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,gBAAA/nC,OAAegoC,EAAI,IAAMA,EAAI,KAAMjpC,QAC1D1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAiB,GAEpC,CAjDArD,uBAAA4oC,EAOA5oC,mBAAAssC,EAOAtsC,sBAAAysC,EAUAzsC,oBAAA,SAAgB4sC,EAAkBzI,GAC9B,OAAOA,EAASzwB,GACV+4B,EAAoBtI,EAASzwB,GAAIywB,GACjCmI,EAAiBnI,EAC3B,EAEAnkC,oBAAA,SAAgB6sC,EAAkBn5B,GAC9B,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,sBAAA/nC,OAAqBsP,IAAMvQ,QAClD1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAkB,GAErC,EAEArD,sBAAA,SAAgB8sC,EAAoBp5B,GAChC,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI+nC,EAAa,sBAAA/nC,OAAqBsP,GACpD,EAMA1T,mBAAA2sC,EAOA,IAAMK,EAAe,IAAIrmB,IAEzB,SAAgBsmB,IAAwC,IAAfvZ,EAAAzuB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GAC5CmnC,KAAIH,EAAAI,eAAc3Y,GACxB,OAAIsZ,EAAaE,IAAIxZ,EAAM1f,QAAK,EACrByF,EAAAQ,IAAG+yB,EAAarnC,IAAI+tB,EAAM1f,SAAM,EAEpCtT,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,gBAAA/nC,OAAegoC,EAAI,IAAMA,EAAI,KAAMjpC,QAC1D1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAiB,MAC5B5C,EAAAwxB,WAAU,SAAC5e,IAAI,SACXoG,EAAA0zB,UACI95B,GAAKsI,IAAI,SAAC2f,IAAK,OACX6M,EAAWjZ,IAAA,CACPke,MAAO,KACJ1Z,GAAK,IACRgW,QAASpO,GAAM5nB,MAChBvQ,QACC1C,EAAAkb,KAAI,SAACtE,IAAM,OAAA6X,IAAA,GAAWoM,IAAK,IAAEjkB,WAAM,GACtC,GAER,MAEL5W,EAAAyiB,KAAI,SAAC7f,IACD2pC,EAAazxB,IAAImY,EAAM1f,MAAO3Q,IAE9BgqC,WAAW,kBAAML,EAAYM,OAAQ5Z,EAAM1f,MAAM,EAAE,IACvD,GAER,CAEA,SAAgBu5B,EAAcC,GAC1B,SAAO9sC,EAAA6rC,MAAI,GAAAnoC,OACJ+nC,EAAa,mBAChBzrC,EAAA8rC,aAAYgB,EAAS,MAACloC,EAAW,KAAM,MACzCnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAe,GACrC,CAEA,SAAgBoqC,EAAiB/5B,EAAY85B,GACzC,SAAO9sC,EAAAgsC,KAAG,GAAAtoC,OACH+nC,EAAa,iBAAA/nC,OAAgBsP,IAAE,EAClChT,EAAA8rC,aAAYgB,EAAS,MAACloC,EAAW,KAAM,MACzCnC,QAAK1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAe,GACrC,CAQA,SAAgBk4B,EAAe7nB,GAC3B,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,iBAAA/nC,OAAgBsP,IAAMvQ,QAC7C1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAe,GAElC,CAUA,SAAgB8kC,IAA2B,IACjCiE,KAAIH,EAAAI,eADcpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAErC,SAAOvE,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,WAAA/nC,OAAUgoC,EAAI,IAAMA,EAAI,KAAMjpC,QACrD1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAY,GAE/B,CAEA,SAAgBqqC,EAASxN,GACrB,SAAOx/B,EAAA6rC,MAAI,GAAAnoC,OACJ+nC,EAAa,cAChBzrC,EAAA8rC,aAAYtM,EAAO,MAAC56B,EAAW,KAAM,MACvCnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAU,GAChC,CAEA,SAAgBsqC,EAAYj6B,EAAYwsB,GACpC,SAAOx/B,EAAAgsC,KAAG,GAAAtoC,OACH+nC,EAAa,YAAA/nC,OAAWsP,IAAE,EAC7BhT,EAAA8rC,aAAYtM,EAAO,MAAC56B,EAAW,KAAM,MACvCnC,QAAK1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAU,GAChC,CAuBA,SAAgBuqC,EAAgBv2B,GAC5BA,SAAOsE,IAAI,SAACtY,GAAM,OAAMA,EAAEwqC,cAAgBxqC,EAAEqmC,OAAO,IAAC,EAC7ChpC,EAAA6rC,MAAI,GAAAnoC,OACJ+nC,EAAa,gBAChB90B,EAAOsE,IAAI,SAACtY,GAAC,SAAK3C,EAAA8rC,aAAYnpC,EAAG,MAACiC,EAAW,KAAM,IAAI,IACzDnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAY,GAClC,CAEA,SAAgByqC,EAAmBz2B,GAC/BA,SAAOsE,IAAI,SAACtY,GAAM,OAAMA,EAAEwqC,cAAgBxqC,EAAEqmC,OAAO,IAAC,EAC7ChpC,EAAAgsC,KAAG,GAAAtoC,OACH+nC,EAAa,gBAChB90B,EAAOsE,IAAI,SAACtY,GAAC,SAAK3C,EAAA8rC,aAAYnpC,EAAG,MAACiC,EAAW,KAAM,IAAI,IACzDnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAY,GAClC,CAiBA,SAAgB0qC,IAAwC,IAC9C3B,KAAIH,EAAAI,eAD2BpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAElD,SAAOvE,EAAAiF,KAAG,GAAAvB,OACH+nC,EAAa,0BAAA/nC,OAAyBgoC,EAAI,IAAMA,EAAI,KACzDjpC,QAAK1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAyB,GAC/C,CAEA,SAAgB2qC,EAAsBnQ,GAClC,SAAOn9B,EAAA6rC,MAAI,GAAAnoC,OACJ+nC,EAAa,6BAChBzrC,EAAA8rC,aAAY3O,EAAO,MAACv4B,EAAW,KAAM,MACvCnC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAuB,GAC7C,CAEA,SAAgB4qC,EACZv6B,EACAmqB,GAEA,SAAOn9B,EAAAgsC,KAAG,GAAAtoC,OACH+nC,EAAa,2BAAA/nC,OAA0BsP,IAAE,EAC5ChT,EAAA8rC,aAAY3O,EAAO,MAACv4B,EAAW,KAAM,MACvCnC,QAAK1C,EAAAkb,KAAI,SAACtY,IAAC,OAAKA,EAAuB,GAC7C,CAqFA,SAAgBolC,EACZ/U,EACA8U,GAEA9U,SAAMzgB,KAAO,mBACNwG,EAAA2I,eAAc,CACjB6qB,EAAyBvZ,IAAK,EAC9B8T,EAAAxT,eAAcN,KACfvwB,QACC1C,EAAAkb,KAAI,SAAAuX,IAAyB,IAAAO,GAAAnR,EAAA4Q,GAAA,GAAvBgb,GAAQza,GAAA,GAAEyC,GAAQzC,GAAA,GACpByC,UAAWA,GAASra,OAChB,SAACxY,IAAC,MAAkB,aAAbA,GAAE0+B,QAAsC,cAAb1+B,GAAE0+B,MAAsB,GAEvDmM,GAASvyB,IAAI,SAAC6xB,IAAO,OAAAte,IAAA,GACrBse,IAAO,IACVn2B,OAAQm2B,GAAQn2B,OAAOwE,OACnB,SAACqkB,IAAK,OACFsI,GAAQviC,SAASi6B,GAAMxsB,MACtBwiB,GAAS3G,KACN,SAACwI,IAAO,IAAAoW,GAAA,OACH3F,EAAOviC,SAAS8xB,GAAQrkB,MACxBqkB,GAAQxmB,WAAa2uB,GAAMxsB,KACP,QADSy6B,GAC1BpW,GAAQ6J,iBAAS,IAAAuM,QAAA,EAAjBA,GAAmBloC,SAASi6B,GAAMxsB,KAAI,EACjD,IACR,EAET,GAER,CAEyC,SAAA06B,eAAAvsC,EAAAC,IAAAC,KAAlC,SAAAC,EAAmC0R,GAAU,OAAA5R,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,KACzBglC,EAAAxT,eAAc,CACjCL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW,IAAI1Z,OACzC2Z,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS,IAAI5Z,OACrClH,KAAM,kBACP3P,YAAW,OAJR+qC,OAAQ/rC,GAAAqB,OAAA,SAKPK,QAAQslB,IALDhnB,GAAA4B,KAOL2X,OAAO,SAACxY,IAAC,IAAAirC,GAAA,OAAKjrC,GAAEkO,WAAamC,IAAiB,QAAf46B,GAAIjrC,GAAEu+B,iBAAS,IAAA0M,QAAA,EAAXA,GAAaroC,SAASyN,GAAG,GAC5DiI,IAAI,SAAC6hB,IAAO,SAAKgK,EAAA+G,eAAc/Q,GAAQ9pB,IAAIpQ,WAAW,KAC9D,wBAAAhB,GAAAwC,OAAA,EAAA9C,EAAA,KACJgD,MAAA3E,KAAA4E,UAAA,CAED,SAAgBupC,GACZC,EACAC,GAGA,KAAMD,GAAcA,GAAYppC,QAAU,IAA1C,MAAgDqpC,KAAYrpC,OACxD,MAAO,GACX,IAAKqpC,EAAY,MAAO,GACxB,IACgC5W,GAD1B6W,GAAoB,GAAG9W,GAAAU,EACPkW,GAAU,QAAAhP,GAAA,WAAE,IAAvBjC,GAAO1F,GAAAn2B,MACRitC,GAAQF,EAAWnf,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAO8pB,GAAQ9pB,EAAE,KACnDk7B,IAASA,GAAMzM,SAAW3E,GAAQ2E,SACnCwM,GAAQrV,KAAKkE,GAAQ9pB,GAE7B,EALA,IAAAmkB,GAAAlP,MAAAmP,GAAAD,GAAAW,KAAAC,MAAAgH,IAKC,OAAA9V,IAAAkO,GAAA3T,EAAAyF,GAAA,SAAAkO,GAAA2B,GAAA,CACD,OAAOmV,EACX,CAEsD,SAAAE,eAAAhtC,EAA/C,SAAAinC,EAAA1U,GAAA,IACD1gB,GAAEo1B,EAAFp1B,GAAIo7B,GAAQhG,EAARgG,SAAUC,GAAYjG,EAAZiG,aAEZ78B,GAAIkiB,EAAJliB,KACAC,GAAQiiB,EAARjiB,SACA0e,GAAOuD,EAAPvD,QACA/b,GAAIsf,EAAJtf,KACAk6B,GAAa5a,EAAb4a,cACAC,GAAW7a,EAAX6a,YACAj7B,GAAKogB,EAALpgB,MACAk7B,GAAW9a,EAAX8a,YAWJT,GAAAxpC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,GAC7BkqC,GAAYlqC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAQ,OAAAnD,IAAAC,KAAA,SAAAsE,KAAA,IAAAgoC,GAAAnY,GAAAkZ,GAAAT,GAAAU,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAnQ,GAAAP,GAAA2Q,GAAAnS,GAAA8K,GAAAsH,GAAA,OAAA9tC,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAAAgE,UAAAhE,KAAA,KAEGglC,EAAAxT,eAAc,CACjCL,gBAAc3C,EAAA4C,aAAY/C,MAAUG,EAAA6C,YAAW3hB,IAAQA,IACvD4hB,cAAY9C,EAAA4C,aACR/C,MACMG,EAAA+C,aAAS/C,EAAA2H,YAAWzmB,GAAMC,MAAS,EACnC6e,EAAA2H,YAAWzmB,GAAMC,KAE3Bc,KAAM,gBACNe,MAAOA,GAAMkB,KAAK,OACnB5R,YAAW,OATA,GAAR+qC,GAAQ7nC,GAAAtC,MAWVwP,KAAMo7B,GAAQ,CAAAtoC,GAAAhE,KAAA,QAAAgE,UAAAhE,KAAA,KACFglC,EAAAxT,eAAc,CAChBL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,KACrC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,KACjCe,KAAM,gBACNlM,MAAO+N,GACP6sB,SAAUoN,GAAe,GAAKr7B,GAC9Bm8B,WAAYd,GAAer7B,GAAK,GAChCo7B,cACDxrC,YAAW,OAAAkD,GAAAjC,GAAAiC,GAAAtC,KAAAsC,GAAAhE,KAAA,gBAAAgE,GAAAjC,GACd,GAAE,QACN6qC,IAZAlZ,GAAQ1vB,GAAAjC,IAY0CoX,IAAI,SAACtY,IAAC,MAAK,CAC/DA,GAAEqQ,GACF,IAAIgoB,EAAAgC,aAAar6B,GAAE4yB,eAAeuH,SACrC,GACDiR,IAAY/lB,QAAQ,SAACrlB,IAAC,OAAMA,GAAEs5B,UAAW,CAAK,GAC1CgS,GAAUQ,GACRV,GAAW9yB,IAAI,SAACtY,IAAC,OAAKA,GAAEqQ,EAAE,GAC1B86B,GACIC,GACAW,GAAazzB,IAAI,SAAAm0B,IAAM,OAANxtB,EAAAwtB,GAAA,GAAM,EAAO,IAGpCZ,KACMG,GAAYnZ,GAASra,OAAO,SAACxY,IAAC,OAAKA,GAAE0sC,UAAY1sC,GAAEw1B,QAAQ,GACjE8V,MAAUhuC,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EACTksB,IAAOlsB,EACP4sB,GAAU1zB,IAAI,SAACtY,IAAC,OAAKA,GAAE4yB,eAAe+L,UAAU,OAGrDsN,GAAYF,GAAavzB,OAC3B,SAAAmtB,IAAA,IAAAvU,GAAAnS,EAAA0mB,GAAA,GAAY,OAAO2F,GAAQ1oC,SAAfwuB,GAAA,GAAgC/gB,GAAG,GAE7C67B,GAAmBH,GAAavzB,OAAO,SAAAo0B,IAAA,IAAArb,GAAAtS,EAAA2tB,GAAA,GAAS,OAClDtB,GAAQ1oC,SAD0C2uB,GAAA,GAAFlhB,GAC5B,GAElB87B,GAAiBf,GAAW5yB,OAAO,SAAAq0B,IAAK,OAAOvB,GAAQ1oC,SAAfiqC,GAAFx8B,GAA6B,GACnE+7B,GAAWpB,GAASxyB,OACtB,SAACs0B,IAAG,OACCA,GAAItX,YACH3C,GAAS3G,KAAK,SAAC5Q,IAAC,OAAKA,GAAEjL,KAAOy8B,GAAIz8B,EAAE,IAClC47B,GAAU/f,KAAK,SAAAwF,IAAA,IAAAqb,GAAA9tB,EAAAyS,GAAA,GAAI,OAAMob,GAAIxO,WAAVyO,GAAA,EAAyB,GAAE,GAEtDV,MAAqB/uC,EAAAmyB,SAAQ2c,GAAS9zB,IAAI,SAACtY,IAAC,OAAKA,GAAEu+B,SAAS,IAAErC,GAAAhH,EACvC+W,IAAS,IAApC,IAAA/P,GAAA5W,MAAAqW,GAAAO,GAAA/G,KAAAC,MAAsCkX,GAAArtB,EAAA0c,GAAAr9B,MAAA,GAAvB67B,GAAOmS,GAAA,GAClBD,GAAQ,GAAAtrC,OAAAqe,EACDitB,IAAQjtB,KACR9hB,EAAAmyB,SAAQ0K,GAAQZ,MAAMjhB,IAAI,SAACtY,IAAC,OAAKA,GAAEu7B,QAAQ,KAErD,OAAAjV,IAAA4V,GAAArb,EAAAyF,GAAA,SAAA4V,GAAA/F,GAAA,CAAAhzB,UAAAhE,KAAA,GAC8BimC,EAC3B,CACI9U,gBAAc3C,EAAA4C,aAAY/C,MAAUG,EAAA6C,YAAW3hB,IAAQA,IACvD4hB,cAAY9C,EAAA4C,aACR/C,MACMG,EAAA+C,aAAS/C,EAAA2H,YAAWzmB,GAAMC,MAAS,EACnC6e,EAAA2H,YAAWzmB,GAAMC,KAE3Bc,KAAM,iBAEVijB,GAASva,IAAI,SAACtY,IAAC,OAAKA,GAAEqQ,EAAE,IAC1BpQ,YAAW,QAXPglC,UAAgB9hC,GAAAtC,KAYtBzB,QAAQO,IAAI,YAAa0sC,IACzBjtC,QAAQO,IAAI,kBAAmBwsC,IAC/B/sC,QAAQO,IAAI,YAAaqrC,IACzB5rC,QAAQO,IAAI,YAAakzB,IACzBzzB,QAAQO,IAAI,YAAaysC,IACzBhtC,QAAQO,IAAI,aAAcssC,IAC1B7sC,QAAQO,IAAI,oBAAqBslC,IAC3BsH,GAAqBJ,GAAe7zB,IAAI,SAAC6hB,IAE3C,IAAIoE,MAAYjhC,EAAAmyB,SACX0K,GAAQZ,MAAcjhB,IAAI,SAAAuZ,IAA+B,IAAAmb,GAA5B38B,GAAEwhB,GAAFxhB,GAAIkrB,GAAQ1J,GAAR0J,SAAU5C,GAAQ9G,GAAR8G,SAClC3kB,GAEL,QAFWg5B,GAAG/H,GAAiB/Y,KAC5B,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOA,EAAE,UACrB,IAAA28B,QAAA,EAFcA,GAEZh5B,OACH,IAAKA,GAAQ,OAAOunB,GACpB,IAAMvrB,GAAO,GACb,OAAO,IAAIwrB,MAAM7C,IAAU8C,KAAK,GAAGnjB,IAAI,SAACtY,GAAGitC,IAAO,IAAAC,GACxCz0B,GACF4zB,GAASzpC,SAAS24B,GAAS0R,MAC3Bj9B,GAAKpN,SAAS24B,GAAS0R,OACtB1R,GAAS0R,IACE,MAANj5B,IAKE,QALIk5B,GAANl5B,GAAQkY,KAAK,SAAA4F,IAAW,IAARzhB,GAAEyhB,GAAFzhB,GACZ,OACKg8B,GAASzpC,SAASyN,MAClBL,GAAKpN,SAASyN,GAEvB,UAAE,IAAA68B,QAAA,EALFA,GAKI78B,GACJkrB,GAAS0R,IACnB,IAAKx0B,GACD0hB,SAAQb,UAAW,EACb,6CAEVtpB,UAAKimB,KAAKxd,IACHA,EACX,EACJ,IAGEic,GAAU7B,GAAS3G,KAAK,SAAClsB,IAAC,OAC5BA,GAAEu+B,UAAUrS,KAAK,SAAC7b,IAAE,IAAA88B,GAAA,OACH,QADGA,GAChBhT,GAAQZ,aAAK,IAAA4T,QAAA,EAAbA,GAAejhB,KAAK,SAACkD,IAAC,OAAKA,GAAEmM,SAAS34B,SAASyN,GAAG,EAAC,EACtD,GAELg8B,UAAQ,GAAAtrC,OAAAqe,EAAOitB,IAAQjtB,EAAKmf,MAAS,EAC9B4F,EAAAiJ,eACH,IAAIvE,EAAApW,QAAQ,CACR7iB,KAAM,gBACNc,aAAc,gBACd7B,QACAC,YACA0e,WACA/c,YAAak7B,GACb0B,WAAY57B,GACZvD,SAAUqwB,GAAU,GACpBA,aACAjuB,WAAY6pB,GAAQZ,MAAMjhB,IAAI,SAACtY,IAAC,OAAKA,GAAEuQ,IAAI,GAAEsB,KAAK,MAClD1T,MAAOg8B,GAAQZ,MAAMjhB,IAAI,SAACtY,IAAC,OAAKA,GAAEuQ,IAAI,GAAEsB,KAAK,MAC7C66B,UACKb,IAAenX,IAASgY,WAAavS,GAAQ0B,SAClDrG,UACKqW,IAAenX,IAASc,WAAa2E,GAAQ0B,SAClDjJ,eAAgB,CACZ/hB,UAAWR,GACXsuB,WAAYxE,GAAQ9pB,GACpBu7B,eACAzR,QAAS,IAAI9B,EAAAgC,aAAYxO,IAAA,GAAMsO,IAAO,IAAErP,MAAO,SAEnDna,MAAOA,IAAS,KAEpB,CAAE86B,YAAUnN,SAAUoN,GAAe,GAAKr7B,IAElD,GAAElN,GAAA7C,OAAA,SAAA9B,EAAAC,IAAAC,KACK,SAAAwD,KAAA,OAAAzD,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAAAiD,UAAAjD,KAAA,EACGwB,QAAQslB,IACVimB,GAAiB5zB,IAAI,SAAA6Z,IAAA,IAAAC,GAAAnT,EAAAkT,GAAA,GAAI,SAAMgS,EAAA+G,eAAN9Y,GAAA,IAAwBnyB,WAAW,IAC/D,OAAAmC,UAAAjD,KAAA,EACKwB,QAAQslB,IAAIsmB,GAAmBj0B,IAAI,SAACg1B,IAAC,OAAKA,GAAErtC,WAAW,IAAE,wBAAAmC,GAAAX,OAAA,EAAAS,GAAA,KAClE,yBAAAiB,GAAA1B,OAAA,EAAAuB,GAAA,EAxJmBvE,EAwJnB,GACJ+sC,GAAA7pC,MAAA3E,KAAA4E,UAAA,CA9dDjF,2BAAAitC,EA4BAjtC,gBAAAutC,EAOAvtC,mBAAAytC,EAOAztC,iBAAA,SAAgB4wC,EAAepD,GAC3B,OAAOA,EAAQ95B,GACT+5B,EAAiBD,EAAQ95B,GAAI85B,GAC7BD,EAAcC,EACxB,EAEAxtC,iBAAAu7B,EAMAv7B,mBAAA,SAAgB6wC,EAAiBn9B,GAC7B,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI+nC,EAAa,iBAAA/nC,OAAgBsP,GAC/C,EAMA1T,cAAAmoC,EAOAnoC,WAAA0tC,EAOA1tC,cAAA2tC,EAOA3tC,YAAA,SAAgB8wC,EAAU5Q,GACtB,OAAOA,EAAMxsB,GACPi6B,EAAYzN,EAAMxsB,GAAEwb,IAAA,GACbgR,GAAK,IACR2N,cAAe3N,EAAMwJ,WAEzBgE,EAAQxe,IAAA,GAAMgR,GAAK,IAAE2N,cAAe3N,EAAMwJ,UACpD,EAEA1pC,YAAA,SAAgB+wC,EAAUr9B,GACtB,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,YAAA/nC,OAAWsP,IAAMvQ,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAU,GAC1E,EAEArD,cAAA,SAAgBgxC,EAAYt9B,GACxB,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI+nC,EAAa,YAAA/nC,OAAWsP,GAC1C,EAMA1T,kBAAA4tC,EAQA5tC,qBAAA8tC,EAQA9tC,mBAAA,SAAgBixC,EAAiB55B,GAC7B,OAAW,MAANA,KAAQhS,OACNgS,EAAO65B,MAAM,SAACp1B,GAAI,OAAKA,GAAMpI,EAAE,GAChCo6B,EAAmBz2B,GACnBu2B,EAAgBv2B,IAAM,EAHAoC,EAAAQ,IAAG,GAInC,EAEAja,qBAAA,SAAgBmxC,EAAmBhoB,GAC/B,SAAOzoB,EAAAqsC,KAAG,GAAA3oC,OAAI+nC,EAAa,gBAAgB,CAAEiF,KAAM,CAAEjoB,YACzD,EAMAnpB,2BAAA+tC,EAOA/tC,wBAAAguC,EAOAhuC,2BAAAiuC,EAUAjuC,yBAAA,SAAgBqxC,EAAuBxT,GACnC,OAAOA,EAAMnqB,GACPu6B,EAAyBpQ,EAAMnqB,GAAEwb,IAAA,GAC1B2O,GAAK,IACR0M,sBAAuB1M,EAAMyM,gBAEjC0D,EAAqB9e,IAAA,GACd2O,GAAK,IACR0M,sBAAuB1M,EAAMyM,eAE3C,EAEAtqC,yBAAA,SAAgBsxC,EAAuB59B,GACnC,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI+nC,EAAa,2BAAA/nC,OAA0BsP,IAAMvQ,QACvD1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAuB,GAE1C,EAEArD,2BAAA,SAAgBuxC,EAAyB79B,GACrC,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI+nC,EAAa,2BAAA/nC,OAA0BsP,GACzD,EAMA1T,sBAAA,SAAgBwxC,IACZ,SAAO/3B,EAAA2I,eAAc,CAACuqB,EADU1nC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,MACG9B,QAC5C1C,EAAAkb,KAAI,SAAArV,GAAU,OAAVgc,EAAAhc,EAAA,GAAU,EAAc,GAEpC,EAEAtG,gBAAA,SAAgByxC,EAAc/9B,GAA2B,IAAfggB,EAAAzuB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GACnD,SAAOwU,EAAA2I,eAAc,CACjBmZ,EAAe7nB,GACfk1B,IACAT,EAAWjZ,IAAA,GAAMwE,GAAK,IAAEgW,QAASh2B,EAAI05B,MAAO,OAC5CW,MACD5qC,QACC1C,EAAAkb,KAAI,SAAA4G,IAAmD,IAAAC,GAAAF,EAAAC,GAAA,GAAjDirB,GAAOhrB,GAAA,GAAcnL,GAAMmL,GAAA,GAAEkvB,GAAelvB,GAAA,GAC9CgrB,GAAQrJ,SADa3hB,GAAA,GACS+M,KAC1B,SAAC4U,IAAQ,OAAKA,GAASzwB,KAAO85B,GAAQnL,WAAW,GAErDmL,GAAQn2B,OAASA,GAAOwE,OACpB,SAACqkB,IAAK,OACFA,GAAMwJ,UAAY8D,GAAQ95B,IACzBwsB,GAAc2N,gBAAkBL,GAAQ95B,EAAE,GACjD,IACgCikB,GADhCD,GAAAa,EACkBiV,GAAQn2B,QAAM,QAAA0jB,GAAA,WAAE,IAAA4W,GAAzBzR,GAAKvI,GAAAh2B,MACXu+B,GAAcoK,aAEd,QAF0BqH,GAAID,GAAwBniB,KACnD,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOwsB,GAAM6J,iBAAiB,UAC1C,IAAA4H,QAAA,EAF8BA,GAE5BpH,qBACP,EAJA,IAAA7S,GAAA/O,MAAAgP,GAAAD,GAAAc,KAAAC,MAAAsC,IAIC,OAAApR,IAAA+N,GAAAxT,EAAAyF,GAAA,SAAA+N,GAAA8B,GAAA,CACDgU,UAAQkE,gBAAkBA,GAAgB71B,OAAO,SAACgiB,IAAK,OACnD2P,GAAQn2B,OAAOkY,KACX,SAAC2Q,IAAK,OAAKA,GAAM6J,oBAAsBlM,GAAMnqB,EAAE,EAClD,GAEE85B,EACX,GAER,EAEAxtC,uBAAA,SAAgB4xC,EACZle,EACA8U,GAEA9U,SAAMzgB,KAAO,mBACNwG,EAAA2I,eAAc,CAAC+lB,EAAYzU,IAAK,EAAG8T,EAAAxT,eAAcN,KAASvwB,QAC7D1C,EAAAkb,KAAI,SAAA0sB,IAAA,IAAApV,GAAA3Q,EAAA+lB,GAAA,GAAUnS,GAAQjD,GAAA,UAAVA,GAAA,GACDpX,OACH,SAACqkB,IAAK,OACFsI,GAAQviC,SAASi6B,GAAMxsB,MACtBwiB,GAAS3G,KACN,SAACwI,IAAO,IAAA8Z,GAAA,OACJ9Z,GAAQxmB,WAAa2uB,GAAMxsB,KACV,QADYm+B,GAC7B9Z,GAAQ6J,iBAAS,IAAAiQ,QAAA,EAAjBA,GAAmB5rC,SAASi6B,GAAMxsB,IAAG,EAC5C,EACR,GAGb,EAEA1T,yBAAAyoC,EA8BAzoC,sBAFC,SAEqB8xC,GAAmB90B,GAAA,OAAAoxB,GAAAppC,MAAA3E,KAAA4E,UAAA,EAazCjF,iCAAAwuC,GAkBAxuC,mCAFC,SAEqB+xC,GAAgCpY,EAAAQ,GAAA,OAAA0U,GAAA7pC,MAAA3E,KAAA4E,UAAA,oJC9XtDtE,EAAAzC,EAAA,OACAK,EAAAL,EAAA,OACAqM,EAAArM,EAAA,OACA0L,EAAA1L,EAAA,UAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,gBAEAo8B,EAAAC,aAAAr8B,EAAA,OAAA8B,GAYAA,eAWyB,eAAAgyC,EAAZ5lC,EAAYjM,EAAA,SAAAiM,IAAAhM,EAAAC,KAAA+L,EAAA,GAAA4lC,SAAZ5lC,yCAAY,iDAAZA,uDARLzL,EAAAyY,aACA7O,EAAA8B,iBACAzC,EAAAmC,YACAnC,EAAA0C,oBACA/N,EAAAgR,oBAIKnD,CAAY,sFCrCzBkuB,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GAEAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,mLCZA,IAAAiK,EAAA/L,EAAA,MASAyC,GAFAzC,EAAA,OACAA,EAAA,OACAA,EAAA,QACA8yB,EAAA9yB,EAAA,OACAuC,EAAAvC,EAAA,MAGA+zC,GADA/zC,EAAA,OACAA,EAAA,OACAg0C,EAAAh0C,EAAA,OAGAi0C,GAFAj0C,EAAA,OACAA,EAAA,MACAA,EAAA,8LAMYuK,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,GAAgBnF,EAAAkF,kEAAhBlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,GAAA0c,EAAAwa,IAAA,mCAD/Bv8B,EAAAiF,yBAAA,UACIjF,EAAA4J,qBAAA,EAAA+/B,EAAA,cACA3pC,EAAAmF,iBAAA,gCACAnF,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,gCAC/BnF,EADgEkF,wBAChElF,2CAHWA,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA6nB,UACP5pC,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,UAAA8V,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAA7lB,KAAAsY,EAAAwE,aAAA,KAC2BvmB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,UAAA8V,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAA7lB,KAAA,oCAqBfzJ,EAAAiF,yBAAA,cAAkDjF,EAAAmF,iBAAA,GAEhDnF,EAAAkF,kEAFgDlF,EAAAoF,sBAAApF,EAAA+L,4BAAAgW,EAAAvX,gCAQlDxK,EADJiF,yBAAA,WACIjF,CADiD,cACvCA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,GAC/BnF,EAD6CkF,wBAC7ClF,4CAD+BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAgW,EAAAzkB,iCAQnC0C,EAAAiF,yBAAA,YAOIjF,EAAAmF,iBAAA,iBACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,aACJnF,EAAAkF,mDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,GAGJnF,EAAAkF,kEAHIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,kBAAA0c,EAAAuN,QAAAgK,OAAA,yFAvDZt5B,EAAAiF,yBAAA,SAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA+nB,cAAa,GAMlB9pC,EAHJiF,yBAAA,UAGIjF,CADH,UAC4BA,EAAAmF,iBAAA,GAAoBnF,EAAAkF,yBAEzClF,EADJiF,yBAAA,WACIjF,CADwB,oBACOA,EAAAmF,iBAAA,GACnCnF,EAD+CkF,wBAC/ClF,GAIIA,EAHJiF,yBAAA,WAGIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAAmgC,EAAA,mBAGA/pC,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAogC,EAAA,cAIJhqC,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBAGIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,yBAgBAlF,EAfA4J,qBAAA,GAAAqgC,EAAA,aAeAjqC,CATC,GAAAkqC,EAAA,aASDlqC,CAHC,GAAAmqC,EAAA,6CAYTnqC,EADIkF,wBACJlF,0EAxDIA,EADA6I,qBAAA,aAAA7I,EAAAuJ,0BAAA,GAAAC,GACAxJ,CADqB,cAAAA,EAAAoqC,0BAAA,GAAAl8B,EAAA,MAAA6T,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAArkB,KAQQjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAAgW,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAAv2B,OAERiH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAAkZ,EAAAuX,QAAkBt5B,EAAAoF,sBAAApF,EAAA+L,4BAAAgW,EAAAsoB,QAMhBrqC,EAAAoF,oBAAA,GAAuBpF,EAAvB6I,qBAAA,gBAAAkZ,EAAAvX,KAAuBxK,CAAA,WAAAsqC,GAI9BtqC,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAAwoB,kBAAA,MAAAxoB,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAAxmB,UAAA,KAG6B9I,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzkB,UAYpC0C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAkZ,EAAAyoB,kBAAA,uBAAAzoB,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAAhkB,eASAtL,EAAAoF,sBAAApF,EAAA6I,qBAAA,8BAAAkZ,EAAAuN,QAAA,KAAAvN,EAAAuN,QAAAhkB,eAMAtL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,MAAAuU,EAAA0oB,kDASTzqC,EAAAkB,oBAAA,YAtEZ3J,uBAmFkC,eAAAmzC,EAArBC,EAAqB,SAAAC,GAuC9B,SAAAD,EACYv7B,EACAy7B,EACAnyC,EACAD,EACAiwB,GAAwB,IAAA7vB,EAAAlB,SAAAC,KAAA+yC,IAEhC9xC,EAAAC,EAAAlB,KAAA+yC,IANQv7B,UACAvW,EAAAgyC,SACAhyC,EAAAH,OACAG,EAAAJ,YACAI,EAAA6vB,WA1CI7vB,EAAA+wC,UAAoB,EACnB/wC,EAAAiyC,KAAO,IAAItpC,EAAAoV,aACX/d,EAAAkyC,OAAS,IAAIvpC,EAAAoV,aACb/d,EAAA2iB,IAAM,IAAIha,EAAAoV,aAEpB/d,EAAA0xC,gBAAkB,GAET1xC,EAAA4xC,0BACZ5xC,EAAK6vB,SAASsiB,eAAetwC,QACzB1C,EAAAkb,KACI,SAACa,GAAK,MAC4B,YAA9Blb,EAAKy2B,QAAQhkB,cACbyI,GACAlb,EAAKy2B,QAAQxmB,WAAaiL,EAAM9I,EAAE,IAE5CpS,CA8BN,CAACG,SAAA2xC,EAAAC,GAAAlzC,EAAAizC,EAAA,EAAA1xC,IAAA,mBAAAiE,IA5BD,WAA2B,IAAA+tC,EAAAptC,EACvB,OACgB,QAAZotC,EAAArzC,KAAK03B,eAAO,IAAA2b,OAAA,EAAZA,EAAchD,WAAWrd,kBACZ,QADyB/sB,KACtC3F,EAAAkG,sBAAa,IAAAP,OAAA,EAAbA,EAAeS,MAAMssB,cAE7B,GAAC,CAAA3xB,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,SAAAiE,IAED,WAAiB,IAAAguC,EAAAC,EAAAC,EAAAC,EACb,OAAgB,QAAhBH,EAAItzC,KAAK03B,eAAO,IAAA4b,GAAZA,EAAcI,QAAgB,UACL,cAAb,QAAZH,EAAAvzC,KAAK03B,eAAO,IAAA6b,OAAA,EAAZA,EAAc7R,QAA8B,UACnB,cAAb,QAAZ8R,EAAAxzC,KAAK03B,eAAO,IAAA8b,OAAA,EAAZA,EAAc9R,SACW,eAAb,QAAZ+R,EAAAzzC,KAAK03B,eAAO,IAAA+b,OAAA,EAAZA,EAAc/R,QAA+B,QACA,SAErD,GAAC,CAAArgC,IAAA,WAAAC,MAYM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,cACA7S,KAAKizC,OAAOU,cAAc5gC,UAAU,SAAC6gC,GAAM,IAAAC,EAAA,OACvCD,EAAO/G,IAAI,aACC,QAAZgH,EAAA/uC,EAAK4yB,eAAO,IAAAmc,OAAA,EAAZA,EAAcxgC,MAAOugC,EAAOtuC,IAAI,SAC1BR,EAAKotC,cACL,EAAE,GAGpB,GAAC,CAAA7wC,IAAA,cAAAC,MAEM,SAAY87B,GACM,IAAA0W,EAAjB1W,EAAQ1F,UACR13B,KAAK2yC,gBAAkB3yC,KAAK+zC,eACZ,QAD0BD,EACtC9zC,KAAK03B,eAAO,IAAAoc,OAAA,EAAZA,EAAcrgC,aAG1B,GAAC,CAAApS,IAAA,OAAAiE,IAED,WAAe,IAAA0uC,EAAAC,EACX,MAA2B,UAAX,QAAZD,EAAAh0C,KAAK03B,eAAO,IAAAsc,OAAA,EAAZA,EAAcphC,MAAwB,OACf,aAAX,QAAZqhC,EAAAj0C,KAAK03B,eAAO,IAAAuc,OAAA,EAAZA,EAAcrhC,MAA2B,YACtC,MACX,GAAC,CAAAvR,IAAA,MAAAiE,IAED,WAAc,IAAA4uC,EACJriC,GAAmB,QAAZqiC,EAAAl0C,KAAK03B,eAAO,IAAAwc,OAAA,EAAZA,EAAcriC,OAAQiI,KAAKuX,MAClC8iB,KAAWxjB,EAAAoC,WAAUjZ,KAAKuX,MAAOxf,GACvC,SAAA9N,OAAUowC,EAAW,WAAUxjB,EAAAkI,QAAOhnB,EAAM,QAChD,GAAC,CAAAxQ,IAAA,WAAAiE,IAED,WAAmB,IAAA8uC,EACT59B,EAAQxW,KAAKc,KAAKmuB,aAAwB,QAAZmlB,EAAAp0C,KAAK03B,eAAO,IAAA0c,OAAA,EAAZA,EAAczgC,QAAS,IAC3D,SAAA5P,OAAUyS,GAAOf,cAAgBe,GAAOjD,MAAQ,GACpD,GAAC,CAAAlS,IAAA,SAAAiE,IAED,WAAiB,IAAA+uC,EAAAC,EAAAC,EACb,GAAgB,QAAhBF,EAAIr0C,KAAK03B,eAAO,IAAA2c,GAAZA,EAAcG,WAAY,MAAO,UACrC,IAAMzlB,GAAoB,QAAZulB,EAAAt0C,KAAK03B,eAAO,IAAA4c,OAAA,EAAZA,EAAcziC,OAAQiI,KAAKuX,MACnCvf,GAAuB,QAAZyiC,EAAAv0C,KAAK03B,eAAO,IAAA6c,OAAA,EAAZA,EAAcziC,WAAY,GACrC8R,KAAM+M,EAAA2H,YAAWvJ,EAAOjd,GACxB2iC,KAAM9jB,EAAA+jB,gBAAe,CACvB9T,MAAO5I,KAAK6I,MAAM/uB,EAAW,IAC7BgvB,QAAShvB,EAAW,KAEnB81B,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA7jC,UAAU4sB,EAAAkI,QAAO9J,EAAO/uB,KAAK2uB,aAAY,OAAA5qB,UAAM4sB,EAAAkI,QAC3CjV,EACA5jB,KAAK2uB,aACR,MAAA5qB,OAAK0wC,EAAG,IACb,GAAC,CAAApzC,IAAA,iBAAAC,MAEM,SAAeqzC,GAElB,OADY,IAAIC,WAAYC,gBAAgBF,EAAM,aACvC5D,KAAK+D,aAAe,EACnC,GAAC,CAAAzzC,IAAA,cAAAC,MAEM,WAAW,IAAA4E,EAAAlG,KACTA,KAAK03B,SACV13B,KAAKwD,QAAQ,OAAQ,WAAK,IAAAuxC,EAAAC,EAAAC,EAShBr9B,EAAW1R,EAAKsR,QAAQzC,KAPI,gBAA9B7O,EAAKwxB,QAAQhkB,aACPo+B,EAAAoD,gCACAtD,EAAAuD,6BAKyC,CAAE1yC,KAHnB,gBAA9ByD,EAAKwxB,QAAQhkB,aACP,CAAEgkB,QAASxxB,EAAKwxB,QAAS0d,WAAW,GACpClvC,EAAKwxB,UAEfxxB,EAAK2M,aACD,OAC0B,QADpBkiC,EACNn9B,EAAIM,kBAAkBg7B,YAAI,IAAA6B,OAAA,EAA1BA,EAA4BhiC,UAAU,kBAAM7M,EAAKgtC,KAAKh0B,MAAM,IAEhEhZ,EAAK2M,aACD,SAC4B,QADpBmiC,EACRp9B,EAAIM,kBAAkBi7B,cAAM,IAAA6B,OAAA,EAA5BA,EAA8BjiC,UAAU,kBACpC7M,EAAKitC,OAAOj0B,MAAM,IAG1BhZ,EAAK2M,aACD,MACyB,QADpBoiC,EACLr9B,EAAIM,kBAAkB0L,WAAG,IAAAqxB,OAAA,EAAzBA,EAA2BliC,UAAU,kBAAM7M,EAAK0d,IAAI1E,MAAM,GAElE,EACJ,IAAC,CAvI6B,CAAQ2yB,EAAA1pC,cAAY2qC,SAAzCC,0CAAoB3qC,EAAAC,4BAAAC,EAAAgQ,WAAAlQ,EAAAC,4BAAAG,EAAA6sC,gBAAAjtC,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAAH,EAAAC,4BAAA+b,EAAA4V,gBAAA,kDAApB+Y,EAAoBjqC,UAAA,mBAAAqW,OAAA,CAAAuY,QAAA,UAAAsa,SAAA,YAAA5yB,QAAA,CAAA8zB,KAAA,OAAAC,OAAA,SAAAvvB,IAAA,OAAA7a,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,2pCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAdzBhB,EAlEA4J,qBAAA,EAAAsjC,EAAA,WAkEAltC,CAlEmD,EAAAmtC,EAAA,YAkEnDntC,CAtDC,EAAAotC,EAAA,yBAAAptC,EAAA2c,wCAZmC3c,EAAA6I,qBAAA,OAAA5H,EAAAquB,SAW/BtvB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAquB,uPAqEAqb,CAAqB,yNCvGlC,IAAAnpC,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,OACA8yB,EAAA9yB,EAAA,OAEA43C,EAAA53C,EAAA,OACA63C,EAAA73C,EAAA,OAGAspC,GAFAtpC,EAAA,OACAA,EAAA,OACAA,EAAA,QAEA83C,EAAA93C,EAAA,6OAWgBuK,EAAAkB,oBAAA,wCAIAlB,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,uBAIJlB,EAAAkF,mEAHQlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAK,GAAAomB,SAAA,MAAApmB,GAAAomB,QAAA9B,eAAA,KAAAtkB,GAAAomB,QAAA9B,eAAAxL,qCAyCQhiB,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,GAERnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAMRnF,EADIkF,wBACJlF,8CAVcA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,GAAAomB,QAAAa,WAAA,qBAINnwB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,GAAAomB,QAAAa,WAAA,sDAQJnwB,EAAAkB,oBAAA,0BAEIlB,EAAA6I,qBAAA,gFAjCZ7I,EAAAiF,yBAAA,eAaIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,IAAA,IAAAC,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,GAAAskC,kBAAiB,GAiB1BxtC,EAfA4J,qBAAA,EAAA6jC,EAAA,aAeAztC,CAZC,EAAA0tC,EAAA,yBAAA1tC,EAAA2c,kCAkBL3c,EAAAkF,mGAhCIlF,EAAAiX,sBAAA,aAAA/N,EAAAomB,QAAAa,YACAnwB,EAAA6I,qBAAA,WAAAK,EAAAykC,aAYK3tC,EAAAoF,sBAAoBpF,EAApB6I,qBAAA,QAAAK,EAAAykC,YAAoB3tC,CAAA,WAAA4tC,iCAtBjC5tC,EAAAiF,yBAAA,YAKIjF,EAAA4J,qBAAA,EAAAikC,EAAA,iBA2CI7tC,EANJiF,yBAAA,cAMIjF,CADH,cACaA,EAAAmF,iBAAA,gBAElBnF,EAF4BkF,wBAE5BlF,8EAvCSA,EAAAoF,sBAAApF,EAAA6I,qBAAA,SAAAK,GAAAomB,QAAAwe,gBAAA5kC,GAAA6kC,aAAA7kC,GAAA8kC,cAAA,aAAA9kC,GAAAomB,QAAA6F,OAAA,gBAAAjsB,GAAAomB,QAAA6F,QAkCDn1B,EAAAoF,sBAAApF,EAAA6I,qBAAA,oBAAAolC,iCAsIgBjuC,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADkC,aACZA,EAAAmF,iBAAA,GAG1BnF,EADMkF,wBACNlF,GACAA,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,8BAT8BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAmiC,GAAA/iC,MAAA,QAOtBnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,KAAA6oC,GAAA3a,SAAA,uEAxFZvzB,EALJiF,yBAAA,WAKIjF,CADH,eAIOA,EAAA4I,qBAAA,uBAAAulC,GAAAnuC,EAAAgJ,wBAAA+E,IAAAoH,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,GAAA2qB,aAAAsa,GAAAljC,KAAA/B,GAAA2qB,aAAAsa,GAAAljC,IAAA,GAMIjL,EADJiF,yBAAA,WACIjF,CAD0B,YAEtBA,EAAAmF,iBAAA,gCAQRnF,EADIkF,wBACJlF,GA2BIA,EA1BJiF,yBAAA,WA0BIjF,CADH,cAEOA,EAAAmF,iBAAA,GASRnF,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,WAGIjF,CADH,kBAEOA,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,aAQIjF,EAAA4J,qBAAA,GAAAwkC,EAAA,cAgBRpuC,EADIkF,wBACJlF,+DAlFgBA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,kBAAArF,EAAAiM,sBAAA,KAAAkiC,GAAApa,WAAA,UAAA7qB,EAAAqd,aAAA,KAWJvmB,EAAAoF,oBAAA,GAiBApF,EAjBAiX,sBAAA,0BAAAk3B,GAAAhZ,MAiBAn1B,CAfC,oCAAAmuC,GAAAhZ,MAeDn1B,CAZC,0BAAAmuC,GAAAhZ,OAAA,aAAAgZ,GAAAhZ,MAYDn1B,CARC,oCAAAmuC,GAAAhZ,OAAA,aAAAgZ,GAAAhZ,MAQDn1B,CAJC,wBAAAmuC,GAAAhZ,MAIDn1B,CADC,kCAAAmuC,GAAAhZ,OAIDn1B,EAAA6I,qBAAA,aAAAslC,GAAAhZ,OAAA,aAKIn1B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,iBAAA8oC,GAAAhZ,MAAA,oBAAAgZ,GAAAhZ,MAAA,wBAcAn1B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA2qB,aAAAsa,GAAAljC,IAAA,iCAURjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2qB,aAAAsa,GAAAljC,IAAA,eAQqBjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAslC,GAAAha,oCA3FzCn0B,EAAAwY,kCAAA,GAIQxY,EAHJiF,yBAAA,WAGIjF,CADH,WACGA,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAykC,EAAA,gBAmGRruC,EADIkF,wBACJlF,iFAtGQA,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,MAAAvc,GAAAomB,QAAAgf,aAAA,KAAAplC,GAAAomB,QAAAgf,aAAA1xC,SAAA,8BAKwBoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,GAAAomB,QAAAgf,2CAwGhCtuC,EAAAwY,kCAAA,GACIxY,EAAAkB,oBAAA,sGAEIlB,EAAAoF,sBAEApF,EAFA6I,qBAAA,YAAAK,GAAAkF,MAAA,KAAAlF,GAAAkF,MAAAhD,OAEApL,CAFqB,WAAAkJ,GAAAvI,SAErBX,CADqB,UAAAA,EAAAuJ,0BAAA,EAAAC,sEAmBrCxJ,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA8P,IAAA,IAAA5P,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA4hC,KAAAh0B,OAAW,GAGhB9W,EADJiF,yBAAA,WACIjF,CAD+C,cACrCA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAERvlB,EAF8BkF,wBAE9BlF,uEACAA,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAulC,IAAA,IAAArlC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAslC,gBAAe,GAGpBxuC,EADJiF,yBAAA,WACIjF,CAD+C,iBAE3CA,EAAAmF,iBAAA,cACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAERvlB,EAFiCkF,wBAEjClF,uEACAA,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAylC,IAAA,IAAAvlC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6hC,OAAAj0B,OAAa,GAGlB9W,EADJiF,yBAAA,WACIjF,CAD+C,iBAClBA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACnClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAERvlB,EAFgCkF,wBAEhClF,uEACAA,EAAAiF,yBAAA,eAA6CjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0lC,IAAA,IAAAxlC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsS,IAAA1E,OAAU,GAExD9W,EADJiF,yBAAA,WACIjF,CAD+C,iBAClBA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACnClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAERvlB,EAF6BkF,wBAE7BlF,MAvSZzI,+BA4SyC,eAAAo3C,GAA5B5B,GAA4B,WAgFjC,OAAAr1C,EALJ,SAAAq1C,GACqCvT,GACzB/gC,EACAC,EACA0W,IAAkB,IAAA67B,GAAAC,GAAAvzC,EAAAC,KAAAm1C,IAHOn1C,KAAA4hC,YACzB5hC,KAAAa,YACAb,KAAAc,OACAd,KAAAwX,WA9EKxX,KAAAkzC,KAAO,IAAItpC,EAAAoV,aACXhf,KAAAmzC,OAAS,IAAIvpC,EAAAoV,aACbhf,KAAA4jB,IAAM,IAAIha,EAAAoV,aACXhf,KAAA03B,QAAU13B,KAAK4hC,SACxB5hC,KAAAg3C,UAAW,EACXh3C,KAAAm2C,aAAc,EACdn2C,KAAA+1C,aAAc,EACL/1C,KAAA+I,SAAW,CACvB,CACIrD,SAAsB,QAAd2tC,GAAErzC,KAAK03B,eAAO,IAAA2b,QAAA,EAAZA,GAAcniC,SACxBuV,QAASivB,EAAAhvB,kBAGD1mB,KAAAi3C,aAA2B,QAAb3D,GAACtzC,KAAK03B,eAAO,IAAA4b,IAAiB,QAAjBA,GAAZA,GAAcpgB,uBAAe,IAAAogB,KAA7BA,GAA+BpkB,KAC1D,SAAClsB,IAAC,MAAwB,kBAAnBA,GAAE0Q,YAAgC,GAiE1C,EAAC,EAAArS,IAAA,QAAAiE,IA9DJ,WAAgB,IAAAiuC,EACZ,OAAOvzC,KAAKc,KAAKmuB,aAAwB,QAAZskB,EAAAvzC,KAAK03B,eAAO,IAAA6b,OAAA,EAAZA,EAAc5/B,QAAS,GACxD,GAAC,CAAAtS,IAAA,WAAAiE,IAED,WAAmB,IAAArE,EAAAjB,KACf,GAAIA,KAAKa,UAAUyE,IAAI,kBAAmB,CACtC,IAAM4xC,EAASl3C,KAAKc,KAAKq2C,QAAQjoB,KAAK,SAACgoB,IAAM,IAAA1D,GAAA,QAC5B,QAAZA,GAAAvyC,EAAKy2B,eAAO,IAAA8b,QAAA,EAAZA,GAAc7/B,QAAS,IAAI/N,SAASsxC,GAAO7jC,GAAG,GAEnD,GAAI6jC,EAAQ,OAAOA,CACvB,CACA,OAAOl3C,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAC9W,IAAG,IAAAq7B,GAAA,QACnB,QAAZA,GAAAxyC,EAAKy2B,eAAO,IAAA+b,QAAA,EAAZA,GAAc9/B,QAAS,IAAI/N,SAASwS,GAAI/E,GAAG,EAEpD,GAAC,CAAAhS,IAAA,WAAAiE,IAED,WACI,MAAqC,YAA9BtF,KAAK03B,QAAQhkB,YACxB,GAAC,CAAArS,IAAA,eAAAiE,IAED,WAAuB,IAAA8xC,EACnB,OAAOp3C,KAAKa,UAAUyE,IAAG,OAAAvB,QACF,QAAZqzC,EAAAp3C,KAAK03B,eAAO,IAAA0f,OAAA,EAAZA,EAAcxkC,OAAQ,WAAU,iBAE/C,GAAC,CAAAvR,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAK03B,QAAQa,UACxB,GAAC,CAAAl3B,IAAA,sBAAAiE,IAED,WAA8B,IAAAwuC,EAC1B,MAC2B,UAAX,QAAZA,EAAA9zC,KAAK03B,eAAO,IAAAoc,OAAA,EAAZA,EAAclhC,OACd5S,KAAKa,UAAUyE,IAAI,2BAE3B,GAAC,CAAAjE,IAAA,iBAAAiE,IAED,WAAyB,IAAA0uC,EAAAC,EAAAC,GACfmD,GAAKv9B,KAAKuX,MACVtC,GAAsC,KAAlB,QAAZilB,EAAAh0C,KAAK03B,eAAO,IAAAsc,OAAA,EAAZA,EAAcsD,eACtB1zB,GAAkC,KAAhB,QAAZqwB,EAAAj0C,KAAK03B,eAAO,IAAAuc,OAAA,EAAZA,EAAcsD,aAC1B,OAAgB,QAAhBrD,GAAIl0C,KAAK03B,eAAO,IAAAwc,IAAZA,GAAc1jB,QAAgBzB,IAASsoB,GACpCtoB,IAASsoB,IAAMA,IAAMzzB,EAChC,GAAC,CAAAviB,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,iBAAAiE,IAED,WAAyB,IAAA8uC,EAAAC,EAAAC,GACrB,OAAgB,QAAhBF,EAAIp0C,KAAK03B,eAAO,IAAA0c,GAAZA,EAAcV,QAAgB,UACL,cAAb,QAAZW,EAAAr0C,KAAK03B,eAAO,IAAA2c,OAAA,EAAZA,EAAc3S,QAA8B,UACnB,cAAb,QAAZ4S,GAAAt0C,KAAK03B,eAAO,IAAA4c,QAAA,EAAZA,GAAc5S,QAA8B,QACC,SAErD,GAAC,CAAArgC,IAAA,SAAAiE,IASD,WAAiB,IAAAkyC,EAAAC,EAAAC,GACb,GAAgB,QAAhBF,EAAIx3C,KAAK03B,eAAO,IAAA8f,GAAZA,EAAchD,WAAY,MAAO,UACrC,IAAMzlB,IAAoB,QAAZ0oB,EAAAz3C,KAAK03B,eAAO,IAAA+f,OAAA,EAAZA,EAAc5lC,OAAQiI,KAAKuX,MACnCvf,IAAuB,QAAZ4lC,GAAA13C,KAAK03B,eAAO,IAAAggB,QAAA,EAAZA,GAAc5lC,WAAY,GACrC8R,MAAM+M,EAAA2H,YAAWvJ,GAAOjd,IACxB2iC,MAAM9jB,EAAA+jB,gBAAe,CACvB9T,MAAO5I,KAAK6I,MAAM/uB,GAAW,IAC7BgvB,QAAShvB,GAAW,KAEnB81B,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA7jC,UAAU4sB,EAAAkI,QAAO9J,GAAO/uB,KAAK2uB,aAAY,OAAA5qB,UAAM4sB,EAAAkI,QAC3CjV,GACA5jB,KAAK2uB,aACR,MAAA5qB,OAAK0wC,GAAG,IACb,GAAC,CAAApzC,IAAA,kBAAAC,OAAAq2C,GAAAn2C,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAmD,GAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAnC,KAAK+1C,aAAc,EAAK9zC,GAAAE,KAAA,KAClBglC,EAAAjO,gBAAel5B,KAAK03B,QAAQrkB,IAAKrT,KAAK03B,QAAQa,YAC/Ct1B,YAAWkB,MACL,SAACnB,IACJ,QAAA1C,EAAAqU,aAAY,6BACZ7P,GAAKixC,aAAc,EACb/yC,EACV,GAAE,OACLhD,KAAK03B,QAAgBa,YAAcv4B,KAAK03B,QAAQa,WACjDv4B,KAAKm2C,aAAen2C,KAAK03B,QAAQa,cACjCj4B,EAAAs3C,eAAa,gBAAA7zC,OAEL/D,KAAK03B,QAAQa,WAAa,aAAe,kBAGjDv4B,KAAK+1C,aAAc,EAAM,wBAAA9zC,GAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5B,SAAA41C,IAAA,OAAA+B,GAAAhzC,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,SAAAC,MAEM,SAAO+R,GACV,IAAMqkB,EAAU13B,KAAK03B,QAAQxE,gBAAgBhE,KACzC,SAAClsB,IAAC,OAAKA,GAAEkO,WAAamC,CAAE,GAE5B,OAAIqkB,EAAQgK,OAAehK,EAAQgK,OAC5BhK,EACDA,EAAQgY,SACJ,WACAhY,EAAQc,SACR,WACA,UACJ,SACV,GAAC,CAAAn3B,IAAA,eAAAC,MAEM,WAAY,IAAA4E,EAAAlG,KACfA,KAAKg3C,UAAW,EACJh3C,KAAKwX,QAAQzC,KAAK0gC,EAAAoC,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXt1C,KAAM,CACFgZ,KAAM,CACFpI,GAAIrT,KAAK4hC,SAAS1wB,SAClBqC,KAAMvT,KAAK4hC,SAAStuB,WACpBE,OACIxT,KAAK4hC,SAAShM,eAAepiB,QAC7BxT,KAAK03B,QAAQxmB,SACjBsF,MAAOxW,KAAKwW,UAIpBwB,cAAcjF,UAAU,kBAAO7M,EAAK8wC,UAAW,CAAK,EAC5D,GAAC,CAAA31C,IAAA,gBAAAC,MAEM,WACHtB,KAAKwX,QAAQzC,KAAK4gC,EAAAqC,2BAA4B,CAC1Cv1C,KAAM,CAAE4Q,GAAIrT,KAAK03B,QAAQ6J,UAAU,IAAMvhC,KAAK03B,QAAQxmB,WAE9D,KA1DC,IAAAymC,EA0DA,CA3JoC,GA2JpCZ,UA3JQ5B,8CAA4B/sC,EAAAC,4BA4EzByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAA4P,WAAA,mDA5ElB68B,GAA4BrsC,UAAA,4BAAAsW,QAAA,CAAA8zB,KAAA,OAAAC,OAAA,SAAAvvB,IAAA,OAAA3a,MAAA,GAAAC,KAAA,GAAAkE,OAAA,0DAhN+BoiB,UAAAC,MAAAC,EAAA,0FAgCDF,UAAAG,MAAAD,EAAA,2GACnC,iBA4INF,UAAAI,MAAAF,EAAA,6FAYAF,UAAAM,MAAAJ,EAAA,gGAUAF,UAAAO,MAAAL,EAAA,+FAMAF,UAAAyoB,MAAAvoB,EAAA,87GA/RlBtnB,EAHJiF,yBAAA,UAGIjF,CADH,WAQOA,EAJA4J,qBAAA,EAAAkmC,EAAA,aAIA9vC,CADC,EAAA+vC,EAAA,cAUD/vC,EAAAiF,yBAAA,WAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAGQlF,EAFRiF,yBAAA,WAEQjF,CAFiD,WAEjDA,CADkB,oBAEdA,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAomC,EAAA,cAoDRhwC,EADIkF,wBACJlF,GAKQA,EAJRiF,yBAAA,YAIQjF,CAJgC,YAIhCA,CADH,YACGA,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,kCACTnF,EADqDkF,wBACrDlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAClBlF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,IACTnF,EADqBkF,wBACrBlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACblF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,IAGRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,IAMZnF,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAAqmC,EAAA,uBA6GAjwC,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAivC,eAAc,GAEvBlwC,EAAA4J,qBAAA,GAAAumC,EAAA,uBAYRnwC,EADIkF,wBACJlF,GAOIA,EANJiF,yBAAA,eAMIjF,CADH,eACaA,EAAAmF,iBAAA,YAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,oBAkCIjF,EAjCA4J,qBAAA,GAAAwmC,EAAA,gBAiCApwC,CA5BC,GAAAqwC,EAAA,gBA4BDrwC,CAlBC,GAAAswC,EAAA,gBAkBDtwC,CANC,GAAAuwC,EAAA,iBAYLvwC,EAAAkF,gCA7RalF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAA5H,EAAAquB,SAAA,MAAAruB,EAAAquB,QAAA9B,gBAAA,MAAAvsB,EAAAquB,QAAA9B,eAAAxL,QAAA/gB,EAAAquB,QAAA9B,eAAAxL,OAAAplB,SAIAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAquB,SAAA,MAAAruB,EAAAquB,QAAA9B,gBAAA,MAAAvsB,EAAAquB,QAAA9B,eAAAxL,OAAA,KAAA/gB,EAAAquB,QAAA9B,eAAAxL,OAAAplB,QAUDoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,eAAAhW,EAAAquB,SAAA,MAAAruB,EAAAquB,QAAA9B,gBAAAvsB,EAAAquB,QAAA9B,eAAAxL,SAEAhiB,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,EAAAquB,QAAAv2B,MAAA,KAIiBiH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAA5H,EAAAuvC,gBACTxwC,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,EAAAopC,OAAA,KAMHrqC,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAquB,QAAAgc,SA2DItrC,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,MAAAhL,EAAAquB,QAAA7lB,KAAA,oBAIAzJ,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAopC,QAKDrqC,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,WAAAjW,EAAAmN,MAAA,KAAAnN,EAAAmN,MAAAf,gBAAA,MAAApM,EAAAmN,MAAA,KAAAnN,EAAAmN,MAAAjD,MAAA,KAAAlK,EAAAquB,QAAApkB,YAAAjK,EAAAquB,QAAAxmB,SAAA,KAOA9I,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,WAAAjW,EAAAwM,SAAA,KAAAxM,EAAAwM,SAAAJ,gBAAA,MAAApM,EAAAwM,SAAA,KAAAxM,EAAAwM,SAAAtC,MAAA,UAAAlK,EAAAwM,UAAAxM,EAAAwM,SAAAsZ,QAAA,KAAA9lB,EAAAwM,SAAAsZ,QAAA,QAOG/mB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA4tC,YAkHI7uC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA2tC,UA0BlB5uC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAwvC,UAUAzwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAyvC,eAAAzvC,EAAA0vC,qBAYA3wC,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAA2vC,gBAQkB5wC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2vC,gQAUtB7D,EAA4B,kSCxTzCt3C,EAAA,WACAD,EAAAC,EAAA,OACAyC,EAAAzC,EAAA,OAaAwC,EAAAxC,EAAA,OAMA8yB,EAAA9yB,EAAA,OACAub,EAAAvb,EAAA,OASAuC,EAAAvC,EAAA,MAeAguC,GAFAhuC,EAAA,OAEAA,EAAA,QACAo7C,EAAAp7C,EAAA,OACAspC,EAAAtpC,EAAA,OACAq7C,EAAAr7C,EAAA,OACAs7C,EAAAt7C,EAAA,OAEAu7C,GADAv7C,EAAA,OACAA,EAAA,QACAu8B,EAAAv8B,EAAA,UACAA,EAAA,kFAIMw7C,EAAgB,CAAC,OAAQ,UAAW,SAAU,YAkCpD15C,qBAGgC,eAAA25C,EAAnBvoC,EAAmB,SAAAnQ,GAmP5B,SAAAmQ,EACYP,EACA3P,EACAC,EACA0W,EACA+hC,EACAC,GAA0B,IAAAv4C,EAAAlB,SAAAC,KAAA+Q,IAElC9P,EAAAC,EAAAlB,KAAA+Q,IAPQP,UACAvP,EAAAJ,YACAI,EAAAH,OACAG,EAAAuW,UACAvW,EAAAs4C,YACAt4C,EAAAu4C,UAxPJv4C,EAAAw4C,MAAQ,IAAIrgC,EAAAuB,gBAAiC,QAC7C1Z,EAAAsmC,SAAW,IAAInuB,EAAAuB,gBAAoC,CACvD/H,KAAM,SAEF3R,EAAA2gC,SAAW,IAAIxoB,EAAAuB,gBAAyB,MACxC1Z,EAAAy4C,cAAwC,GACxCz4C,EAAAgwB,SAAW,IAAI7X,EAAAuB,gBAAwB,IAExC1Z,EAAAgT,aAAwB,IAAI43B,EAAApW,QAC/BrxB,KAAKo1B,MACDx1B,eAAe4D,QAAQ,gCAAkC,OAGjD3G,EAAAqhB,QAAUrhB,EAAKgwB,SAASnW,eACxB7Z,EAAA+gB,QAAU/gB,EAAKsmC,SAASzkC,QAAK1C,EAAAsyB,aAAY,IACzCzxB,EAAAyP,QAAOuoC,EAAAU,uBAEP14C,EAAAsV,aAAwC6C,EAAA2I,eAAc,CAClE9gB,EAAKH,KAAK2W,gBACVxW,EAAK+gB,QAAQlf,QAAK1C,EAAAsxB,yBAAwB,WAC3C5uB,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAA3rB,GAAoB,IAAA6B,EAAAma,EAAAhc,EAAA,GAAX2M,GAAI9K,EAAA,GAAJ8K,KACf,IADW9K,EAAA,GACD,SAAOsR,EAAAQ,IAAG,IACpB,OAAQhH,IACJ,IAAK,OACD3R,SAAKgwB,SAAS9uB,KAAI,oBACXlB,EAAK24C,iBAAiB,SACjC,IAAK,UACD34C,SAAKgwB,SAAS9uB,KAAI,6BACXlB,EAAK24C,iBAAiB,kBACjC,IAAK,SACD34C,SAAKgwB,SAAS9uB,KAAI,sBACXlB,EAAK24C,iBAAiB,WAErC,SAAOxgC,EAAAQ,IAAG,GACd,IAAC,EACDxZ,EAAAyiB,KAAI,kBAAM5hB,EAAKgwB,SAAS9uB,KAAI,GAAI,MAChC/B,EAAAsyB,aAAY,IAGAzxB,EAAA8H,SAAiC9H,EAAKsV,UAAUzT,QAC5D1C,EAAAkb,KAAI,SAAC+W,GACD,IACmCiF,GAD7BtkB,EAAiB,GAAGqkB,EAAAa,EACC7F,GAAQ,IAAnC,IAAAgF,EAAA/O,MAAAgP,GAAAD,EAAAc,KAAAC,MAAqC,KAAxBrvB,GAAQuuB,GAAAh2B,MAARyH,SACTA,cAAoBy1B,OACdz1B,GAASsf,QAAQ,SAACrlB,IAAC,OAAKgQ,EAAKimB,KAAKj2B,GAAE,EAE9C,CAAC,OAAAsmB,IAAA+N,EAAAxT,EAAAyF,GAAA,SAAA+N,EAAA8B,GAAA,CACD,SAAO74B,EAAAqvC,QAAO38B,GAAMwJ,KAAK,SAACyW,GAAG3U,IAAC,OAAK2U,GAAEqV,cAAchqB,GAAE,EACzD,IAAC,EACDle,EAAAsyB,aAAY,IAGAzxB,EAAA44C,iBAEZzgC,EAAA2I,eAAc,CAAC9gB,EAAKH,KAAK4W,cAAezW,EAAKsmC,WAAWzkC,QACxD1C,EAAAwxB,WAAU,SAAA1P,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAUtP,GAAIuP,EAAA,GAAJvP,KAAI,OACpBjP,QAAQslB,IADI9G,EAAA,GAEH7G,IAAI,SAAClD,IAAG,SACT/X,EAAAuoC,cAAaxwB,GAAI/E,GAAE,GAAAtP,OAAK6O,GAAI,mBAAkB3P,WAAW,GAEhE,MAEL7C,EAAAkb,KAAI,SAACw+B,GACD,IACkCriB,GAD5BsiB,EAAU,GAAGviB,EAAAU,EACC4hB,GAAc,IAAlC,IAAAtiB,EAAAlP,MAAAmP,GAAAD,EAAAW,KAAAC,MAAoC,KAAzBsP,GAAKjQ,GAAAn2B,MACZy4C,EAAQrS,GAAMr0B,IACVq0B,GAAMhxB,mBAAmB8nB,MAAQkJ,GAAMhxB,QAAU,EACzD,CAAC,OAAA4S,IAAAkO,EAAA3T,EAAAyF,GAAA,SAAAkO,EAAA2B,GAAA,CACD,OAAO4gB,CACX,IAAC,EACD35C,EAAAsyB,aAAY,IAGAzxB,EAAA+4C,uBAAsB5gC,EAAA2I,eAAc,CAChD9gB,EAAK+gB,QACL/gB,EAAKsV,UACLtV,EAAK44C,iBACLzgC,EAAA6gC,OAAMh5C,EAAKyP,KAAKpL,IAAI,QAAQwN,gBAAcsG,EAAA8gC,OAAM,OAAK,EACrD9gC,EAAA6gC,OAAMh5C,EAAKyP,KAAKpL,IAAI,YAAYwN,gBAAcsG,EAAA8gC,OAAM,QACrDp3C,QACC1C,EAAAob,QACI,kBACIva,EAAKyP,KAAKse,cAAcnd,KAAO,GAC/B5Q,EAAKyP,KAAKse,cAAcld,SAAW,CAAC,MAE5C1R,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,SAAAmlB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAQ,OACR/mC,EAAKgwB,SAAS9uB,KAAI,YAAA4B,OADV6uB,EAAA,GAAJhgB,KAC+B,oBAAmB,MAE1DxS,EAAAwxB,WAAU,SAAAiB,GAAuC,IAAAsnB,EAAA/mB,EAAAnR,EAAA4Q,EAAA,GAArC7Q,GAAOoR,EAAA,GAAE7c,GAAS6c,EAAA,GAAEgnB,GAAYhnB,EAAA,GACxCinB,GAAwCp5C,EAAKyP,KAAKse,cAAnCnd,EAAIwoC,GAAJxoC,KAAMC,EAAQuoC,GAARvoC,SAAU2a,GAAI4tB,GAAJ5tB,KAC/B,OADa4tB,GAAP7pB,UAEF3e,KAAO8e,EAAA6C,YAAW3hB,GAAM6jB,UACxB5jB,EAAW,SAERq1B,EAAAmT,oBAAmB,CACtBhnB,gBAAc3C,EAAA4C,aAAY1hB,GAC1B4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA2H,YAAWzmB,EAAMC,IACzCc,KAAMoP,GAAQpP,KACde,MACIqO,GAAQwmB,UACU,QADH2R,EACfl5C,EAAKH,KAAK+U,gBAAQ,IAAAskC,OAAA,EAAlBA,EAAoB9mC,KACpBpS,EAAKH,KAAKy5C,aAAalnC,KAC5BvQ,QACC1C,EAAAkb,KACI,SAACk/B,IACG,IAAMzrB,GAAQ9tB,EAAKyP,KAAKse,cAAcnd,MAChC+R,EAAM+M,EAAA2H,YACRvJ,GACA9tB,EAAKyP,KAAKse,cAAcld,UAC1B4jB,UACFz0B,EAAKy4C,cAAgB,GAAG,IACG/a,GADHO,GAAAhH,EACPsiB,IAAU,IAA3B,IAAAtb,GAAA5W,MAAAqW,GAAAO,GAAA/G,KAAAC,MACIn3B,EAAKy4C,cADI/a,GAAAr9B,OACgB,GAC5B,OAAAgoB,IAAA4V,GAAArb,EAAAyF,GAAA,SAAA4V,GAAA/F,GAAA,CAuCD,OAtCA/2B,QAAQO,IAAI,UAAW63C,IACLjkC,GAAUiF,OAAO,SAACqkB,IAAS,IAAA4a,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GACnCC,MAAgBz6C,EAAA06C,kBAClB,CACInpC,OACAC,WACAugB,SAAUwN,GACVprB,KAAMgY,OAAQnsB,EAAAkG,gBAElB4zC,GAAuB,QAAXK,GAAC5a,GAAMjsB,YAAI,IAAA6mC,QAAA,EAAVA,GAAYpnC,KACrB+mC,GAAuB,QAAXM,GAAC7a,GAAMjsB,YAAI,IAAA8mC,QAAA,EAAVA,GAAY7mC,YACzBumC,GAAan5C,EAAKH,KAAK+U,SAASxC,KAChC,IACN4nC,OACF74C,eAAQO,IACJ,UACAk9B,GAAMxsB,GACNmnC,GAAW50C,SAASi6B,GAAMxsB,MAGzB0nC,OACa,QAAbJ,GAAC9a,GAAMqb,cAAM,IAAAP,IAAZA,GAAc31C,SACZ66B,GAAMqb,OAAO/P,KAAK,SAACgQ,IAAG,SAClB76C,EAAAkG,eAAc00C,OAAOt1C,SAASu1C,GAAI,MAEvB,IAAnBtb,GAAMub,YACJp5B,GAAQjZ,WACU,QADF6xC,GACd54B,GAAQjZ,gBAAQ,IAAA6xC,QAAA,EAAhBA,GAAkB/J,MAAM,SAAC7tC,IAAC,OACtB68B,GAAM92B,SAASnD,SAAS5C,GAAE,QAEhCgf,GAAQwmB,SACNxmB,GAAQwmB,WAAsB,QAAfqS,GAAKhb,GAAMjsB,YAAI,IAAAinC,QAAA,EAAVA,GAAYxnC,KAChC2O,GAAQwmB,WACM,QADCsS,GACXjb,GAAMjsB,YAAI,IAAAknC,QAAA,EAAVA,GAAYjnC,cACnB2mC,GAAW50C,SAASi6B,GAAMxsB,MAC1BwsB,GAAMwb,WAEf,EAEJ,KACAj7C,EAAAkyB,YAAW,SAACtvB,IAAC,SAAKoW,EAAAQ,IAAG,GAAG,IAGpC,IAAC,EACDxZ,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,EAAKgwB,SAAS9uB,KAAK,GAAG,MACjC/B,EAAAsyB,aAAY,IAGAzxB,EAAAq6C,wBAAuBliC,EAAA2I,eAAc,CACjD9gB,EAAK+gB,QACL/gB,EAAK+4C,sBACNl3C,QACC1C,EAAAkb,KAAI,SAAAmtB,GAQA,QARwB8S,EAAAxnB,EAAA9R,EAAAwmB,EAAA,GAAtBzmB,GAAO+R,EAAA,GACHmnB,GAAS,GACTrT,GAAazlB,EAFA2R,EAAA,IAEcvX,KAAK,SAACyW,EAAG3U,IAAC,IAAAk9B,GAAAC,GAAA,OACjC,QADiCD,GACvCvoB,EAAErf,YAAI,IAAA4nC,IAAI,QAAJA,GAANA,GAAQnoC,UAAE,IAAAmoC,QAAA,EAAVA,GAAYlT,cAAoB,QAAPmT,GAACn9B,GAAE1K,YAAI,IAAA6nC,QAAA,EAANA,GAAQpoC,GAAG,GAEnCqoC,GAAyB,QAAfH,EAAAv5B,GAAQ05B,eAAO,IAAAH,GAAfA,EAAiBv2C,OAC3Bgd,GAAQ05B,QACR,IAACp7C,EAAAkG,gBAAek0B,EAAA,WAIlB,QAFMO,GAAQ,GACV4E,GAAQgI,GAAW8T,MAChB1gB,GAAMj2B,OAAS02C,GAAQ12C,UAEtBi2B,GAAMj2B,QACLi2B,GAAM/L,KAAK,SAAClsB,IAAC,IAAA44C,GAAAC,GAAA,OAAW,QAAND,GAAA54C,GAAE4Q,YAAI,IAAAgoC,QAAA,EAANA,GAAQvoC,OAAiB,QAAfwoC,GAAKhc,GAAMjsB,YAAI,IAAAioC,QAAA,EAAVA,GAAYxoC,GAAE,KAIpD4nB,GAAMhC,KAAK4G,IACXA,GAAQgI,GAAW8T,MAEvB,GAAI1gB,GAAMj2B,OAAS02C,GAAQ12C,OAAM,SACjCk2C,GAAOjiB,KAAKgC,GAChB,EAfO4M,GAAW7iC,QAAM01B,IAgBxB,OAAOwgB,EACX,IAyDAj6C,EAAK4R,aACD,kBACA5R,EAAKuP,QAAQsjB,OAAO/gB,UAAU,SAAC2kB,GAEvBA,aAAmB95B,EAAAk+C,gBAClBpkB,EAAQhqB,IAAI9H,SAAS,UACrByzC,EAAcnqB,KAAK,SAAClsB,GAAC,OAAK00B,EAAQhqB,IAAI9H,SAAS5C,EAAE,IAElD/B,EAAKwP,WAEb,IAEJxP,EAAKH,KAAK+B,YACLC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnB+P,UAAU,kBAAM9R,EAAK0R,WAAW,GAAG,GAAE1R,CAC9C,CAACG,SAAA2P,EAAAnQ,GAAAd,EAAAiR,EAAA,EAAA1P,IAAA,OAAAiE,IArED,WACI,OAAOtF,KAAKy5C,MAAMthC,UACtB,GAAC,CAAA9W,IAAA,UAAAiE,IAED,WACI,OAAOtF,KAAK4hC,SAASzpB,UACzB,GAAC,CAAA9W,IAAA,mBAAAC,MAEM,SAAiB+R,GACpB,OAAOrT,KAAK05C,cAAcrmC,EAC9B,GAAC,CAAAhS,IAAA,UAAAC,MAEM,WAGD,IAAAwD,EAAA9E,KAFF03B,EAAA9yB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIinC,EAAApW,QAAQ,CAC3BjF,QAASxwB,KAAKa,UAAUyE,IAAI,kCAGhCtF,KAAK0Q,KAAKqrC,QACV/7C,KAAK0Q,KAAKe,cACNpR,EAAA8rC,aAAWtd,IAAA,GAEA6I,GACAA,EAAQ9B,gBAEf,CAAC,UAAM3wB,EAAW,MAG1BjF,KAAK6S,aACD,cACA7S,KAAK0Q,KAAKoC,aAAaC,UAAU,WAC7B,IAAAipC,EAA2Bl3C,EAAK4L,KAAKse,cACrClqB,EAAK00C,QAAQ7mC,WAAW,CAAEd,KADdmqC,EAAJnqC,KACwBC,SADVkqC,EAARlqC,WAEdhN,EAAK8iB,WACT,IAEJ5nB,KAAKwD,QAAQ,OAAQ,WACjBsB,EAAK4L,KAAKe,WAAW,CACjBI,KAAM6lB,EAAQ7lB,KACdC,SAAU4lB,EAAQ5lB,UAE1B,GACA9R,KAAK4hC,SAASz/B,KAAK,IAAI0pC,EAAApW,QAAQiC,IAC/B13B,KAAKunC,SAASplC,KAAK,CAAEyQ,KAAM5S,KAAKunC,SAASpvB,WAAWvF,MACxD,GAAC,CAAAvR,IAAA,UAAAC,MA4BM,SAAQA,GACXtB,KAAKy5C,MAAMt3C,KAAKb,EACpB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWA,GACdtB,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASpvB,YAAe7W,GACzD,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAW6Z,EAAiB8gC,GAAe,IAAAC,EAC9C,GAAY,MAAP/gC,KAASnW,OACd,KAAM+D,GAAmC,QAAxBmzC,EAAAl8C,KAAKunC,SAASpvB,kBAAU,IAAA+jC,OAAA,EAAxBA,EAA0BnzC,WAAY,GACnDkzC,IAAWlzC,EAASnD,SAASuV,IAAUpS,EAASkwB,KAAK9d,IACpD8gC,GAAUlzC,EAASnD,SAASuV,IAC7BpS,EAASozC,OACLpzC,EAASqzC,UAAU,SAACv4B,GAAC,OAAKA,IAAM1I,CAAO,GACvC,GAERnb,KAAK2S,WAAW,CAAE5J,YAAU,CAChC,GAAC,CAAA1H,IAAA,YAAAC,MAEM,WACH,IAAK0C,eAAe4D,QAAQ,wBACxB,OAAO5H,KAAKynB,UAEhB,IAAMiQ,EAAU13B,KAAK4hC,SAASzpB,WAC9BnY,KAAK0Q,KAAKqrC,MAAM,CAAEtvB,QAAMnsB,EAAAkG,eAAe61C,aAAW/7C,EAAAkG,iBAClDxG,KAAK0Q,KAAKe,cACNpR,EAAA8rC,aAAWtd,IAAA,GAEC6I,GAAW,IACXA,GAAS9B,gBAAkB,IAEnC,CAAC,UAAM3wB,EAAW,MAG1BjF,KAAKunC,SAASplC,KAAK,CAAEyQ,KAAM5S,KAAKunC,SAASpvB,WAAWvF,MACxD,GAAC,CAAAvR,IAAA,YAAAC,MAEM,WACH0C,eAAes4C,WAAW,wBAC1Bt4C,eAAes4C,WAAW,gCAC1Bt8C,KAAKynB,SACT,GAAC,CAAApmB,IAAA,YAAAC,MAEM,WACH0C,eAAeC,QACX,uBACAG,KAAKC,UAASwqB,IAAA,GACP7uB,KAAK4hC,SAASzpB,aAAU,EACxB9X,EAAA8rC,aAAYnsC,KAAK0Q,KAAKse,eAAiB,GAAI,CAC1C,UACA/pB,EACA,QAIZjB,eAAeC,QACX,+BACAG,KAAKC,UAAUrE,KAAKunC,SAASpvB,YAAc,IAEnD,GAAC,CAAA9W,IAAA,WAAAC,MAEM,WACHtB,KAAK0Q,KAAKqrC,MAAM,CAAEtvB,QAAMnsB,EAAAkG,eAAe61C,aAAW/7C,EAAAkG,iBAClD,IAAM/D,EAAO2B,KAAKo1B,MACdx1B,eAAe4D,QAAQ,yBAA2B,MAEhD8vB,EAAU,IAAImU,EAAApW,QAAQhzB,GAC5BzC,KAAK4hC,SAASz/B,KAAKu1B,GACnB,IAAM6kB,KAAel8C,EAAA8rC,aAAWtd,MAAA,GAErBpsB,GACCi1B,GAAW,IACXA,GAAS9B,gBAAkB,IAEnC,CAAC,UAAM3wB,EAAW,KAEtBjF,KAAK0Q,KAAKe,WAAW8qC,GACrBv8C,KAAK2S,WAAUkc,EAAA,GACRzqB,KAAKo1B,MACJx1B,eAAe4D,QAAQ,iCAAmC,OAGtE,GAAC,CAAAvG,IAAA,gBAAAC,MAEM,WACH0C,eAAes4C,WAAW,+BAC1Bt8C,KAAKiU,aAAe,IAAI43B,EAAApW,OAC5B,GAAC,CAAAp0B,IAAA,uBAAAC,MAEM,WAA2C,IAAtBk7C,EAAA53C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAExB,GADA5E,KAAK0Q,KAAKiX,mBACL3nB,KAAK0Q,KAAKgE,OAAU8nC,EACzB,KAAM1uB,EAAQ,IAAI+d,EAAApW,QAAO5G,IAAA,GAClB7uB,KAAK03B,SACL13B,KAAK0Q,KAAKse,gBAEjBhvB,KAAKwX,QAAQzC,KAAKqkC,EAAAqD,0BAA2B,CAAEh6C,KAAMqrB,GAAO,CAChE,GAAC,CAAAzsB,IAAA,cAAAC,OAAAo7C,EAAAl7C,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAqgB,EAAA1gB,EAAAmlB,EAAA/P,EAAA,OAAAjV,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAK28C,iBAAgB,OACrB36B,SAAUhiB,KAAKunC,SAASpvB,WACxB7W,EAAQtB,KAAK0Q,KAAKse,cACpBvI,EAAO,8BAAA1iB,OAAiCie,EAAQpP,KAAI,KAAA7O,OACpDzC,EAAMgS,WACV,SAAAvP,UAAQ4sB,EAAAkI,QAAOv3B,EAAMuQ,KAAM,gBAAc9N,OACrCzC,EAAMwQ,SAAW,IACX,UAAS6e,EAAAkI,QAAOv3B,EAAMuQ,KAAM,UAC5B,IAENmQ,EAAQiZ,QACRxU,EAAO,GAAA1iB,OAAM0iB,EAAO,6EACvBxkB,EAAAE,KAAA,KACqB7B,EAAA8tB,kBAClB,CACIjtB,MAAK,QAAA4C,OAAUie,EAAQpP,MACvB6T,UACA4H,KAAM,CAAE5H,QAAS,oBAErBzmB,KAAKwX,SACR,OAPY,GAAPd,EAAOzU,EAAA4B,KAQW,SAApB6S,GAAS4X,OAAiB,CAAArsB,EAAAE,KAAA,cAAQ,iBAAgB,QACL,GAAjDuU,EAAQ4L,QAAQ,kCACZN,EAAQiZ,MAAK,CAAAh5B,EAAAE,KAAA,SAAAF,SAAAE,KAAA,GACPnC,KAAK48C,mBAAkBz4C,MAAO,SAACnB,GACjC,QAAA1C,EAAAqU,aAAYvQ,KAAKC,UAAUrB,IAC3B0T,EAAQhP,QACF1E,CACV,GAAE,QAAAf,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAEInC,KAAKmpB,WAAUhlB,MAAO,SAACnB,GACzB,QAAA1C,EAAAqU,aAAYvQ,KAAKC,UAAUrB,IAC3B0T,EAAQhP,QACF1E,CACV,GAAE,QACN0T,EAAQhP,QAAQ,yBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACnB,SAAA4Q,IAAA,OAAA8rC,EAAA/3C,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,WAAAC,MAAA,eAAA+nB,EAAA7nB,EAEM,eAAA0E,EAAAlG,KAAe68C,EAAYj4C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAQ,OAAAnD,IAAAC,KAAA,SAAAwD,EAAA43C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzN,GAAA0N,GAAAlpB,GAAAmpB,GAAAC,GAAAC,GAAA,IAAAh8C,EAAAo2B,GAAA6lB,GAAAjc,GAAAztB,GAAAzM,GAAAo2C,GAAAxP,GAAAt6B,GAAA,OAAAjS,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,UACjC+D,EAAKwK,KAAI,CAAAtL,GAAAjD,KAAA,aAAQ,sBAAqB,UACtC+D,EAAKwK,KAAKgE,MAAK,CAAAtP,GAAAjD,KAAA,+CAAA4B,UACwBzD,EAAAsU,kBACpC1O,EAAKwK,MACPmE,KAAK,MAAK,YAOuC,GANvD3O,EAAKwK,KAAKe,WAAW,CACjBiC,aACIxN,EAAKwK,KAAKse,cAActb,cACxBxN,EAAKqhC,SAASpvB,WAAWvF,OAE7BtR,EAAQ4E,EAAKwK,KAAKse,cAClB0I,GAAUxxB,EAAK07B,SAASzpB,YAAc,IAAI0zB,EAAApW,QACzConB,EAAY,CAAAz3C,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACP+D,EAAKu3C,uBAAsB5uB,IAAA,GACxB6I,IAAYp2B,GACjB4E,EAAKqhC,SAASpvB,WAAWvF,MAC5B,YAED1M,EAAKqzC,UAAUmE,eAAc,CAAAt4C,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACP+D,EAAKqzC,UAAUoE,YAAY,CAC7C/qC,KAAM1M,EAAKqhC,SAASpvB,WAAWvF,KAC/BgrC,cAAet8C,EAAMgS,WACrBzB,KAAMvQ,EAAMuQ,KACZC,SAAUxQ,EAAMwQ,SAChB0e,QAASlvB,EAAMkvB,UACjB,QANW,GAOD,OAPN+sB,GAAOn4C,GAAAvB,OAOR05C,GAASM,QAAO,CAAAz4C,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,kBACpBhC,EAAcs0B,eAAiB,CAC5BkoB,QAASP,GACTQ,WAAYR,GAAQQ,YACtB,QAEN,QAAgB,QAAZjB,EAACx7C,EAAMqS,aAAK,IAAAmpC,GAAXA,EAAa93C,SAAwC,QAAlC+3C,EAAI72C,EAAK07B,SAASzpB,WAAWxE,aAAK,IAAAopC,GAA9BA,EAAgC/3C,SACxD1D,EAAMqS,MAAQzN,EAAK07B,SAASzpB,WAAWxE,OAE3CzN,EAAK+qB,SAAS9uB,KAAK,yBACZb,EAAMwS,cACTxS,EAAMkvB,UACNlvB,EAAMuQ,QAAO8e,EAAA6C,YAAWlyB,EAAMuQ,MAAM6jB,UACpCp0B,EAAMwQ,SAAW,MAEbwvB,GAAwBhgC,EAAxBggC,SAAUztB,GAAcvS,EAAduS,iBACXvS,EAAMggC,gBACNhgC,EAAMuS,UAAUzO,GAAAjD,KAAA,MACFglC,EAAA6W,aACjB,IAAInS,EAAApW,QAAO5G,MAAA,GACJ3oB,EAAKqhC,SAASpvB,YACd7W,GAAK,IACRmS,YAAanS,EAAMgS,YAAchS,EAAMmS,YACvCwqC,UAAqB,QAAZjB,EAAE17C,EAAMmrB,YAAI,IAAAuwB,OAAA,EAAVA,EAAYzpC,KACvB2qC,SACgB,QAAXjB,EAAC37C,EAAMmrB,YAAI,IAAAwwB,GAAI,QAAJA,EAAVA,EAAY5pC,UAAE,IAAA4pC,GAAdA,EAAgBr3C,SAAS,KAAyB,GAAb,MAALtE,GAAW,QAAN47C,EAAL57C,EAAOmrB,YAAI,IAAAywB,OAAA,EAAXA,EAAa7pC,MAClC,QADyCo8B,MACtDnvC,EAAAkG,sBAAa,IAAAipC,QAAA,EAAbA,GAAep8B,IACnBuiB,eAAc/G,IAAA,GACLvtB,EAAcs0B,gBAAkB,IAAE,IACvCqF,MAAO35B,EAAM25B,MACbkjB,MAAO78C,EAAM68C,MACbC,YACc,QAAVjB,GAAA77C,EAAMmrB,YAAI,IAAA0wB,QAAA,EAAVA,GAAYiB,cAA2B,QAAjBnqB,MAAI3zB,EAAAkG,sBAAa,IAAAytB,QAAA,EAAbA,GAAemqB,cAEjD1O,UAAWxpC,EAAKrF,UAAUyE,IAAI,+BAElCg8B,GACM,CAAEmN,SAAUntC,EAAMmtC,SAAUnN,SAAUA,IACtCztB,GACA,CAAE27B,WAAY37B,IACd,IAEL5Q,YAAWkB,MACL,SAAC0f,IACJ3d,QAAK+qB,SAAS9uB,KAAK,IACb0hB,IAAG/d,OAAS+d,EACtB,GAAE,QA5BM,GAANzc,GAAMhC,GAAAvB,OA6BI,QAAZu5C,GAAA97C,EAAM0V,cAAM,IAAAomC,IAAZA,GAAcp4C,QAAuC,QAAjCq4C,GAAI3lB,GAAQ9B,eAAe5e,cAAM,IAAAqmC,IAA7BA,GAA+Br4C,QAAM,CAAAI,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,MACtCi4B,EAAAsX,kCAAgC7iB,IAAA,GAC9CznB,IAAM,IAAEsnC,cAAc,IAC3B,CACI78B,KAAMvQ,EAAMuQ,KACZC,SAAUxQ,EAAMwQ,SAChB0e,QAASlvB,EAAMkvB,QACf/b,KAAMnT,EAAM+8C,gBACZ1qC,MAAO,CAAmB,QAAnB6pC,GAACt3C,EAAKpF,KAAK+U,gBAAQ,IAAA2nC,QAAA,EAAlBA,GAAoBnqC,KAEhC/R,EAAM0V,QACT7S,MAAO,SAAC0f,IACLzhB,cAAQ0D,MAAM,iCAAkC+d,IAC9B,MAAdA,IAAG6d,SAAW,EACdphC,EAAAqU,aACI,wDAGRzO,EAAK+qB,SAAS9uB,KAAK,IACb0hB,IAAG/d,OAAS+d,EACtB,GAAE,QAnBY,GAARmqB,GAAQ5oC,GAAAvB,KAoBD,CAAAuB,GAAAjD,KAAA,cAAQ,oCAAmC,QAAAiD,UAAAjD,KAAA,GAClD6rC,KAAU,QAEpB9nC,SAAK+qB,SAAS9uB,KAAK,IACXuR,GAAiBpS,EAAjBoS,aACRxN,EAAKuK,YACI,QAAT6sC,EAAAp3C,EAAKwK,YAAI,IAAA4sC,GAATA,EAAW7rC,WAAW,CAAEiC,kBACxBxN,EAAK+N,aAAe7M,GACpBpD,eAAeC,QACX,8BACAG,KAAKC,UAAU+C,KAEnBlB,EAAKkP,QAAQ,WAAWhQ,GAAA9B,OAAA,SACjB8D,IAAM,yBAAAhC,GAAAX,OAAA,EAAAS,EAAA,EA5GyBzD,EA4GzB,GAChB,gBAAA0nB,IAAA,OAAAE,EAAA1kB,MAAA3E,KAAA4E,UAAA,EA/GA,IA+GA,CAAAvD,IAAA,mBAAAC,MAAA,eAAAg9C,EAAA98C,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAAu4C,EAAAC,EAAA9C,EAAA9oC,EAAA6rC,EAAA/tC,GAAAm3B,GAAA6W,GAAAloC,GAAAD,GAAAooC,EAAArc,EAAAsc,GAAAC,GAAAxrC,GAAA+e,GAAA0sB,GAAAC,GAAAtyB,GAAAoT,GAAA1J,GAAA6oB,GAAAl4C,EAAA9G,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OACyB,GADzBq8C,EAC8Bx+C,KAAKunC,SAASpvB,WAAvCujC,EAAO8C,EAAP9C,QAAgB9oC,EAAI4rC,EAAJ5rC,KAAF4rC,EAALvjB,MACP,CAAA90B,GAAAhE,KAAA,aAAQ,iCAAgC,OAGjD,MAFKs8C,EAAgB/C,EAAQlgC,OAC1B,SAACxY,IAAC,OAAKA,GAAE0D,WAAUpG,EAAAkG,eAAcE,KAAK,IAExB1B,QAAU,GAAC,CAAAmB,GAAAhE,KAAA,aACnB,wCAAuC,OAC3CuO,UAAO1Q,KAAK0Q,KAAKse,cAAa7oB,GAAAhE,KAAA,EACXnC,KAAKg6C,oBACzBl3C,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,OAFV4kC,OAGA6W,IAHA7W,GAAU1hC,GAAAtC,MAGmBqrB,KAC/B,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAO3C,GAAKQ,UAAYlO,GAAEwQ,SAAW9C,GAAKQ,QAAQ,GAEzDsF,GAAQxW,KAAKc,KAAKmuB,YAAY,CAAqB,QAArBsvB,EAACG,GAAgB9qC,YAAI,IAAA2qC,OAAA,EAApBA,EAAsBlrC,KAAIlN,GAAAjC,GAAA,CAE3Dw6C,IAAev4C,GAAAkzB,GAAAjX,EAAAjc,GAAAhE,KAAA,GACLnC,KAAKi/C,oBACXzoC,GAAMhD,OACN9C,GAAKQ,SACL22B,GACA4W,EAAcz5C,QACjB,QAAAmB,UAAA+4C,GAAA/4C,GAAAtC,KAAAsC,GAAAg5C,MAAAh5C,GAAAkzB,IAAAlzB,GAAA+4C,IAPC3oC,GAASpQ,GAAAjC,GAAAH,OAAAq7C,KAAAj5C,GAAAjC,GAAAiC,GAAAg5C,IASTR,KAAgBr+C,EAAAqvC,QAAM,IACvBrvC,EAAAkG,gBAAazC,OAAAqe,EAAKq8B,IACnB,SACHt4C,GAAAhE,KAAA,GACuBwB,QAAQslB,IAC5B01B,EAAcrjC,IAAI,SAACtY,GAAGitC,IAAG,OACrBnpC,EAAK22C,uBAAsB5uB,IAAA,GAEhBne,IAAI,IACPQ,SAAUqF,GAAU05B,IAAKz8B,QAAU+C,GAAU05B,IAAK58B,GAClDg9B,WAAYrtC,GAAE0D,QAElBkM,EACH,IAER,QAXK0vB,EAASn8B,GAAAtC,KAYT+6C,GAAcD,EAAcnjC,OAAO,SAACxY,GAAGitC,IAAG,OAAM3N,EAAU2N,GAAI,GAC9D4O,GAAU,GAAA96C,UAAMzD,EAAAkG,eAAcE,MAAK,KAAA3C,UAAI4sB,EAAAkI,QACzC/e,KAAKuX,MACL,cACH,KACGhe,GAAK,GACA+e,GAAI,EAAC,aAAEA,GAAIusB,EAAc35C,QAAM,CAAAmB,GAAAhE,KAAA,YAC/BmgC,EAAUlQ,IAAE,CAAAjsB,GAAAhE,KAAA,gBAAAgE,GAAA7C,OAAA,uBACXmpB,UAAOkyB,EAAcvsB,IACrByN,GAAQtpB,GAAU6b,IACxBpyB,KAAK0Q,KAAKe,WAAUod,IAAA,GACbne,IAAI,IACPmD,UAAWR,GACXoZ,KAAMA,GACN4jB,WAAY5jB,GAAK/lB,MACjBw3C,QAASzxB,GAAKpZ,GACdnC,SAAU2uB,IAAOxsB,GACjBC,WAAYusB,GAAMtsB,KAClBE,YAAaosB,GAAMtsB,KACnBC,OAAQqsB,IAAOrsB,QAAUqsB,IAAOxsB,GAChC4nB,MAAO4jB,GACPlrC,MAAOksB,GAAMjsB,QACPtT,EAAAqvC,QAAO,CACH3vC,KAAKc,KAAKy5C,aAAalnC,GACb,QADeyrC,GACzBjf,GAAMjsB,YAAI,IAAAkrC,QAAA,EAAVA,GAAYjrC,UACF,QADWkrC,GACrBlf,GAAMjsB,YAAI,IAAAmrC,QAAA,EAAVA,GAAY1rC,KAEhB,CAACrT,KAAKc,KAAKy5C,aAAalnC,OAC/BlN,GAAAhE,KAAA,GACenC,KAAKmpB,UAAS,GAAK,SAA/BgN,GAAGhwB,GAAAtC,MACDwP,KAAOA,KAAIA,GAAK8iB,GAAI9iB,IAAG,QAxBO+e,KAAGjsB,GAAAhE,KAAA,iBA0BzCy8C,GAAY55C,WACZ1E,EAAA++C,YAAU,4DAAAt7C,OAE4B,QAF5Bi7C,GACsDJ,GACvDtjC,IAAI,SAACtY,IAAC,OAAKA,GAAEuQ,MAAQvQ,GAAE0D,KAAK,UAAC,IAAAs4C,QAAA,EAD0BA,GAEtDnqC,KAAK,MAAK,MAEvB,yBAAA1O,GAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACJ,gBAAA48C,IAAA,OAAA0B,EAAA35C,MAAA3E,KAAA4E,UAAA,EAlFA,IAkFA,CAAAvD,IAAA,iBAAAC,MAAA,eAAAg+C,EAAA99C,EAAAC,IAAAC,KAEO,SAAAmF,IAAA,IAAA+Q,EAAAxQ,EAAAsJ,EAAA,OAAAjP,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,WACqD,IAArDnC,KAAKa,UAAUyE,IAAI,8BAAuC,CAAAyB,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,iBACxDsU,SAAM5X,KAAKwX,QAAQzC,KAAKmkC,EAAAqG,6BAA4Bx4C,EAAA5E,KAAA,EACrCwB,QAAQ67C,KAAK,CAC9B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALU,GAANmE,EAAML,EAAAlD,KAMW,SAAnBuD,GAAQknB,OAAiB,CAAAvnB,EAAA5E,KAAA,aAAQ,iBAAgB,OAC/CuO,EAAOkH,EAAIM,kBAAkBxH,KAAKse,cAAajoB,EAAA7C,GAAAzC,IAAAunB,KACnCtY,GAAI,YAAA3J,EAAAsyB,GAAAtyB,EAAA7C,MAAAk0B,KAAA,CAAArxB,EAAA5E,KAAA,SAAR,IACNuO,EADM3J,EAAAsyB,GAAA/3B,OACG,CAAAyF,EAAA5E,KAAA,cAAQ,2BAA0B,QAAA4E,EAAA5E,KAAA,iBAEnDyV,EAAIlQ,QAAQ,yBAAAX,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IACf,gBAAA28C,IAAA,OAAA2C,EAAA36C,MAAA3E,KAAA4E,UAAA,EAjBA,IAmBD,CAAAvD,IAAA,yBAAAC,MAAA,eAAAm+C,EAAAj+C,EACQ,SAAAmnC,EAEJ/1B,GAAiB,IAAA8sC,EAAA1/C,KADfqT,EAAEs1B,EAAFt1B,GAAInC,EAAQy3B,EAARz3B,SAAUW,EAAI82B,EAAJ92B,KAAMC,EAAQ62B,EAAR72B,SAAUu+B,EAAU1H,EAAV0H,WAAU,OAAA5uC,IAAAC,KAAA,SAAAi+C,GAAAC,IAAA,IAAAC,GAAAC,GAAAlQ,EAAAmQ,EAAA,OAAAt+C,IAAAO,KAAA,SAAAg+C,IAAA,cAAAA,GAAA99C,KAAA89C,GAAA79C,MAAA,UAGrCkuC,EAAU,CAAA2P,GAAA79C,KAAA,aAAQ,mCAAkC,UAC5C,gBAATyQ,EAAsB,CAAAotC,GAAA79C,KAAA,eAAA69C,GAAA18C,OAAA,UAAS,GAAI,OAAA08C,UAAA79C,KAAA,KAChBglC,EAAAxT,eAAc,CACjCL,gBAAc3C,EAAA4C,aAAY1hB,GAC1B4hB,cAAY9C,EAAA4C,aAAY1hB,EAAkB,GAAXC,EAAgB,KAC/Cc,OACAlM,MAAO2pC,EACPtD,MAAO,MACR9pC,YAAW,OAMb,KALG48C,GAPUG,GAAAn8C,KAOiB2X,OAC3B,SAACxY,IAAC,MACe,aAAbA,GAAE0+B,QACW,cAAb1+B,GAAE0+B,SACD1+B,GAAEw1B,QAAQ,IAGCtJ,KAAK,SAAClsB,IAAC,OAAKA,GAAEkO,WAAaA,GAAYmC,IAAOrQ,GAAEqQ,EAAE,GAAC,CAAA2sC,GAAA79C,KAAA,aAE/D+O,EAAStL,SAAS,KAAI,CAAAo6C,GAAA79C,KAAA,iBAAA4B,OACbmN,EAAQ,gEAAAnN,OAERmN,EAAQ,kDAI8C,MADjE4uC,GAC4D,QAD5CF,GAClBF,EAAK7+C,UAAUyE,IAAG,8BAAAvB,OAA+B6O,EAAI,kBAAS,IAAAgtC,MAAI,GAE/C,GACnBC,GAAgBrkC,OACZ,SAACxY,IAAC,IAAAoxB,GAAA,OACEpxB,GAAEqtC,WAAWrd,iBACRqd,IAA2B,QAAjBjc,MAAI9zB,EAAAkG,sBAAa,IAAA4tB,QAAA,EAAbA,GAAe1tB,QAAOssB,eACzChwB,GAAEqQ,KAAOA,CAAE,GACjBrO,QAAU86C,IAAgB,CAAAE,GAAA79C,KAAA,SAEtB49C,QAAU1P,KAA4B,QAAlBT,KAAKtvC,EAAAkG,sBAAa,IAAAopC,OAAA,EAAbA,EAAelpC,OAAK,GAAA3C,OAC1Cg8C,EAAU,MAAQ1P,EAAU,aAAAtsC,OACjCg8C,EAAU,OAAS,MACvB,kDAAAC,GAAA18C,OAAA,UAEG,GAAI,yBAAA08C,GAAAv7C,OAAA,EAAAk7C,GAAA,EA3C+Bl+C,EA2C/B,GACd,gBAAAg8C,EAAA9gC,EAAA2c,GAAA,OAAAmmB,EAAA96C,MAAA3E,KAAA4E,UAAA,EA9CD,IA8CC,CAAAvD,IAAA,mBAAAC,MAEM,SAAiBsR,GACpB,IAAMqtC,EAAajgD,KAAKa,UAAUyE,IAAI,kBAChC46C,EAAe,SAACl9C,GAAC,IAAAm9C,EAAAC,GAAA,QACjB,MAADp9C,GAAiB,QAAhBm9C,EAADn9C,EAAGq9C,SAASztC,UAAK,IAAAutC,OAAA,EAAjBA,EAAmBzpC,mBAAmB8nB,MACjB,QADsB4hB,GACtCp9C,EAAEq9C,SAASztC,UAAK,IAAAwtC,QAAA,EAAhBA,GAAkB1pC,QAClB,IACJ4E,IAAI,SAACrD,IAAC,IAAAqoC,GAAA,MACc,YAAjB1tC,EAA0Bic,IAAA,GAEd5W,IAAC,IACJ5E,GAAI4E,GAAE5E,IAAM4E,GAAEzE,OACdI,KAAM5Q,EAAE4Q,QAEH,QAAT0sC,GAAAroC,GAAE0c,eAAO,IAAA2rB,QAAA,EAATA,GAAWhlC,IAAI,SAACtY,IAAC,OAAA6rB,IAAA,GACV7rB,IAAC,IACJu9C,QAAStoC,GAAE5E,GACXO,KAAM5Q,GAAE4Q,MAAI,KACT,EAAE,EAClB,EACCP,EAAK4sC,EACLjgD,KAAKc,KAAK+U,SAAShC,UACnB7T,KAAKc,KAAK+U,SAASxC,GACzB,GAAI4sC,EAAY,CACZ,IAAM5sC,EAAKrT,KAAKc,KAAK+U,SAAShC,UACxBiC,EAAY9V,KAAKc,KAAKgV,UAAU0F,OAClC,SAACxY,GAAC,OAAKA,EAAE6Q,YAAcR,CAAE,GAE7B,SAAO+F,EAAA0zB,UACHh3B,EAAUwF,IAAI,SAACtY,GAAC,SACZ3C,EAAAmgD,mBAAkBx9C,EAAEqQ,GAAI,CAAEE,KAAMX,IAAQ9P,QACpC1C,EAAAkb,KAAI,SAAC7Y,GAAI,SAAKnC,EAAAmyB,SAAQhwB,EAAK6Y,IAAI4kC,GAAc,GAChD,IAEPp9C,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAmyB,SAAQzvB,EAAE,GAChC,CACA,SAAO3C,EAAAmgD,mBAAkBntC,EAAI,CACzBE,KAAMX,IACP9P,QAAK1C,EAAAkb,KAAI,SAAC7Y,GAAI,SAAKnC,EAAAmyB,SAAQhwB,EAAK6Y,IAAI4kC,GAAc,GACzD,GAAC,CAAA7+C,IAAA,sBAAAC,MAAA,eAAAm/C,EAAAj/C,EAAAC,IAAAC,KAEO,SAAAg/C,EACJC,EACAttC,EACAkD,EACAquB,GAAa,IAAAgc,EAAA/Y,EAAAzI,EAAAhN,GAAA,OAAA3wB,IAAAO,KAAA,SAAA6+C,IAAA,cAAAA,GAAA3+C,KAAA2+C,GAAA1+C,MAAA,OAEPy+C,EAAmB,GACrB/Y,EAAatxB,EAAUiF,OACvB,SAACxY,IAAC,OAAKA,GAAEqQ,KAAOA,GAAMrQ,GAAEwQ,SAAWH,CAAE,GACxC+rB,EAAA39B,IAAAC,KAAA,SAAA09B,KAAA,IAAA3jB,GAAA,OAAAha,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,OAAA2+C,SAAA3+C,KAAA,KAEsBg3C,EAAA4H,mBACfJ,EACAttC,EACAw0B,EAAWvsB,IAAI,SAACtY,IAAC,OAAKA,GAAEwQ,QAAUxQ,GAAEqQ,EAAE,IACzC,QAJKoI,GAAIqlC,EAAAj9C,QAMN+8C,EAAiB3nB,KACb1iB,EAAU2Y,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOoI,IAAQzY,GAAEwQ,SAAWiI,EAAI,IAE5DosB,EAAaA,EAAWrsB,OACpB,SAACxY,IAAC,OAAKA,GAAEqQ,KAAOoI,IAAQzY,GAAEwQ,SAAWiI,EAAI,IAEhD,wBAAAqlC,EAAAr8C,OAAA,EAAA26B,GAAA,GAbIhN,GAAI,EAAC,YAAEA,GAAIwS,GAAK,CAAAic,GAAA1+C,KAAA,eAAA0+C,GAAAG,cAAA5hB,IAAA,eAAEhN,KAAGyuB,GAAA1+C,KAAA,sBAAA0+C,GAAAv9C,OAAA,SAevBs9C,GAAgB,yBAAAC,GAAAp8C,OAAA,EAAAi8C,EAAA,IAC1B,gBAAAzB,EAAAnlB,EAAAmnB,EAAAC,EAAAC,GAAA,OAAAV,EAAA97C,MAAA3E,KAAA4E,UAAA,EA5BA,MAjVA,IAAA83C,CA6WA,CA5tB2B,CAAQp8C,EAAA6H,cAAYmxC,SAAvCvoC,0CAAkB3I,EAAA4U,mBAAA1U,EAAA6E,QAAA/E,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAtU,EAAAD,qBAAAL,EAAA4U,mBAAApU,EAAA0P,WAAAlQ,EAAA4U,mBAAAoH,EAAAg9B,iBAAAh5C,EAAA4U,mBAAAqH,EAAA4b,mBAAA,qDAAlBlvB,EAAkBkM,QAAlBlM,EAAkBmM,UAAAC,WAFf,SAEHpM,CAAmB,4KC/FhC,IAAAjD,EAAAjQ,EAAA,OAEAwjD,GADAxjD,EAAA,OACAA,EAAA,WAKAA,EAAA,2FAEA8B,4BAmDsC,eAAA2hD,EAAzB7E,EAAyB38C,EASlC,SAAA28C,EACqC8E,EACzB1gD,GAA0Bd,EAAAC,KAAAy8C,GADDz8C,KAAAuhD,SACzBvhD,KAAAa,YAVIb,KAAAwhD,gBAAeH,EAAAI,+BAC3BzhD,KAAKuhD,QAEOvhD,KAAA0hD,eAAcL,EAAAM,4BAC1B3hD,KAAKuhD,QAEOvhD,KAAA4hD,aAAYP,EAAAQ,0BAAyB7hD,KAAKuhD,OAKvD,GAACD,SAZK7E,0CAAyBr0C,EAAAC,4BAUtByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAA,kDAVlBk0C,EAAyB3zC,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBArCXoiB,UAAAC,MAAAC,EAAA,kGAWAF,UAAAG,MAAAD,EAAA,0GAWAF,UAAAI,MAAAF,EAAA,4hBAjCnBtnB,EAAAiF,yBAAA,WAA6BjF,EAAAmF,iBAAA,gCAA0BnF,EAAAkF,yBAEnDlF,EADJiF,yBAAA,UACIjF,CAD2D,0CASvDA,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KACJvlB,EADgCkF,wBAChClF,GACAA,EAAAiF,yBAAA,0CAQIjF,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MACJvlB,EADwCkF,wBACxClF,GACAA,EAAAiF,yBAAA,wCAQIjF,EAAAiF,yBAAA,iBAA0BjF,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqCkF,wBAErClF,KAEIA,EADJiF,yBAAA,cACIjF,CADyD,eAC/CA,EAAAmF,iBAAA,YACdnF,EADmBkF,wBACnBlF,UAhCQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,IAAAhL,EAAAm4C,aAAA,OAAAp5C,EAAA05C,yBAWA15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,IAAAhL,EAAAq4C,YAAA,OAAAt5C,EAAA05C,yBAWA15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,KAAAhL,EAAAu4C,UAAA,OAAAx5C,EAAA05C,uPAoBHrF,CAAyB,sKC7DtC,IAAAn8C,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,OAaAw9B,EAAAx9B,EAAA,OAYMkkD,EAAkB,CAAC,OAAQ,YAAa,YAAa,SAAU,WAOzDC,EAAZ,SAAYA,GACRA,WAAAC,OAAA,aACAD,IAAAE,OAAA,aACAF,IAAAG,QAAA,cACAH,IAAAI,UAAA,eACAJ,IAAAK,SAAA,cACAL,IAAAM,OAAA,YACAN,IAAAO,SAAA,cAPQP,CAQZ,CARA,CAAYA,IAAcriD,iBAAdqiD,EAAc,KAsB1BriD,UAAoB,WAsRf,OAAAG,EA5HD,SAAA21B,IAA+C,IAAAwL,EAAAE,EAAAqhB,EAAAphB,EAAAC,EAAAp7B,EAAAw8C,EAAAxhD,EAAAjB,KAAnCyC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,GA0GzC,QAAWvD,KA1GgCtB,EAAAC,KAAAy1B,GA/BvCz1B,KAAA0iD,qBAAuB,GACvB1iD,KAAA2iD,sBAAwB,EA+B5B3iD,KAAKqT,GAAK5Q,EAAK4Q,IAAM,GACrBrT,KAAK6T,UAAYpR,EAAKoR,WAAa,GACnC7T,KAAKkR,SAAWzO,EAAKyO,UAAY,GACjClR,KAAKuhC,UAAY9+B,EAAK8+B,WAAa,CAAC9+B,EAAKyO,UAAUsK,OAAO,SAACxY,GAAC,OAAKA,CAAC,GAClEhD,KAAKsT,WACD7Q,EAAK6Q,aACc,QADJ2tB,EACfx+B,EAAKmzB,sBAAc,IAAAqL,OAAA,EAAnBA,EAAqB3tB,cACF,QADY6tB,EAC/B1+B,EAAKmzB,sBAAc,IAAAuL,OAAA,EAAnBA,EAAqB5tB,OACrB9Q,EAAKgR,aACLhR,EAAKyO,UACL,GACJlR,KAAK2T,MAAQlR,EAAKkR,OAAS,GAC3B3T,KAAKs3C,cACDtf,KAAK6I,MAAMp+B,EAAKoP,KAAO,MACvBpP,EAAK60C,kBACL3mB,EAAA4C,gBACI5C,EAAAiyB,0BAAsBjyB,EAAA2H,YAAWxe,KAAKuX,MAAO,GAAI,CAC7CwxB,UAAW,KAGvB7iD,KAAKu3C,YACDvf,KAAK6I,MAAMp+B,EAAKoP,KAAO,KAAwB,GAAhBpP,EAAKqP,UACpCrP,EAAK80C,gBACL5mB,EAAA4C,gBACI5C,EAAA2H,YAAgC,IAArBt4B,KAAKs3C,cAAsB70C,EAAKqP,UAAY,KAE/D9R,KAAK0T,aAAejR,EAAKiR,cAAgB,IACzC1T,KAAK4S,KAAOnQ,EAAKmQ,MAAQnQ,EAAKiR,cAAgB,UAC9C1T,KAAK6R,KAAOpP,EAAKoP,MAA6B,IAArB7R,KAAKs3C,eAAwBx9B,KAAKuX,MAC3DrxB,KAAK8R,SACDrP,EAAKqP,UACLkmB,KAAK8qB,OACDnyB,EAAA+H,qBACyB,IAArB14B,KAAKs3C,cACc,IAAnBt3C,KAAKu3C,eAGb,GACJv3C,KAAKywB,SACkB,IAAnBzwB,KAAKu3C,aAAsBv3C,KAAK6R,KAAuB,GAAhB7R,KAAK8R,SAAgB,IAChE9R,KAAK+iD,SACDtgD,EAAKsgD,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7DnjD,KAAKqwC,WAAa5tC,EAAK4tC,YAAc,GACrCrwC,KAAKk+C,QAAUz7C,EAAKy7C,SAAW,GAC/Bl+C,KAAKi+C,UAAYx7C,EAAKw7C,WAAa,GACnCj+C,KAAKmB,MACS,QADJqhD,EACN//C,EAAKtB,aAAK,IAAAqhD,IACTxiD,KAAK0T,aACA,GAAA3P,UAAGzD,EAAA8iD,uBAAsBpjD,KAAK0T,cAAa,YAAW2vC,OACtD,GACVrjD,KAAKyT,YAAchR,EAAKgR,aAAe,GACvCzT,KAAKu4B,aAAe91B,EAAK81B,WACzBv4B,KAAKw4B,WAAa/1B,EAAK+1B,SACvBx4B,KAAK0vC,WAAajtC,EAAKitC,SACvB1vC,KAAKsjD,UAAY7gD,EAAK6gD,QACtBtjD,KAAKujD,aAAe9gD,EAAK8gD,cAAgB,GACzCvjD,KAAKwjD,eAAiB/gD,EAAK+gD,gBAAkB,GAC7CxjD,KAAKq+C,gBAAkB57C,EAAK47C,iBAAmB,GAC/Cr+C,KAAKyjD,YAAchhD,EAAKghD,aAAe,GACvCzjD,KAAK0jD,eAAiBjhD,EAAKihD,gBAAkB,GAC7C1jD,KAAK2jD,cAAgBlhD,EAAKkhD,eAAiB,GAC3C3jD,KAAK41B,eAAiBnzB,EAAKmzB,gBAAkB,GAC7C51B,KAAK4jD,SAA8B,QAApBxiB,EAAC3+B,EAAKmzB,sBAAc,IAAAwL,IAAnBA,EAAqBwiB,QACrC5jD,KAAKshC,SAAW7+B,EAAK6+B,SACrBthC,KAAK6jD,YAAcphD,EAAKohD,YAAc,WAAWC,cACjD9jD,KAAKkW,UAAYzT,EAAKyT,WAAazT,EAAKshD,QAAUthD,EAAKi5C,SAAW,GAClE17C,KAAKgkD,KAAOvhD,EAAKuhD,OAA2B,QAAvB3iB,EAAI5+B,EAAKmzB,sBAAc,IAAAyL,OAAA,EAAnBA,EAAqB2iB,OAAQ,GACtDhkD,KAAKoqB,OAAS3nB,EAAK2nB,QAAU,GAC7BpqB,KAAKwwB,QAAU/tB,EAAK+tB,SAAWxwB,KAAK8R,UAAY,KAChD9R,KAAKikD,UAGoC,QAH3Bh+C,EACTxD,EAAKwhD,YACiB,QADRxB,EACXhgD,EAAKmzB,sBAAc,IAAA6sB,OAAA,EAAnBA,EAAqBwB,YACE,aAAvBxhD,EAAKyhD,qBAA4B,IAAAj+C,KAErCjG,KAAKwwB,UACJxwB,KAAa6R,QAAO8e,EAAA6C,YAAWxzB,KAAK6R,MAAM+mB,UAC1C54B,KAAa8R,SAAWkmB,KAAK8F,IAC1B,KACA99B,KAAK8R,UAAa9R,KAAK8R,SAAW,GAAM,IAAO,EAAI,EAAI,IAE1D9R,KAAaywB,YAAWE,EAAA+C,aACrB/C,EAAA2H,YAAWt4B,KAAK6R,KAAM7R,KAAK8R,SAAW,GAAG4jB,WAC3CkD,WAEN54B,KAAKk2C,eAAiBzzC,EAAKyzC,eAC3Bl2C,KAAKk0B,aAAezxB,EAAKyxB,cAAgB,KACzCl0B,KAAKkzB,gBAAkBzwB,EAAKywB,iBAAmB,GAC/ClzB,KAAKoqB,OAAS3nB,EAAK2nB,QAAU,GAC7BpqB,KAAK0hC,OACD1hC,KAAKk2C,eAAiB,EAChB,QACAl2C,KAAKw4B,UAAYx4B,KAAKsjD,QACtB,WACAtjD,KAAK0vC,SACL,WACA,YACV1vC,KAAKkkD,cAAgBzhD,EAAKyhD,eAAiB,UAE3ClkD,KAAKmkD,gBAAkB1hD,EAAK0hD,iBAAmB,OAC/CnkD,KAAKokD,gBAAkB3hD,EAAK2hD,gBAC5BpkD,KAAKqkD,wBAA0B5hD,EAAK4hD,wBACpCrkD,KAAKskD,oBAAsB7hD,EAAK6hD,oBAChCtkD,KAAKukD,eAAiB9hD,EAAK8hD,eAC3BvkD,KAAKiV,SAAWxS,EAAKwS,SAEHxS,IACRpB,KAAOrB,QAAU+hD,EAAgBn8C,SAASvE,IAAQoB,EAAKpB,KACzDrB,KAAK41B,eAAev0B,GAChBoB,EAAKpB,IAAQrB,KAAK41B,eAAev0B,IAG7CrB,KAAK41B,eAAe5e,QAAUhX,KAAK41B,eAAe5e,QAAU,IAAIsE,IAC5D,SAAC8W,GAAC,OACE,IAAIiJ,EAAAgC,aAAYxO,IAAA,GAAMuD,GAAC,IAAEtE,MAAO7sB,EAAM4Q,KAAM5Q,EAAK4Q,OAAc,GAEvE7R,KAAK41B,eAAeouB,KAAOvhD,EAAKuhD,MAAQ,GACpChkD,KAAK41B,eAAeuH,UACpBn9B,KAAK41B,eAAeuH,QAAU,IAAI9B,EAAAgC,aAAYxO,IAAA,GACvC7uB,KAAK41B,eAAeuH,SAAO,IAC9BrP,MAAO9tB,KACP6R,KAAM7R,KAAK6R,QAGvB,EAAC,EAAAxQ,IAAA,QAAAiE,IAnKD,WACI,OAAOtF,KAAK41B,eAAeqF,OAAS,EACxC,GAAC,CAAA55B,IAAA,aAAAiE,IAED,WACI,OAAOtF,KAAKwwB,SAAWxwB,KAAK8R,UAAY,GAC5C,GAAC,CAAAzQ,IAAA,eAAAiE,IAKD,WAAuB,IAAAR,EAAA9E,KACnB,GACIA,KAAK2iD,sBAAwB7oC,KAAKuX,OAClCrxB,KAAK0iD,qBAAqB19C,OAE1B,OAAOhF,KAAK0iD,qBAEhB,IAAM1vC,EAAOhT,KAAKkzB,gBAClB,OAAAlzB,KAAK0iD,sBAAwB1iD,KAAK41B,eAAe5e,QAAU,IACtDsE,IAAI,SAAC6hB,GAAO,OAAK,IAAI9B,EAAAgC,aAAYxO,IAAA,GAAMsO,GAAO,IAAErP,MAAOhpB,IAAO,GAC9D0W,OAAO,SAAC2hB,GAAO,OAAKA,EAAQhB,WAAar3B,EAAK2rB,QAAQ,GACtDnV,IAAI,SAAC6hB,GACF,IAAMzF,EAAU1kB,EAAKkc,KACjB,SAAClsB,GAAM,OAAKA,EAAE4yB,eAAe+L,aAAexE,EAAQ9pB,EAAE,GAE1D,OAAIqkB,IACCyF,EAAgBI,MAAQ7F,EAAQgY,SAC3B,WACAhY,EAAQc,SACR,WACA,WAEH2E,CACX,GACJn9B,KAAK2iD,yBAAwBhyB,EAAA2H,YAAWxe,KAAKuX,MAAO,GAAGqE,UAChD11B,KAAK0iD,oBAChB,GAAC,CAAArhD,IAAA,SAAAC,MAgIM,WACH,IAAMmB,EAAIosB,EAAA,GAAQ7uB,MAClB,OAAKA,KAAKqT,WAAW5Q,EAAK4Q,GAC1B5Q,EAAKmzB,eAAe5e,OAASvU,EAAKmzB,eAAe5e,OAAOsE,IACpD,SAAC8W,GAAC,OAAK,IAAIiJ,EAAAgC,aAAYxO,IAAA,GAAMuD,GAAC,IAAEtE,MAAO,OAAO,GAE9CrrB,EAAKmzB,eAAeuH,UACpB16B,EAAKmzB,eAAeuH,QAAU,IAAI9B,EAAAgC,aAAYxO,IAAA,GACvCpsB,EAAKmzB,eAAeuH,SAAO,IAC9BrP,MAAO,SAGVrrB,EAAKoR,kBAAkBpR,EAAKoR,iBAC1BpR,EAAKoP,YACLpP,EAAKqP,YACZxR,EAAAkkD,mBAAkB/hD,GACXA,CACX,GAAC,CAAApB,IAAA,WAAAiE,IAED,WAAmB,IAAAm/C,EACf,OAA0B,QAAnBA,EAAAzkD,KAAK41B,sBAAc,IAAA6uB,OAAA,EAAnBA,EAAqB/+C,WAAY1F,KAAKyT,WACjD,GAEA,CAAApS,IAAA,WAAAiE,IACA,WACI,SAAOqrB,EAAAoC,WAAU/yB,KAAK6R,KAAM,IAAIiI,KACpC,GAEA,CAAAzY,IAAA,UAAAiE,IACA,WACI,IAAMypB,EAAQ,IAAIjV,KACZ8J,EAAM5jB,KAAKwwB,WACXG,EAAA+zB,UAAS1kD,KAAK6R,KAAM,KAAE,EACtB8e,EAAA2H,YAAWt4B,KAAK6R,KAAM7R,KAAK8R,UAC3BqkC,EAEF,KADCn2C,KAAKk2C,gBAAkBl2C,KAAK41B,eAAesgB,gBAAkB,GAE9DnsB,EAAWnG,EAAIgV,UACnB,SAAIud,GAAer8B,KAAKuX,MAAQ8kB,KAAoB,EAC7CxlB,EAAA6a,SAAQzc,EAAO,IAAIjV,KAAKiQ,GACnC,GAEA,CAAA1oB,IAAA,QAAAiE,IACA,WAMI,IAAM+rB,EAAM,IAAIvX,KACVjI,EAAO7R,KAAK6R,KAClB,SAAI8e,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,SAAS,MAAgB,YACnDnQ,EAAA2a,UAASja,EAAKxf,GAAc,cAC5B8e,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,QAAS,MAAe,aAClDnQ,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,QAAS9gC,KAAK8R,YACjC,cACJ,MACX,IAAC,CAjVe,oOC5DpB,IAAAvI,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OAEA+mD,EAAA/mD,EAAA,OACAgnD,EAAAhnD,EAAA,OAMAguC,EAAAhuC,EAAA,OACA8yB,EAAA9yB,EAAA,OAuKuC,SAAAinD,aAAAtjD,EAAhC,SACHm/C,EACAoE,GAA2B,IAC3BC,EAAApgD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAAAnD,IAAAC,KAAA,SAAAC,IAAA,IAAAsjD,EAAA5xC,EAAA6xC,EAAAC,EAAAC,EAAAC,EAAAhuB,EAAAC,EAAApkB,EAAAjN,EAAAq/C,EAAAC,EAAAttC,EAAA,OAAAxW,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjB8iD,SAAUO,SAASC,cAAc,QAC/BC,MAAMC,SAAW,WACzBV,EAAQS,MAAME,IAAM,UACpBX,EAAQS,MAAMv+C,MAAQ,SACtB89C,EAAQS,MAAMx+C,OAAS,SACvBs+C,SAASzU,KAAK8U,YAAYZ,GAAShjD,EAAAE,KAAA,KAClB0iD,EAAAiB,cAAa,CAC1Bp4C,IAAKizC,EACLsE,YACF,OACIC,KAASL,EAAAkB,WAJT1yC,EAAEpR,EAAA4B,MAKFshD,GAAgC,iBAAhBJ,EAChBG,EAAOc,SAASjB,GAChBA,IAAgB,CAAEO,EAAG,GAAKC,EAAG,IAC/BH,EAAO,GACPC,EAAU,GAAEhuB,EAAAa,EACG8sB,GAAQ,IAA3B,IAAA3tB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MACYktB,GADGr/C,EACMi/C,EAAOc,SADjB9yC,EAAIokB,EAAAh2B,QAC+B,CAAEgkD,EAAG,EAAGC,EAAG,IAA7CD,EAAGC,EAACt/C,EAADs/C,GACLttC,EAAI+f,KAAKiuB,MACVX,EAAIH,EAAMG,IAAMA,EAAIH,EAAMG,IAAMC,EAAIJ,EAAMI,IAAMA,EAAIJ,EAAMI,KAEvDH,IACJA,EAAOntC,EACPotC,EAAUnyC,EAEjB,OAAAoW,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACDqsB,gBAASzU,KAAKmV,YAAYjB,IAAO,EACjCJ,EAAAsB,cAAa9yC,GAAIpR,EAAAqB,OAAA,SACV+hD,GAAO,yBAAApjD,EAAAwC,OAAA,EAAA9C,EAAA,EA9BSF,EA8BT,GACjBqjD,EAAAngD,MAAA3E,KAAA4E,UAAA,CAlLDjF,sBAAA,SAAgBg6C,IAAoD,IAAAyM,EAAA/I,EAAAgJ,EAAAC,EAAAC,EAAAC,EAAhC9uB,EAAA9yB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIinC,EAAApW,QACjD/kB,EAAO,IAAInH,EAAAqgC,UAAU,CACvBv2B,GAAI,IAAI9J,EAAAsgC,YAAYnS,EAAQrkB,IAAM,IAClCQ,UAAW,IAAItK,EAAAsgC,YAAYnS,EAAQ7jB,WAAa,IAChDytB,SAAU,IAAI/3B,EAAAsgC,YAAYnS,EAAQ4J,UAAY,IAC9CmN,SAAU,IAAIllC,EAAAsgC,YAAYnS,EAAQ9B,eAAe6Y,UAAY,IAC7D58B,KAAM,IAAItI,EAAAsgC,YAAYnS,EAAQ7lB,KAAM,CAACtI,EAAAugC,WAAWC,WAChDtZ,SAAU,IAAIlnB,EAAAsgC,YAAYnS,EAAQjH,UAClCD,QAAS,IAAIjnB,EAAAsgC,YAA2B,QAAhBuc,EAAC1uB,EAAQlH,eAAO,IAAA41B,MACxC7yC,KAAM,IAAIhK,EAAAsgC,YACNnS,EAAQ9B,eAAeriB,MAAQmkB,EAAQpkB,YAAc,IAEzDxB,SAAU,IAAIvI,EAAAsgC,YAAYnS,EAAQ5lB,SAAU,CAAC8yC,EAAA6B,cAC7C/yC,aAAc,IAAInK,EAAAsgC,YAAYnS,EAAQhkB,cACtCC,MAAO,IAAIpK,EAAAsgC,YAAYnS,EAAQ/jB,OAC/BxS,MAAO,IAAIoI,EAAAsgC,YAAYnS,EAAQv2B,OAC/BsS,YAAa,IAAIlK,EAAAsgC,YAAYnS,EAAQjkB,aACrCK,cAAe,IAAIvK,EAAAsgC,YAAY,MAC/BtzB,UAAW,IAAIhN,EAAAsgC,YAAY,IAC3B6c,QAAS,IAAIn9C,EAAAsgC,YAAY,IACzB34B,SAAU,IAAI3H,EAAAsgC,YAAYnS,EAAQxmB,SAAU,CAAC3H,EAAAugC,WAAWC,WACxDz2B,WAAY,IAAI/J,EAAAsgC,YAAYnS,EAAQjkB,aACpCuD,OAAQ,IAAIzN,EAAAsgC,aAAkC,QAAtBwT,EAAA3lB,EAAQ9B,sBAAc,IAAAynB,OAAA,EAAtBA,EAAwBrmC,SAAU,IAC1Dd,UAAW,IAAI3M,EAAAsgC,YAAYnS,EAAQxhB,WAAa,IAChD1C,OAAQ,IAAIjK,EAAAsgC,YAAkC,QAAvBwc,EAAC3uB,EAAQ9B,sBAAc,IAAAywB,OAAA,EAAtBA,EAAwB7yC,QAChDmzC,SAAU,IAAIp9C,EAAAsgC,aAAkC,QAAtByc,EAAA5uB,EAAQ9B,sBAAc,IAAA0wB,OAAA,EAAtBA,EAAwBK,YAAY,GAC9Dl6B,KAAM,IAAIljB,EAAAsgC,eAAYvpC,EAAAkG,gBACtB03C,QAAS,IAAI30C,EAAAsgC,YAAYnS,EAAQwmB,SACjCjjB,MAAO,IAAI1xB,EAAAsgC,YAAYnS,EAAQuD,OAC/BoV,WAAY,IAAI9mC,EAAAsgC,YAAYnS,EAAQ2Y,YACpC4N,UAAW,IAAI10C,EAAAsgC,YAAYnS,EAAQumB,WACnC8E,SAAU,IAAIx5C,EAAAsgC,YAAYnS,EAAQqrB,UAAY,IAC9C1G,UAAW,IAAI9yC,EAAAsgC,eAAYvpC,EAAAkG,gBAC3B+8C,aAAc,IAAIh6C,EAAAsgC,YAAYnS,EAAQ6rB,cACtClF,gBAAiB,IAAI90C,EAAAsgC,YAAYnS,EAAQ2mB,iBACzC3sC,mBAAoB,IAAInI,EAAAsgC,aACE,QAAtB0c,EAAA7uB,EAAQ9B,sBAAc,IAAA2wB,OAAA,EAAtBA,EAAwBK,oBACE,QADcJ,EACpC9uB,EAAQ9B,sBAAc,IAAA4wB,OAAA,EAAtBA,EAAwB90C,qBAEhChM,SAAU,IAAI6D,EAAAsgC,YAAYnS,EAAQ9B,eAAelwB,UAAY,IAC7DmhD,gBAAiB,IAAIt9C,EAAAsgC,YACjBnS,EAAQ9B,eAAeixB,iBAAmB,OAE9C1I,MAAO,IAAI50C,EAAAsgC,YAAYnS,EAAQ9B,eAAeuoB,OAAS,IACvD0F,WAAY,IAAIt6C,EAAAsgC,YAAYnS,EAAQmsB,YAAc,WAClDz5B,OAAQ,IAAI7gB,EAAAsgC,YAAYnS,EAAQtN,QAAU,IAC1C45B,KAAM,IAAIz6C,EAAAsgC,YAAYnS,EAAQssB,MAAQ,IACtC8C,aAAc,IAAIv9C,EAAAsgC,YACdnS,EAAQ9B,eAAekxB,cAAgB,IAE3C3C,gBAAiB,IAAI56C,EAAAsgC,YAAYnS,EAAQysB,iBAAmB,QAC5DC,gBAAiB,IAAI76C,EAAAsgC,YAAYnS,EAAQ0sB,iBACzCC,wBAAyB,IAAI96C,EAAAsgC,YACzBnS,EAAQ2sB,yBAEZC,oBAAqB,IAAI/6C,EAAAsgC,YAAYnS,EAAQ4sB,qBAC7CC,eAAgB,IAAIh7C,EAAAsgC,YAAYnS,EAAQ6sB,kBAE5C7zC,SAAKoC,aAAaC,UAAU,SAAC2P,GACzB,IAe2DqkC,EAEpDC,EAjBDv6B,EAAO/J,EAAE+J,KACTw6B,EAASvkC,EAAE25B,cAAa/7C,EAAAkG,gBAC9BygD,GAAUx6B,IACJ/b,EAAKe,WACD,CACIgb,KAAMA,GAAQw6B,EACd/I,QAASzxB,GAAMpZ,IAAM4zC,GAAQ5zC,GAC7Bg9B,WAAY5jB,GAAM/lB,OAASugD,GAAQvgD,MACnC6M,KAAMkZ,GAAMlZ,MAAQ0zC,GAAQ1zC,KAC5BgwC,aAAc0D,GAAQ5zC,GACtBgrC,gBAAiB4I,GAAQvgD,OAE7B,CAAEwgD,WAAW,IAGnBx2C,EAAKse,cAAcnd,KAAOiI,KAAKuX,OAAS3gB,EAAKpP,MAAM+R,GACnC,QAAhB0zC,EAAAr2C,EAAKpL,IAAI,eAAO,IAAAyhD,GAAhBA,EAAkBI,QAAQ,CAAED,WAAW,IAEvB,QAAhBF,EAAAt2C,EAAKpL,IAAI,eAAO,IAAA0hD,GAAhBA,EAAkB/K,OAAO,CAAEiL,WAAW,GAE9C,GACAx2C,EAAKgT,SAASnN,UAAUzD,aAAaC,UAAU,SAACwD,GAAS,OAjG7D,SAAStD,EAAgBvC,EAAiB2hB,GAAa,IAAA+0B,EAAAC,EACnD,IAAKh1B,EAAU,OAAO3hB,EAAKe,WAAW,CAAEP,cAAUjM,IAClDyL,EAAKe,WACD,CACIP,SAAUmhB,EAAShf,GACnBC,WAAY+e,EAAS9e,KACrBC,OAAQ6e,EAAS7e,QAAU6e,EAAShf,GACpCI,YAAa4e,EAAS9e,KACtBI,MAAO0e,EAASze,KACV,CAAc,QAAdwzC,EAAC/0B,EAASze,YAAI,IAAAwzC,OAAA,EAAbA,EAAevzC,UAAwB,QAAfwzC,EAAEh1B,EAASze,YAAI,IAAAyzC,OAAA,EAAbA,EAAeh0C,IAC1C,GACNS,cAAeue,GAEnB,CAAE60B,WAAW,GAErB,CAmFQj0C,CAAgBvC,GAAO6F,GAAa,IAAI,GAAG,GAE/C7F,EAAKgT,SAAS5R,SAASgB,aAAaC,UAAU,SAACjB,GAC3CpB,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAMC,GACpC,CAAE+wC,UAAW,EAAGyE,eAAgB,SAClC5xB,WAEN,CAAEwxB,WAAW,GAErB,GACAx2C,EAAKgT,SAAS+M,SAAS3d,aAAaC,UAAU,SAAClB,GACvCA,KAAO8e,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAM,IAAI6jB,UAC/ChlB,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAM,IACpC,CAAEgxC,UAAW,EAAGyE,eAAgB,SAClC5xB,UACF5jB,SAAU,IAEd,CAAEo1C,WAAW,IAGjBx2C,EAAKe,WACD,CACIK,YAAU6e,EAAA+H,qBACN7mB,EACAnB,EAAKse,cAAcnd,OAG3B,CAAEq1C,WAAW,GAGzB,GACAx2C,EAAKgT,SAAS7R,KAAKiB,aAAaC,UAAU,SAAClB,GACvCnB,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAWzmB,EAAMnB,EAAKpP,MAAMwQ,UAC5B,CAAE+wC,UAAW,EAAGyE,eAAgB,SAClC5xB,WAEN,CAAEwxB,WAAW,IAEbr1C,EAAOiI,KAAKuX,QAAU3gB,EAAKpP,MAAM+R,IACjC3C,EAAKe,WACD,CACII,QAAM8e,EAAAiyB,uBAAsB9oC,KAAKuX,MAAO,CACpCwxB,UAAW,EACXyE,eAAgB,SACjB5xB,WAEP,CAAEwxB,WAAW,GAGzB,GACsB,YAAlBxvB,EAAQ6F,OAAqB7sB,EAAKpL,IAAI,QAAQ6hD,UAC3Cz2C,CACX,EAEA/Q,oBAFC,SAEqBohD,EAAiBpkC,EAAA2c,GAAA,OAAAwrB,EAAAngD,MAAA3E,KAAA4E,UAAA,EAoCvCjF,8BAAA,SAAgB4nD,EAA4Bz5B,GAAoB,IAAA05B,EAAAC,EAAAC,EAC5D,OAAO,IAAI7b,EAAApW,QAAQ,CACfpiB,GAAIya,EAAMza,GACVg9B,WAAYviB,EAAMrZ,KAClBvD,SAAsB,QAAds2C,EAAE15B,EAAMpV,cAAM,IAAA8uC,OAAA,EAAZA,EAAcn0C,GACxBC,YAAwB,QAAZm0C,EAAA35B,EAAMpV,cAAM,IAAA+uC,OAAA,EAAZA,EAAchyC,gBAA4B,QAAhBiyC,EAAI55B,EAAMpV,cAAM,IAAAgvC,OAAA,EAAZA,EAAcn0C,MACxDG,aAAc,OACdg8B,SAA2B,aAAjB5hB,EAAM4T,OAChB9L,eAAc/G,EAAA,GACPf,IAGf,2hBClOA,IAAAztB,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEA+tC,EAAA/tC,EAAA,OACAguC,EAAAhuC,EAAA,OACA8pD,EAAA9pD,EAAA,OACA8yB,EAAA9yB,EAAA,OAEAyC,EAAAzC,EAAA,OA+BM+pD,EAAiB,yBAMvB,SAAgBj0B,EAAcoY,GAC1B,IAAM1Y,KAAQuY,EAAAI,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OAAI6jD,GAAiB7jD,OAAGsvB,EAAQ,IAAMA,EAAQ,KAAMvwB,QAC1D1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,EAAC,MACnDrb,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAEhC,CAuEA,SAAgBw2B,EACZ3tC,EACAspC,GAEA,IAAM1Y,KAAQuY,EAAAI,eAAcD,GAC5B,SAAO1rC,EAAA6rC,MAAI,GAAAnoC,OAAI6jD,GAAiB7jD,OAAGsvB,EAAQ,IAAMA,EAAQ,IAAM5wB,GAAMK,QACjE1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAEvC,CAQA,SAAgBosC,EACZx0C,EACA5Q,GAGA,OAAmB,WAFnBmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,SAEGvE,EAAAynD,MAAQznD,EAAAgsC,KAAG,GAAAtoC,OACjC6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,IAC3C5Q,GACFK,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAC1C,CAqBA,SAAgByyB,EAAc76B,GAC1B,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,IAAO,CACzD20C,cAAe,QAEvB,CA2L4C,SAAAC,aAAAzmD,EAAAC,IAAAC,KAArC,SAAAsE,EACH8nB,EACAlb,EACA2D,GAA2B,IAAAixC,EAAA3xB,EAAAliB,EAAA,OAAAlS,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EAEJwxB,EAAc,CACjC/gB,OACA0gB,gBAAc3C,EAAA4C,aAAYzF,EAAMjc,MAChC4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA2H,YAAWxK,EAAMjc,KAAMic,EAAMhc,aAEpDhP,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEwY,OAAO,SAACxY,GAAC,OAAKA,EAAE6Q,YAAcia,EAAMza,EAAE,EAAC,IACzDpQ,YAAW,OANV4yB,SAAQ1vB,EAAAtC,KAAAsC,EAAAhE,KAAA,EAORwB,QAAQslB,IAAI4M,EAASva,IAAI,SAACtY,GAAC,OAAKkrC,EAAclrC,EAAEqQ,IAAIpQ,WAAW,IAAE,OAAAkD,SAAAhE,KAAA,EACjEwB,QAAQslB,IACV6E,EAAMoF,gBACD1X,OAAO,SAACxY,GAAC,OAAKA,EAAE0Q,eAAiBd,CAAI,GACrC0I,IAAI,SAACtY,GAAC,OAAKkrC,EAAclrC,EAAEqQ,IAAIpQ,WAAW,IAClD,OACK0Q,UACW,QAAZ6zC,EAAA15B,EAAMpV,cAAM,IAAA8uC,OAAA,EAAZA,EAAc7zC,WACfrT,EAAAqvC,WAAOrvC,EAAAmyB,SAAQ3E,EAAMvX,UAAU+E,IAAI,SAACtY,GAAC,OAAKA,EAAE2Q,KAAK,MACjD,GAAExN,EAAAhE,KAAA,GACAwB,QAAQslB,IACV1S,EAAU+E,IAAI,SAACG,GACX,IAAMic,EAAU7B,EAAS3G,KAAK,SAAClsB,GAAC,OAC5BA,EAAEu+B,UAAUrS,KAAK,SAAC7b,GAAE,IAAA60C,EAAA,OACN,QADMA,EAChBzsC,EAAK8gB,aAAK,IAAA2rB,OAAA,EAAVA,EAAYh5B,KAAK,SAACkD,GAAC,OAAKA,EAAEmM,SAAS34B,SAASyN,EAAG,EAAC,EACnD,GAEL,OAAO+8B,EACH,IAAIvE,EAAApW,QAAQ,CACR7iB,OACAc,aAAcd,EACdf,KAAMic,EAAMjc,KACZC,SAAUgc,EAAMhc,SAChB2B,YAAaqa,EAAM3sB,MACnBkvC,WAAYviB,EAAMrZ,KAClBvD,SAAUuK,EAAK/U,MACf4M,WAAamI,EAAalI,KAC1BpS,MAAQsa,EAAalI,KACrB2C,UAAW,CAACuF,GACZi0B,SAAUhY,GAASgY,WAAaj0B,EAAKojB,SACrCrG,SAAUd,GAASc,WAAa/c,EAAKojB,SACrCjJ,eAAgB,CACZ/hB,UAAWia,EAAMza,GACjBE,KAAOkI,EAAalI,KACpBq7B,YAAa9gB,EAAMpoB,UAEvBiO,UAEJ,CAAE86B,SAAU3gB,EAAM2gB,SAAUnN,SAAUxT,EAAMza,KAC9CpQ,WACN,IACH,yBAAAkD,EAAA1B,OAAA,EAAAuB,EAAA,KACJrB,MAAA3E,KAAA4E,UAAA,CAhXDjF,gBAAAg0B,EAYAh0B,qBAAA,SAAgB26C,EACZvO,GAEA,IAAM1Y,KAAQuY,EAAAI,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OAAI6jD,EAAiB,WAAA7jD,OAAUsvB,EAAQ,IAAMA,EAAQ,KAAMvwB,QACjE1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,CAAgB,MAC9B5S,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAEhC,EAMAja,qBAAA,SAAgBwoD,EAAmBpc,GAC/B,SAAO1rC,EAAAgzB,OAAe,CAClB+0B,aAAcrc,EACdjP,GAAI,SAACrhB,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,EAC/B4sC,SAAUT,EACVnpD,KAAM,IAEd,EAMAkB,mBAAA,SAAgB2oD,EACZvc,GAEA,SAAO1rC,EAAAgzB,OAAe,CAClB+0B,aAAcrc,EACdjP,GAAI,SAACrhB,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,EAC/B4sC,SAAUT,EACVnpD,KAAM,KACPqE,QACC1C,EAAAwxB,WAAS,eAAA3rB,EAAAzE,EAAC,SAAAsG,GAAA,IAASrF,EAAIqF,EAAJrF,KAAMN,EAAI2F,EAAJ3F,KAAI,OAAAV,IAAAC,KAAA,SAAAC,IAAA,IAAAqR,EAAAu1C,EAAA,OAAA9mD,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB6Q,EAAIoP,EAAO3f,GAAI,WACZN,EAAI,CAAAF,EAAAE,KAAA,SAAAF,SAAAE,KAAA,EACYA,IAAOc,YAAW,OACrCR,GADM8lD,EAAItmD,EAAA4B,MACEpB,KACZN,EAAOomD,EAAKpmD,KACZ6Q,EAAI,GAAAjP,OAAAqe,EAAOpP,GAAIoP,EAAK3f,IAAMR,EAAAE,KAAA,uBAAAF,EAAAqB,OAAA,SAEvB0P,GAAI,yBAAA/Q,EAAAwC,OAAA,EAAA9C,EAAA,EARcF,EAQd,GACd,gBAAAkb,GAAA,OAAA1W,EAAAtB,MAAA3E,KAAA4E,UAAA,EATQ,KASR,EACDxE,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAEhC,EAOAja,cAAA,SAAgB6oD,EAAYn1C,GACxB,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,KAAOvQ,QACzD1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAEvC,EAMA9b,gBAAAywC,EAgBAzwC,gBAAAkoD,EAgBaloD,cAAc,SACvB8C,EACAspC,GAEA,IAAM14B,EAAK5Q,EAAK4Q,GAChB,cAAQ5Q,EAAa4Q,GACdA,EAAKw0C,EAAcx0C,EAAI5Q,GAAQ2tC,EAAc3tC,EAAMspC,EAC9D,EAOApsC,gBAAAuuC,EAWAvuC,iBAAA,SAAgB8oD,EAAep1C,GAC3B,SAAOhT,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,YAC9C,IACFvQ,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAC1C,EAOA9b,gBAAA,SAAgB+oD,EAAcr1C,GAC1B,SAAOhT,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,WAC9C,IACFvQ,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAC1C,EAEA9b,kBAAA,SAAgBgpD,EACZt1C,EACAkqB,EACAqrB,GAEA,IAAMv1B,KAAQuY,EAAAI,eAAc,CAAEzO,QAAOqrB,eACrC,SAAOvoD,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,iBAAAtP,OAC1CsvB,EAAQ,IAAMA,EAAQ,IAE1B,IACFvwB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,GAC1C,EAMA9b,qBAAA,SAAgBkpD,EAAmBx1C,GAC/B,SAAOhT,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,WAC9C,IACFvQ,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,sBAAA,SAAgBopD,EACZ11C,EACA21C,GACqB,IAArBzrB,IAAA34B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAEA,SAAOvE,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBACpB10C,GACH,YAAAtP,OAAWgkD,mBAAmBiB,GAAS,oBAAAjlD,OAAmBw5B,GAC3D,IACFz6B,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,kBAAA,SAAgBspD,EAAgB51C,EAAY61C,GACxC,SAAO7oD,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,aAC9C61C,GACFpmD,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,qBAAA,SAAgBwpD,EAAmB91C,EAAY61C,GAC3C,SAAO7oD,EAAAqsC,KAAG,GAAA3oC,OACH6jD,EAAiB,KAAA7jD,OAAIgkD,mBACpB10C,GACH,cAAAtP,OAAagkD,mBAAmBmB,EAAMxiD,SACzC5D,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,iBAAA,SAAgBu5B,EAAe7lB,EAAYkqB,GACvC,IAAMlK,KAAQuY,EAAAI,eAAc,CAAEzO,UAC9B,SAAOl9B,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBAAmB10C,GAAG,cAAAtP,OAAasvB,GAC3D,IACFvwB,QACE1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIowB,EAAApW,QAAQha,EAAK,MAC/Brb,EAAAkyB,YAAU,eAAApQ,EAAA1gB,EAAAC,IAAAC,KAAC,SAAAwD,EAAO2e,GAAC,IAAAktB,EAAA,OAAAtvC,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACI0hB,EAAEulC,OAAM,OAArBrY,QAAI3rC,EAAAvB,MACCiC,OAASirC,EAAKsY,SAAWtY,EAAI,wBAAA3rC,EAAAX,OAAA,EAAAS,EAAA,IAC3C,gBAAAo0B,GAAA,OAAApX,EAAAvd,MAAA3E,KAAA4E,UAAA,EAHS,IAKlB,EAOAjF,yBAAA,SAAgB2pD,EACZj2C,EACA3M,EACA62B,GAEA,IAAMlK,KAAQuY,EAAAI,eAAc,CAAEzO,UAC9B,SAAOl9B,EAAA6rC,MAAI,GAAAnoC,OACJ6jD,EAAiB,KAAA7jD,OAAIgkD,mBACpB10C,GACH,YAAAtP,OAAWgkD,mBAAmBrhD,GAAM,cAAA3C,OAAasvB,GAClD,IACFvwB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,4BAAA,SAAgB4pD,EACZzgC,EACAiG,EACAjd,EACAq2B,GAIA,OAAOxU,EAAc,CACjB/gB,KAJJhO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAKhB0uB,gBAAc3C,EAAA4C,aAAYxE,GAC1B0E,cAAY9C,EAAA4C,gBAAY5C,EAAA2H,YAAWvJ,EAAOjd,MAC3ChP,QACC1C,EAAAkb,KAAI,SAACtY,GAAC,OACF8lB,EAAQxN,IACJ,SAACjI,GAAE,OACErQ,EAAEksB,KACC,SAAC5Q,GAAC,OAAKA,EAAEpN,WAAamC,KAAQ80B,GAAUA,IAAW7pB,EAAEjL,GAAG,EAC3D,EACR,GAGb,EAEA1T,sBAAA,SAAgB6pD,EACZn2C,EACA0b,EACAjd,EACAq2B,GAGA,OAAOxU,EAAc,CACjB/gB,KAHJhO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAIhB0uB,gBAAc3C,EAAA4C,aAAYxE,GAC1B0E,cAAY9C,EAAA4C,gBAAY5C,EAAA2H,YAAWvJ,EAAOjd,MAC3ChP,QACC1C,EAAAkb,KACI,SAACtY,GAAC,OAEE,IADAA,EAAEwY,OAAO,SAACxY,GAAC,OAAKA,EAAEkO,WAAamC,GAAMrQ,EAAEqQ,KAAO80B,CAAM,GAAEnjC,MACrD,GAGjB,EAQArF,yBANA,SAMsB8pD,EAAsB3vB,EAAAmnB,EAAAC,GAAA,OAAA+G,EAAAtjD,MAAA3E,KAAA4E,UAAA,6ICxW5C,IAAAtE,EAAAzC,EAAA,OAEA0L,EAAA1L,EAAA,OACA+P,EAAA/P,EAAA,OACAuQ,EAAAvQ,EAAA,OAEAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACA0Q,EAAA1Q,EAAA,OAEA6rD,EAAA7rD,EAAA,OACA8rD,EAAA9rD,EAAA,OACA+rD,EAAA/rD,EAAA,MACAgsD,EAAAhsD,EAAA,OACAisD,EAAAjsD,EAAA,OAwBA8P,GAtBA9P,EAAA,OACAA,EAAA,MAEAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACA+L,EAAA/L,EAAA,OAEAyQ,GADAzQ,EAAA,OACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,gBAoCA8B,uBA0BiC,eAAAoqD,GAApB/6C,GAAoBlP,EAAA,SAAAkP,KAAAjP,EAAAC,KAAAgP,GAAA,GAAA+6C,UAApB/6C,2CAAoB,kDAApBA,0DAHE,CAACzF,EAAA0C,qBAAoBZ,QAAA,CApB5B/K,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACAsC,EAAA6B,eACApC,EAAAwB,eACAzB,EAAAuB,mBACAzB,EAAAuB,oBACAxB,EAAAuB,gBACArB,EAAAuB,gBACApB,EAAAwB,yBACArB,EAAA2B,kBACApC,EAAAgC,sBACAg6C,EAAA39C,iBACA09C,EAAAx6C,iBACAtF,EAAAiG,gBACAvB,EAAA6B,iBACA05C,EAAAG,mBACAJ,EAAA36C,mBACA66C,EAAAG,qBAKKj7C,EAAoB,iLCjHjC,IAAApF,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,UAEAA,EAAA,mJAsBgBuK,EADJiF,yBAAA,cACIjF,CAD2C,UACjBA,EAAAmF,iBAAA,WAC9BnF,EADmCkF,wBACnClF,iEAKQA,EADJiF,yBAAA,WACIjF,CADiD,WACjDA,EAAAulB,iBAAA,KAAgBvlB,EAAAkF,yBAChBlF,EAAAiF,yBAAA,4BACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAuO,EAAAtX,KAAAtD,KAAA4a,EAAAtX,KAAAtD,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAGR/I,EADKkF,wBACLlF,8CAHQA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAsO,EAAAtX,gCAMJrM,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA0X,EAAAla,KAAA,iFAEJzJ,EAAAiF,yBAAA,qBAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAuO,EAAAla,KAAAV,KAAA4a,EAAAla,KAAAV,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACH/I,EAAAkF,oEADGlF,EAAAqV,2BAAA,UAAAsO,EAAAla,oEAIJzJ,EADJiF,yBAAA,WACIjF,CADwD,WACxDA,EAAAulB,iBAAA,KAAkBvlB,EAAAkF,yBAEdlF,EADJiF,yBAAA,sBACIjF,CADiC,cAG7BA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAgW,EAAA3jB,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAuO,EAAAuC,OAAAnd,KAAA4a,EAAAuC,OAAAnd,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAIZ/I,EANQkF,wBAMRlF,gDAJYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAsO,EAAAuC,sEAxBpBlmB,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,EAAAk4C,EAAA,cAQI9hD,EADJiF,yBAAA,WACIjF,CADmB,WACnBA,EAAAulB,iBAAA,KAAgBvlB,EAAAkF,yBAIhBlF,EAHA4J,qBAAA,EAAAm4C,EAAA,aAGA/hD,CAH2B,EAAAgiD,EAAA,uBAO/BhiD,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAq4C,EAAA,cAUAjiD,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,MAKJvlB,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,eACIjF,CADiD,gBAC3BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAga,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAu+B,UAAS,GAAxCliD,EAAAulB,iBAAA,MACJvlB,EAD0DkF,wBAC1DlF,iFAnCqCA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAw+B,cASvBniD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA8a,EAAAy+B,cAIDpiD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAy+B,cAI+BpiD,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA8a,EAAA0+B,aAWpCriD,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAA,IAAA9B,EAAAoI,MAAAnvB,OAAA,OAAAoD,CAGJ2jB,EAAA2+B,UAHItiD,EAGJ,MAAA2jB,EAAAvV,MAAA,KAAAuV,EAAAvV,MAAAf,gBAAA,MAAAsW,EAAAvV,MAAA,KAAAuV,EAAAvV,MAAAjD,6DAOJnL,EAAAiF,yBAAA,aACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GACPnF,EADoBkF,wBACpBlF,2CAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,eACV7I,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAzJ,UApDnB3iB,4BAiEsC,eAAAgrD,EAAzBC,EAAyB,WA+B9B,OAAA9qD,EAHJ,SAAA8qD,EACqCjkB,EACzB9lC,GAA0Bd,EAAAC,KAAA4qD,GADD5qD,KAAA2mC,QACzB3mC,KAAAa,YA7BKb,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aAEbhf,KAAAm0B,MAAQn0B,KAAK2mC,MAAMxS,OAAS,GAErCn0B,KAAA6R,KAAO7R,KAAK2mC,MAAM90B,KAClB7R,KAAAyU,KAAOzU,KAAK2mC,MAAMlyB,KAETzU,KAAAwqD,aAAexqD,KAAK2mC,MAAM6jB,aAEnCxqD,KAAAsuB,OAAStuB,KAAK2mC,MAAMrY,OAEXtuB,KAAAwW,MAAQxW,KAAK2mC,MAAMnwB,KAmBhC,EAAC,EAAAnV,IAAA,YAAAiE,IAfJ,WACI,OAAOtF,KAAKm0B,MAAM7Y,IAAI,SAACtY,GAAC,OAAKA,EAAEuQ,IAAI,GAAEsB,KAAK,KAC9C,GAAC,CAAAxT,IAAA,cAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,wBAChC,GAAC,CAAAjE,IAAA,eAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,gCAChC,GAAC,CAAAjE,IAAA,UAAAC,MAOM,WACHtB,KAAKsiB,QAAU,6BACftiB,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,QAC9B,IAAC,CApCiC,GAoCjCq8B,SApCQC,0CAAyBxiD,EAAAC,4BA6BtByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAA,kDA7BlBqiD,EAAyB9hD,UAAA,wCAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,oCA7DjBoiB,UAAAC,MAAAC,EAAA,gGAgBWF,UAAAG,MAAAD,EAAA,qFAmBRF,UAAAI,MAAAF,EAAA,kKACK,gBACT,gBACA,iBAI2CF,UAAAM,MAAAJ,EAAA,wFAjC/BF,UAAAO,MAAAL,EAAA,qFAiBAF,UAAAyoB,MAAAvoB,EAAA,80BA1BpBtnB,EADJiF,yBAAA,WACIjF,CADI,QACJA,EAAAulB,iBAAA,KAAwBvlB,EAAAkF,yBACxBlF,EAAAkB,oBAAA,WACAlB,EAAA4J,qBAAA,EAAA64C,EAAA,gBAGJziD,EAAAkF,yBAwCAlF,EAvCA4J,qBAAA,EAAA84C,EAAA,sBAuCA1iD,CAvCgD,EAAA2iD,EAAA,yBAAA3iD,EAAA2c,yEAJb3c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAIpBla,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAAo+B,2XAuD1BokB,CAAyB,4LCnFtC,IAAAhhD,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAKAmtD,GAJAntD,EAAA,OAEAA,EAAA,OAEAA,EAAA,kOAmBwBuK,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,IAAA85C,EAAA7iD,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiB05C,EAAAC,WAAAF,EAAA95C,GAAuB,GAGxC/I,EAAAmF,iBAAA,GACJnF,EAAAkF,kFAHIlF,EAFA6I,qBAAA,WAAAi6C,EAAAlvC,mBAAA5T,EAAAuJ,0BAAA,EAAAC,IAAAhM,SAAAqlD,GAEA7iD,CAFmD,iBAAAA,EAAAuJ,0BAAA,EAAA2E,IAInDlO,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAw9C,EAAA,+BARR7iD,EADJiF,yBAAA,WACIjF,CADgD,cAC7BA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACvBlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAo5C,EAAA,uBASRhjD,EADIkF,wBACJlF,4CAR4BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAi6C,EAAAniD,mCAYxBX,EAAAkB,oBAAA,6DAGIlB,EAAA6I,qBAAA,SAAAuqB,EAAApR,OAAA,0BAIAhiB,EAAAkB,oBAAA,yEA5BZlB,EAAAiF,yBAAA,YAKIjF,EAAA4J,qBAAA,EAAAq5C,EAAA,cAaAjjD,EAAAiF,yBAAA,YASIjF,EANA4J,qBAAA,EAAAs5C,EAAA,aAMAljD,CADE,EAAAmjD,EAAA,yBAAAnjD,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADwB,YAEpBA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD6C,kBACbA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,QAAGjF,EAAAmF,iBAAA,IACPnF,EADuDkF,wBACvDlF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAMOA,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAAW,GAAAwL,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAM,gBAAAhwB,GAAqB,GAE9BpzB,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAAW,GAAAwL,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAS,eAAAnwB,GAAoB,GAE7BpzB,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBAGZtjD,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAAW,GAAAwL,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAxvB,gBAAAF,GAAqB,GAE9BpzB,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,0FAhFUA,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAi6C,EAAAniD,SAAA,KAAAmiD,EAAAniD,SAAA/D,QAkBGoD,EAAAoF,oBAAA,GAA2BpF,EAA3B6I,qBAAA,aAAAuqB,EAAApR,OAAA,KAAAoR,EAAApR,OAAAplB,OAA2BoD,CAAA,WAAAwjD,GAa5BxjD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA+tB,EAAAjoB,MAAAioB,EAAAnoB,IAAAmoB,EAAAhoB,QAAA,YAIGpL,EAAAoF,oBAAA,GAAApF,EAAA+L,6BAAA,MAAAqnB,EAAA5nB,KAAA,KAAA4nB,EAAA5nB,KAAA6B,gBAAA,MAAA+lB,EAAA5nB,KAAA,KAAA4nB,EAAA5nB,KAAAL,OAoCPnL,EAAAoF,oBAAA,IAAApF,EAAAiX,sBAAA,gBAAA6rC,EAAAtvB,UAAAh2B,SAAA,MAAA41B,EAAA,KAAAA,EAAAnoB,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+2C,EAAAtvB,UAAAh2B,SAAA,MAAA41B,EAAA,KAAAA,EAAAnoB,IAAA,+BArF9B,IAAMmpB,EAAuB,GAE7B78B,yBAoHmC,eAAAksD,EAAtBC,EAAsB,WAmB/B,OAAAhsD,EALA,SAAAgsD,EACYjrD,EACA2W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAA8rD,GADlB9rD,KAAAa,YACAb,KAAAwX,UAfIxX,KAAA+I,SAAqB,GAC9B/I,KAAA+rD,UAAY,EACZ/rD,KAAAu8B,MAAwB,GACxBv8B,KAAA48B,UAAW,EACX58B,KAAAgc,kBAA8B,GAoDrBhc,KAAA68B,iBAAmB,SAACC,GAA+B,OAC9D77B,EAAK87B,UAAYD,CAAE,EAER98B,KAAAg9B,kBAAoB,SAACF,GAA+B,OAC/D77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CA7ClE,EAEH,EAAAjnB,IAAA,YAAAiE,IATA,WACI,OAAOtF,KAAKa,UAAUyE,IAAc0lD,EAAAgB,eAAiBxvB,CACzD,GAAC,CAAAn7B,IAAA,kBAAAC,MAQM,WAAe,IAAAwD,EAAA9E,KACZ4X,EAAM5X,KAAKwX,QAAQzC,KAAKi2C,EAAAiB,yBAA0B,CACpDxpD,KAAM,CACF85B,MAAOv8B,KAAKu8B,MACZva,QAAS,CAAEzC,SAAUvf,KAAK+rD,cAGlCn0C,EAAII,cAAcjF,UAAU,SAACwpB,GACpBA,IAAOA,EAAQ3kB,EAAIM,kBAAkB4G,UAC1Cha,EAAK46B,SAASnD,EAClB,EACJ,GAEA,CAAAl7B,IAAA,iBAAAC,MACO,SAAe6a,GAClBnc,KAAK0/B,SAAS1/B,KAAKu8B,MAAM/gB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO8I,EAAM9I,EAAE,GAC5D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKu8B,MAAQe,EACTt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKu8B,MAC5C,GAGA,CAAAl7B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKu8B,MAAQj7B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgB6a,GACnB,GAAU,MAALA,KAAO9I,GACZ,KAAMysB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASuW,EAAM9I,IAEvCrT,KAAKa,UAAUm/B,gBAAgBgrB,EAAAgB,aAD/BjsB,EAC2C,GAAAh8B,OAAAqe,EACpC0d,GAAQ,CACX3jB,EAAM9I,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMmZ,EAAM9I,EAAE,GAAC,CAGlD,IAAC,CA/E8B,GA+E9Bw4C,SA/EQC,0CAAsB1jD,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA8P,WAAA,kDAAtBwzC,EAAsBhjD,UAAA,sBAAAqW,OAAA,CAAApW,SAAA,YAAAA,SAAA,CAAAX,EAAAknB,6BARpB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAM0rB,CAAsB,GACpDzrB,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,qCAdsBoiB,UAAAC,MAAAC,EAAA,yFA3CKF,UAAAG,MAAAD,EAAA,2JAAc,oBAYdF,UAAAI,MAAAF,EAAA,6JAAe,ghDAlEvCtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAk6C,EAAA,cAsFJ9jD,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAmiD,iBAAiB,GAGtBpjD,EADJiF,yBAAA,UACIjF,CADoD,cAC1CA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAERvlB,EAF2BkF,wBAE3BlF,KACAA,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,WACJlB,EAAAkF,gCAlGyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAkzB,+IA6GpBuvB,CAAsB,oLCjInC,IAAAliD,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,UACAA,EAAA,oIAMYuK,EADJiF,yBAAA,UACIjF,CADoD,UACpDA,EAAAulB,iBAAA,KAAmDvlB,EAAAkF,yBAG3ClF,EAFRiF,yBAAA,YAEQjF,CAF6B,WAE7BA,CAD4B,WAC5BA,EAAAqjD,sBAAA,KAESrjD,EAAAkB,oBAAA,UACTlB,EAAAsjD,sBAAAtjD,EAAAkF,yBAKIlF,EAJJiF,yBAAA,uBAIIjF,CADH,yBACoCA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,0BAAkCjF,EAAAmF,iBAAA,SAE1CnF,EAF4CkF,wBAE5ClF,KAEIA,EADJiF,yBAAA,YACIjF,CAD4B,YAC5BA,EAAAqjD,sBAAA,MAEarjD,EAAAkB,oBAAA,WACblB,EAAAsjD,sBAAAtjD,EAAAkF,yBAEIlF,EADJiF,yBAAA,wBACIjF,CADwD,0BACvBA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,0BAAkCjF,EAAAmF,iBAAA,SAE1CnF,EAF4CkF,wBAE5ClF,KAEIA,EADJiF,yBAAA,YACIjF,CADuB,YACvBA,EAAAqjD,sBAAA,MAEarjD,EAAAkB,oBAAA,WACblB,EAAAsjD,sBAAAtjD,EAAAkF,yBAKIlF,EAJJiF,yBAAA,wBAIIjF,CADH,0BACoCA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,0BAAkCjF,EAAAmF,iBAAA,SAG9CnF,EAHgDkF,wBAGhDlF,OAEIA,EADJiF,yBAAA,eACIjF,CADiD,gBAC3BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA66C,SAAQ,GAAvC/jD,EAAAulB,iBAAA,MACJvlB,EADwDkF,wBACxDlF,GAEIA,EADJiF,yBAAA,eACIjF,CAD0C,WAChBA,EAAAmF,iBAAA,YAElCnF,EAFuCkF,wBAEvClF,+CA5CsBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAAK,EAAAZ,MAUYtI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YACA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YASA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YACA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAYA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YACA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mCAa1B7I,EADJiF,yBAAA,YACIjF,CADgC,UAChCA,EAAAulB,iBAAA,KAKAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,cACIjF,CAD0C,UAChBA,EAAAmF,iBAAA,WAElCnF,EAFuCkF,wBAEvClF,MA7DZzI,8BA+EwC,eAAAysD,EAA3B7M,EAA2B,WAwBvC,OAAAz/C,EAvGD,SAAAy/C,IAAAx/C,EAAAC,KAAAu/C,GAgFqBv/C,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aAEtBhf,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACxByiB,UAAW,IAAI9iD,EAAAsgC,aAAY,GAC3ByiB,OAAQ,IAAI/iD,EAAAsgC,aAAY,GACxB0iB,QAAS,IAAIhjD,EAAAsgC,aAAY,MAkBhC,EAAAxoC,IAAA,SAAAC,MAdU,WAAM,IAAAL,EAAAjB,KACTA,KAAK0Q,KAAKiX,mBAENoB,OAAOC,KAAKhpB,KAAK0Q,KAAKpP,OAAO4tB,KACzB,SAAC7tB,GAAG,OACyB,IAAzBJ,EAAKyP,KAAKpP,MAAMD,IACS,SAAzBJ,EAAKyP,KAAKpP,MAAMD,EAAe,GAGvCrB,KAAKwsD,SAAU,EAGnBxsD,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,QAC9B,IAAC,CAvBmC,GAuBnC89B,SAvBQ7M,yCAA2B,kDAA3BA,EAA2Bz2C,UAAA,0BAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,oCA3ECoiB,UAAAC,MAAAC,EAAA,sGAGTF,UAAAG,MAAAD,EAAA,4KAEH,iBAAO,mBAWJF,UAAAI,MAAAF,EAAA,qLAEC,kBAAO,oBAQRF,UAAAM,MAAAJ,EAAA,gLAEC,kBAAO,oBAYsBF,UAAAO,MAAAL,EAAA,sFAQ1BF,UAAAyoB,MAAAvoB,EAAA,y1BAF5BtnB,EA/CA4J,qBAAA,EAAAy6C,EAAA,aA+CArkD,CA/CwD,EAAAskD,EAAA,yBAAAtkD,EAAA2c,wEAAlC3c,EAAhB6I,qBAAA,QAAA5H,EAAAmjD,QAAgBpkD,CAAA,WAAAukD,oZA4EjBpN,CAA2B,2KCnFxC,IAAA31C,EAAA/L,EAAA,MASA63C,EAAA73C,EAAA,4KA6BgBuK,EAAAkB,oBAAA,+DACIlB,EAAA6I,qBAAA,SAAAK,EAAA4B,KAAAkX,kCA8DIhiB,EAJJiF,yBAAA,WAIIjF,CADH,YACwCA,EAAAmF,iBAAA,GACzCnF,EADmDkF,wBACnDlF,2BADyCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAy4C,6BALzCxkD,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAA+CvlB,EAAAkF,yBAC/ClF,EAAA4J,qBAAA,EAAA66C,EAAA,cAMJzkD,EAAAkF,kEALyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA4B,KAAAnK,UAAAX,EAAAuJ,0BAAA,EAAAC,8BAMzBxJ,EAAAiF,yBAAA,gBAKIjF,EAAAkB,oBAAA,wBAOJlB,EAAAkF,kEALQlF,EAAAoF,sBAGApF,EAHA6I,qBAAA,MAAAK,EAAAqvC,QAGAv4C,CAHe,QAAAkJ,EAAA4B,KAAAM,QAAAlC,EAAA4B,KAAAG,GAGfjL,CAFgC,WAAAkJ,EAAAvI,SAEhCX,CADqB,UAAAA,EAAAuJ,0BAAA,EAAA2E,kEArFrClO,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eASIjF,EAAA4J,qBAAA,EAAA86C,EAAA,wBAKA1kD,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAGrB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2wB,UAAA/iB,OAAgB,GAGzB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAIlBnF,EAFUkF,wBAEVlF,KAKQA,EAJRiF,yBAAA,WAIQjF,CAFP,gBAEOA,CADuC,YAEnCA,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,gBACIjF,CAD6C,YACbA,EAAAmF,iBAAA,cAAOnF,EAAAkF,yBAEnClF,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MACJvlB,EADuBkF,wBACvBlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,QAAGjF,EAAAmF,iBAAA,IAEXnF,EAF2DkF,wBAE3DlF,KAcAA,EAbA4J,qBAAA,GAAA+6C,EAAA,iBAaA3kD,CATC,GAAA4kD,EAAA,kBAsBL5kD,EAAAkF,yBAIIlF,EAHJiF,yBAAA,YAGIjF,CADH,gBAOOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAD,SAAA6wB,QAAA7wB,EAAA6wB,OAAA/5B,EAAAoJ,sBAA2BF,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAAyB,GAGhD/5B,EADJiF,yBAAA,YACIjF,CAD0C,kBACfA,EAAAmF,iBAAA,IAEzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MAMZvlB,EAHYkF,wBAGZlF,qFA3GIA,EAAAoF,sBAIApF,EAJAiX,sBAAA,gBAAA/N,EAAA4B,KAAAkX,OAAA,KAAA9Y,EAAA4B,KAAAkX,OAAAplB,OAIAoD,CAJqC,aAAAkJ,EAAA4B,KAAAkX,OAAA,KAAA9Y,EAAA4B,KAAAkX,OAAAplB,OAIrCoD,CAHkC,iBAAAkJ,EAAA4B,KAAAkX,QAAA9Y,EAAA4B,KAAAkX,OAAAplB,QAGlCoD,CAFqC,eAAAkJ,EAAA4B,KAAAkX,QAAA9Y,EAAA4B,KAAAkX,OAAAplB,QAErCoD,CADmC,0BAAAkJ,EAAA4B,KAAAkX,QAAA9Y,EAAA4B,KAAAkX,OAAAplB,SAK9BoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,EAAA4B,KAAAkX,OAAA,KAAA9Y,EAAA4B,KAAAkX,OAAAplB,QAgBDoD,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,oBAAA/N,EAAA+wB,IACAj6B,CAD+B,WAAAkJ,EAAA+wB,KAKrBj6B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA+wB,IAAA,8BAUNj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA4B,KAAAuC,cAAAnE,EAAA4B,KAAAK,MAAAjC,EAAA4B,KAAAG,GAAA,KAYIjL,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,IAAA6D,EAAA4B,KAAAuC,cAAAnE,EAAA4B,KAAAK,MAAAjC,EAAA4B,KAAAG,GAAA,KAKDjL,EAAAoF,oBAAA,GAAApF,EAAA+L,6BAAA,MAAA7C,EAAA4B,KAAAU,KAAA,KAAAtC,EAAA4B,KAAAU,KAAA6B,gBAAA,MAAAnE,EAAA4B,KAAAU,KAAA,KAAAtC,EAAA4B,KAAAU,KAAAL,OAKNnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,EAAA4B,KAAAnK,SAAA,KAAAuI,EAAA4B,KAAAnK,SAAA/D,QAcAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA0lC,UAkBD5uC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,UAAA/N,EAAA6wB,QAK+B/5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA6wB,OAAA,gBAIrB/5B,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAvc,EAAA6wB,2DAYd/5B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,IAzIZzI,uBA6IiC,eAAAstD,EAApBC,EAAoB,WA4BhC,OAAAptD,EAzKD,SAAAotD,IAAAntD,EAAAC,KAAAktD,GA+IoBltD,KAAAqiC,KAAe,EACfriC,KAAAmiC,QAAkB,EAClBniC,KAAAg3C,UAAoB,EAEnBh3C,KAAA0H,MAAQ,IAAIkC,EAAAoV,aACZhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAAoiC,aAAe,IAAIx4B,EAAAoV,aAE7Bhf,KAAA2gD,QAAU,GACV3gD,KAAA+I,SAA4B,IAiBtC,EAAA1H,IAAA,cAAAC,MAfU,SAAY87B,GACXA,EAAQlqB,MAAQlT,KAAKkT,MACrBlT,KAAKmtD,eAEb,GAAC,CAAA9rD,IAAA,gBAAAC,MAEO,WACJtB,KAAK2gD,QAAU3gD,KAAKkT,KAAKU,KAAKJ,OAC9BxT,KAAK+I,SAAW,CACZ,CACIrD,SAAU1F,KAAKkT,KAAKM,QAAUxT,KAAKkT,KAAKG,GACxCoT,QAASivB,EAAAhvB,iBAGrB,IAAC,CA3B4B,GA2B5BumC,SA3BQC,yCAAoB,kDAApBA,EAAoBpkD,UAAA,mBAAAqW,OAAA,CAAAjM,KAAA,OAAAmvB,IAAA,MAAAF,OAAA,SAAA6U,SAAA,YAAA53B,QAAA,CAAA1X,MAAA,QAAAu6B,UAAA,YAAAG,aAAA,gBAAAr5B,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,aA3EDC,UAAAC,MAAAC,EAAA,8FAwDJF,UAAAG,MAAAD,EAAA,+OADIF,UAAAI,MAAAF,EAAA,0FACJG,GAtC6BL,UAAAM,MAAAJ,EAAA,2FAkDFF,UAAAO,MAAAL,EAAA,6rDAL/CtnB,EAjHA4J,qBAAA,EAAAo7C,EAAA,uBAiHAhlD,CAjH4C,EAAAilD,EAAA,yBAAAjlD,EAAA2c,wEAAjB3c,EAAZ6I,qBAAA,OAAA5H,EAAA6J,KAAY9K,CAAA,WAAAklD,2UA6HtBJ,CAAoB,qNCzJjC,IAAAtjD,EAAA/L,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QAEA0vD,EAAA1vD,EAAA,MAEA8yB,GADA9yB,EAAA,OACAA,EAAA,oIA0EgBuK,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,yIAAAnF,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAA8V,EAAA4E,MAAA5E,EAAAwE,aAAA,WAAAvmB,EAAAiM,sBAAA,IAAA8V,EAAAvG,IAAAuG,EAAAwE,aAAA,4BAGJvmB,EAAAwY,kCAAA,GAA8BxY,EAAAmF,iBAAA,+GAO9BnF,EALJiF,yBAAA,WAKIjF,CADH,OACMA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBACblF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,uBAAA47C,EAAAxkD,EAAAgJ,wBAAA6gC,GAAA10B,UAAA4M,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAghC,WAAAyB,GAAiB,GAAM,GAEhCxkD,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+BAVOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAy4C,iEAYHxkD,EADJiF,yBAAA,WACIjF,CADiD,UACjDA,EAAAulB,iBAAA,KAA0BvlB,EAAAkF,yBAC1BlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAX,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAxX,WAAW,CAAA66C,UAAY,IAAQ,GAExCplD,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,MAzGZzI,8BA6GyC,eAAA8tD,EAA5BC,EAA4B,SAAA9sD,GA2BrC,SAAA8sD,EACYC,EACAr0C,EACAzY,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA0tD,IAElCzsD,EAAAC,EAAAlB,KAAA0tD,IAJQC,UACA1sD,EAAAqY,SACArY,EAAAJ,YA7BII,EAAA2sD,KAAuB,OACtB3sD,EAAA4sD,WAAa,IAAIjkD,EAAAoV,aAClB/d,EAAA+gB,QAAU/gB,EAAKqY,OAAO0I,QACtB/gB,EAAA0R,WAAa,SAAC4P,GAAC,OAAKthB,EAAKqY,OAAO3G,WAAW4P,EAAE,EAC7CthB,EAAAkqD,WAAa,SAAChyB,EAAGtV,GAAC,OAAK5iB,EAAKqY,OAAO6xC,WAAWhyB,EAAGtV,EAAE,EAoBnD5iB,EAAA6sD,WAAa,kBAAM7sD,EAAK0sD,QAAQ54C,KAAKw4C,EAAAQ,qBAAqB,EAAC9sD,CAQ3E,CAACG,SAAAssD,EAAA9sD,GAAAd,EAAA4tD,EAAA,EAAArsD,IAAA,UAAAiE,IA1BD,WACI,OAAOtF,KAAKsZ,OAAO5I,KAAKpP,MAAMkvB,OAClC,GAAC,CAAAnvB,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAKsZ,OAAO5I,KAAKpP,MAAMuQ,IAClC,GAAC,CAAAxQ,IAAA,MAAAiE,IAED,WACI,IAAA0oD,EAAoChuD,KAAKsZ,OAAO5I,KAAKpP,MAA7CuQ,EAAIm8C,EAAJn8C,KAAMC,EAAQk8C,EAARl8C,SACd,OAD+Bk8C,EAAPx9B,SACpBA,EAAgBG,EAAA+C,UAAS7hB,GACtBA,EAAkB,GAAXC,EAAgB,GAClC,GAAC,CAAAzQ,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,IAAC,CAvBoC,CAAQruB,EAAA6H,cAAYslD,SAAhDC,0CAA2BtlD,EAAAC,4BAAAC,EAAAgN,gBAAAlN,EAAAC,4BAAAG,EAAAuI,oBAAA3I,EAAAC,4BAAAK,EAAAH,iBAAA,kDAA3BmlD,EAA2B5kD,UAAA,2BAAAqW,OAAA,CAAAyuC,KAAA,QAAAxuC,QAAA,CAAAyuC,WAAA,cAAA9kD,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAxE3BoiB,UAAAC,MAAAC,EAAA,0FAYIF,UAAAG,MAAAD,EAAA,sFAWAF,UAAAI,MAAAF,EAAA,uFAmCUF,UAAAM,MAAAJ,EAAA,k8BAjEftnB,EAJJiF,yBAAA,cAIIjF,CADH,cAMOA,EAAA4I,qBAAA,0BAAS3H,EAAAykD,YAAY,GALzB1lD,EAAAulB,iBAAA,KASAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD2B,cAOvBA,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,MAAOvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANhDxlD,EAAAulB,iBAAA,KAUAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,OAAQvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANjDxlD,EAAAulB,iBAAA,KAYRvlB,EAFQkF,wBAERlF,KAMIA,EALJiF,yBAAA,cAKIjF,CAFH,YAEyBA,EAAAmF,iBAAA,kCAAgCnF,EAAAkF,yBACtDlF,EAAAiF,yBAAA,aAKIjF,EAJA4J,qBAAA,GAAAi8C,EAAA,sBAIA7lD,CAJ+B,GAAA8lD,EAAA,uBAKnC9lD,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAm8C,EAAA,6CAgBA/lD,EAAA4J,qBAAA,GAAAo8C,EAAA,6CAYJhmD,EAAAkF,gCA5DYlF,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAWAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAacxlD,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,KAAAhL,EAAA0lB,MAAA,eAEH3mB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAmnB,SAIApoB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmnB,SAKEpoB,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAA0P,EAAAvY,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAArB,EAAA5X,WAAAX,EAAAuJ,0BAAA,GAAAC,IAaHxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAo9C,EAAAjmD,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAAqsC,EAAAb,4iBAejBE,CAA4B,4MCpHzC7vD,EAAA,OACAA,EAAA,OADA,IAEA8yB,EAAA9yB,EAAA,OAIAuC,GAFAvC,EAAA,OACAA,EAAA,OACAA,EAAA,OACAub,EAAAvb,EAAA,2TAmBgBuK,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,IAAA,IAAAT,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GAEhBU,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,yBACdnF,EADiCkF,wBACjClF,gCA0BYA,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAAq9C,IAEAlmD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6gD,GAAA74C,cAAA64C,GAAA/6C,KAAA,uEAZRnL,EALJiF,yBAAA,sBAKIjF,CADH,mBAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAC,IAAA,IAAAC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAi9C,UAAAp9C,IAAiB,GAKlC/I,EAAA4J,qBAAA,EAAAw8C,EAAA,mDAORpmD,EADIkF,wBACJlF,+CAbQA,EAAAoF,sBAEApF,EAFA6I,qBAAA,UAAAK,GAAA4lC,OAEA9uC,CAFkB,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAOExJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAA6lC,uCAsBpB/uC,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAAw9C,IAEArmD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAghD,GAAAh5C,cAAAg5C,GAAAl7C,KAAA,uEAdRnL,EALJiF,yBAAA,sBAKIjF,CADH,6GAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA2E,IAAA,IAAAzE,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAoE,YAAAvE,IAAmB,GAOpC/I,EAAA4J,qBAAA,EAAA08C,EAAA,mDAORtmD,EADIkF,wBACJlF,kDAfQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAuE,UAGAzN,CAH4B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG5BxJ,CADuC,sBAAA4V,GAAA5V,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAmI,GAAAvI,gBAAA,OAAAuI,GAAA5V,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAmI,GAAAzK,OAOnBnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAtE,GAAAwE,yCAyBZ1N,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCAIAnF,EAAAiF,yBAAA,aAAyBjF,EAAAmF,iBAAA,SAC7BnF,EAD+BkF,wBAC/BlF,0DALIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA2E,GAAAhK,EAAAwN,sBAAA,IAAA+4C,GAAA96C,YAAA,KAAAzB,GAAAqD,aAAA,kCALRrN,EAJJiF,yBAAA,kBAIIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAA48C,EAAA,cAUAxmD,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,gEAjBIA,EAAA6I,qBAAA,QAAA09C,GAAAt7C,IAKSjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,GAAA2uC,YASD73C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAkhD,GAAAl5C,cAAAk5C,GAAAp7C,KAAA,wEAxBhBnL,EALJiF,yBAAA,sBAKIjF,CADH,iDAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAy9C,IAAA,IAAAv9C,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAqB,WAAW,CAAA61B,QAAAr3B,KAAoB,GAKhD/I,EAAA4J,qBAAA,EAAA88C,EAAA,mDAqBR1mD,EADIkF,wBACJlF,kDA3BQA,EAAAoF,sBAEApF,EAFA6I,qBAAA,iBAAA89C,GAAA3mD,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAA+sC,GAAAvmB,QAEApgC,CAFsC,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAOlBxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAwQ,oCAoC5B1Z,EADJiF,yBAAA,WACIjF,CAD2D,qBAC3DA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,sEAOQA,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADsB,WACtBA,EAAAulB,iBAAA,KAAsBvlB,EAAAkF,yBACtBlF,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA8P,IAAA,IAAA5P,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,KAAiB,GAI1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,WACIjF,CADsB,WACtBA,EAAAulB,iBAAA,KAAoBvlB,EAAAkF,yBACpBlF,EAAAkB,oBAAA,yBAURlB,EADIkF,wBACJlF,kDAlBYA,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAAK,GAAAZ,KAAApP,MAAAuQ,KAGAzJ,CAH2B,iBAAAA,EAAAuJ,0BAAA,EAAAC,GAG3BxJ,CADuC,WAAAkJ,GAAAqyB,UAQvCv7B,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,cAAAmB,GAAAd,GAAAZ,KAAApL,IAAA,cAAA8M,GAAA9Q,MAIA8G,CAJgC,UAIhCA,CAHe,SAGfA,CAFU,UAEVA,CADW,WAAAkJ,GAAAqyB,6EAkCnBv7B,EAJJiF,yBAAA,WAIIjF,CADH,YACwCA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAC/ClF,EAAAiF,yBAAA,mDAIIjF,EAAA4I,qBAAA,yBAAAG,IAAA,IAAA69C,GAAA5mD,EAAAgJ,wBAAAulC,IAAAp5B,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAA65C,WAAA6D,GAAA79C,IAAwB,GAGjD/I,EADKkF,wBACLlF,mEARyCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA66C,IAEjC5mD,EAAAoF,sBAIApF,EAJA6I,qBAAA,mBAAAmB,GAAAhK,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAA5P,GAAArJ,WAAAX,EAAAuJ,0BAAA,EAAA2E,IAAA1Q,SAAAopD,IAIA5mD,CAFC,iBAAAA,EAAAuJ,0BAAA,EAAAC,kCATTxJ,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAAyCvlB,EAAAkF,yBACzClF,EAAA4J,qBAAA,EAAAi9C,GAAA,4CAaJ7mD,EAAAkF,mEAZyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAvI,6EAkBzBX,EAJJiF,yBAAA,WAIIjF,CADH,eAMOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0lC,IAAA,IAAAxlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GALpBU,EAAAulB,iBAAA,MAUJvlB,EADIkF,wBACJlF,IA1NRzI,uBA6NiC,eAAAuvD,GAApBnB,GAAoB,WAmF5B,OAAAjuD,EARD,SAAAiuD,GAEYoB,GACA71C,GACAxY,GACAD,IAA0B,IAAAI,GAAAjB,KAAAD,EAAAC,KAAA+tD,IAH1B/tD,KAAAmvD,eACAnvD,KAAAsZ,UACAtZ,KAAAc,QACAd,KAAAa,aA7ELb,KAAAovD,WAAY,EACHpvD,KAAAgiB,QAAUhiB,KAAKsZ,OAAO0I,QACtBhiB,KAAA+I,SAAW/I,KAAKsZ,OAAOvQ,SACvB/I,KAAA8V,UAAY9V,KAAKc,KAAKuuD,iBACtBrvD,KAAA0Q,KAAO1Q,KAAKsZ,OAAO5I,KACnB1Q,KAAAm3C,QAAUn3C,KAAKc,KAAKwuD,YAEpBtvD,KAAA8hB,UAAS1I,EAAA2I,eAAc,CACnC/hB,KAAKc,KAAKyuD,cACVvvD,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAkb,KAAI,SAAArV,IAAkB,IAAA6B,GAAAma,EAAAhc,GAAA,GAARmS,GAAGtQ,GAAA,GAOb,OANmB7G,GAAKg/C,WAClBh/C,GAAKH,KAAK0uD,gBAFR1nD,GAAA,IAGF7G,GAAKH,KAAKuhB,kBAAkBjK,KACCoD,OAC/B,SAACi0C,IAAG,OAAMA,GAAIzL,KAAKp+C,SAAS,UAAU,GAEnB4W,KACnB,SAACyW,GAAG3U,IAAC,OACD2U,GAAEpf,UAAUy0B,cAAchqB,GAAEzK,aAC3Bof,GAAExd,cAAgB,IAAI6yB,cAAchqB,GAAE7I,cAAgB,GAAG,EAEtE,IAiBYzV,KAAA0H,MAAQ,kBAAMzG,GAAKkuD,YAAY5wC,SAAS,EACxCve,KAAA2S,WAAa,SAAC4P,IAAC,OAAKthB,GAAKqY,OAAO3G,WAAW4P,GAAE,EAC7CviB,KAAAmrD,WAAa,SAAChyB,GAAGtV,IAAC,OAAK5iB,GAAKqY,OAAO6xC,WAAWhyB,GAAGtV,GAAE,EACnD7jB,KAAA0vD,SAAW,SAACC,IAAO,EAoC/B3vD,KAAKovD,YAAcpvD,KAAKmvD,WAC5B,EAAC,EAAA9tD,IAAA,WAAAiE,IAtDD,WACI,OAAOtF,KAAKc,KAAK+U,QACrB,EAACqF,IACD,SAAoB9C,IAChBpY,KAAKc,KAAK+U,SAAWuC,EACzB,GAAC,CAAA/W,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKc,KAAKo2C,MACrB,EAACh8B,IACD,SAAkB00C,IACd5vD,KAAKc,KAAKo2C,OAAS0Y,EACvB,GAAC,CAAAvuD,IAAA,qBAAAiE,IAOD,WACI,QAAStF,KAAKa,UAAUyE,IAAI,+BAChC,GAAC,CAAAjE,IAAA,gBAAAiE,IACD,WACI,OACItF,KAAK6vD,sBACH7vD,KAAKa,UAAUyE,IAAI,0BAE7B,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,SAAOqrB,EAAA+C,aACH/C,EAAAoQ,SACIjnB,KAAKuX,MACLrxB,KAAKa,UAAUyE,IAAI,+BAAiC,IAGhE,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iBAC9B,IAAC,CAzE4B,GAyE5B4pD,UAzEQnB,8CAAoB3lD,EAAAC,4BAAAC,EAAAmW,kBAAA,GAAArW,EAAAC,4BAAAG,EAAAuI,oBAAA3I,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAA,mDAApBwlD,GAAoBjlD,UAAA,mBAAAqW,OAAA,CAAA2wC,YAAA,eAAA7mD,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,kCAjM2BC,UAAAC,MAAAC,EAAA,gGAQFF,UAAAG,MAAAD,EAAA,2FAEXF,UAAAI,MAAAF,EAAA,2FAoFfF,UAAAM,MAAAJ,EAAA,wFA6CqBF,UAAAO,MAAAL,EAAA,oGACjC,oBAGyCF,UAAAyoB,MAAAvoB,EAAA,oGACrC,oBA3HiBF,UAAAugC,MAAArgC,EAAA,8FA4CAF,UAAAwgC,MAAAtgC,EAAA,6GAwCwBF,UAAAygC,MAAAvgC,EAAA,yFAU7BF,UAAA0gC,MAAAxgC,EAAA,2FAUAF,UAAA2gC,MAAAzgC,EAAA,yFAmCiBF,UAAA4gC,MAAA1gC,EAAA,qFA2BxCF,UAAA6gC,MAAA3gC,EAAA,6xEAvMDtnB,EAHJiF,yBAAA,WAGIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAAs+C,EAAA,iBAUJloD,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA4DvlB,EAAAkF,yBAC5DlF,EAAAkB,oBAAA,YACJlB,EAAAkF,yBAMQlF,EALRiF,yBAAA,YAKQjF,CAFP,eAEOA,CADa,WACbA,EAAAulB,iBAAA,KAAiDvlB,EAAAkF,yBAE7ClF,EADJiF,yBAAA,YACIjF,CAD2C,eAC3CA,EAAAulB,iBAAA,MAAmCvlB,EAAAkF,yBACnClF,EAAA4J,qBAAA,GAAAu+C,EAAA,wDAqBAnoD,EAAA4J,qBAAA,GAAAw+C,EAAA,yDAuBApoD,EAAA4J,qBAAA,GAAAy+C,GAAA,yBAmCJroD,EAAAkF,yBAIIlF,EADJiF,yBAAA,YACIjF,CAD8B,YAC9BA,EAAAulB,iBAAA,MAAgBvlB,EAAAkF,yBAChBlF,EAAAiF,yBAAA,sBAKIjF,EAAAmF,iBAAA,uCAERnF,EADIkF,wBACJlF,GAQAA,EANA4J,qBAAA,GAAA0+C,GAAA,aAMAtoD,CAN+D,GAAAuoD,GAAA,cAiCnEvoD,EAAAkF,yBAEIlF,EADJiF,yBAAA,gBACIjF,CADiC,YACjCA,EAAAulB,iBAAA,yCAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD2B,aAC3BA,EAAAulB,iBAAA,yCAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,qDAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA,OAAiB9H,GAAAsJ,WAAW,CAAA66C,SAAAr8C,IAAqB,GAK7D/I,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAA4+C,GAAA,iDAoBJxoD,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA6+C,EAAA,sBAtLazoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,WAWThnD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,GAAAqH,MASatI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA42C,aAAA,OAAAliC,GAAA3V,EAAAwN,sBAAA,MAAAvM,GAAA8tC,UAAA,KAAAp5B,GAAA/Y,SAqBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAA42C,aAAA,OAAAjiC,GAAA5V,EAAAwN,sBAAA,MAAAvM,GAAAyM,YAAA,KAAAkI,GAAAhZ,QAAA,GAuBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAAymD,aAwCD1nD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,KAAA5H,GAAAynD,UAEA1oD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,8BAIFxN,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAAgJ,eAQDjK,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,GAAAqH,KAAApP,MAAAkvB,SA4BDpoB,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,wDAIIxN,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,4DAIAxN,EAAAoF,sBAEApF,EAFA6I,qBAAA,iBAAA8/C,GAAA3oD,EAAAwN,sBAAA,MAAAvM,GAAA2Y,UAAA,KAAA+uC,GAAAvD,SAEAplD,CAFuC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAU9CxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA+/C,GAAA5oD,EAAAwN,sBAAA,MAAAvM,GAAAN,WAAA,KAAAioD,GAAAhsD,QAoBJoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,ugBAeArB,EAAoB,oLCvOjC,IAAAnkD,EAAA/L,EAAA,MACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SACAA,EAAA,wGA4CgCuK,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,4BACAA,EAAAkB,oBAAA,6DAIIlB,EAAA6I,qBAAA,SAAAggD,EAAA7mC,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEAtBZlB,EANJiF,yBAAA,UAMIjF,CADH,eAKOA,EAAA4I,qBAAA,uBAAAigD,EAAA7oD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAmlC,WAAAD,GAAgB,GAEzB7oD,EAAAiF,yBAAA,YAeIjF,EAZA4J,qBAAA,EAAAm/C,EAAA,aAYA/oD,CATC,EAAAgpD,EAAA,aASDhpD,CADE,EAAAipD,EAAA,yBAAAjpD,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADyC,aAErCA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAQhBnF,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAigD,EAAA7oD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAkW,UAAA/iB,KAAA+xC,GAAoB,GAE7B7oD,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,2FA5DIA,EAAAiX,sBAAA,eAAA0M,EAAAoW,SAAA8uB,EAAA59C,IAaajL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAjN,SAAAlZ,SAAAqrD,EAAA59C,KAMAjL,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,aAAAggD,EAAA7mC,OAAA,KAAA6mC,EAAA7mC,OAAAplB,OAA2BoD,CAAA,WAAAk9B,GAa5Bl9B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAwjD,EAAA19C,MAAA09C,EAAA59C,IAAA,YAKIjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAwjD,EAAAr9C,KAAA,KAAAq9C,EAAAr9C,KAAA6B,gBAAA,MAAAw7C,EAAAr9C,KAAA,KAAAq9C,EAAAr9C,KAAAL,OAAA,kBAcZnL,EAAAoF,sBAAApF,EAAAiX,sBAAA,YAAA0M,EAAAwZ,YAAA0rB,EAAA59C,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAwZ,YAAA0rB,EAAA59C,IAAA,wDA9DtBjL,EAAAiF,yBAAA,UAIIjF,EAAA4J,qBAAA,EAAAs/C,EAAA,6CAiEJlpD,EAAAkF,kEA/DyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAAoI,kCAP7B/rB,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAu/C,EAAA,sJAEKnpD,EAAAoF,sBAA+BpF,EAA/B6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAoI,QAAA,KAAAnW,EAAAhZ,OAA+BoD,CAAA,WAAAs9B,0BAsEpCt9B,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAsBjF,EAAAmF,iBAAA,gCAC1BnF,EADoDkF,wBACpDlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,sCASb7I,EAJJiF,yBAAA,WAIIjF,CADH,UAEOA,EAAAmF,iBAAA,0DAERnF,EADIkF,wBACJlF,IA3GZzI,oBA+G8B,eAAA6xD,EAAjBC,EAAiB,WAiBwB,OAAA3xD,EAAlD,SAAA2xD,EAAoBn4C,GAA0B,IAAArY,EAAAjB,KAAAD,EAAAC,KAAAyxD,GAA1BzxD,KAAAsZ,SAhBJtZ,KAAAmiC,OAAiB,GACjBniC,KAAA8e,SAAmB,GACnB9e,KAAA47B,UAAsB,GACrB57B,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aACfhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAEjBhf,KAAAm0B,SAAQ/a,EAAA2I,eAAc,CAClC/hB,KAAKsZ,OAAO0I,QACZhiB,KAAKsZ,OAAO0gC,sBACbl3C,QACC1C,EAAAkb,KAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAIunD,EAAQ1lD,EAAA,GAAR0lD,SAAa,OAAA1lD,EAAA,GACf0T,OAAO,SAAC4W,GAAC,OAAMo7B,GAAYvsD,EAAKskC,YAAYnT,EAAE/e,GAAG,EAAC,IAG5CrT,KAAAsiB,QAAUtiB,KAAKsZ,OAAOgJ,OAEW,EAAC,EAAAjhB,IAAA,cAAAC,MAE3C,SAAYowD,GACf,OAAO1xD,KAAK47B,UAAUh2B,SAAS8rD,EACnC,GAAC,CAAArwD,IAAA,aAAAC,MAEM,SAAW4R,GACdlT,KAAK+lC,SAAS7mB,KAAKhM,EACvB,IAAC,CAzByB,GAyBzBs+C,SAzBQC,0CAAiBrpD,EAAAC,4BAAAC,EAAAyI,oBAAA,kDAAjB0gD,EAAiB3oD,UAAA,gBAAAqW,OAAA,CAAAgjB,OAAA,SAAArjB,SAAA,WAAA8c,UAAA,aAAAxc,QAAA,CAAA2mB,SAAA,WAAA9D,UAAA,aAAAh5B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0EAjGKoiB,UAAAC,MAAAC,EAAA,wFACmBF,UAAAG,MAAAD,EAAA,oHAC1C,0kDAFJtnB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAAkCvlB,EAAAkF,yBAClClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,mCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA2/C,EAAA,oDAiFAvpD,EATA4J,qBAAA,EAAA4/C,EAAA,yBAAAxpD,EAAA2c,iCASA3c,CATyB,EAAAypD,EAAA,yBAAAzpD,EAAA2c,6EA1ErB3c,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAA9P,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAA8qB,QAAA,KAAApW,EAAA/Y,SAAA,8BAEWoD,EAAAoF,sBAAkCpF,EAAlC6I,qBAAA,gBAAAmB,EAAAhK,EAAAwN,sBAAA,IAAAvM,EAAAiZ,WAAAlQ,EAAApN,QAAkCoD,CAAA,WAAAo+B,qTA6F5CirB,CAAiB,sNCpH9B,IAAA7nD,EAAA/L,EAAA,MAQAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,MAGAub,GADAvb,EAAA,OACAA,EAAA,QACAi0D,EAAAj0D,EAAA,OACAk0D,EAAAl0D,EAAA,UAEAA,EAAA,2NAyB4BuK,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oCACAnF,EAAAiF,yBAAA,aAAyBjF,EAAAmF,iBAAA,SAC7BnF,EAD+BkF,wBAC/BlF,uDAFIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA2E,EAAAhK,EAAAwN,sBAAA,IAAAo8C,EAAAn+C,YAAA,KAAAzB,EAAAqD,aAAA,+BAFRrN,EAJJiF,yBAAA,iBAIIjF,CADH,WAEOA,EAAA4J,qBAAA,EAAAigD,EAAA,aAIA7pD,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,4DAXIA,EAAA6I,qBAAA,QAAA+gD,GAGqC5pD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2uC,YAK7B73C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAukD,EAAAv8C,cAAAu8C,EAAAz+C,KAAA,mEAlBhBnL,EANJiF,yBAAA,qBAMIjF,CADH,kBAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAkF,MAAArF,KAAAG,EAAAkF,MAAArF,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAqB,WAAW,CAAAu/C,SAAA,CAAA/gD,EAAAkC,MAA0B,GAKtDjL,EAAA4J,qBAAA,EAAAmgD,EAAA,kDAeR/pD,EADIkF,wBACJlF,6CArBQA,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAkF,OAEApO,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,EAAA2E,IAKoBlO,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwQ,UAnBxCniB,mBA8D8B,eAAAyyD,EAAjBC,EAAiB,SAAAzxD,GA0G1B,SAAAyxD,EACY/4C,EACAzY,EACAC,GAAyB,IAAAG,EAAAlB,SAAAC,KAAAqyD,IAEjCpxD,EAAAC,EAAAlB,KAAAqyD,IAJQ/4C,SACArY,EAAAJ,YACAI,EAAAH,OA5GIG,EAAAqxD,cAAwB,EACxBrxD,EAAAkhC,OAAS,GACRlhC,EAAA8kC,SAAW,IAAIn8B,EAAAoV,aAEhB/d,EAAAkzB,MAAQlzB,EAAKqY,OAAO0gC,oBACpB/4C,EAAAqhB,QAAUrhB,EAAKqY,OAAOgJ,QAE/BrhB,EAAA2lB,KAAO,EACP3lB,EAAAsxD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IAEtBtkD,EAAAuxD,iBAAcvtD,EAEbhE,EAAAwxD,QAAU,IAAIr5C,EAAAuB,gBAAgB,GAEtB1Z,EAAA6gB,UAAS1I,EAAA2I,eAAc,CACnC9gB,EAAKH,KAAKyuD,cACVtuD,EAAKH,KAAK2W,kBACX3U,QACC1C,EAAAkb,KAAI,SAAArV,GAAkB,IAAA6B,EAAAma,EAAAhc,EAAA,GAARmS,EAAGtQ,EAAA,GAOb,OANmB7G,EAAKg/C,WAClBh/C,EAAKH,KAAK0uD,gBAFR1nD,EAAA,IAGF7G,EAAKH,KAAKuhB,kBAAkBjK,IACCoD,OAC/B,SAACi0C,GAAG,OAAMA,EAAIzL,KAAKp+C,SAAS,UAAU,GAEnB4W,KACnB,SAACyW,EAAG3U,GAAC,OACD2U,EAAEpf,UAAUy0B,cAAchqB,EAAEzK,aAC3Bof,EAAExd,cAAgB,IAAI6yB,cAAchqB,EAAE7I,cAAgB,GAAG,EAEtE,IAGYxU,EAAA0R,WAAa,SAAC4P,GAAC,OAAKthB,EAAKqY,OAAO3G,WAAW4P,EAAE,EAM7CthB,EAAAyxD,QAAUzxD,EAAKqY,OAAO0gC,oBAAoBl3C,QACtD1C,EAAAkb,KAAI,SAAC6Y,GAAK,OACNA,EAAM7Y,IAAI,SAACpI,GAAI,MAAM,CACjBG,GAAIH,EAAKM,QAAUN,EAAKG,GACxB0S,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAM/kB,EAAKiwD,WAAWh+C,EAAY,EAC/C,EAAE,IAIKjS,EAAA8H,YAAWqQ,EAAA2I,eAAc,CACrC9gB,EAAKqY,OAAO/C,UACZtV,EAAKqY,OAAO0gC,sBACbl3C,QACC1C,EAAAkb,KAAI,SAAA4G,GAAY,IAAViS,EAAUlS,EAAAC,EAAA,GAAL,GACP,OAAOjhB,EAAKJ,UAAUyE,IAAI,uBACpB,GACA6uB,EAAM7Y,IAAI,SAACpI,GAAI,MAAM,CACjBxN,SAAUwN,EAAKG,GACfoT,QAASsrC,EAAAY,yBACTC,WAAW,EACXC,UAAU,EACVpwD,KAAM,CACF4Q,GAAIH,EAAKM,QAAUN,EAAKG,GACxBG,OAAQN,EAAKK,KACbA,KAAML,EAAKK,MAAQL,EAAKM,OACxBiZ,KAAMxrB,EAAKqY,OAAOw5C,iBAAiB5/C,EAAKG,KAE5CsT,QAAS,GACZ,EACX,IAGY1lB,EAAA4lB,UAASzN,EAAA2I,eAAc,CACnC9gB,EAAKqY,OAAO/C,UACZtV,EAAKqY,OAAO0gC,oBACZ/4C,EAAKwxD,UACN3vD,QACC1C,EAAAkb,KAAI,SAAA0sB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAS+qB,EAAUngC,EAAA,UAAZA,EAAA,GACDyM,OAAO,SAACxY,EAAQ3T,GAClB,IAAM8/C,EAAU/xD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtDo8B,EACFzgC,EAAKkhC,SAAWjvB,EAAKG,GACf,SACA0/C,EAAW7jC,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOH,EAAKG,EAAE,GACvC,OACApS,EAAKqY,OAAOw5C,iBAAiB5/C,EAAKG,IAClC,OACA,eACVwT,SAAM,IAAA9iB,OAAKmP,EAAKM,QAAUN,EAAKG,KAAQ,CACnCorB,KACe,WAAXiD,EACM,UACAsxB,EAAO,QAAAjvD,OAAS29B,KAChBsxB,EAAO,GAAAjvD,OAAI29B,KACXowB,EAAAmB,gBAAe,GAAAlvD,OAAI29B,KAE1B7a,CACX,EAAG,GAAG,IAEZ5lB,CAYF,CAACG,SAAAixD,EAAAzxD,GAAAd,EAAAuyD,EAAA,EAAAhxD,IAAA,UAAAiE,IA5ED,WAAkB,IAAA4tD,EACd,OAAiB,QAAVA,EAAAlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,SAAU,EACjC,GAAC,CAAAnS,IAAA,aAAAiE,IAgED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,iBAChC,GAAC,CAAAjE,IAAA,WAAAC,MAUM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,gBACA7S,KAAKsZ,OAAO0I,QAAQjP,UAAU,SAAA8f,GAAgB,IACpCrc,EAAQ1R,EAAKhE,KAAKmuB,YAAY,CADA4D,EAAP2V,UAEzBhyB,IAAO1R,EAAK0R,MAAQA,EAC5B,GAER,GAAC,CAAAnV,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQ+E,QAAQniC,KAAKyyD,QAAQtwD,KAAK2X,KAAKuX,MAC/C,GAAC,CAAAhwB,IAAA,aAAAC,MAEM,SAAW4R,GACdlT,KAAK+lC,SAAS7mB,KAAKhM,EACvB,GAAC,CAAA7R,IAAA,WAAAC,MAEM,SAASkV,GACZxW,KAAK2S,WAAW,CAAE61B,QAAShyB,GAAOnD,KAClC,IAAM+E,EAAMpY,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOmD,GAAO3C,SAAS,GACrE,GAAIuE,EAAK,CACL,IAAA+6C,EAA8B/6C,EAAI1S,SAC7BiB,MAAM,KACN2U,IAAI,SAACtY,GAAC,OAAKowD,WAAWpwD,EAAE,GAACqwD,EAAApxC,EAAAkxC,EAAA,GAC9BnzD,KAAKwyD,YAAc,CAAEc,SAHND,EAAA,GAGgBE,UAHLF,EAAA,GAI9B,CACArzD,KAAKwW,MAAQA,CACjB,GAAC,CAAAnV,IAAA,UAAAC,MAEM,SAAQkyD,GACXxzD,KAAK4mB,KAAOoR,KAAK8F,IAAI,GAAK9F,KAAKC,IAAI,GAAIu7B,GAC3C,GAAC,CAAAnyD,IAAA,WAAAC,MAEM,WACHtB,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,GAC/B,IAAC,CAvJyB,CAAQjlD,EAAA6H,cAAYiqD,SAArCC,0CAAgBjqD,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAD,qBAAA,kDAAhB4pD,EAAgBvpD,UAAA,eAAAqW,OAAA,CAAAmzC,aAAA,eAAAnwB,OAAA,UAAA/iB,QAAA,CAAA2mB,SAAA,YAAAh9B,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,GAAAkE,OAAA,+VA/CIoiB,UAAAC,MAAAC,EAAA,0UAZzBtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAyhD,EAAA,sDA8BJrrD,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADgC,iHAI5BA,EADAiV,2BAAA,sBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAud,KAAAzV,KAAA9H,EAAAud,KAAAzV,IAAA,EACA/I,CADe,wBAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAAkpD,OAAAphD,KAAA9H,EAAAkpD,OAAAphD,IAAA,GAOvB/I,EADKkF,wBACLlF,UArCSA,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAAyiD,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAAyY,SAAA,KAAA4xC,EAAA1uD,QA6BDoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,MAAA5H,EAAAs3C,SAEAv4C,EADAqV,2BAAA,OAAApU,EAAAud,KACAxe,CADe,SAAAiB,EAAAkpD,QAKfnqD,EAHA6I,qBAAA,SAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAwd,QAGAze,CAHyB,WAAAA,EAAAwN,sBAAA,KAAAvM,EAAAN,UAGzBX,CAF6B,UAAAA,EAAAwN,sBAAA,KAAAvM,EAAAqpD,SAE7BtqD,CAD2B,UAAAA,EAAAuJ,0BAAA,GAAAC,4XAoB9BygD,CAAiB,mNC/E9B,IAAAvkD,EAAAjQ,EAAA,UACAA,EAAA,OACAA,EAAA,qMAyDoBuK,EAAAiF,yBAAA,kBAMIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAaua,EAAA2P,gBAAAvqB,GAAuB,EACpC/I,CADqC,oBAAA+I,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAGxC/I,EAAAkF,mEAJGlF,EAFA6I,qBAAA,eAAA8a,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,GAEAjL,CAFwB,WAAA2jB,EAAA8a,aAExBz+B,CADyB,YAAA2jB,EAAA6P,yEAuBjCxzB,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAqB,KAAI,GAN7Br+B,EAAAulB,iBAAA,KAUAvlB,EAAAkF,uFAuDJlF,EAAAiF,yBAAA,iBAIIjF,EAAA4I,qBAAA,oBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAgW,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAEJ/I,EAAAkF,mEAHIlF,EADA6I,qBAAA,iBAAA8a,EAAA0a,UACAr+B,CAD4B,eAAA2jB,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,KAhJ/B1T,eAAe,kBAE5BA,2BAsJqC,eAAAg0D,EAAxB1H,EAAwB,WAyBhC,OAAAnsD,EAZD,SAAAmsD,EACY2H,EACA/yD,EACAstB,EAEAwY,GAGP5mC,EAAAC,KAAAisD,GAPOjsD,KAAA4zD,cACA5zD,KAAAa,YACAb,KAAAmuB,cAEAnuB,KAAA2mC,QAhBL3mC,KAAA8e,SAA2B,GAC3B9e,KAAA4tD,KAAO,OAoBV5tD,KAAK8e,SAAQsD,EAAQukB,EAAMpK,OAAS,IACpCv8B,KAAKmuB,YAAYxb,WAAWg0B,EAAM3kB,QACtC,EAAC,EAAA3gB,IAAA,eAAAiE,IApBD,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,IAC/C,GAAC,CAAAxT,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAc3F,EAAAqsD,eAAiB,EACzD,GAAC,CAAA3qD,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYma,EAAoB8hB,GACnC,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,GACrDkqB,GAAOvqB,EAAKimB,KAAKxd,GACrBzb,KAAK8e,SAAW9L,GACXhT,KAAK2mC,MAAM3kB,QAAQiZ,OAASsC,GAAOv9B,KAAK4zD,YAAYlsD,MAAM,CAAC+T,GACpE,GAAC,CAAApa,IAAA,kBAAAC,MAEM,SAAgBma,GACnB,IAAMqkB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS6V,EAAKpI,IAEtCrT,KAAKa,UAAUm/B,gBAAgBrgC,EAAAqsD,aAD/BjsB,EAC2C,GAAAh8B,OAAAqe,EACpC0d,GAAQ,CACXrkB,EAAKpI,KAKLysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMyY,EAAKpI,EAAE,GAGhD,IAAC,CApDgC,GAoDhCsgD,SApDQ1H,0CAAwB7jD,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAqI,oBAAA3I,EAAAC,4BAiBrByF,EAAAg5B,iBAAe,kDAjBlBmlB,EAAwBnjD,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kCA3IZoiB,UAAAC,MAAAC,EAAA,0FAmFRF,UAAAG,MAAAD,EAAA,4FAgBwCF,UAAAI,MAAAF,EAAA,4FAGNF,UAAAM,MAAAJ,EAAA,kHAC/B,iBAc2BF,UAAAO,MAAAL,EAAA,oGACnB,iBA9CXF,UAAAyoB,MAAAvoB,EAAA,2oEA1EGtnB,EALZiF,yBAAA,UAKYjF,CAHX,aAGWA,CAF2C,aAE3CA,CAD8C,cACpCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,KAAkBvlB,EAAAkF,yBAEdlF,EADJiF,yBAAA,WACIjF,CADwD,eAOpDA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,MAAK,GAErBxlD,EAAAmF,iBAAA,WACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,OAAM,GAEtBxlD,EAAAmF,iBAAA,aAGZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,cAGIjF,EAAAkB,oBAAA,sBAOIlB,EAHJiF,yBAAA,YAGIjF,CADH,8BAGOA,EAAAiV,2BAAA,sBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAukD,KAAAz8C,KAAA9H,EAAAukD,KAAAz8C,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACH/I,EAAAkF,yBACDlF,EAAA4J,qBAAA,GAAA8hD,EAAA,oBASJ1rD,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAUIjF,EAHA4I,qBAAA,wBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAgBnI,EAAA09B,YAAA19B,EAAAo9B,UAAAt1B,GAA8B,EAG9C/I,CAH+C,uBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAElCnI,EAAAqyB,gBAAAryB,EAAAo9B,WAA0B,EACvCr+B,CADwC,mBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAo9B,UACnB,KAAI,GAEjCr+B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAA+hD,EAAA,iBAWA3rD,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAWJvlB,EADIkF,wBACJlF,GAYYA,EAXZiF,yBAAA,eAWYjF,CATX,eASWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqDkF,wBAErDlF,KACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA09B,YAAA19B,EAAAo9B,WAAwBp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAA0B,GAGvDjL,EADJiF,yBAAA,YACIjF,CAD2B,kBACDA,EAAAmF,iBAAA,IAExBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAUhBvlB,EAJgBkF,wBAIhBlF,SACAA,EAAA4J,qBAAA,GAAAgiD,EAAA,yBAAA5rD,EAAA2c,4EAzHgB3c,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAUAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAYJxlD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,uBAAA5H,EAAAukD,MAOIxlD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,OAAApU,EAAAukD,MAGCxlD,EAAAoF,sBAAuBpF,EAAvB6I,qBAAA,gBAAA5H,EAAAukD,KAAuBxlD,CAAA,WAAA6rD,GAY5B7rD,EAAAoF,sBACApF,EADAiX,sBAAA,UAAAhW,EAAAo9B,UACAr+B,CAD2B,UAAAiB,EAAAo9B,WAK3Br+B,EAPA6I,qBAAA,OAAA5H,EAAAo9B,UAOAr+B,CAPkB,SAAAiB,EAAAw9B,aAAAjhC,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAOlBjL,CAH+C,mBAAAiB,EAAAukD,KAG/CxlD,CAF2B,MAAAiB,EAAAo9B,WAAAp9B,EAAAuyB,UAAAh2B,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAe1BjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAWDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAeA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UASA1W,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAAyV,SAAA9Z,oCAOAoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KADAjL,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAK8Br+B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,gBAItBjL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,8QAqBf44C,CAAwB,gNChKrC,IAAAn+C,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,oHAEA8B,6BAyDuC,eAAAu0D,EAA1Blc,EAA0B,WAU/B,OAAAl4C,EALJ,SAAAk4C,EACqCrR,EACzB7lC,EACAD,EACA+yD,GAAqD7zD,EAAAC,KAAAg4C,GAH5Bh4C,KAAA2mC,QACzB3mC,KAAAc,OACAd,KAAAa,YACAb,KAAA4zD,cARI5zD,KAAA0xD,QAAU1xD,KAAK2mC,MAAMtzB,GAE9BrT,KAAAkH,OAAS,EAOb,EAAC,EAAA7F,IAAA,WAAAC,MAEG,WACH,IAAM6yD,EAAiBn0D,KAAKa,UAAUyE,IAAI,uBACpC8uD,EAAkBp0D,KAAKa,UAAUyE,IAAI,wBACrC+uD,EAAcC,SAChBC,aAAa3sD,QAAQ,4BACrB,IAEJ5H,KAAKkH,OAASmtD,GAAeF,GAAkB,GAC3Cn0D,KAAKkH,SAAWitD,EAChBn0D,KAAKw0D,OAAS,UACPx0D,KAAKkH,SAAWktD,IACvBp0D,KAAKw0D,OAAS,WAEtB,GAAC,CAAAnzD,IAAA,eAAAC,MAEM,SAAamzD,GAChB,IAAMN,EAAiBn0D,KAAKa,UAAUyE,IAAI,wBAA0B,GAC9D8uD,EACFp0D,KAAKa,UAAUyE,IAAI,yBAA2B,IAE9CtF,KAAKw0D,OADLC,IAAeN,EACD,UACPM,IAAeL,EACR,WAEA,IAEtB,GAAC,CAAA/yD,IAAA,YAAAC,MAEM,SAAUA,GAEb,OADAc,QAAQO,IAAI,cAAerB,GACnBA,GACJ,IAAK,WACDtB,KAAKkH,OAASlH,KAAKa,UAAUyE,IAAI,yBAA2B,IAC5D,MACJ,IAAK,UACDtF,KAAKkH,OAASlH,KAAKa,UAAUyE,IAAI,wBAA0B,GAC3D,MACJ,QACItF,KAAKkH,OAAS,GAG1B,GAAC,CAAA7F,IAAA,gBAAAC,OAAAozD,EAAAlzD,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAgzD,EAAAC,EAAA,OAAAnzD,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEgE,GAD7DwyD,EAAS30D,KAAKc,KAAKixB,QAAQ,SACjCwiC,aAAatwD,QAAQ,2BAA0B,GAAAF,OAAK/D,KAAKkH,SACpDytD,EAAM,CAAA1yD,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAStD,KAAK4zD,YAAYlsD,SAAO,OACtCktD,YAASv0D,EAAA2xB,WAAU2iC,EAAQ,eAAc1yD,EAAAE,KAAA,EACzCyyD,EACD3/B,QAAQ,kBAAmB,CAACj1B,KAAK0xD,QAAS1xD,KAAKkH,SAAQ/C,MACjD,SAACnB,GACJ,QAAA1C,EAAAqU,aAAY,6BAA+B3R,GACrCA,CACV,GAAE,QACN,EAAA1C,EAAAs3C,eAAc,gCACd53C,KAAK4zD,YAAYlsD,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5B,SAAA42C,IAAA,OAAA8d,EAAA/vD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,cAAAC,MAEM,SAAYA,GACf,SAAAyC,OAAUzC,EAAMuzD,QAAQ,GAAE,KAC9B,KAnBC,IAAAH,CAmBA,CAxEkC,GAwElCR,SAxEQlc,0CAA0B5vC,EAAAC,4BAMvByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAmrD,cAAA,kDANlB7b,EAA0BlvC,UAAA,0BAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,kBArDDoiB,UAAAC,MAAAC,EAAA,4FACgBF,UAAAG,MAAAD,EAAA,4wBAD1CtnB,EADJiF,yBAAA,UACIjF,CAD2D,WAC3DA,EAAAulB,iBAAA,KAAqCvlB,EAAAkF,yBACrClF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADiC,WAC1BA,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBAEVlF,EADJiF,yBAAA,qBACIjF,CADiC,kBAG7BA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAmrD,OAAArjD,KAAA9H,EAAAmrD,OAAArjD,IAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAyrD,UAAA3jD,EAAiB,GAElC/I,EAAAiF,yBAAA,mBAAqBjF,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACzBlF,EAAAiF,yBAAA,mBAA6BjF,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,oBAA4BjF,EAAAmF,iBAAA,aAEpCnF,EAF0CkF,wBAE1ClF,KACAA,EAAAiF,yBAAA,YAAOjF,EAAAmF,iBAAA,qBAAcnF,EAAAkF,yBAUblF,EATRiF,yBAAA,YASQjF,CATiC,mBASjCA,CADH,eAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAnC,OAAAiK,KAAA9H,EAAAnC,OAAAiK,IAAA,GACA/I,EAAA4I,qBAAA,kCAAiB3H,EAAA0rD,aAAA1rD,EAAAnC,OAAoB,GAE7CkB,EALIkF,wBAKJlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAGZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,gBAAsBjF,EAAA4I,qBAAA,0BAAS3H,EAAAutC,eAAe,GAC1CxuC,EAAAmF,iBAAA,uBACJnF,EAAAkF,yBAOIlF,EANJiF,yBAAA,eAMIjF,CADH,eACaA,EAAAmF,iBAAA,YAElBnF,EAFuBkF,wBAEvBlF,YAxCgBA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAmrD,QAgBApsD,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,cAAA5H,EAAA2rD,aAII5sD,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAApU,EAAAnC,QAKJkB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAnC,OAAA2tD,QAAA,iNAmBX7c,CAA0B,+LC9DvCn6C,EAAA,WACAyC,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,OACAuC,EAAAvC,EAAA,MAMAspC,GAJAtpC,EAAA,OAIAA,EAAA,QACAo3D,EAAAp3D,EAAA,MACAq7C,EAAAr7C,EAAA,uCAEA8B,eAGyB,eAAAu1D,EAAZC,EAAY,WAOjB,OAAAr1D,EAHJ,SAAAq1D,EACYr0D,EACA0W,GAAkBzX,EAAAC,KAAAm1D,GADlBn1D,KAAAc,OACAd,KAAAwX,UALLxX,KAAAwqD,cAAe,EACfxqD,KAAAo1D,eAAgB,CAKpB,EAAC,EAAA/zD,IAAA,WAAAC,OAAA+zD,EAAA7zD,EAEG,SAAAyE,GAAA,IAAAhF,EAAAjB,KACHm0B,EAAKluB,EAALkuB,MACA1f,EAAIxO,EAAJwO,KACA6Z,EAAMroB,EAANqoB,OACApY,EAASjQ,EAATiQ,UACArE,EAAI5L,EAAJ4L,KAAI,OAAApQ,IAAAC,KAAA,SAAAC,EAAA2zD,GAAA,IAAA9+C,EAAAoB,EAAA8yC,EAAA5yC,EAAA,OAAArW,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAQAlB,EAAKm0D,eAAkB3gD,EAAI,CAAAxS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACpBhD,EAAAqU,aAAY,8CAA4C,OAE/DF,EAAOA,MAAQnU,EAAAkG,eAAc,OAEjC8nB,SAASA,GAAU,GACb9X,EAAQvV,EAAKH,KAAKmuB,YACpBkF,EAAM,GAAGvgB,gBAAgB4qB,MAAQrK,EAAM,GAAGvgB,KAAO,CAAc,QAAd0hD,EAACnhC,EAAM,GAAGvgB,YAAI,IAAA0hD,OAAA,EAAbA,EAAejiD,KAEjEuE,EAAyB3W,EAAKuW,QAAQzC,KACtCmkC,EAAAqG,6BACHt9C,EAAAE,KAAA,GACmBwB,QAAQ67C,KAAK,CAC7B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEsrB,MAAiB,IAClDrrB,YACL2U,EACKI,cACAlV,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAK,IAAI,IACpBC,cACP,QARS,GAAAhB,EAAA4B,KASC,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBACZsU,SAAIlQ,QACJkQ,EAAM3W,EAAKuW,QAAQzC,KAAKkgD,EAAArK,0BAA2B,CAC/CnoD,KAAM,CACFgS,OACA0f,QACAtiB,KAAMA,EAAO,IAAIiI,KAAKjI,GAAQ,IAAIiI,KAClCwU,SACA9X,QACAg0C,aAAcvpD,EAAKupD,gBAExBvoD,EAAAE,KAAA,GACawB,QAAQ67C,KAAK,CACzB5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEsrB,MAAiB,IAClDrrB,YACL2U,EACKI,cACAlV,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAK,IAAI,IACpBC,cACP,QARK,GAAAhB,EAAA4B,KASK,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBAGoC,GADhDuO,EAAO+F,EAAIM,kBAAkBrG,MAAQA,EACrCyc,EAAS1W,EAAIM,kBAAkBoW,QAAUA,EAFzC7Z,EAAOmD,EAAIM,kBAAkBzD,MAAQA,EAG5B,CAAAxS,EAAAE,KAAA,SACLyV,SAAIlQ,QAAQzF,EAAAqB,OAAA,YACLhD,EAAAqU,aAAY,+CAA6C,QAEpEiD,SAAIM,kBAAkBoK,QAClB,yCAAyCrgB,EAAAE,KAAA,MACtBglC,EAAAxT,eAAc,CACjC/gB,KAAM,OACN0gB,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,GAAQ,IAAIiI,OACjD2Z,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,GAAQ,IAAIiI,SAC9C7W,YAAW,QAGb,GACY,OAHPynD,EALQzoD,EAAA4B,KAKa2X,OACvB,SAACvD,GAAC,OAAKA,EAAEo4B,WAAWrd,gBAAkBve,EAAK/N,MAAMssB,aAAa,MAE9D03B,EAAW1lD,OAAM,CAAA/C,EAAAE,KAAA,SACjByV,SAAIlQ,QAAQzF,EAAAqB,OAAA,YACLhD,EAAAqU,aACH,oEACH,QAELiD,SAAIM,kBAAkBoK,QAAU,kBAC1BxK,EAAK,CAAIrD,GAAI1Q,OAAAqe,EAAMlM,GAAa,KAAEjU,EAAAE,KAAA,GAClCwB,QAAQslB,IAAI,CACdkL,EAAM7Y,IAAI,SAACpI,EAAM+8B,GAAG,OAChBhvC,EAAKs0D,gBACDriD,EACAuB,EACA5C,EAAK6jB,YAAO,IAAU5b,MAAO4b,UAC7BpH,EACAxW,EAAMm4B,GACT,KAEP,QACF,SAAA3vC,EAAAs3C,eAAc,4BACdhgC,EAAIlQ,QAAQzF,EAAAqB,OAAA,UACL,GAAI,yBAAArB,EAAAwC,OAAA,EAAA9C,EAAA,EAzFPF,EAyFO,GACd,SAAA+zD,EAAA74C,GAAA,OAAA04C,EAAA1wD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAAA,eAAAm0D,EAAAj0D,EAEO,SACJ0R,EACAuB,EACA5C,EACAyc,GAAc,IAAAxpB,EAAA9E,KACd01D,EAAA9wD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KAAI,OAAAnD,IAAAC,KAAA,SAAAwD,EAAAiO,EAAAC,EAAAuiD,EAAAC,GAAA,IAAAlwD,EAAA8Q,EAAA7C,EAAA4oC,EAAA,OAAA96C,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEfuD,SAAQ,GAAA3B,OAAe,QAAfoP,EAAMD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWI,KAAI,KAAAxP,OAAImP,EAAKG,IACtCmD,EAAQ1R,EAAKhE,KAAKmuB,YACpB/b,EAAKU,gBAAgB4qB,MAAQtrB,EAAKU,KAAO,CAAU,QAAVR,EAACF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,KAEnDM,EAAiB,QAATgiD,EAAAziD,EAAKU,YAAI,IAAA+hD,GAATA,EAAWtiD,GACnB,CAAU,QAAVuiD,EAAC1iD,EAAKU,YAAI,IAAAgiD,OAAA,EAATA,EAAWviD,GAAImD,GAAO3C,WACvB,CAAC2C,GAAO3C,WACR0oC,EAAe,CACjBjF,iBAAe3mB,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,IACtCqsC,QAASwX,GAAUriD,IAAMoB,EAAKpB,GAC9B4qC,UAAWyX,GAAUniD,MAAQkB,EAAKlB,KAClC88B,WAAYqlB,GAAUhvD,OAAS+N,EAAK/N,MACpC6wC,YAAavf,KAAK6I,SAAMlQ,EAAA+C,UAAS7hB,GAAM6jB,UAAY,KACnDxkB,SAAUgC,EAAKG,GACfC,WAAYJ,EAAKK,KACjBpS,MAAOmtB,EACP7a,YAAa/N,EACbiO,QACAD,aAAc,OACdkiB,eAAgB,CACZpiB,OAAQN,GAAMM,QAAUN,GAAMG,GAC9B6nC,OAAQhoC,EAAKgoC,OACbwa,SAAUA,GAAUhvD,QAE3BtB,EAAA9B,OAAA,YACM6jC,EAAA6W,aAAYzB,GAAqBt5C,aAAW,wBAAAmC,EAAAX,OAAA,EAAAS,EAAA,EA3B9BzD,EA2B8B,GACtD,gBAAA8zD,EAAAj8B,EAAAQ,EAAAmnB,EAAAC,GAAA,OAAAuU,EAAA9wD,MAAA3E,KAAA4E,UAAA,EAnCA,MAjGG,IAAAywD,CAoIH,CA3IoB,GA2IpBH,SA3IQC,0CAAY/sD,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAA8P,WAAA,qDAAZ68C,EAAYl4C,QAAZk4C,EAAYj4C,UAAAC,WAFT,SAEHg4C,CAAY,gWCtBzB,IAAAvrD,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OACAuC,EAAAvC,EAAA,MAEAyC,EAAAzC,EAAA,OACAg4D,EAAAh4D,EAAA,OACAi4D,EAAAj4D,EAAA,OAIA8pD,GAHA9pD,EAAA,OACAA,EAAA,OAEAA,EAAA,0PAiCgCuK,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAA8kD,GAAA1iD,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAsoD,GAAAtgD,cAAAsgD,GAAAxiD,KAAA,uEAlBZnL,EADJiF,yBAAA,WACIjF,CADqD,cACrDA,EAAAqjD,sBAAA,MACYrjD,EAAAkB,oBAAA,UACZlB,EAAAsjD,sBAAAtjD,EAAAkF,yBAEIlF,EADJiF,yBAAA,sBACIjF,CADiC,mBAG7BA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAC,IAAA,IAAA65C,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAEhC05C,GAAAx6C,KAAAe,WAAgB,CAAAkC,MAAA,CAAAxC,MACd,GAK8B/I,EAAA4J,qBAAA,EAAAgkD,EAAA,mDAQZ5tD,EAFQkF,wBAERlF,kDAjBYA,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,UAAAi6C,GAAAx6C,KAAApP,MAAAqS,MAAA,GAIAvL,CAJ+B,iBAAAA,EAAAuJ,0BAAA,EAAAC,KAUXxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAs1C,GAAAp1C,+EA6DpB1N,EAAAiF,yBAAA,mBAGIjF,EAAA4I,qBAAA,uBAAAslC,GAAAluC,EAAAgJ,wBAAAy9C,IAAAtxC,UAAA2tC,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAS05C,GAAA+K,WAAA3f,IAAgB,GAGrBluC,EADJiF,yBAAA,WACIjF,CADqC,SAChCA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAQZnF,EAFQkF,wBAERlF,kCAdIA,EAAA6I,qBAAA,QAAAqlC,GAAA/iC,MAISnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAmiC,GAAA/iC,MAEDnL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAg3B,GAAA5vC,MAAA,IAAA4vC,GAAAoQ,QAAA,KAAApQ,GAAAoQ,QAAA,2EAgCZt+C,EAAAiF,yBAAA,mBAGIjF,EAAA4I,qBAAA,uBAAAklD,GAAA9tD,EAAAgJ,wBAAA8P,IAAA3D,UAAA2tC,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAS05C,GAAA+K,WAAAC,IAAgB,GAGrB9tD,EADJiF,yBAAA,WACIjF,CADqC,SAChCA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAQZnF,EAFQkF,wBAERlF,kCAdIA,EAAA6I,qBAAA,QAAAilD,GAAAxvD,OAIS0B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+hD,GAAA3iD,MAEDnL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAA42C,GAAAxvD,MAAA,IAAAwvD,GAAAxP,QAAA,KAAAwP,GAAAxP,QAAA,2EAlExBt+C,EAAAwY,kCAAA,GAEQxY,EADJiF,yBAAA,WACIjF,CADuB,cACvBA,EAAAqjD,sBAAA,MACiBrjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAG3BlF,EADJiF,yBAAA,sBACIjF,CADiC,cAM7BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,IAAA,IAAA+0C,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAEjC05C,GAAAiL,eAAAjL,GAAAx6C,KAAApP,MAAAgS,YACD,GAE0BlL,EAVIkF,wBAUJlF,GACAA,EAAAiF,yBAAA,6BACIjF,EAAA4J,qBAAA,EAAAokD,GAAA,qBAkBRhuD,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADuB,eACvBA,EAAAqjD,sBAAA,OACiBrjD,EAAAkB,oBAAA,WACjBlB,EAAAsjD,sBAAAtjD,EAAAkF,yBAEIlF,EADJiF,yBAAA,uBACIjF,CADiC,eAO7BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,IAAA,IAAA+0C,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE/B05C,GAAAiL,eAAAjL,GAAAx6C,KAAApP,MAAA4P,UACH,GAT8B9I,EAAAkF,yBAWAlF,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,OAGJvlB,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,8BACIjF,EAAA4J,qBAAA,GAAAqkD,GAAA,qBAkBRjuD,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADuB,eACvBA,EAAAulB,iBAAA,OAAsCvlB,EAAAkF,yBACtClF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAORlB,EADIkF,wBACJlF,iJAzEYA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAAqlD,IAKiBluD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAi6C,GAAAqL,mBAgCjBnuD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAAulD,IAQiBpuD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAi6C,GAAAqL,sFA3HrCnuD,EAAAiF,yBAAA,aAKIjF,EAAA4J,qBAAA,EAAAykD,EAAA,cAyBIruD,EADJiF,yBAAA,WACIjF,CADuB,cACvBA,EAAAqjD,sBAAA,KAA2BrjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBACzClF,EAAAkB,oBAAA,qBAIJlB,EAAAkF,yBAGQlF,EAFRiF,yBAAA,WAEQjF,CAFiC,WAEjCA,CADoC,cACpCA,EAAAqjD,sBAAA,MACcrjD,EAAAkB,oBAAA,WACdlB,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA6gC,IAAA,IAAAiZ,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE7B05C,GAAAx6C,KAAAe,WAAgB,CAAAI,KAAAV,KACjB,GAIsB/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CADoC,eACpCA,EAAAqjD,sBAAA,MACarjD,EAAAkB,oBAAA,WAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAE3BlF,EAAAkB,oBAAA,0BAORlB,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA0kD,GAAA,wBA0FItuD,EADJiF,yBAAA,YACIjF,CADuB,eACvBA,EAAAulB,iBAAA,OAAyCvlB,EAAAkF,yBACzClF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAQZlB,EAFQkF,wBAERlF,gFAlKIA,EAAA6I,qBAAA,YAAAi6C,GAAAx6C,MAG4BtI,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAAi6C,GAAAp1C,UAAA,KAAAo1C,GAAAp1C,UAAA9Q,QAAA,GAsChBoD,EAAAoF,oBAAA,IAMApF,EANA6I,qBAAA,UAAAi6C,GAAAx6C,KAAApP,MAAAuQ,KAMAzJ,CAN2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAM3BxJ,CAFuC,WAAA8iD,GAAAx6C,KAAApP,MAAAkvB,QAEvCpoB,CAD+B,WAAA8iD,GAAAvnB,UAW/Bv7B,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,OAAAi6C,GAAAx6C,KAAApP,MAAAuQ,KACAzJ,CADwB,WAAA8iD,GAAAvnB,UAKrBv7B,EAAAoF,sBAAiBpF,EAAjB6I,qBAAA,QAAAi6C,GAAAyL,SAAiBvuD,CAAA,WAAAwuD,uEAlEhCxuD,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CAD4D,WAC5DA,EAAAulB,iBAAA,KACJvlB,EADwDkF,wBACxDlF,GACAA,EAAA4J,qBAAA,EAAA6kD,GAAA,iBAwKIzuD,EAHJiF,yBAAA,WAGIjF,CADH,eAMOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,IAAA,IAAAm5C,GAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAS05C,GAAA4L,aAAY,GALzB1uD,EAAAulB,iBAAA,KAWRvlB,EAFQkF,wBAERlF,kDAlLSA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAi6C,GAAAx6C,oCATbtI,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA+kD,GAAA,wJAEK3uD,EAAAoF,sBAA2CpF,EAA3C6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAs1C,GAAA5oC,WAAA4oC,GAAA8L,aAA2C5uD,CAAA,WAAA6uD,kEAkMpC7uD,EAAA8uD,6BAAA,sEACI9uD,EAAAoF,sBAAApF,EAAAylB,qBAAA,MAAAq9B,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAAX,cAAA,MAAA43C,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAA/C,oGAKJ9I,EAAA8uD,6BAAA,sEACI9uD,EAAAoF,sBAAApF,EAAAylB,oBAAAq9B,GAAAiM,WAAA/uD,CAGJ,GAAA8iD,GAAAiM,WAAA,iGAMI/uD,EAAA8uD,6BAAA,sEACI9uD,EAAAoF,sBAAApF,EAAAylB,qBAAA,MAAAq9B,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAAX,cAAA,MAAA43C,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAA/C,oGAKJ9I,EAAA8uD,6BAAA,sEACI9uD,EAAAoF,sBAAApF,EAAAylB,oBAAAq9B,GAAAiM,WAAA/uD,CAGJ,GAAA8iD,GAAAiM,WAAA,sGA5BR/uD,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADyD,WACzDA,EAAAqjD,sBAAA,MAQIrjD,EANA4J,qBAAA,EAAAolD,GAAA,sBAMAhvD,CANgC,EAAAivD,GAAA,uBAWpCjvD,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,OAAAjF,EAAAqjD,sBAAA,MAEIrjD,EAAAiF,yBAAA,OAOIjF,EANA4J,qBAAA,GAAAslD,GAAA,sBAMAlvD,CANgC,GAAAmvD,GAAA,uBAWpCnvD,EAAAkF,qFAKJlF,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,GAKQA,EAJRiF,yBAAA,YAIQjF,CAJyC,YAIzCA,CADH,gBAKOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAomD,IAAA,IAAAtM,GAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,GAAAuM,SAAQ,GAJrBrvD,EAAAulB,iBAAA,OAQAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAomD,IAAA,IAAAtM,GAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAA05C,GAAArnD,MAAgB,EAAK,GAJzBuE,EAAAulB,iBAAA,OAWZvlB,EAHYkF,wBAGZlF,mDA1D2BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAi6C,GAAAyL,UAMAvuD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAi6C,GAAAyL,UAUIvuD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAi6C,GAAAyL,UAMAvuD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAi6C,GAAAyL,UAMnBvuD,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,MAAAq9B,GAAAr1C,SAAA,KAAAq1C,GAAAr1C,SAAAJ,gBAAA,MAAAy1C,GAAAr1C,SAAA,KAAAq1C,GAAAr1C,SAAAtC,MAAAnL,CAIJA,EAAAiM,sBAAA,WAAA62C,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAApC,KAAA,cAJIzJ,CAIJA,EAAAiM,sBAAA,YAAA62C,GAAAj3C,aAAA,KAAAi3C,GAAAj3C,aAAApC,KAAAq5C,GAAAv8B,oEA6BRvmB,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,MACJvlB,EADiCkF,wBACjClF,WAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,6CAMb7I,EADJiF,yBAAA,WACIjF,CAD0C,cAC1CA,EAAAqjD,sBAAA,MAAuCrjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBACrDlF,EAAAkB,oBAAA,0BAIJlB,EAAAkF,mEAN2BlF,EAAA6I,qBAAA,YAAAi6C,GAAAx6C,MAInBtI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAlRpBtR,6BAyRwC,eAAA+3D,GAA3BC,GAA2B,SAAA/2D,IAmCpC,SAAA+2D,GACYpnD,GACA1P,GACAC,IAAyB,IAAAG,GAAAlB,SAAAC,KAAA23D,KAEjC12D,GAAAC,EAAAlB,KAAA23D,KAJQpnD,YACAtP,GAAAJ,aACAI,GAAAH,QArCKG,GAAAm3B,KAAO,IAAIxuB,EAAAoV,aAErB/d,GAAA4C,MAAO,EAEE5C,GAAAqhB,QAAUrhB,GAAKsP,SAAS+R,QACjCrhB,GAAA+1D,cAAe,EACN/1D,GAAA6U,UAAY7U,GAAKH,KAAKuuD,iBAC/BpuD,GAAAgT,aAAehT,GAAKsP,SAAS0D,aAC7BhT,GAAAk2D,WAAa,EACbl2D,GAAA+yB,SAAW,GACX/yB,GAAAs1D,kBAAoB,GAAGt1D,EA8B9B,CAACG,SAAAu2D,GAAA/2D,IAAAd,EAAA63D,GAAA,EAAAt2D,IAAA,WAAAiE,IA5BD,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iCAC9B,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,kBACpBtF,KAAKc,KAAKo2C,OACVl3C,KAAKc,KAAK+U,QACpB,GAAC,CAAAxU,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKuQ,SAASG,IACzB,GAAC,CAAArP,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,WAAAC,OAAAC,GAAAC,EAAAC,IAAAC,KAUM,SAAAC,KAAA,IAAAqyB,GAAAqD,GAAAC,GAAAsgC,GAAAC,GAAA/yD,GAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAnC,KAAK6D,MAAO,EACZ7D,KAAKuQ,SAASunD,gBAAgB71D,GAAAE,KAAA,EACxBnC,KAAK+3D,eAAc,OACzB/3D,KAAK0Q,KACApL,IAAI,YACJ0yD,cAAc,CAACzuD,EAAAugC,WAAWC,SAAUxgC,EAAAugC,WAAWpjC,QAC9CstB,GAAWh0B,KAAKa,UAAUyE,IAAI,qBAAuB,GAAE+xB,GAAAa,EAC1ClE,IAAQ,IAA3B,IAAAqD,GAAA/O,MAAAgP,GAAAD,GAAAc,KAAAC,MAAew/B,GAAAtgC,GAAAh2B,MACyBqF,MAAM,KAAIkxD,GAAA51C,EAAA21C,GAAA,GAC9C53D,KAAKg0B,SAASiF,KAAK,CAAEvyB,MADTmxD,GAAA,GACgBtkD,KADVskD,GAAA,GACgBnR,QADPmR,GAAA,IAE9B,OAAAvuC,IAAA+N,GAAAxT,EAAAyF,GAAA,SAAA+N,GAAA8B,GAAA,CACDn5B,KAAKm2D,eAAe,IACpBn2D,KAAK6S,aACD,QACA7S,KAAK0Q,KACApL,IAAI,YACJwN,aAAaC,UAAU,SAAC/P,IAAC,OAAK8B,GAAKqxD,eAAenzD,GAAE,IAE7DhD,KAAK6S,aACD,OACA7S,KAAK0Q,KACApL,IAAI,cACJwN,aAAaC,UAAU,SAAC/P,IAAC,OAAK8B,GAAKqxD,eAAenzD,GAAE,IAEzDhD,KAAK22D,UACL32D,KAAK0Q,KAAKe,WAAW,CAAEP,SAAU,wBAAyB,yBAAAjP,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IACjE,SAAA0E,KAAA,OAAAnD,GAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,aAAAC,MAEM,SAAWma,IACdzb,KAAK0Q,KAAKe,WAAW,CACjBP,SAAUuK,GAAK/U,MACf4M,WAAYmI,GAAKlI,KACjBmzC,QAASjrC,GAAKirC,QACdvI,MAAO1iC,GAAK0iC,OAEpB,GAAC,CAAA98C,IAAA,iBAAAC,MAEM,SAAeka,IAClB,IAAM8M,IAAK9M,IAAU,IAAIwX,cACzBhzB,KAAKu2D,kBAAoBv2D,KAAKg0B,SAASxY,OACnC,SAAAvV,IAAA,IAAUsN,GAAItN,GAAJsN,KAAMmzC,GAAOzgD,GAAPygD,QAAO,OAAfzgD,GAALS,MACOssB,cAAcptB,SAAS0iB,KAC7B/U,GAAKyf,cAAcptB,SAAS0iB,KAC5Bo+B,GAAQ1zB,cAAcptB,SAAS0iB,GAAE,EAE7C,GAAC,CAAAjnB,IAAA,SAAAC,MAEM,WACHtB,KAAKo4B,KAAKlZ,OACVlf,KAAK6D,MAAO,CAChB,GAAC,CAAAxC,IAAA,aAAAC,MAAA,eAAA22D,GAAAz2D,EAAAC,IAAAC,KAEM,SAAAwD,KAAA,IAAAyS,GAAAzG,GAAAoC,GAAAozC,GAAAwR,GAAAC,GAAA,OAAA12D,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAC0B,GAA7BnC,KAAK0Q,KAAKiX,mBAEL3nB,KAAK0Q,KAAKgE,SACV1U,KAAK22D,UAAa32D,KAAK0Q,KAAKpP,MAAM0V,OAAOhS,QAAO,CAAAI,GAAAjD,KAAA,eAAAiD,GAAA9B,OAAA,YAE1CuyD,EAAAlhD,aAAW,6BAAA5Q,UAEV+xD,EAAAlhD,kBAAiB5U,KAAK0Q,MAAMmE,KAAK,OAAS,WAC9C,OACH,OAAA8C,OAEarE,IAFbqE,GAE6C3X,KAAK0Q,KAAKpP,OAA1CgS,WAAYozC,GAAO/uC,GAAP+uC,QACxBwR,GAAe,GAAAn0D,OADbmN,GAAQyG,GAARzG,SAC2B,KAAAnN,OAAIuP,GAAU,KAAAvP,OAAI2iD,IAC/CyR,GAAen4D,KAAKa,UAAUyE,IAAI,qBAAuB,GAC/DtF,KAAKa,UAAUm/B,gBAAgB,mBAAkB,GAAAj8B,OAAAqe,EAC1C+1C,GAAa38C,OAAO,SAACxY,IAAC,OAAMA,GAAE4C,SAASsL,GAAS,IAAC,CACpDgnD,MACD9yD,GAAAjD,KAAA,EACInC,KAAK22D,SAAW32D,KAAKo4D,eAAiBp4D,KAAKq4D,cAAa,OAC/D,OAAAr4D,KAAKiU,aAAejU,KAAKuQ,SAAS0D,aAAa7O,GAAAjD,KAAA,GACzCnC,KAAK+3D,eAAc,QACzB/3D,KAAK6D,MAAO,EAAK,yBAAAuB,GAAAX,OAAA,EAAAS,GAAAlF,KAAA,IACpB,gBAAA82D,KAAA,OAAAmB,GAAAtzD,MAAA3E,KAAA4E,UAAA,EAzBA,IAyBA,CAAAvD,IAAA,eAAAC,MAAA,eAAAg3D,GAAA92D,EAAAC,IAAAC,KAEO,SAAAsE,KAAA,IAAAm0C,GAAA,OAAA14C,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAAAgE,UAAAhE,KAAA,EACEnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAC7DjD,KAAKuQ,SAASoC,WAAW,CAAEC,KAAM,YACjC5S,KAAK0Q,KAAKe,WAAW,CACjBiC,aAAc,UACdC,MAAO,CAAmB,QAAnBwmC,GAACn6C,KAAKc,KAAK+U,gBAAQ,IAAAskC,QAAA,EAAlBA,GAAoB9mC,MAE5BrT,KAAK22D,UACL32D,KAAK0Q,KAAKe,WAAW,CAAEP,SAAU,wBAAyB,wBAAA/K,GAAA1B,OAAA,EAAAuB,GAAAhG,KAAA,IACjE,gBAAA+3D,KAAA,OAAAO,GAAA3zD,MAAA3E,KAAA4E,UAAA,EAXA,IAWA,CAAAvD,IAAA,cAAAC,MAAA,eAAAi3D,GAAA/2D,EAAAC,IAAAC,KAEO,SAAAmF,KAAA,IAAAvF,GAAA,OAAAG,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,OACEb,OACNtB,KAAK0Q,KAAKe,WAAW,CACjB8B,MAFEjS,GAAQtB,KAAK0Q,KAAKpP,OAERgS,WACZ4C,UAAW,CACP,IAAIyxC,EAAA6Q,KAAK,CACLjlD,KAAMjS,GAAMgS,WACZ5M,MAAOpF,GAAM4P,SACbqpC,aAAcj5C,GAAMolD,QACpBvI,MAAO78C,GAAM68C,WAGtBp3C,GAAA5E,KAAA,EACGnC,KAAKuQ,SAAS4Y,WAAUhlB,MAAO,SAAC0f,IAClC,QAAAgyC,EAAAlhD,aAAYkP,IACNA,EACV,GAAE,wBAAA9c,GAAAtC,OAAA,EAAAoC,GAAA7G,KAAA,IACL,gBAAAq4D,KAAA,OAAAE,GAAA5zD,MAAA3E,KAAA4E,UAAA,EAnBA,IAmBA,CAAAvD,IAAA,eAAAC,MAAA,eAAAm3D,GAAAj3D,EAAAC,IAAAC,KAEO,SAAAi+C,KAAA,IAAA1kB,GAAA35B,GAAA0V,GAAAwgB,GAAAC,GAAAhL,GAAAvmB,GAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAg+C,IAAA,cAAAA,GAAA99C,KAAA89C,GAAA79C,MAAA,OACJnC,KAAKg3D,cAAe,EACd/7B,GAAK,OAAAl3B,UAAU+xD,EAAAl2B,cAAa,IAGlC5/B,KAAKm3D,YADCngD,IADA1V,GAAQtB,KAAK0Q,KAAKpP,OACH0V,QACIhS,OAAOwyB,GAAAU,EACblhB,IAAMgpC,GAAA99C,KAAA,EAAAs1B,GAAAlP,IAAA,WAAAmP,GAAAD,GAAAW,KAAAC,KAAA,CAAA4nB,GAAA79C,KAAA,SAAV,IAAJsqB,GAAIgL,GAAAn2B,OACDoF,MAAK,CAAAs5C,GAAA79C,KAAA,gBAAA69C,GAAA18C,OAAA,uBACf,OAAAtD,KAAK0Q,KAAKe,WAAUod,IAAA,GACbvtB,IAAK,IACRoS,aAAc,UACdxC,SAAUub,GAAK/lB,MACf4M,WAAYmZ,GAAKlZ,KACjBkZ,QAAMnsB,EAAAkG,eACNiN,YAAawnB,GACb1nB,KAAMkZ,GAAKlZ,KACXyD,OAAQ,GACRd,UAAW,CACP,IAAIyxC,EAAA6Q,KAAK,CACLjlD,KAAMkZ,GAAKlZ,KACX7M,MAAO+lB,GAAK/lB,MACZ6zC,aAAc9tB,GAAKi6B,SAAWj6B,GAAK8tB,aACnC4D,MAAO1xB,GAAK0xB,YAGrB6B,GAAA79C,KAAA,GACGnC,KAAKuQ,SAAS4Y,WAAUhlB,MAAO,SAAC0f,IAClC,QAAAgyC,EAAAlhD,aAAYkP,IACZ3d,GAAK8wD,cAAe,EACdnzC,EACV,GAAE,QAAAm8B,GAAA79C,KAAA,gBAAA69C,GAAA79C,KAAA,iBAAA69C,GAAA99C,KAAA,GAAA89C,GAAA97C,GAAA87C,GAAA77C,MAAA,GAAAqzB,GAAA3T,EAAAm8B,GAAA97C,IAAA,QAAA87C,UAAA99C,KAAA,GAAAs1B,GAAA2B,IAAA6mB,GAAA5mB,OAAA,YAENp5B,KAAKg3D,cAAe,EAAM,yBAAAhX,GAAAv7C,OAAA,EAAAk7C,GAAA3/C,KAAA,mBAC7B,gBAAAo4D,KAAA,OAAAK,GAAA9zD,MAAA3E,KAAA4E,UAAA,EAnCA,MApHA,IAAArD,EAuJA,CAxLmC,CAAQjB,EAAA6H,cAAYuvD,UAA/CC,8CAA0BvvD,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAD,qBAAA,mDAA1BkvD,GAA0B7uD,UAAA,0BAAAsW,QAAA,CAAAgZ,KAAA,QAAArvB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,oDAhRmBC,UAAAC,MAAAC,EAAA,kGAiLrCF,UAAAG,MAAAD,EAAA,wGAjJ0BF,UAAAI,MAAAF,EAAA,2HAAI,iBAAO,sBAQDF,UAAAM,MAAAJ,EAAA,iIACf,kBAAO,uBAehBF,UAAAO,MAAAL,EAAA,+HAAQ,kBAAO,uBAoGCF,UAAAyoB,MAAAvoB,EAAA,mGAzIJF,UAAAugC,MAAArgC,EAAA,mGAXMF,UAAAwgC,MAAAtgC,EAAA,gIACf,iBAAO,sBA4DVF,UAAAygC,MAAAvgC,EAAA,mIAAY,iBAAO,sBAmCQF,UAAA0gC,MAAAxgC,EAAA,oIACf,kBAAO,uBAcJF,UAAA2gC,MAAAzgC,EAAA,+GAyBWF,UAAA4gC,MAAA1gC,EAAA,2FA6CbF,UAAA6gC,MAAA3gC,EAAA,4RAEtB,mCACI,kBAIJ,0EACA,mCACI,kBAAwB,kBAG5B,mHAGIF,UAAAkpC,MAAAhpC,EAAA,0ZAEJ,iBACI,oCACI,kBAIJ,4EACA,oCACI,kBAAwB,kBAG5B,4EACJ,kBAEA,gBACA,gBACA,mNAaCF,UAAAmpC,MAAAjpC,EAAA,gGASAF,UAAAopC,MAAAlpC,EAAA,uGAaDF,UAAAqpC,MAAAnpC,EAAA,sGAKuBF,UAAAspC,MAAAppC,EAAA,+HAAQ,iBAAO,+6EAFtDtnB,EA1QA4J,qBAAA,EAAA+mD,GAAA,sBA0QA3wD,CA1Q6C,EAAA4wD,GAAA,2BAAA5wD,EAAA2c,iCA0Q7C3c,CA7EyB,EAAA6wD,GAAA,yBAAA7wD,EAAA2c,iCA6EzB3c,CATyB,EAAA8wD,GAAA,yBAAA9wD,EAAA2c,0EAjQG3c,EAAb6I,qBAAA,QAAA5H,GAAAxF,KAAauE,CAAA,WAAA+wD,8aAsRvBxB,EAA2B,iKCrSxC,IAAA/tD,EAAA/L,EAAA,MAGAi0D,GADAj0D,EAAA,OACAA,EAAA,kJAaYuK,EAAAiF,yBAAA,cAcIjF,EAAA4I,qBAAA,uBAAAooD,EAAAhxD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAstC,QAAAn6C,KAAAk6C,GAAoB,GAc7BhxD,EAZAkB,oBAAA,UAYAlB,CATO,UASPA,CALO,UAKPA,CADO,WAKPA,EAAAiF,yBAAA,WAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEAlF,EAAAkB,oBAAA,WACJlB,EAAAkF,iFA5BIlF,EANAkxD,sBAAA,oBAAAF,EAAAzT,SAAA,KAMAv9C,CANkD,iBAAAgxD,EAAAzT,SAAA,KAMlDv9C,CAL+C,kBAAAgxD,EAAAzT,SAAA,IAAAyT,EAAAG,KAAA,MAK/CnxD,CAFC,mBAAA2jB,EAAA2V,OAAA03B,GAEDhxD,CADyC,eAAAgxD,EAAAzT,SAAA,IAAAyT,EAAAG,KAAA,OANzCnxD,EAAAiX,sBAAA,aAAA0M,EAAAjN,UAAAiN,EAAAjN,WAAAs6C,EAAA/lD,IASAjL,EADA6I,qBAAA,aAAAmoD,EAAA7lD,KACAnL,CAD0B,gBAAAgxD,EAAAhe,UAuBtBhzC,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA2rD,EAAA7lD,KAAA,MA9CpB5T,sBAoEgC,eAAA65D,EAAnBC,EAAmB,WAkBsB,OAAA35D,EAAlD,SAAA25D,EAAoB54D,GAA0Bd,EAAAC,KAAAy5D,GAA1Bz5D,KAAAa,YAhBJb,KAAA05D,YAAsC,CAClD,GAAM,OACN,EAAK,WAEO15D,KAAA8e,SAAW,GACV9e,KAAAq5D,QAAU,IAAIzvD,EAAAoV,YAWkB,EAAC,EAAA3d,IAAA,UAAAiE,IATlD,WAAkB,IAAAq0D,EAE+BriC,EADzCsiC,EAAU,EAAEviC,EAAAa,GACc,QAATyhC,EAAA35D,KAAK65D,YAAI,IAAAF,OAAA,EAATA,EAAWhlC,UAAW,IAAE,IAA7C,IAAA0C,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA+C,KAApC9C,EAAMgC,EAAAh2B,MACPgkD,EAAIhwB,EAAOqwB,SAAS,GAAKrwB,EAAOikC,KAAK,GACvCjU,EAAIsU,IAASA,EAAUtU,EAC/B,CAAC,OAAAh8B,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOygC,CACX,GAAC,CAAAv4D,IAAA,SAAAC,MAIM,SAAOg0B,GACV,IAAM09B,EAAUhzD,KAAKa,UAAUyE,IAAI,uBAAyB,GACtDhE,EAAQtB,KAAK05D,YAAYpkC,EAAOjiB,KAAO,OAC7C,OACI2/C,EAAO,WAAAjvD,OAAYzC,KACnB0xD,EAAO,GAAAjvD,OAAIzC,KACXwwD,EAAAmB,gBAAe,GAAAlvD,OAAIzC,GAE3B,IAAC,CA5B2B,GA4B3Bk4D,SA5BQC,0CAAmBrxD,EAAAC,4BAAAC,EAAAC,iBAAA,kDAAnBkxD,EAAmB3wD,UAAA,kBAAAqW,OAAA,CAAA06C,KAAA,OAAAH,YAAA,cAAA56C,SAAA,YAAAM,QAAA,CAAAi6C,QAAA,WAAApwD,MAAA,EAAAC,KAAA,EAAAkE,OAAA,oiCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjExBhB,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAKIjF,EAAA4J,qBAAA,EAAA8nD,EAAA,iBAwCJ1xD,EAAAkF,gCA/CIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,UAAApE,EAAAwwD,KAAA,KAAAxwD,EAAAwwD,KAAAtmD,KAAA,KAIAnL,EAAAoF,sBACApF,EADAkxD,sBAAA,kCAAAjwD,EAAAuwD,QAAA,SACAxxD,CAD8D,sCAAAiB,EAAAwwD,KAAA,KAAAxwD,EAAAwwD,KAAA3yD,QAAA,UAIvCkB,EAAAoF,sBAAApF,EAAA6I,qBAAA,iBAAA5H,EAAAwwD,KAAA,KAAAxwD,EAAAwwD,KAAAllC,UAAAvsB,EAAAuJ,0BAAA,EAAAC,wTAwDtB6nD,CAAmB,8LCzEhC,IAAA7vD,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAKAk8D,GAJAl8D,EAAA,OAEAA,EAAA,OAEAA,EAAA,kOAmBwBuK,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,IAAA85C,EAAA7iD,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiB05C,EAAAC,WAAAF,EAAA95C,GAAuB,GAGxC/I,EAAAmF,iBAAA,GACJnF,EAAAkF,kFAHIlF,EAFA6I,qBAAA,WAAAi6C,EAAAlvC,mBAAA5T,EAAAuJ,0BAAA,EAAAC,IAAAhM,SAAAqlD,GAEA7iD,CAFmD,iBAAAA,EAAAuJ,0BAAA,EAAA2E,IAInDlO,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAw9C,EAAA,+BARR7iD,EADJiF,yBAAA,WACIjF,CADgD,cAC7BA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACvBlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAgoD,EAAA,uBASR5xD,EADIkF,wBACJlF,4CAR4BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAi6C,EAAAniD,mCAYxBX,EAAAkB,oBAAA,6DAGIlB,EAAA6I,qBAAA,SAAAuqB,EAAApR,OAAA,0BAIAhiB,EAAAkB,oBAAA,kCAoBAlB,EAJJiF,yBAAA,WAIIjF,CADH,iBAEQA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBAEflF,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,2BACPnF,EAD4BkF,wBAC5BlF,iEApDRA,EAAAiF,yBAAA,YAKIjF,EAAA4J,qBAAA,EAAAioD,EAAA,cAaA7xD,EAAAiF,yBAAA,YASIjF,EANA4J,qBAAA,EAAAkoD,EAAA,aAMA9xD,CADE,EAAA+xD,EAAA,yBAAA/xD,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADwB,YAEpBA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD6C,kBAExCA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAEVlF,EAAAiF,yBAAA,QAAGjF,EAAAmF,iBAAA,IACPnF,EADuDkF,wBACvDlF,GACAA,EAAA4J,qBAAA,GAAAooD,EAAA,cAYIhyD,EAHJiF,yBAAA,YAGIjF,CADH,gBAMOA,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAAW,GAAAwL,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAM,gBAAAhwB,GAAqB,GAE9BpzB,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAAW,GAAAwL,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAS,eAAAnwB,GAAoB,GAE7BpzB,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBAGZtjD,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAm5C,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAxvB,gBAAAwvB,EAAArrB,OAAsB,GAE/Bz3B,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,0FA3FUA,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAi6C,EAAAniD,SAAA,KAAAmiD,EAAAniD,SAAA/D,QAkBGoD,EAAAoF,oBAAA,GAA2BpF,EAA3B6I,qBAAA,aAAAuqB,EAAApR,OAAA,KAAAoR,EAAApR,OAAAplB,OAA2BoD,CAAA,WAAAwjD,GAa5BxjD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA+tB,EAAAjoB,MAAA,cAMGnL,EAAAoF,oBAAA,GAAApF,EAAA+L,6BAAA,MAAAqnB,EAAA5nB,KAAA,KAAA4nB,EAAA5nB,KAAA6B,gBAAA,MAAA+lB,EAAA5nB,KAAA,KAAA4nB,EAAA5nB,KAAAL,OAIFnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAuqB,EAAA6+B,YAyCLjyD,EAAAoF,oBAAA,IAAApF,EAAAiX,sBAAA,gBAAA6rC,EAAAtvB,UAAAh2B,SAAA,MAAAslD,EAAArrB,MAAA,KAAAqrB,EAAArrB,MAAAxsB,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+2C,EAAAtvB,UAAAh2B,SAAA,MAAAslD,EAAArrB,MAAA,KAAAqrB,EAAArrB,MAAAxsB,IAAA,+BAhG9B,IAAMmpB,EAAuB,GAE7B78B,2BA+HqC,eAAA26D,EAAxBC,EAAwB,WAmBjC,OAAAz6D,EALA,SAAAy6D,EACY15D,EACA2W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAAu6D,GADlBv6D,KAAAa,YACAb,KAAAwX,UAfIxX,KAAA+I,SAAqB,GAC9B/I,KAAA+rD,UAAY,EACZ/rD,KAAAu8B,MAAwB,GACxBv8B,KAAA48B,UAAW,EACX58B,KAAAgc,kBAA8B,GAoDrBhc,KAAA68B,iBAAmB,SAACC,GAA+B,OAC9D77B,EAAK87B,UAAYD,CAAE,EAER98B,KAAAg9B,kBAAoB,SAACF,GAA+B,OAC/D77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CA7ClE,EAEH,EAAAjnB,IAAA,YAAAiE,IATA,WACI,OAAOtF,KAAKa,UAAUyE,IAAcy0D,EAAAS,iBAAmBh+B,CAC3D,GAAC,CAAAn7B,IAAA,kBAAAC,MAQM,WAAe,IAAAwD,EAAA9E,KACZ4X,EAAM5X,KAAKwX,QAAQzC,KAAKglD,EAAAU,2BAA4B,CACtDh4D,KAAM,CACF85B,MAAOv8B,KAAKu8B,MACZva,QAAS,CAAEzC,SAAUvf,KAAK+rD,cAGlCn0C,EAAII,cAAcjF,UAAU,SAACwpB,GACpBA,IAAOA,EAAQ3kB,EAAIM,kBAAkB4G,UAC1Cha,EAAK46B,SAASnD,EAClB,EACJ,GAEA,CAAAl7B,IAAA,iBAAAC,MACO,SAAe6a,GAClBnc,KAAK0/B,SAAS1/B,KAAKu8B,MAAM/gB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO8I,EAAM9I,EAAE,GAC5D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKu8B,MAAQe,EACTt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKu8B,MAC5C,GAGA,CAAAl7B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKu8B,MAAQj7B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgB6a,GACnB,IAAM2jB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASuW,EAAM9I,IAEvCrT,KAAKa,UAAUm/B,gBAAgB+5B,EAAAS,eAD/Bz6B,EAC6C,GAAAh8B,OAAAqe,EACtC0d,GAAQ,CACX3jB,EAAM9I,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMmZ,EAAM9I,EAAE,GAGjD,IAAC,CA9EgC,GA8EhCinD,SA9EQC,0CAAwBnyD,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA8P,WAAA,kDAAxBiiD,EAAwBzxD,UAAA,wBAAAqW,OAAA,CAAApW,SAAA,YAAAA,SAAA,CAAAX,EAAAknB,6BARtB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMm6B,CAAwB,GACtDl6B,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,qCAdsBoiB,UAAAC,MAAAC,EAAA,2FA3CKF,UAAAG,MAAAD,EAAA,2JAAc,oBAYdF,UAAAI,MAAAF,EAAA,6JAAe,mmDA7EvCtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA0oD,EAAA,cAiGJtyD,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAmiD,iBAAiB,GAGtBpjD,EADJiF,yBAAA,UACIjF,CADoD,cAC1CA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAERvlB,EAF6BkF,wBAE7BlF,KACAA,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,WACJlB,EAAAkF,gCA7GyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAkzB,+IAwHpBg+B,CAAwB,6MC5IrC,IAAA3wD,EAAA/L,EAAA,MACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SACAA,EAAA,OACAA,EAAA,mHA4CgCuK,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,4BACAA,EAAAkB,oBAAA,6DAOIlB,EAAA6I,qBAAA,SAAA0pD,EAAAvwC,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEAzBZlB,EANJiF,yBAAA,UAMIjF,CADH,eAKOA,EAAA4I,qBAAA,uBAAA2pD,EAAAvyD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAA6uC,iBAAAD,GAA6B,GAEtCvyD,EAAAiF,yBAAA,YAkBIjF,EAfA4J,qBAAA,EAAA6oD,EAAA,aAeAzyD,CAZC,EAAA0yD,EAAA,aAYD1yD,CADE,EAAA2yD,EAAA,yBAAA3yD,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADyC,aAErCA,EAAAmF,iBAAA,GAKJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACbA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAMRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD6C,kBAExCA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAEXlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAMhBnF,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAA2pD,EAAAvyD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAkW,UAAA/iB,KAAAy7C,GAA2B,GAEpCvyD,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,2FA7EIA,EAAAiX,sBAAA,mBAAA0M,EAAAoW,SAAAw4B,EAAAtnD,IAaajL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAjN,SAAAlZ,SAAA+0D,EAAAtnD,KAMAjL,EAAAoF,sBAGbpF,EAHa6I,qBAAA,aAAA0pD,EAAAvwC,OAAA,KAAAuwC,EAAAvwC,OAAAplB,OAGboD,CAAA,WAAAk9B,GAaYl9B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAktD,EAAApnD,MAAAonD,EAAAtnD,IAAA,mBASIjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAktD,EAAA/mD,KAAA,KAAA+mD,EAAA/mD,KAAA6B,gBAAA,MAAAklD,EAAA/mD,KAAA,KAAA+mD,EAAA/mD,KAAAL,OAAA,kBAYAnL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAq7C,EAAAr4B,WAAA,QAAAq4B,EAAAhmC,QAAA3vB,QAAA,iBAYZoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,gBAAA0M,EAAAwZ,YAAAo1B,EAAAtnD,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAwZ,YAAAo1B,EAAAtnD,IAAA,wDA/EtBjL,EAAAiF,yBAAA,UAIIjF,EAAA4J,qBAAA,EAAAgpD,EAAA,6CAkFJ5yD,EAAAkF,kEAhFgClF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAAkvC,yCAPpC7yD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAkpD,EAAA,sJAEK9yD,EAAAoF,sBAAsCpF,EAAtC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAkvC,eAAA,KAAAj9C,EAAAhZ,OAAsCoD,CAAA,WAAAs9B,0BAuF3Ct9B,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAsBjF,EAAAmF,iBAAA,uCAC1BnF,EAD2DkF,wBAC3DlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,sCASb7I,EAJJiF,yBAAA,WAIIjF,CADH,UAEOA,EAAAmF,iBAAA,kEAERnF,EADIkF,wBACJlF,IA5HZzI,0BAgIoC,eAAAw7D,EAAvBC,EAAuB,WAoC5B,OAAAt7D,EAHJ,SAAAs7D,EACY9hD,EACAuX,GAAwB,IAAA5vB,EAAAjB,KAAAD,EAAAC,KAAAo7D,GADxBp7D,KAAAsZ,SACAtZ,KAAA6wB,WAlCI7wB,KAAAmiC,OAAiB,GACjBniC,KAAA8e,SAAmB,GACnB9e,KAAA47B,UAAsB,GACrB57B,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aACfhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAEjBhf,KAAAi7D,gBAAe7hD,EAAA2I,eAAc,CACzC/hB,KAAKsZ,OAAO0I,QACZhiB,KAAKsZ,OAAO0gC,oBACZh6C,KAAK6wB,SAASwqC,iBACfv4D,QACC1C,EAAAkb,KAAI,SAAArV,GAAqC,IAAA6B,EAAAma,EAAAhc,EAAA,GAAjCunD,EAAQ1lD,EAAA,GAAR0lD,SAAYj3C,EAASzO,EAAA,GACzB,OADgCA,EAAA,GAE3B0T,OACG,SAAC4W,GAAC,QACIo7B,GAAYvsD,EAAKskC,YAAYnT,EAAE/e,MACjCkD,EAAU2Y,KAAK,SAAClsB,GAAM,OAAKA,EAAEu9C,UAAYnuB,EAAE/e,EAAE,EAAC,GAErDiI,IAAI,SAACu+C,GAAI,OAAAhrC,IAAA,GACHgrC,GAAI,IACPv3B,UAAW/rB,EAAUiF,OACjB,SAACxY,GAAM,OAAKA,EAAEu9C,UAAYsZ,EAAKxmD,EAAE,GACnCrO,OACF2vB,QAASklC,EAAKllC,QAAQrZ,IAAI,SAACtY,GAAC,OAAA6rB,IAAA,GACrB7rB,GAAC,IACJ4Q,KAAMimD,EAAKjmD,MAAI,IAChB,EAEf,IAEY5T,KAAAsiB,QAAUtiB,KAAKsZ,OAAOgJ,OAKnC,EAAC,EAAAjhB,IAAA,cAAAC,MAEG,SAAYg6D,GACf,OAAOt7D,KAAK47B,UAAUh2B,SAAS01D,EACnC,GAAC,CAAAj6D,IAAA,mBAAAC,MAEM,SAAiBi6D,GACpBv7D,KAAK+lC,SAAS7mB,KAAKq8C,EACvB,IAAC,CA5C+B,GA4C/BJ,SA5CQC,0CAAuBhzD,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAAuxB,gBAAA,kDAAvBqhC,EAAuBtyD,UAAA,uBAAAqW,OAAA,CAAAgjB,OAAA,SAAArjB,SAAA,WAAA8c,UAAA,aAAAxc,QAAA,CAAA2mB,SAAA,WAAA9D,UAAA,aAAAh5B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0EAlHDoiB,UAAAC,MAAAC,EAAA,wFACmBF,UAAAG,MAAAD,EAAA,oHAC1C,4oDAFJtnB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAAkCvlB,EAAAkF,yBAClClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,mCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAwpD,EAAA,oDAkGApzD,EATA4J,qBAAA,EAAAypD,EAAA,yBAAArzD,EAAA2c,iCASA3c,CATyB,EAAAszD,EAAA,yBAAAtzD,EAAA2c,6EA3FrB3c,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAA9P,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAA4xD,eAAA,KAAAl9C,EAAA/Y,SAAA,8BAEWoD,EAAAoF,sBAAkCpF,EAAlC6I,qBAAA,gBAAAmB,EAAAhK,EAAAwN,sBAAA,IAAAvM,EAAAiZ,WAAAlQ,EAAApN,QAAkCoD,CAAA,WAAAo+B,4TA8G5C40B,CAAuB,uNCtIpC,IAAAxxD,EAAA/L,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QAEA89D,EAAA99D,EAAA,OAEA8yB,GADA9yB,EAAA,OACAA,EAAA,wKAkFgBuK,EALJiF,yBAAA,WAKIjF,CADH,OACMA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBACblF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,uBAAA4qD,EAAAxzD,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAo/B,WAAAyQ,GAAiB,GAAM,GAEhCxzD,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+BAVOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAynD,iEAYHxzD,EADJiF,yBAAA,WACIjF,CADiD,UACjDA,EAAAulB,iBAAA,KAA0BvlB,EAAAkF,yBAC1BlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAApZ,WAAW,CAAA66C,UAAY,IAAQ,GAExCplD,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,MAtGZzI,gCA0G2C,eAAAk8D,EAA9BC,EAA8B,SAAAl7D,GAwBvC,SAAAk7D,EACYnO,EACAr0C,EACAzY,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA87D,IAElC76D,EAAAC,EAAAlB,KAAA87D,IAJQnO,UACA1sD,EAAAqY,SACArY,EAAAJ,YA1BII,EAAA2sD,KAAuB,OACtB3sD,EAAA4sD,WAAa,IAAIjkD,EAAAoV,aAClB/d,EAAA+gB,QAAU/gB,EAAKqY,OAAO0I,QACtB/gB,EAAA0R,WAAa,SAAC4P,GAAC,OAAKthB,EAAKqY,OAAO3G,WAAW4P,EAAE,EAC7CthB,EAAAkqD,WAAa,SAAChyB,EAAGtV,GAAC,OAAK5iB,EAAKqY,OAAO6xC,WAAWhyB,EAAGtV,EAAE,EAYnD5iB,EAAA6sD,WAAa,kBACzB7sD,EAAK0sD,QAAQ54C,KAAK4mD,EAAAI,uBAAuB,EAAC96D,CAY9C,CAACG,SAAA06D,EAAAl7D,GAAAd,EAAAg8D,EAAA,EAAAz6D,IAAA,QAAAiE,IAvBD,WACI,OAAOtF,KAAKsZ,OAAO5I,KAAKpP,MAAMuQ,IAClC,GAAC,CAAAxQ,IAAA,MAAAiE,IAED,WACI,IAAA0oD,EAAoChuD,KAAKsZ,OAAO5I,KAAKpP,MAA7CuQ,EAAIm8C,EAAJn8C,KAAMC,EAAQk8C,EAARl8C,SACd,OAD+Bk8C,EAAPx9B,SACpBA,EAAgBG,EAAA+C,UAAS7hB,GACtBA,EAAkB,GAAXC,EAAgB,GAClC,GAAC,CAAAzQ,IAAA,cAAAiE,IAKD,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,IAAC,CAtBsC,CAAQruB,EAAA6H,cAAY0zD,SAAlDC,0CAA6B1zD,EAAAC,4BAAAC,EAAAgN,gBAAAlN,EAAAC,4BAAAG,EAAAuI,oBAAA3I,EAAAC,4BAAAK,EAAAH,iBAAA,kDAA7BuzD,EAA6BhzD,UAAA,6BAAAqW,OAAA,CAAAyuC,KAAA,QAAAxuC,QAAA,CAAAyuC,WAAA,cAAA9kD,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBArE7BoiB,UAAAC,MAAAC,EAAA,0FAYIF,UAAAG,MAAAD,EAAA,sFAWAF,UAAAI,MAAAF,EAAA,uFAgCUF,UAAAM,MAAAJ,EAAA,i8BA9DftnB,EAJJiF,yBAAA,cAIIjF,CADH,cAMOA,EAAA4I,qBAAA,0BAAS3H,EAAAykD,YAAY,GALzB1lD,EAAAulB,iBAAA,KASAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD2B,cAOvBA,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,MAAOvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANhDxlD,EAAAulB,iBAAA,KAUAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,OAAQvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANjDxlD,EAAAulB,iBAAA,KAYRvlB,EAFQkF,wBAERlF,KAMIA,EALJiF,yBAAA,cAKIjF,CAFH,YAEyBA,EAAAmF,iBAAA,kCAAgCnF,EAAAkF,yBACtDlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,gEAEJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAgqD,EAAA,6CAgBA5zD,EAAA4J,qBAAA,GAAAiqD,EAAA,6CAYJ7zD,EAAAkF,gCAzDYlF,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAWAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAacxlD,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,KAAAhL,EAAA0lB,MAAA,eAElB3mB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,MAAAhL,EAAA0lB,MAAA1lB,EAAAslB,aAAA,WAAAvmB,EAAAiM,sBAAA,MAAAhL,EAAAua,IAAAva,EAAAslB,aAAA,KAMiBvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAAmB,EAAAhK,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAA5P,EAAArJ,WAAAX,EAAAuJ,0BAAA,GAAAC,IAaHxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA0P,EAAAvY,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAArB,EAAA6sC,8iBAejBsO,CAA8B,uLCjH3Cj+D,EAAA,OACAA,EAAA,OADA,IAEA8yB,EAAA9yB,EAAA,UAEAA,EAAA,OACAA,EAAA,2SAmBgBuK,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,QAAO,GAEhBU,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,yBACdnF,EADiCkF,wBACjClF,6BA6BYA,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAuE,GAEApN,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+H,EAAAC,cAAAD,EAAAjC,KAAA,mEAjBZnL,EAJJiF,yBAAA,WAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAoBvlB,EAAAkF,yBAEhBlF,EADJiF,yBAAA,sBACIjF,CADgD,mBAI5CA,EAAAiV,2BAAA,yBAAAlM,IAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,GAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,GAAAuE,SAAA1E,MAAAG,GAAAuE,SAAA1E,IAAA/I,EAAAoJ,sBAAAL,GAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,GAAAqB,WAAW,CAAA61B,QAAA,MAAAr3B,GAAA,KAAAA,GAAAkC,KAG7B,GAE0BjL,EAAA4J,qBAAA,EAAAkqD,EAAA,mDAQZ9zD,EAFQkF,wBAERlF,+CAhBYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAAuE,UAMAzN,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,EAAAC,IAGoBxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwE,sCA0BpB1N,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAkrD,EAAA9oD,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0uD,EAAA1mD,cAAA0mD,EAAA5oD,KAAA,mEAjBZnL,EAJJiF,yBAAA,WAIIjF,CADH,WACUA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBAERlF,EADJiF,yBAAA,sBACIjF,CADiC,mBAK7BA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,GAAAqB,WAAW,CAAA61B,QAAAr3B,IAAAG,GAAAuE,SAAAxC,KAG7B,GAE0BjL,EAAA4J,qBAAA,EAAAoqD,EAAA,mDAQZh0D,EAFQkF,wBAERlF,+CAhBYA,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,YAAAK,EAAAuE,SAMAzN,CANsB,iBAAAA,EAAAuJ,0BAAA,EAAAC,IASFxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwQ,uEAyE5B1Z,EAJJiF,yBAAA,WAIIjF,CADH,YACwCA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAC/ClF,EAAAiF,yBAAA,mDAIIjF,EAAA4I,qBAAA,yBAAAG,IAAA,IAAAkrD,GAAAj0D,EAAAgJ,wBAAAy9C,GAAAtxC,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAA65C,WAAAkR,GAAAlrD,IAAwB,GAGjD/I,EADKkF,wBACLlF,+DARyCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAkoD,GAEjCj0D,EAAAoF,sBAIApF,EAJA6I,qBAAA,mBAAAmB,EAAAhK,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAA5P,EAAArJ,WAAAX,EAAAuJ,0BAAA,EAAA2E,IAAA1Q,SAAAy2D,GAIAj0D,CAFC,iBAAAA,EAAAuJ,0BAAA,EAAAC,8BATTxJ,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAAyCvlB,EAAAkF,yBACzClF,EAAA4J,qBAAA,EAAAsqD,EAAA,4CAaJl0D,EAAAkF,iEAZyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAvI,yEAkBzBX,EAJJiF,yBAAA,WAIIjF,CADH,eAMOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA8P,GAAA,IAAA5P,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,QAAO,GALpBU,EAAAulB,iBAAA,KAUJvlB,EADIkF,wBACJlF,IArLRzI,yBAwLmC,eAAA48D,EAAtBR,EAAsB,WAmD9B,OAAAj8D,EARD,SAAAi8D,EAEY5M,EACA71C,EACAxY,GACAD,IAA0B,IAAAI,GAAAjB,KAAAD,EAAAC,KAAA+7D,GAH1B/7D,KAAAmvD,cACAnvD,KAAAsZ,SACAtZ,KAAAc,QACAd,KAAAa,aA/CLb,KAAAovD,WAAY,EACHpvD,KAAAgiB,QAAUhiB,KAAKsZ,OAAO0I,QACtBhiB,KAAA+I,SAAW/I,KAAKsZ,OAAOvQ,SACvB/I,KAAA8V,UAAY9V,KAAKc,KAAKuuD,iBACtBrvD,KAAA8hB,OAAS9hB,KAAKc,KAAK07D,cACnBx8D,KAAA0Q,KAAO1Q,KAAKsZ,OAAO5I,KASnB1Q,KAAA0H,MAAQ,kBAAMzG,GAAKkuD,YAAY5wC,SAAS,EACxCve,KAAA2S,WAAa,SAAC4P,IAAC,OAAKthB,GAAKqY,OAAO3G,WAAW4P,GAAE,EAC7CviB,KAAAmrD,WAAa,SAAChyB,GAAGtV,IAAC,OAAK5iB,GAAKqY,OAAO6xC,WAAWhyB,GAAGtV,GAAE,EACnD7jB,KAAA0vD,SAAW,SAACC,IAAO,EAgC/B3vD,KAAKovD,YAAcpvD,KAAKmvD,WAC5B,EAAC,EAAA9tD,IAAA,WAAAiE,IA3CD,WACI,OAAOtF,KAAKc,KAAK+U,QACrB,EAACqF,IACD,SAAoB9C,GAChBpY,KAAKc,KAAK+U,SAAWuC,CACzB,GAAC,CAAA/W,IAAA,qBAAAiE,IAOD,WACI,QAAStF,KAAKa,UAAUyE,IAAI,iCAChC,GAAC,CAAAjE,IAAA,gBAAAiE,IACD,WACI,OACItF,KAAK6vD,sBACH7vD,KAAKa,UAAUyE,IAAI,4BAE7B,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,SAAOqrB,EAAA+C,aACH/C,EAAAoQ,SACIjnB,KAAKuX,MACLrxB,KAAKa,UAAUyE,IAAI,iCAAmC,IAGlE,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,IAAC,CAzC8B,GAyC9Bi3D,SAzCQR,0CAAsB3zD,EAAAC,4BAAAC,EAAAmW,kBAAA,GAAArW,EAAAC,4BAAAG,EAAAuI,oBAAA3I,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAA,kDAAtBwzD,EAAsBjzD,UAAA,qBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBA5JyBoiB,UAAAC,MAAAC,EAAA,+FAQPF,UAAAG,MAAAD,EAAA,wFA0DrBF,UAAAI,MAAAF,EAAA,qFAYIF,UAAAM,MAAAJ,EAAA,2FAUAF,UAAAO,MAAAL,EAAA,yFAciBF,UAAAyoB,MAAAvoB,EAAA,oGACjC,iBAGyCF,UAAAugC,MAAArgC,EAAA,oGACrC,iBA7FQF,UAAAwgC,MAAAtgC,EAAA,yFA6GqBF,UAAAygC,MAAAvgC,EAAA,qFA2BxCF,UAAA0gC,MAAAxgC,EAAA,u7DAlKDtnB,EAHJiF,yBAAA,WAGIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAAyqD,EAAA,iBAUJr0D,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA8DvlB,EAAAkF,yBAC9DlF,EAAAkB,oBAAA,YACJlB,EAAAkF,yBAMQlF,EALRiF,yBAAA,YAKQjF,CAFP,eAEOA,CADa,WACbA,EAAAulB,iBAAA,KAA4CvlB,EAAAkF,yBAE5ClF,EAAA4J,qBAAA,GAAA0qD,EAAA,6CA2BAt0D,EAAA4J,qBAAA,GAAA2qD,EAAA,6CA6BIv0D,EADJiF,yBAAA,YACIjF,CAD8B,YAC9BA,EAAAulB,iBAAA,MAAgBvlB,EAAAkF,yBAChBlF,EAAAiF,yBAAA,sBAKIjF,EAAAmF,iBAAA,uCAERnF,EADIkF,wBACJlF,GAIQA,EAFRiF,yBAAA,YAEQjF,CAFiC,YAEjCA,CADsB,YACtBA,EAAAulB,iBAAA,MAAsBvlB,EAAAkF,yBACtBlF,EAAAiF,yBAAA,sBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAqH,KAAAe,WAAgB,CAAAI,KAAAV,GAAiB,GAI1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CADsB,YACtBA,EAAAulB,iBAAA,MAAoBvlB,EAAAkF,yBACpBlF,EAAAkB,oBAAA,0BAWZlB,EAFQkF,wBAERlF,KAEIA,EADJiF,yBAAA,gBACIjF,CADiC,YACjCA,EAAAulB,iBAAA,yCAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD2B,aAC3BA,EAAAulB,iBAAA,yCAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,qDAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAsJ,WAAW,CAAA66C,SAAAr8C,GAAqB,GAK7D/I,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAA4qD,EAAA,iDAoBJx0D,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA6qD,EAAA,qBAjJaz0D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA+lD,WAWThnD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,EAAAqH,MAMStI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA8M,GAAA3V,EAAAwN,sBAAA,MAAAvM,EAAAyM,YAAA,KAAAiI,GAAA/Y,QA2BAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAA+M,GAAA5V,EAAAwN,sBAAA,MAAAvM,EAAAyY,SAAA,KAAA9D,GAAAhZ,QAAA,GAgCGoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,KAAA5H,EAAAynD,UAEA1oD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,8BASIxN,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAA5H,EAAAqH,KAAApP,MAAAuQ,KAGAzJ,CAH2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG3BxJ,CADuC,WAAAiB,EAAAs6B,UAQvCv7B,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,cAAA6rD,GAAAzzD,EAAAqH,KAAApL,IAAA,cAAAw3D,GAAAx7D,MAIA8G,CAJgC,UAIhCA,CAHe,SAGfA,CAFU,UAEVA,CADW,WAAAiB,EAAAs6B,UASnBv7B,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,wDAIIxN,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,8DAIAxN,EAAAoF,sBAEApF,EAFA6I,qBAAA,iBAAA8rD,GAAA30D,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAA+6C,GAAAvP,SAEAplD,CAFuC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAU9CxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA+rD,GAAA50D,EAAAwN,sBAAA,MAAAvM,EAAAN,WAAA,KAAAi0D,GAAAh4D,QAoBJoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA+lD,0fAeA2M,CAAsB,oMChMnC,IAAAnyD,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,MAGAub,GADAvb,EAAA,OACAA,EAAA,QACAi0D,EAAAj0D,EAAA,OACAo/D,EAAAp/D,EAAA,iLAsCoBuK,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAisD,GAEA90D,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAyvD,EAAAznD,cAAAynD,EAAA3pD,KAAA,MAxCxB5T,qBA+DgC,eAAAw9D,EAAnBC,EAAmB,SAAAx8D,GA6E5B,SAAAw8D,EACY9jD,EACAzY,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAo9D,IAElCn8D,EAAAC,EAAAlB,KAAAo9D,IAHQ9jD,SACArY,EAAAJ,YA9EII,EAAAqxD,cAAwB,EACvBrxD,EAAA8kC,SAAW,IAAIn8B,EAAAoV,aAEhB/d,EAAA0zB,QAAU1zB,EAAKqY,OAAO0gC,oBACtB/4C,EAAAqhB,QAAUrhB,EAAKqY,OAAOgJ,QAE/BrhB,EAAA2lB,KAAO,EACP3lB,EAAAsxD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IAGbtkD,EAAA0R,WAAa,SAAC4P,GAAC,OAAKthB,EAAKqY,OAAO3G,WAAW4P,EAAE,EAM7CthB,EAAA6gB,OAAS7gB,EAAKqY,OAAO0gC,oBAAoBl3C,QACrD1C,EAAAkb,KAAI,SAACqZ,GAAO,SACRr0B,EAAAqvC,QACIhb,EAAQrZ,IAAI,SAACga,GAAM,OAAKA,EAAO1hB,IAAI,GACnC,KACH,IAIO3S,EAAAyxD,QAAUzxD,EAAKqY,OAAO0gC,oBAAoBl3C,QACtD1C,EAAAkb,KAAI,SAACqZ,GAAO,OACRA,EAAQrZ,IAAI,SAACga,GAAM,MAAM,CACrBjiB,GAAIiiB,EAAO9hB,QAAU8hB,EAAOjiB,GAC5B0S,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAM/kB,EAAKo8D,aAAa/nC,EAAc,EACnD,EAAE,IAIKr0B,EAAA8H,SAAW9H,EAAKqY,OAAO/C,UAAUzT,QAC7C1C,EAAAkb,KAAI,SAACqZ,GACD,OAAO1zB,EAAKJ,UAAUyE,IAAI,yBACpB,GACAqvB,EAAQrZ,IAAI,SAACga,GAAM,MAAM,CACrB5vB,SAAU4vB,EAAOjiB,GACjBoT,QAASw2C,EAAAK,+BACT1K,WAAW,EACXC,UAAU,EACVpwD,KAAM,CACF4Q,GAAIiiB,EAAO9hB,QAAU8hB,EAAOjiB,GAC5BG,OAAQ8hB,EAAO/hB,KACfA,KAAM+hB,EAAO/hB,MAAQ+hB,EAAO9hB,OAC5BiZ,KAAMxrB,EAAKqY,OAAOw5C,iBAAiBx9B,EAAOjiB,KAE9CsT,QAAS,GACZ,EACX,IAGY1lB,EAAA4lB,UAASzN,EAAA2I,eAAc,CACnC9gB,EAAKqY,OAAO/C,UACZtV,EAAKqY,OAAO0gC,sBACbl3C,QACC1C,EAAAkb,KAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAWs3D,EAAYz1D,EAAA,UAAdA,EAAA,GACDu3B,OAAO,SAACxY,EAAQyO,GACpB,IAAM09B,EAAU/xD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtDo8B,EAAS67B,EAAaruC,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOiiB,EAAOjiB,EAAE,GACpD,OACA,OACNwT,SAAM,IAAA9iB,OAAKuxB,EAAO9hB,QAAU8hB,EAAOjiB,KAAQ,CACvCorB,KACIu0B,EAAO,UAAAjvD,OAAW29B,KAClBsxB,EAAO,GAAAjvD,OAAI29B,KACXowB,EAAAmB,gBAAe,GAAAlvD,OAAI29B,KAEpB7a,CACX,EAAG,GAAG,IAEZ5lB,CAOF,CAACG,SAAAg8D,EAAAx8D,GAAAd,EAAAs9D,EAAA,EAAA/7D,IAAA,UAAAiE,IArED,WAAkB,IAAA4tD,EACd,OAAiB,QAAVA,EAAAlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,SAAU,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAqED,WAAQ,IAAAwD,EAAA9E,KACJA,KAAK6S,aACD,gBACA7S,KAAK8hB,OAAO/O,UAAU,SAAC+O,GACdA,EAAOoN,KAAK,SAAClsB,GAAC,IAAAw6D,EAAA,OAAKx6D,EAAEqQ,MAAiB,QAAfmqD,EAAK14D,EAAK0R,aAAK,IAAAgnD,OAAA,EAAVA,EAAYnqD,GAAE,KAC3CvO,EAAK0R,MAAQsL,EAAO,GAE5B,GAER,GAAC,CAAAzgB,IAAA,eAAAC,MAEM,SAAag0B,GAChBt1B,KAAK+lC,SAAS7mB,KAAKoW,EACvB,GAAC,CAAAj0B,IAAA,UAAAC,MAEM,SAAQkyD,GACXxzD,KAAK4mB,KAAOoR,KAAK8F,IAAI,GAAK9F,KAAKC,IAAI,GAAIu7B,GAC3C,GAAC,CAAAnyD,IAAA,WAAAC,MAEM,WACHtB,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,GAC/B,IAAC,CA1G2B,CAAQjlD,EAAA6H,cAAYg1D,SAAvCC,0CAAkBh1D,EAAAC,4BAAAC,EAAAyI,oBAAA3I,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAlB60D,EAAkBt0D,UAAA,iBAAAqW,OAAA,CAAAmzC,aAAA,gBAAAlzC,QAAA,CAAA2mB,SAAA,YAAAh9B,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,0oBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CvBhB,EAAAiF,yBAAA,iHAGIjF,EADAiV,2BAAA,sBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAud,KAAAzV,KAAA9H,EAAAud,KAAAzV,IAAA,EACA/I,CADe,wBAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAAkpD,OAAAphD,KAAA9H,EAAAkpD,OAAAphD,IAAA,GAKlB/I,EAAAkF,yBASOlF,EARRiF,yBAAA,UAQQjF,CANP,qBAMOA,CADH,kBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAmN,MAAArF,KAAA9H,EAAAmN,MAAArF,IAAA,GAGA/I,EAAA4J,qBAAA,EAAAyrD,EAAA,kDAQZr1D,EAFQkF,wBAERlF,KAKIA,EAJJiF,yBAAA,UAIIjF,CADH,eACkCA,EAAA4I,qBAAA,0BAAS3H,EAAAq0D,QAAe,IAAfr0D,EAAAud,KAAmB,GACvDxe,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,cACdnF,EADqBkF,wBACrBlF,GACAA,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,eAAgCjF,EAAA4I,qBAAA,0BAAS3H,EAAAq0D,QAAAr0D,EAAAud,MAAgB,EAAI,KAAK,GAC9Dxe,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,eACdnF,EADsBkF,wBACtBlF,GACAA,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,eAA6BjF,EAAA4I,qBAAA,0BAAS3H,EAAAs0D,UAAU,GAC5Cv1D,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,cAElBnF,EAFyBkF,wBAEzBlF,YA3CIA,EAAA6I,qBAAA,MAAA5H,EAAAs3C,SAEAv4C,EADAqV,2BAAA,OAAApU,EAAAud,KACAxe,CADe,SAAAiB,EAAAkpD,QAIfnqD,EAFA6I,qBAAA,WAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAN,UAEAX,CAF6B,SAAAA,EAAAwN,sBAAA,KAAAvM,EAAAwd,QAE7Bze,CADyB,UAAAA,EAAAwN,sBAAA,KAAAvM,EAAAqpD,UAYjBtqD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAmN,OACApO,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,GAAAC,IAGoBxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAyY,uXA0B3Bs7C,CAAmB,uNCvEhC,IAAAtvD,EAAAjQ,EAAA,UACAA,EAAA,OACAA,EAAA,sMA0DwBuK,EAAAiF,yBAAA,yBAMIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAaua,EAAA2P,gBAAAvqB,GAAuB,EACpC/I,CADqC,oBAAA+I,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAua,EAAA8tC,KAAA1oD,EAAA,GAGxC/I,EAAAkF,oEAJGlF,EAFA6I,qBAAA,eAAA8a,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,GAEAjL,CAFwB,WAAA2jB,EAAA8a,aAExBz+B,CADyB,YAAA2jB,EAAA6P,qCAJjCxzB,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA4rD,EAAA,qIACKx1D,EAAAoF,sBAAuBpF,EAAvB6I,qBAAA,gBAAA8a,EAAA6hC,KAAuBxlD,CAAA,WAAAy1D,iEAcpCz1D,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAgW,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAqB,KAAI,GAN7Br+B,EAAAulB,iBAAA,KAUAvlB,EAAAkF,uFAgCIlF,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA4V,EAAA3jB,EAAAmJ,0BAAAwa,SAAA8tC,KAAgB,KAAIzxD,EAAAoJ,sBAAAua,EAAA0a,UAAc,KAAI,GAEtCr+B,EAAAmF,iBAAA,cACJnF,EAAAkF,uFA4BRlF,EAAAiF,yBAAA,mBAGIjF,EAAA4I,qBAAA,oBAAAG,GAAA/I,EAAAgJ,wBAAAy9C,GAAA,IAAA9iC,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAEJ/I,EAAAkF,mEAHIlF,EAAA6I,qBAAA,iBAAA8a,EAAA0a,yEAMJr+B,EAAAiF,yBAAA,oBAIIjF,EAAA4I,qBAAA,mBAAAG,GAAA/I,EAAAgJ,wBAAA0sD,GAAA,IAAA/xC,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAEJ/I,EAAAkF,mEAHIlF,EADA6I,qBAAA,OAAA8a,EAAA8tC,KACAzxD,CADa,iBAAA2jB,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,KA3JhB1T,iBAAiB,oBAE9BA,6BAiKuC,eAAAo+D,EAA1BtD,EAA0B,WA0BlC,OAAA36D,EAZD,SAAA26D,EACY7G,EACA/yD,EACAstB,EAEAwY,GAGP5mC,EAAAC,KAAAy6D,GAPOz6D,KAAA4zD,cACA5zD,KAAAa,YACAb,KAAAmuB,cAEAnuB,KAAA2mC,QAjBL3mC,KAAA8e,SAA2B,GAC3B9e,KAAA4tD,KAAO,OACP5tD,KAAA65D,KAAoB,KAoBvB75D,KAAK8e,SAAQsD,EAAQukB,EAAMpK,OAAS,IACpCv8B,KAAKmuB,YAAYxb,WAAWg0B,EAAM3kB,QACtC,EAAC,EAAA3gB,IAAA,eAAAiE,IApBD,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,IAC/C,GAAC,CAAAxT,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAc3F,EAAA66D,iBAAmB,EAC3D,GAAC,CAAAn5D,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYma,EAAoB8hB,GACnC,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,GACrDkqB,GAAOvqB,EAAKimB,KAAKxd,GACrBzb,KAAK8e,SAAW9L,GACXhT,KAAK2mC,MAAM3kB,QAAQiZ,OAASsC,GAAOv9B,KAAK4zD,YAAYlsD,MAAM,CAAC+T,GACpE,GAAC,CAAApa,IAAA,kBAAAC,MAEM,SAAgBma,GACnB,IAAMqkB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS6V,EAAKpI,IAEtCrT,KAAKa,UAAUm/B,gBAAgBrgC,EAAA66D,eAD/Bz6B,EAC6C,GAAAh8B,OAAAqe,EACtC0d,GAAQ,CACXrkB,EAAKpI,KAKLysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMyY,EAAKpI,EAAE,GAGhD,IAAC,CArDkC,GAqDlC0qD,SArDQtD,0CAA0BryD,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAqI,oBAAA3I,EAAAC,4BAkBvByF,EAAAg5B,iBAAe,kDAlBlB2zB,EAA0B3xD,UAAA,0BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,mDAtJdoiB,UAAAC,MAAAC,EAAA,4FAwERF,UAAAG,MAAAD,EAAA,4FAgBwCF,UAAAI,MAAAF,EAAA,4FAGMF,UAAAM,MAAAJ,EAAA,oHAC3C,iBA2B+BF,UAAAO,MAAAL,EAAA,oGACnB,iBA3DfF,UAAAyoB,MAAAvoB,EAAA,qwEA/DGtnB,EALZiF,yBAAA,UAKYjF,CAHX,aAGWA,CAF2C,cAE3CA,CAD8C,cACpCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,KAAoBvlB,EAAAkF,yBAEhBlF,EADJiF,yBAAA,WACIjF,CADwD,eAOpDA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,MAAK,GAErBxlD,EAAAmF,iBAAA,WACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,OAAM,GAEtBxlD,EAAAmF,iBAAA,aAGZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,cAGIjF,EAAAkB,oBAAA,wBAMIlB,EAHJiF,yBAAA,YAGIjF,CADH,gCAGOA,EAAAiV,2BAAA,sBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAukD,KAAAz8C,KAAA9H,EAAAukD,KAAAz8C,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACH/I,EAAAkF,yBACDlF,EAAA4J,qBAAA,GAAAgsD,EAAA,uBAYR51D,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAAisD,EAAA,iBAWA71D,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAWJvlB,EADIkF,wBACJlF,GAYYA,EAXZiF,yBAAA,eAWYjF,CATX,eASWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqDkF,wBAErDlF,KACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAAksD,EAAA,iBAUA91D,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBACiCnI,EAAA09B,YAAA19B,EAAAo9B,WACvDp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KACA,GAE0BjL,EADJiF,yBAAA,YACIjF,CAD2B,kBACDA,EAAAmF,iBAAA,IAExBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAWpBvlB,EALoBkF,wBAKpBlF,WASAA,EARA4J,qBAAA,GAAAmsD,EAAA,yBAAA/1D,EAAA2c,iCAQA3c,CARuB,GAAAg2D,EAAA,yBAAAh2D,EAAA2c,4EA5HP3c,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAUAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAkBAxlD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,OAAApU,EAAAukD,MAEWxlD,EAAAoF,sBAAapF,EAAb6I,qBAAA,QAAA5H,EAAAwwD,KAAazxD,CAAA,WAAAi2D,GAqB3Bj2D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAWDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAeA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UASA1W,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAAyV,SAAA9Z,oCAOKoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAwwD,MAWDzxD,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KADAjL,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAO8Br+B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,gBAItBjL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,yRA8BnBonD,CAA0B,yPC5KvC,IAAAn6D,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OAOAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SAQAA,EAAA,2BAwBA8B,iBAG2B,eAAA2+D,EAAdvkC,EAAc,WA+D0B,OAAAj6B,EAAjD,SAAAi6B,EAAoBj5B,GAAyBf,EAAAC,KAAA+5B,GAAzB/5B,KAAAc,OA9DZd,KAAAu+D,OAAS,IAAInlD,EAAAuB,gBAAgB,IAC7B3a,KAAAyyD,QAAU,IAAIr5C,EAAAuB,gBAAgB,GACtB3a,KAAAq7D,kBAA2CjiD,EAAA2I,eAAc,CACrE/hB,KAAKc,KAAK2W,gBACVzX,KAAKyyD,UACN3vD,QACC1C,EAAAob,QAAO,SAAAvV,GAAK,QAALgc,EAAAhc,EAAA,GAAK,EAAW,MACvB7F,EAAAwxB,WAAU,SAAA1P,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAK,SACX7hB,EAAAmgD,mBADWr+B,EAAA,GACW9O,GAAI,CAAEE,KAAM,YAAazQ,QAC3C1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,IAAIvZ,EAAAm+D,cAAgB,GAC3C,MAELp+D,EAAAkb,KAAI,SAACtY,GAAsB,SACvB1C,EAAAmyB,SACIzvB,EAAEsY,IAAI,SAACtY,GAAC,IAAAy7D,EAAAC,EAAA,OACc,QAAlBD,EAAAz7D,EAAEq9C,SAAS1rB,eAAO,IAAA8pC,OAAA,EAAlBA,EAAoB/nD,mBAAmB8nB,MACf,QADoBkgC,EACtC17D,EAAEq9C,SAAS1rB,eAAO,IAAA+pC,OAAA,EAAlBA,EAAoBhoD,QAAQ4E,IAAI,SAACu+C,GAAI,OAAAhrC,IAAA,GAC9BgrC,GAAI,IACPjmD,KAAM5Q,EAAE4Q,MAAI,GAEhB,EAAE,GAEf,MAELxT,EAAAsyB,aAAY,IAGA1yB,KAAA40B,SAAW50B,KAAKq7D,eAAev4D,QAC3C1C,EAAAkb,KAAI,SAACqjD,GACD,IAC4BrnC,EADtB3C,EAAoB,GAAG0C,EAAAa,EACVymC,GAAS,QAAAjkC,EAAA,WAAE,IAAnBm/B,EAAIviC,EAAAh2B,MACXqzB,EAAQsE,KAAIt0B,MAAZgwB,EAAOvS,EACAy3C,EAAKllC,QAAQrZ,IACZ,SAACtY,GAAC,OAAA6rB,IAAA,GAES7rB,GAAC,IACJu9C,QAASsZ,EAAKxmD,GACdG,OAAQqmD,EAAKrmD,OACbgiB,SAAUqkC,EAAKjmD,KAAKP,IAAE,IAI1C,EAZA,IAAAgkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAYC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOxE,CACX,IAGY30B,KAAA4+D,qBAAoBxlD,EAAA2I,eAAc,CAC9C/hB,KAAKu+D,OACLv+D,KAAK40B,WACN9xB,QACC1C,EAAAkb,KAAI,SAAA0sB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAExxB,EAAKoc,EAAA,GAAS,OAAAA,EAAA,GACRpX,OACJ,SAACxY,GAAC,QAAOwT,GAASxT,EAAEwyB,WAAahf,IAAUxT,EAAEo4C,QAAQ,EACxD,GAQuC,EAAC,EAAA/5C,IAAA,WAAAC,MAJ1C,SAASkV,GACZxW,KAAKu+D,OAAOp8D,KAAKqU,EACrB,GAAC,CAAAnV,IAAA,cAAAC,OAAAu9D,EAAAr9D,EAAAC,IAAAC,KAIM,SAAAC,EAAkBgzB,GAAqB,OAAAlzB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KACpC9B,EAAAy+D,gBAAe9+D,KAAKc,KAAK+U,SAASxC,GAAI,CACxCE,KAAM,UACNE,YAAa,GACbiD,QAASie,IACX,OACF30B,KAAKyyD,QAAQtwD,KAAK2X,KAAKuX,OAAO,wBAAApvB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjC,SAAA++D,EAAApiD,GAAA,OAAAkiD,EAAAl6D,MAAA3E,KAAA4E,UAAA,MAXA,IAAAi6D,CAWA,CAxEsB,GAwEtBP,SAxEQvkC,0CAAc3xB,EAAA4U,mBAAA1U,EAAAG,qBAAA,qDAAdsxB,EAAc9c,QAAd8c,EAAc7c,UAAAC,WAFX,SAEH4c,CAAc,8KC7C3B,IAAAnwB,EAAA/L,EAAA,MAOAK,EAAAL,EAAA,UACAA,EAAA,6JAiBgBuK,EAAAkB,oBAAA,+DACIlB,EAAA6I,qBAAA,SAAAK,EAAA6K,MAAAiO,sEAXZhiB,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eASIjF,EAAA4J,qBAAA,EAAAgtD,EAAA,wBAKA52D,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAGrB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2wB,UAAA/iB,OAAgB,GAGzB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAIlBnF,EAFUkF,wBAEVlF,KAGQA,EAFRiF,yBAAA,UAEQjF,CAF8C,gBAE9CA,CADyB,YAErBA,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAkB,oBAAA,SAEIlB,EADJiF,yBAAA,gBACIjF,CAD+B,YAC/BA,EAAAulB,iBAAA,MAA4CvlB,EAAAkF,yBAExClF,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MACJvlB,EADuCkF,wBACvClF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBACtBlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAkB,oBAAA,SACAlB,EAAAiF,yBAAA,iBAIIjF,EAAAkB,oBAAA,yBAQRlB,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADuD,gBAMnDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAD,SAAA6wB,QAAA7wB,EAAA6wB,OAAA/5B,EAAAoJ,sBAA2BF,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAAyB,GAGhD/5B,EADJiF,yBAAA,YACIjF,CAD0C,kBACfA,EAAAmF,iBAAA,IAEzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,qFA/FIA,EAAAoF,sBAIApF,EAJAiX,sBAAA,gBAAA/N,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,OAIAoD,CAJsC,aAAAkJ,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,OAItCoD,CAHmC,iBAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAGnCoD,CAFsC,eAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAEtCoD,CADoC,0BAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,SAK/BoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAgBDoD,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,oBAAA/N,EAAA+wB,IACAj6B,CAD+B,WAAAkJ,EAAA+wB,KAKrBj6B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA+wB,IAAA,8BAQNj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6K,MAAA1G,cAAAnE,EAAA6K,MAAA5I,KAAA,KAQQnL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAvc,EAAA6K,MAAAoD,sCAKJnX,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAf,gBAAA,MAAAnE,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAjD,MAAA,KAMAnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAsZ,WAAA,MAAA7d,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAJ,gBAAA,MAAAnE,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAtC,MAAA,KAeJnL,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,MAAAK,EAAAqvC,QAGAv4C,CAHe,QAAAkJ,EAAA6K,MAAA3I,OAGfpL,CAFsB,WAAAkJ,EAAAvI,SAEtBX,CADqB,UAAAA,EAAAuJ,0BAAA,GAAAC,IASzBxJ,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,UAAA/N,EAAA6wB,QAK+B/5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA6wB,OAAA,gBAIvB/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6wB,OAAA,+DAWZ/5B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,IAhHZzI,+BAgIyC,eAAAs/D,EAA5BC,EAA4B,WAwBY,OAAAp/D,EAAjD,SAAAo/D,EAAoBp+D,GAAyBf,EAAAC,KAAAk/D,GAAzBl/D,KAAAc,OAtBJd,KAAAqiC,KAAe,EACfriC,KAAAmiC,QAAkB,EAEjBniC,KAAAoiC,aAAe,IAAIx4B,EAAAoV,aACnBhf,KAAA0H,MAAQ,IAAIkC,EAAAoV,aACZhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAE1Bhf,KAAA2gD,QAAU,GACV3gD,KAAA+I,SAA4B,EAca,EAAC,EAAA1H,IAAA,QAAAiE,IAZjD,WAAgB,IAAA65D,EAAAC,EACZ,OAAOp/D,KAAKc,KAAKmuB,YAAY,CAAW,QAAXkwC,EAACn/D,KAAKmc,aAAK,IAAAgjD,OAAA,EAAVA,EAAYvrD,KAAKP,OAAkB,QAAd+rD,EAAIp/D,KAAKmc,aAAK,IAAAijD,OAAA,EAAVA,EAAYxrD,KACvE,GAAC,CAAAvS,IAAA,WAAAiE,IAED,WAAmB,IAAArE,EAAAjB,KACf,OAAOA,KAAKc,KAAKgV,UAAUoZ,KACvB,SAAClsB,GAAC,IAAAq8D,EAAAC,EAAA,OACY,QAAVD,EAAAp+D,EAAKkb,aAAK,IAAAkjD,OAAA,EAAVA,EAAYzrD,KAAKP,MAAOrQ,EAAEqQ,KAChB,QAAVisD,EAAAr+D,EAAKkb,aAAK,IAAAmjD,OAAA,EAAVA,EAAY1rD,KAAKC,aAAc7Q,EAAEqQ,EAAE,EAE/C,GAAC,CAAAhS,IAAA,cAAAC,MAIM,SAAY87B,GACXA,EAAQjhB,OAASnc,KAAKmc,OACtBnc,KAAKu/D,gBAEb,GAAC,CAAAl+D,IAAA,iBAAAC,MAEO,WAAc,IAAA4xD,EAAAsM,EAClBx/D,KAAK2gD,QAAoB,QAAbuS,EAAGlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,OAC3BxT,KAAK+I,SAAW,CACZ,CACIrD,SAAoB,QAAZ85D,EAAEx/D,KAAKmc,aAAK,IAAAqjD,OAAA,EAAVA,EAAYhsD,OACtBiT,QAASvoB,EAAAwoB,iBAGrB,IAAC,CAxCoC,GAwCpCu4C,SAxCQC,0CAA4B92D,EAAAC,4BAAAC,EAAAG,qBAAA,kDAA5By2D,EAA4Bp2D,UAAA,4BAAAqW,OAAA,CAAAhD,MAAA,QAAAkmB,IAAA,MAAAF,OAAA,UAAA/iB,QAAA,CAAAgjB,aAAA,eAAA16B,MAAA,QAAAu6B,UAAA,aAAAl5B,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,qCA/EgBoiB,UAAAC,MAAAC,EAAA,wFAGzBF,UAAAG,MAAAD,EAAA,0HAyDuBF,UAAAI,MAAAF,EAAA,upCAL/CtnB,EArGA4J,qBAAA,EAAAytD,EAAA,uBAqGAr3D,CArG8C,EAAAs3D,EAAA,yBAAAt3D,EAAA2c,wEAAlB3c,EAAb6I,qBAAA,OAAA5H,EAAA8S,MAAa/T,CAAA,WAAAu6B,oTA6HvBu8B,CAA4B,qRC5IzC,IAAAt1D,EAAA/L,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QAEAuC,GADAvC,EAAA,MACAA,EAAA,OACA8hE,EAAA9hE,EAAA,UACAA,EAAA,qHA0CYuK,EAAAiF,yBAAA,YAMIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAAzkB,SAAA,mEAaA0C,EADJiF,yBAAA,WACIjF,CAD8D,OAC3DA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBACblF,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,uBAAA47C,EAAAxkD,EAAAgJ,wBAAA6gC,GAAA10B,UAAA4M,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAy1C,cAAAhT,GAAmB,GAE5BxkD,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+BATOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAy4C,IA3DnBjtD,sCA+FiD,eAAAkgE,EAApCC,EAAoC,SAAAl/D,GAsB7C,SAAAk/D,EACYnS,EACAx/B,EACArtB,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA8/D,IAElC7+D,EAAAC,EAAAlB,KAAA8/D,IALQnS,UACA1sD,EAAAktB,cACAltB,EAAAH,OACAG,EAAAJ,YAzBII,EAAA2sD,KAAuB,OACtB3sD,EAAA4sD,WAAa,IAAIjkD,EAAAoV,aAClB/d,EAAA+gB,QAAU/gB,EAAKktB,YAAYnM,QACpC/gB,EAAAyE,SAAmB,GAWVzE,EAAA8+D,YAAc,kBAC1B9+D,EAAK0sD,QAAQ54C,KAAK4qD,EAAAK,6BAA6B,EAAC/+D,CAapD,CAACG,SAAA0+D,EAAAl/D,GAAAd,EAAAggE,EAAA,EAAAz+D,IAAA,QAAAiE,IAvBD,WACI,OAAOtF,KAAKmuB,YAAYzd,KAAKpP,MAAMuQ,IACvC,GAAC,CAAAxQ,IAAA,MAAAiE,IAED,WACI,IAAA26D,EAA2BjgE,KAAKmuB,YAAYzd,KAAKpP,MACjD,OADY2+D,EAAJpuD,KACiB,GADHouD,EAARnuD,SACgB,GAClC,GAAC,CAAAzQ,IAAA,cAAAiE,IAKD,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAC,MAWM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,OACA7S,KAAKgiB,QAAQjP,UAAU,SAAA9M,GAAU,OAC7BnB,EAAKo7D,gBAAgB,CADQj6D,EAAPuiC,SACS,GAG3C,GAAC,CAAAnnC,IAAA,gBAAAC,OAAA6+D,EAAA3+D,EAAAC,IAAAC,KAEM,SAAAC,EAAoBy+D,GAAY,IAAA9+D,EAAA,OAAAG,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACfnC,KAAKmuB,YAAYnM,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OACtEjD,KAAKmuB,YAAYxb,WAAUkc,IAAA,GADrBvtB,EAAKW,EAAA4B,MAEC,IACRkF,UAAWzH,EAAMyH,UAAY,IAAIyS,OAAO,SAACxY,GAAC,OAAKA,IAAMo9D,CAAI,MAC1D,wBAAAn+D,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACN,SAAA4/D,EAAAjjD,GAAA,OAAAwjD,EAAAx7D,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAEO,WAAuC,IAErCma,EADQzb,KAAKc,KAAKmuB,YADJrqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,KAEnB5E,KAAKc,KAAK+U,SAChC7V,KAAK0F,SAAW+V,GAAMhG,cAAgBgG,GAAMlI,MAAQ,EACxD,KAdC,IAAA4sD,CAcA,CApD4C,CAAQ7/D,EAAA6H,cAAY03D,SAAxDC,0CAAmC13D,EAAAC,4BAAAC,EAAAgN,gBAAAlN,EAAAC,4BAAAG,EAAAuI,oBAAA3I,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAA,kDAAnCu3D,EAAmCh3D,UAAA,oCAAAqW,OAAA,CAAAyuC,KAAA,QAAAxuC,QAAA,CAAAyuC,WAAA,cAAA9kD,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBArFnCoiB,UAAAC,MAAAC,EAAA,0FAWIF,UAAAG,MAAAD,EAAA,sFAUAF,UAAAI,MAAAF,EAAA,uFAwBwDF,UAAAM,MAAAJ,EAAA,gHACpD,y1BApDTtnB,EADJiF,yBAAA,cACIjF,CAD+D,cAK3DA,EAAA4I,qBAAA,0BAAS3H,EAAA02D,aAAa,GAJ1B33D,EAAAulB,iBAAA,KAQAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD2B,cAMvBA,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,MAAOvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GALhDxlD,EAAAulB,iBAAA,KASAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,OAAQvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GALjDxlD,EAAAulB,iBAAA,KAWRvlB,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,eAIIjF,EAAA4J,qBAAA,EAAAquD,EAAA,cAQAj4D,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,kCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,gEAEJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,qCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAsuD,EAAA,6CAWJl4D,EAAAkF,gCAnDYlF,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAUAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAgBHxlD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA3D,UAKD0C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,MAAAhL,EAAA0lB,MAAA,mBAGA3mB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,MAAAhL,EAAA0lB,MAAA1lB,EAAAslB,aAAA,WAAAvmB,EAAAiM,sBAAA,MAAAhL,EAAAua,IAAAva,EAAAslB,aAAA,KAIAvmB,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAAlN,EAAAvY,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAArB,EAAA4/C,WAAA,+BAE8Bn4D,EAAAoF,sBAAApF,EAAA6I,qBAAA,iBAAAuvD,EAAAp4D,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAAw+C,EAAAz3D,+iBAqCjC+2D,CAAoC,6PCtGjDjiE,EAAA,OACAA,EAAA,OACAA,EAAA,MAFA,IAGAuC,EAAAvC,EAAA,SACAA,EAAA,8QAOgBuK,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,IAAA,IAAAT,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GAEhBU,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,yBACdnF,EADiCkF,wBACjClF,gCA6BgBA,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAAuE,IAEApN,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+H,GAAAC,cAAAD,GAAAjC,KAAA,uEAdRnL,EALJiF,yBAAA,sBAKIjF,CADH,6GAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAC,IAAA,IAAAC,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAAoE,YAAAvE,IAAmB,GAOpC/I,EAAA4J,qBAAA,EAAAyuD,EAAA,mDAORr4D,EADIkF,wBACJlF,mDAfQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAuE,UAGAzN,CAH4B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG5BxJ,CADuC,sBAAAgK,GAAAhK,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAzD,GAAAqD,gBAAA,OAAArD,GAAAhK,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAzD,GAAAmB,OAOnBnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAtE,GAAAwE,yCAsBpB1N,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAAkrD,GAAA9oD,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0uD,GAAA1mD,cAAA0mD,GAAA5oD,KAAA,uEAdRnL,EALJiF,yBAAA,sBAKIjF,CADH,iDAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA2E,IAAA,IAAAzE,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE3BF,GAAAqB,WAAW,CAAA61B,QAAAr3B,KACd,GAI8B/I,EAAA4J,qBAAA,EAAA0uD,EAAA,mDAORt4D,EADIkF,wBACJlF,mDAfQA,EAAAoF,sBAIApF,EAJA6I,qBAAA,iBAAA8M,GAAA3V,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAAjE,GAAAyqB,QAIApgC,CAJsC,iBAAAA,EAAAuJ,0BAAA,EAAAC,IASlBxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAwQ,sCAxChC1Z,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA2uD,EAAA,wDAuBAv4D,EAAA4J,qBAAA,EAAA4uD,EAAA,0GApBKx4D,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA89C,GAAA3mD,EAAAwN,sBAAA,IAAAtE,GAAAwE,YAAA,KAAAi5C,GAAA/pD,QAAA,GAuBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,GAAAw+C,0CAmCG1nD,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAHIlF,EAAA6I,qBAAA,QAAA4vD,IAEAz4D,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAozD,GAAAprD,cAAAorD,GAAAttD,KAAA,uEAZRnL,EALJiF,yBAAA,sBAKIjF,CADH,mBAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAy9C,IAAA,IAAAv9C,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAAi9C,UAAAp9C,IAAiB,GAKlC/I,EAAA4J,qBAAA,EAAA8uD,EAAA,mDAOR14D,EADIkF,wBACJlF,gDAbQA,EAAAoF,sBAEApF,EAFA6I,qBAAA,UAAAK,GAAA4lC,OAEA9uC,CAFkB,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAOExJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAA6lC,uCA2BhB/uC,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,oDAJIlF,EAAA6I,qBAAA,QAAA8vD,GAAA1tD,IAGAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAszD,GAAAtrD,cAAAsrD,GAAAxtD,KAAA,mCARRnL,EAAAiF,yBAAA,qBAIIjF,EAAA4J,qBAAA,EAAAgvD,EAAA,qBAMJ54D,EAAAkF,oDARIlF,EAAA6I,qBAAA,QAAAgwD,GAAA1tD,MAIsBnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAgwD,GAAAn/C,2EAjB9B1Z,EALJiF,yBAAA,sBAKIjF,CADH,iDAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA8P,IAAA,IAAA5P,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE3BF,GAAAqB,WAAW,CAAA61B,QAAAr3B,KACd,GAI8B/I,EAAAiF,yBAAA,mBAAuBjF,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAChClF,EAAA4J,qBAAA,EAAAkvD,GAAA,qDAYR94D,EADIkF,wBACJlF,mDArBQA,EAAAoF,sBAIApF,EAJA6I,qBAAA,iBAAA8M,GAAA3V,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAAjE,GAAAyqB,QAIApgC,CAJsC,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAUlBxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAA6vD,8CAvChC/4D,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAovD,EAAA,uDAqBAh5D,EAAA4J,qBAAA,EAAAqvD,GAAA,0GAlBKj5D,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAA89C,GAAA3mD,EAAAwN,sBAAA,IAAAtE,GAAA6lC,UAAA,KAAA4X,GAAA/pD,QAqBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,GAAAw+C,gFAoCL1nD,EAFRiF,yBAAA,WAEQjF,CAF+C,WAE/CA,CADsB,cACtBA,EAAAqjD,sBAAA,KACerjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAE7BlF,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA0lC,IAAA,IAAAxlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,KAAiB,GAI1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,WACIjF,CADsB,cACtBA,EAAAqjD,sBAAA,KACarjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAE3BlF,EAAAkB,oBAAA,0BASRlB,EADIkF,wBACJlF,+CAnBYA,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAAK,GAAAZ,KAAApP,MAAAuQ,KAGAzJ,CAH2B,iBAAAA,EAAAuJ,0BAAA,EAAAC,GAG3BxJ,CADuC,WAAAkJ,GAAAqyB,UAWvCv7B,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,aAAAK,GAAAZ,MAAA,MAAAY,GAAAZ,KAAApP,MAAA,KAAAgQ,GAAAZ,KAAApP,MAAAuQ,KAEAzJ,CAF0B,MAAAkJ,GAAA4F,aAE1B9O,CADoB,WAAAkJ,GAAAqyB,6EAgC5Bv7B,EAJJiF,yBAAA,WAIIjF,CADH,YACwCA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAC/ClF,EAAAiF,yBAAA,mDAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA,IAAAmwD,GAAAl5D,EAAAgJ,wBAAAmwD,IAAAhkD,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAAkwD,cAAAF,GAAAnwD,IAA2B,GAGpD/I,EADKkF,wBACLlF,mEAPyCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAmtD,IAGjCl5D,EAAAoF,sBAEApF,EAFA6I,qBAAA,iBAAAmB,GAAAhK,EAAAwN,sBAAA,IAAAtE,GAAA0Q,WAAA,MAAA5P,GAAArJ,SAAA,KAAAqJ,GAAArJ,SAAAnD,SAAA07D,IAEAl5D,CAFuD,iBAAAA,EAAAuJ,0BAAA,EAAAC,iCAR/DxJ,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAA+CvlB,EAAAkF,yBAC/ClF,EAAA4J,qBAAA,EAAAyvD,GAAA,4CAYJr5D,EAAAkF,mEAVyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAvI,6EAgBzBX,EAJJiF,yBAAA,WAIIjF,CADH,eAC8CA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAomD,IAAA,IAAAlmD,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GAA3DU,EAAAulB,iBAAA,MAGJvlB,EADIkF,wBACJlF,IA3MRzI,+BAwNyC,eAAA+hE,GAA5B1B,GAA4B,WAmEpC,OAAAlgE,EARD,SAAAkgE,GAEY7Q,GACAtuD,GACA8gE,GACA7gE,IAAyB,IAAAG,GAAAjB,KAAAD,EAAAC,KAAAggE,IAHzBhgE,KAAAmvD,eACAnvD,KAAAa,aACAb,KAAA2hE,SACA3hE,KAAAc,QA7DLd,KAAAovD,WAAY,EACHpvD,KAAAgiB,QAAUhiB,KAAK2hE,MAAM3/C,QAErBhiB,KAAA8hB,OAAS9hB,KAAKc,KAAK07D,cAAc15D,QAC7C1C,EAAAkb,KAAI,SAACq0C,IAAK,IACar4B,GADbD,GAAAa,EACYy3B,IAAC,QAAAj1B,GAAA,WAAE,IAAV+0B,GAAGn4B,GAAAh2B,MACJ8W,GAAMnX,GAAKH,KAAKgV,UAAUoZ,KAC5B,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOo8C,GAAI57C,SAAS,GAEhC47C,GAAYr3C,IAAMA,IAAK3C,cAAgB2C,IAAK7E,MAAQ,EACzD,EALA,IAAA8jB,GAAA/O,MAAAgP,GAAAD,GAAAc,KAAAC,MAAAsC,IAKC,OAAApR,IAAA+N,GAAAxT,EAAAyF,GAAA,SAAA+N,GAAA8B,GAAA,CACD,OAAOw2B,GAAEn0C,OAAO,SAACxY,IAAC,OAAKA,GAAEghD,KAAKp+C,SAAS,UAAU,EACrD,IAEY5F,KAAA8V,UAAY9V,KAAKc,KAAKuuD,iBACtBrvD,KAAAm3C,QAAUn3C,KAAKc,KAAKwuD,YACpBtvD,KAAAmhE,cAAgBnhE,KAAKc,KAAKyuD,cAAczsD,QACpD1C,EAAAkb,KAAI,SAACtY,IAWD,OAVyB/B,GAAKH,KAAKgV,UAAU0F,OACzC,SAAC8C,IAAC,OAAMtb,IAAKsb,GAAEzK,YAAc7Q,GAAEqQ,EAAE,GAEEiI,IAAI,SAACgD,IAAC,MAAM,CAC/CjL,GAAIiL,GAAEjL,GACNE,KAAM+K,GAAE7I,cAAgB6I,GAAE/K,KAC1BuO,OAAQ7gB,GAAKH,KAAKghB,OAAOtG,OACrB,SAACm0C,IAAC,OAAKA,GAAE97C,YAAcyK,GAAEjL,IAAMs8C,GAAE3L,KAAKp+C,SAAS,UAAU,GAEhE,GACoB4V,OAAO,SAACxY,IAAC,OAAKA,GAAE8e,OAAO9c,MAAM,EACtD,IAEYhF,KAAA+I,SAAW/I,KAAK2hE,MAAM54D,SAEtB/I,KAAA0H,MAAQ,kBAAMzG,GAAKkuD,YAAY5wC,SAAS,EACxCve,KAAA2S,WAAa,SAAC4P,IAAC,OAAKthB,GAAK0gE,MAAMhvD,WAAW4P,GAAE,EA6BxDviB,KAAKovD,YAAcpvD,KAAKmvD,WAC5B,EAAC,EAAA9tD,IAAA,MAAAiE,IA5BD,WACI,OAAOtF,KAAKc,KAAK+U,QACrB,GAAC,CAAAxU,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAK2hE,MAAMjxD,IACtB,GAAC,CAAArP,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,iBAChC,GAAC,CAAAjE,IAAA,gBAAAC,OAAAsgE,GAAApgE,EAAAC,IAAAC,KAYM,SAAAC,GAAoBy+D,GAAc7iC,IAAc,IAAAskC,GAAA,OAAApgE,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACxBnC,KAAKgiB,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAC3D4+D,IAD2D5/D,GAAA4B,KAAzDkF,UACsB,IAAIyS,OAAO,SAACxY,IAAC,OAAKo9D,KAASp9D,EAAC,GACtDu6B,IAAOskC,GAAS5oC,KAAKmnC,IACzBpgE,KAAK2S,WAAW,CAAE5J,SAAU84D,KAAY,wBAAA5/D,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IAC3C,SAAAwhE,GAAA7kD,GAAA2c,IAAA,OAAAsoC,GAAAj9D,MAAA3E,KAAA4E,UAAA,MAjBA,IAAAg9D,EAiBA,CA1EoC,GA0EpCF,UA1EQ1B,8CAA4B53D,EAAAC,4BAAAC,EAAAmW,kBAAA,GAAArW,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAqI,oBAAA3I,EAAAC,4BAAAO,EAAAH,qBAAA,mDAA5Bu3D,GAA4Bl3D,UAAA,4BAAAqW,OAAA,CAAA2wC,YAAA,eAAA7mD,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,wCAzMmBC,UAAAC,MAAAC,EAAA,iGAQPF,UAAAG,MAAAD,EAAA,2FAENF,UAAAI,MAAAF,EAAA,2FAuGJF,UAAAM,MAAAJ,EAAA,2HAAI,kBAAO,uBACoBF,UAAAO,MAAAL,EAAA,wHAiCrBF,UAAAyoB,MAAAvoB,EAAA,8FAEQF,UAAAugC,MAAArgC,EAAA,+GAtGhBF,UAAAwgC,MAAAtgC,EAAA,6FAuBAF,UAAAygC,MAAAvgC,EAAA,8FAuBAF,UAAA0gC,MAAAxgC,EAAA,gHA4BhBF,UAAA2gC,MAAAzgC,EAAA,iIAAU,iBAAO,mBAYjBF,UAAA4gC,MAAA1gC,EAAA,+HAAQ,iBAAO,mBAiCSF,UAAA6gC,MAAA3gC,EAAA,2FAmByBF,UAAAkpC,MAAAhpC,EAAA,6hEApMlEtnB,EADJiF,yBAAA,WACIjF,CADmE,YAE/DA,EAAA4J,qBAAA,EAAA8vD,EAAA,iBASJ15D,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA6DvlB,EAAAkF,yBAC7DlF,EAAAkB,oBAAA,YACJlB,EAAAkF,yBAMQlF,EALRiF,yBAAA,YAKQjF,CAFP,eAEOA,CADa,WACbA,EAAAulB,iBAAA,KAA4CvlB,EAAAkF,yBAExClF,EADJiF,yBAAA,YACIjF,CAD4C,eAC5CA,EAAAulB,iBAAA,MAAmCvlB,EAAAkF,yBAiDnClF,EAhDA4J,qBAAA,GAAA+vD,EAAA,sBAgDA35D,CAhDkC,GAAA45D,GAAA,uBAoGtC55D,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD8B,eAC9BA,EAAAqjD,sBAAA,MAA2BrjD,EAAAkB,oBAAA,WAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBACzClF,EAAAiF,yBAAA,sBAAAjF,EAAAulB,iBAAA,MAGJvlB,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAiwD,GAAA,eA2BJ75D,EAAAkF,yBAEIlF,EADJiF,yBAAA,gBACIjF,CADiC,YACjCA,EAAAulB,iBAAA,MAA+CvlB,EAAAkF,yBAE3ClF,EADJiF,yBAAA,YACIjF,CAD2B,aAC3BA,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,qDAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA,OAAiB9H,GAAAsJ,WAAW,CAAA66C,SAAAr8C,IAAqB,GAK7D/I,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAAkwD,EAAA,iDAmBJ95D,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAmwD,EAAA,sBA3La/5D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,WAWThnD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,GAAAqH,MAMuBtI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAA42C,YAgDA73C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAA42C,YA2DuB73C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAoClC7I,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,iBAAA0P,GAAAvY,EAAAwN,sBAAA,KAAAvM,GAAA2Y,UAAA,KAAArB,GAAA6sC,SAEAplD,CAFuC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAU9CxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAuvD,GAAAp4D,EAAAwN,sBAAA,MAAAvM,GAAAN,WAAA,KAAAy3D,GAAAx7D,QAmBJoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,yfAkBA4Q,EAA4B,kMC/NzC,IAAAp2D,EAAA/L,EAAA,MAEAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SACAA,EAAA,wGAiCgCuK,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,4BACAA,EAAAkB,oBAAA,6DAIIlB,EAAA6I,qBAAA,SAAAmxD,EAAAh4C,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEAtBZlB,EANJiF,yBAAA,UAMIjF,CADH,eAKOA,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAs2C,YAAAD,GAAkB,GAE3Bh6D,EAAAiF,yBAAA,YAeIjF,EAZA4J,qBAAA,EAAAswD,EAAA,aAYAl6D,CATC,EAAAm6D,EAAA,aASDn6D,CADE,EAAAo6D,EAAA,yBAAAp6D,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADmB,YAEfA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAQRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MAQZvlB,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAkW,UAAA/iB,KAAAkjD,GAAqB,GAE9Bh6D,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,2FAxEIA,EAAAiX,sBAAA,eAAA0M,EAAAoW,SAAAigC,EAAA/uD,IAcajL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAjN,SAAAlZ,SAAAw8D,EAAA/uD,KAMAjL,EAAAoF,sBAA4BpF,EAA5B6I,qBAAA,aAAAmxD,EAAAh4C,OAAA,KAAAg4C,EAAAh4C,OAAAplB,OAA4BoD,CAAA,WAAAk9B,GAa7Bl9B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA7uD,MAAA,qBAKInL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA18D,WAAA,MAAA08D,EAAA5rD,MAAA,KAAA4rD,EAAA5rD,MAAAf,gBAAA,MAAA2sD,EAAA5rD,MAAA,KAAA4rD,EAAA5rD,MAAAjD,QAAA,MAAA6uD,EAAAxuD,KAAA,KAAAwuD,EAAAxuD,KAAA6B,gBAAA,MAAA2sD,EAAAxuD,KAAA,KAAAwuD,EAAAxuD,KAAAL,MAAA,KAYAnL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAu0C,EAAA7iD,SAAA,IAAA6iD,EAAA7iD,sCAaZnX,EAAAoF,sBAAApF,EAAAiX,sBAAA,YAAA0M,EAAAwZ,YAAA68B,EAAA/uD,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAwZ,YAAA68B,EAAA/uD,IAAA,wDAzEtBjL,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAywD,EAAA,6CA4EJr6D,EAAAkF,kEA1E0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAA/U,mCAP9B5O,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA0wD,EAAA,sJAEKt6D,EAAAoF,sBAAgCpF,EAAhC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAA/U,SAAA,KAAAgH,EAAAhZ,OAAgCoD,CAAA,WAAAs9B,0BAqFjCt9B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,0BAGAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KACJvlB,EAD0DkF,wBAC1DlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBAzG7BtR,4BAyHsC,eAAAgjE,EAAzBC,EAAyB,WAiBe,OAAA9iE,EAAjD,SAAA8iE,EAAoBjB,GAAyB,IAAA1gE,EAAAjB,KAAAD,EAAAC,KAAA4iE,GAAzB5iE,KAAA2hE,QAhBJ3hE,KAAAmiC,OAAiB,GACjBniC,KAAA8e,SAAmB,GACnB9e,KAAA47B,UAAsB,GACrB57B,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aACfhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAEjBhf,KAAAgX,UAASoC,EAAA2I,eAAc,CACnC/hB,KAAK2hE,MAAM3/C,QACXhiB,KAAK2hE,MAAM3nB,sBACZl3C,QACC1C,EAAAkb,KAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAIunD,EAAQ1lD,EAAA,GAAR0lD,SAAa,OAAA1lD,EAAA,GACf0T,OAAO,SAAC4W,GAAC,OAAMo7B,GAAYvsD,EAAKskC,YAAYnT,EAAE/e,GAAG,EAAC,IAG5CrT,KAAAsiB,QAAUtiB,KAAK2hE,MAAMr/C,OAEW,EAAC,EAAAjhB,IAAA,cAAAC,MAE1C,SAAYuhE,GACf,OAAO7iE,KAAK47B,UAAUh2B,SAASi9D,EACnC,GAAC,CAAAxhE,IAAA,cAAAC,MAEM,SAAY6a,GACfnc,KAAK+lC,SAAS7mB,KAAK/C,EACvB,IAAC,CAzBiC,GAyBjCwmD,SAzBQC,0CAAyBx6D,EAAAC,4BAAAC,EAAAyI,oBAAA,kDAAzB6xD,EAAyB95D,UAAA,yBAAAqW,OAAA,CAAAgjB,OAAA,SAAArjB,SAAA,WAAA8c,UAAA,aAAAxc,QAAA,CAAA2mB,SAAA,WAAA9D,UAAA,aAAAh5B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0EAtHHoiB,UAAAC,MAAAC,EAAA,wFACmBF,UAAAG,MAAAD,EAAA,oHAC1C,iBA2D4BF,UAAAI,MAAAF,EAAA,2GACJ,iBA8BmBF,UAAAM,MAAAJ,EAAA,uIAWZF,UAAAO,MAAAL,EAAA,knDAvGnCtnB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAAkCvlB,EAAAkF,yBAClClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,mCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA8wD,EAAA,qDA6FA16D,EAVA4J,qBAAA,EAAA+wD,EAAA,yBAAA36D,EAAA2c,iCAUA3c,CAV0B,EAAA46D,EAAA,yBAAA56D,EAAA2c,4EArFtB3c,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAA9P,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAA2N,SAAA,KAAA+G,EAAA/Y,SAAA,8BAEWoD,EAAAoF,sBAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAAo+B,iSAkHpCo8B,CAAyB,2JC9HtC,IAAA1kE,EAAAL,EAAA,4DAiEgBuK,EAAAkB,oBAAA,kCAIAlB,EAAAiF,yBAAA,iBAIIjF,EAAAmF,iBAAA,YACJnF,EAAAkF,0BAxEhB3N,mCA8E6C,eAAAsjE,EAAhCC,EAAgC,WAImB,OAAApjE,EAA5D,SAAAojE,EAA8Cv8B,GAAU5mC,EAAAC,KAAAkjE,GAAVljE,KAAA2mC,OAAa,EAAC,EAAAtlC,IAAA,WAAAiE,IAH5D,WACI,OAA+B,IAAxBtF,KAAK2mC,MAAM7nB,QACtB,IAAC,CAHwC,GAGxCmkD,SAHQC,0CAAgC96D,EAAAC,4BAIrBnK,EAAAilE,kBAAgB,kDAJ3BD,EAAgCp6D,UAAA,iCAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0hEAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3ErChB,EAAAiF,yBAAA,wCAQQjF,EAPJiF,yBAAA,UAOIjF,CADH,SAEOA,EAAAkB,oBAAA,YAMJlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,SACIjF,CADE,cAgCEA,EAtBAkB,oBAAA,cAsBAlB,CAnBE,oBAmBFA,CAbE,eAaFA,CAZmB,qBAYnBA,CAXmC,mBAWnCA,CAV8C,sBAU9CA,CANE,gBAMFA,CADE,iBASdA,EAFQkF,wBAERlF,mCACAA,EAAAiF,yBAAA,aAOIjF,EAJA4J,qBAAA,GAAAoxD,EAAA,aAIAh7D,CADC,GAAAi7D,EAAA,mBAQTj7D,EADIkF,wBACJlF,UATaA,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,QAAA5H,EAAAyV,UAIA1W,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAyV,oEASRokD,CAAgC,iNCjF7C,IAAAt5D,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,OAGAuC,GAFAvC,EAAA,OAEAA,EAAA,OAEAylE,EAAAzlE,EAAA,UACAA,EAAA,uMAKQuK,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,iHAGIjF,EADAiV,2BAAA,sBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAsV,KAAAzV,KAAAG,EAAAsV,KAAAzV,GAAA/I,EAAAoJ,sBAAAL,EAAA,EACA/I,CADe,wBAAA+I,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAihD,OAAAphD,KAAAG,EAAAihD,OAAAphD,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAMlB/I,EAAAkF,uGAPGlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,MAAAK,EAAAqvC,SAEAv4C,EADAqV,2BAAA,OAAAnM,EAAAsV,KACAxe,CADe,SAAAkJ,EAAAihD,QAKfnqD,EAHA6I,qBAAA,SAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAuV,QAGAze,CAHyB,WAAAA,EAAAwN,sBAAA,IAAAtE,EAAAvI,UAGzBX,CAF6B,UAAAA,EAAAwN,sBAAA,KAAAtE,EAAAohD,SAE7BtqD,CAD2B,UAAAA,EAAAuJ,0BAAA,GAAAC,8BAgBvBxJ,EAAAiF,yBAAA,kBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAg6C,GAEA7iD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAw9C,EAAAx1C,cAAAw1C,EAAA13C,KAAA,MA9BxB5T,iCAkD4C,eAAA4jE,EAA/BC,EAA+B,SAAA5iE,GA2CxC,SAAA4iE,EACYr1C,EACAs1C,GAA+B,IAAAxiE,EAAAlB,SAAAC,KAAAwjE,IAEvCviE,EAAAC,EAAAlB,KAAAwjE,IAHQr1C,cACAltB,EAAAwiE,eA5CIxiE,EAAA6d,SAAqB,GACrB7d,EAAAqxD,cAAwB,EACvBrxD,EAAA8kC,SAAW,IAAIn8B,EAAAoV,aAEzB/d,EAAA2lB,KAAO,EACP3lB,EAAAsxD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IAErBtkD,EAAAyiE,cAAgB,SAACp7C,GAAC,OAAK,kBAAMrnB,EAAK8kC,SAAS7mB,KAAKoJ,EAAE,GACnDrnB,EAAAuV,MAAuB,KAMdvV,EAAA6gB,OAAS7gB,EAAKktB,YAAY1T,iBAAiB3X,QACvD1C,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAqvC,QAAO3sC,EAAEsY,IAAI,SAAArV,GAAQ,OAAAA,EAALuQ,KAAiB,GAAE,IAGlCvV,EAAA8H,SAAW9H,EAAKktB,YAAY1T,iBAAiB3X,QACzD1C,EAAAmxB,cAAa,MAAI,EACjBnxB,EAAAkb,KAAI,SAACq0C,GAAC,OACFA,EAAEr0C,IAAI,SAACa,GAAK,MAAM,CACdzW,SAAUyW,EAAM3I,OAChBiT,QAAS68C,EAAAJ,iCACTzgE,KAAIosB,IAAA,GACG1S,GAAK,IACR2C,SAAU7d,EAAK6d,SAASlZ,SAASuW,EAAM9I,MAE9C,EAAE,IAIKpS,EAAAyxD,QAAUzxD,EAAKktB,YAAY1T,iBAAiB3X,QACxD1C,EAAAkb,KAAI,SAACq0C,GAAC,OACFA,EAAEr0C,IAAI,SAACa,GAAK,MAAM,CACd9I,GAAI8I,EAAM3I,OACVuS,OAAQ,CAAC,WAAY,WACrBC,SAAU/kB,EAAKyiE,cAAcvnD,GAChC,EAAE,IAETlb,CAOF,CAACG,SAAAoiE,EAAA5iE,GAAAd,EAAA0jE,EAAA,EAAAniE,IAAA,UAAAiE,IArCD,WAAkB,IAAA4tD,EACd,OAAiB,QAAVA,EAAAlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,SAAU,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAqCM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,SACA7S,KAAKmuB,YAAY1T,iBAAiB1H,UAAU,SAAC/P,IACpC8B,EAAK0R,OAASxT,EAAEgC,SAAQF,EAAK0R,MAAQxT,EAAE,GAAGwT,MACnD,GAER,GAAC,CAAAnV,IAAA,WAAAC,MAEM,SAASkV,GACZxW,KAAKwW,MAAQA,EACbxW,KAAKyjE,aAAaE,cAAcntD,EAAM3C,UAC1C,GAAC,CAAAxS,IAAA,UAAAC,MAEM,SAAQkyD,GACXxzD,KAAK4mB,KAAOoR,KAAK8F,IAAI,GAAK9F,KAAKC,IAAI,GAAIu7B,GAC3C,GAAC,CAAAnyD,IAAA,WAAAC,MAEM,WACHtB,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,GAC/B,IAAC,CAvEuC,CAAQjlD,EAAA6H,cAAYo7D,SAAnDC,0CAA8Bp7D,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAAo7D,mBAAA,kDAA9BJ,EAA8B16D,UAAA,wBAAAqW,OAAA,CAAAL,SAAA,WAAAwzC,aAAA,gBAAAlzC,QAAA,CAAA2mB,SAAA,YAAAh9B,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,uUAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CnChB,EAAA4J,qBAAA,EAAA6xD,EAAA,uBAmBQz7D,EARRiF,yBAAA,UAQQjF,CANP,qBAMOA,CADH,kBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAmN,MAAArF,KAAA9H,EAAAmN,MAAArF,IAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAqmD,SAAAv+C,EAAgB,GAEjC/I,EAAA4J,qBAAA,EAAA8xD,EAAA,kDAQZ17D,EAFQkF,wBAERlF,YA/BeA,EAAA6I,qBAAA,OAAA5H,EAAAipD,cAoBHlqD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAmN,OAIoBpO,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAyY,mWAuB3B0hD,CAA+B,4NC1D5C,IAAA11D,EAAAjQ,EAAA,UACAA,EAAA,OACAA,EAAA,qMAkCoBuK,EAAAiF,yBAAA,2BAMIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAaua,EAAA2P,gBAAAvqB,GAAuB,EACpC/I,CADqC,oBAAA+I,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAGxC/I,EAAAkF,mEAJGlF,EAFA6I,qBAAA,eAAA8a,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,GAEAjL,CAFwB,WAAA2jB,EAAA8a,aAExBz+B,CADyB,YAAA2jB,EAAA6P,yEAsBjCxzB,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAqB,KAAI,GAN7Br+B,EAAAulB,iBAAA,KAUAvlB,EAAAkF,uFAqDJlF,EAAAiF,yBAAA,0BAIIjF,EAAA4I,qBAAA,oBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAgW,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAEJ/I,EAAAkF,mEAHIlF,EADA6I,qBAAA,WAAA8a,EAAA8a,aACAz+B,CADyB,iBAAA2jB,EAAA0a,YAtH5B9mC,kBAAkB,2BAE/BA,mCA6H6C,eAAAokE,EAAhCC,EAAgC,WAyBxC,OAAAlkE,EAZD,SAAAkkE,EACYpQ,EACA/yD,EACAstB,EAEAwY,GAGP5mC,EAAAC,KAAAgkE,GAPOhkE,KAAA4zD,cACA5zD,KAAAa,YACAb,KAAAmuB,cAEAnuB,KAAA2mC,QAhBL3mC,KAAA8e,SAA2B,GAC3B9e,KAAA4tD,KAAO,OAoBV5tD,KAAK8e,SAAQsD,EAAQukB,EAAMzqB,QAAU,IACrClc,KAAKmuB,YAAYxb,WAAWg0B,EAAM3kB,QACtC,EAAC,EAAA3gB,IAAA,eAAAiE,IApBD,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,IAC/C,GAAC,CAAAxT,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAc3F,EAAAskE,kBAAoB,EAC5D,GAAC,CAAA5iE,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYma,EAAoB8hB,GACnC,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,GACrDkqB,GAAOvqB,EAAKimB,KAAKxd,GACrBzb,KAAK8e,SAAW9L,GACXhT,KAAK2mC,MAAM3kB,QAAQiZ,OAASsC,GAAOv9B,KAAK4zD,YAAYlsD,MAAM,CAAC+T,GACpE,GAAC,CAAApa,IAAA,kBAAAC,MAEM,SAAgBma,GACnB,IAAMqkB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS6V,EAAKpI,IAEtCrT,KAAKa,UAAUm/B,gBAAgBrgC,EAAAskE,gBAD/BlkC,EAC8C,GAAAh8B,OAAAqe,EACvC0d,GAAQ,CACXrkB,EAAKpI,KAKLysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMyY,EAAKpI,EAAE,GAGhD,IAAC,CApDwC,GAoDxC0wD,SApDQC,0CAAgC57D,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAqI,oBAAA3I,EAAAC,4BAiB7ByF,EAAAg5B,iBAAe,kDAjBlBk9B,EAAgCl7D,UAAA,iCAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kCAnHpBoiB,UAAAC,MAAAC,EAAA,mGA4DRF,UAAAG,MAAAD,EAAA,4FAewCF,UAAAI,MAAAF,EAAA,4FAGNF,UAAAM,MAAAJ,EAAA,iHAC/B,iBA9BHF,UAAAO,MAAAL,EAAA,k3DAnDGtnB,EALZiF,yBAAA,UAKYjF,CAHX,aAGWA,CAF2C,aAE3CA,CADwD,cAC9CA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,KACJvlB,EAD+BkF,wBAC/BlF,GACAA,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,8BAOIlB,EAHJiF,yBAAA,WAGIjF,CADH,uCAGOA,EAAAiV,2BAAA,sBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAukD,KAAAz8C,KAAA9H,EAAAukD,KAAAz8C,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACH/I,EAAAkF,yBACDlF,EAAA4J,qBAAA,GAAAkyD,EAAA,6BASJ97D,EAAAkF,yBACAlF,EAAAiF,yBAAA,+BASIjF,EAHA4I,qBAAA,wBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAgBnI,EAAA09B,YAAA19B,EAAAo9B,UAAAt1B,GAA8B,EAG9C/I,CAH+C,uBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAElCnI,EAAAqyB,gBAAAryB,EAAAo9B,WAA0B,EACvCr+B,CADwC,mBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAo9B,UACnB,KAAI,GAEjCr+B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAAmyD,EAAA,iBAWA/7D,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAWJvlB,EADIkF,wBACJlF,GAWYA,EAVZiF,yBAAA,eAUYjF,CARX,eAQWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqDkF,wBAErDlF,KACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA09B,YAAA19B,EAAAo9B,WAAwBp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAA0B,GAGvDjL,EADJiF,yBAAA,YACIjF,CAD2B,kBACDA,EAAAmF,iBAAA,IAExBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IASpBnF,EAJgBkF,wBAIhBlF,SACAA,EAAA4J,qBAAA,GAAAoyD,EAAA,yBAAAh8D,EAAA2c,4EAhGY3c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,uBAAA5H,EAAAukD,MAOIxlD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,OAAApU,EAAAukD,MAGCxlD,EAAAoF,sBAAuBpF,EAAvB6I,qBAAA,gBAAA5H,EAAAukD,KAAuBxlD,CAAA,WAAA6rD,GAY5B7rD,EAAAoF,sBACApF,EADAiX,sBAAA,UAAAhW,EAAAo9B,UACAr+B,CAD2B,UAAAiB,EAAAo9B,WAI3Br+B,EANA6I,qBAAA,QAAA5H,EAAAo9B,UAMAr+B,CANmB,SAAAiB,EAAAw9B,aAAAjhC,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAMnBjL,CAF+C,MAAAiB,EAAAo9B,WAAAp9B,EAAAuyB,UAAAh2B,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAe9CjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAWDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAcA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UASA1W,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAAyV,SAAA9Z,oCAMAoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KADAjL,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAK8Br+B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,gBAItBjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,oRAsBf2wD,CAAgC,wMCxI7C,IAAAp6D,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAKAwmE,GAJAxmE,EAAA,OAEAA,EAAA,OAEAA,EAAA,4GAmBoBuK,EAAAkB,oBAAA,6DAIIlB,EAAA6I,qBAAA,SAAAmxD,EAAAh4C,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEAVRlB,EALJiF,yBAAA,WAKIjF,CADH,YAUOA,EANA4J,qBAAA,EAAAsyD,EAAA,aAMAl8D,CADE,EAAAm8D,EAAA,yBAAAn8D,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADwB,YAEpBA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD6C,iBACbA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAQRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD6C,kBACbA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACtClF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MAKJvlB,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAMOA,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAy/B,gBAAA4W,GAAsB,GAE/Bh6D,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MAEIrjD,EADAkB,oBAAA,gBACAlB,CAD0C,UAE9CA,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA4/B,eAAAyW,GAAqB,GAE9Bh6D,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MAEIrjD,EADAkB,oBAAA,gBACAlB,CAD2C,UAE/CA,EAAAsjD,sBAGZtjD,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAga,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA2P,gBAAA3P,EAAA8T,OAAsB,GAE/Bz3B,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,0FA9EaA,EAAAoF,oBAAA,GAA4BpF,EAA5B6I,qBAAA,aAAAmxD,EAAAh4C,OAAA,KAAAg4C,EAAAh4C,OAAAplB,OAA4BoD,CAAA,WAAAk9B,GAa7Bl9B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA7uD,MAAA,wBAKInL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA18D,WAAA,MAAA08D,EAAA5rD,MAAA,KAAA4rD,EAAA5rD,MAAAf,gBAAA,MAAA2sD,EAAA5rD,MAAA,KAAA4rD,EAAA5rD,MAAAjD,QAAA,MAAA6uD,EAAAxuD,KAAA,KAAAwuD,EAAAxuD,KAAA6B,gBAAA,MAAA2sD,EAAAxuD,KAAA,KAAAwuD,EAAAxuD,KAAAL,MAAA,KAYAnL,EAAAoF,oBAAA,GACApF,EADAylB,oBAAAu0C,EAAA7iD,SAAA,IAAA6iD,EAAA7iD,UAAA,EACAnX,CADmDg6D,EAAA7iD,SAAA,IAAA6iD,EAAA7iD,UAAA,+BAuC3DnX,EAAAoF,oBAAA,IAAApF,EAAAiX,sBAAA,gBAAA0M,EAAA6P,UAAAh2B,SAAA,MAAAmmB,EAAA8T,MAAA,KAAA9T,EAAA8T,MAAAxsB,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAA6P,UAAAh2B,SAAA,MAAAmmB,EAAA8T,MAAA,KAAA9T,EAAA8T,MAAAxsB,IAAA,+BAxF9B,IAAMmpB,EAAuB,GAE7B78B,iCAuH2C,eAAA6kE,EAA9BC,EAA8B,WAkBvC,OAAA3kE,EALA,SAAA2kE,EACY5jE,EACA2W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAAykE,GADlBzkE,KAAAa,YACAb,KAAAwX,UAdIxX,KAAA0kE,cAAe,EACxB1kE,KAAA+rD,UAAY,EACZ/rD,KAAAkc,OAAyB,GACzBlc,KAAA48B,UAAW,EAuDF58B,KAAA68B,iBAAmB,SAACC,GAA+B,OAC9D77B,EAAK87B,UAAYD,CAAE,EAER98B,KAAAg9B,kBAAoB,SAACF,GAA+B,OAC/D77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CAhDlE,EAEH,EAAAjnB,IAAA,YAAAiE,IATA,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuBk3B,CAC/D,GAAC,CAAAn7B,IAAA,kBAAAC,MAQM,WAAe,IAAAwD,EAAA9E,KACNA,KAAKwX,QAAQzC,KAAKsvD,EAAAL,iCAAkC,CAC5DvhE,KAAM,CACFyZ,OAAQlc,KAAKkc,OACb8F,QAAS,CACLzC,SAAUvf,KAAK+rD,UACf2Y,aAAc1kE,KAAK0kE,iBAI3B1sD,cAAcjF,UAAU,SAACmJ,GACpBA,GACLpX,EAAK46B,SAASxjB,EAClB,EACJ,GAEA,CAAA7a,IAAA,iBAAAC,MACO,SAAe6a,GAClBnc,KAAK0/B,SAAS1/B,KAAKkc,OAAOV,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO8I,EAAM9I,EAAE,GAC7D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKkc,OAASohB,EACVt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKkc,OAC5C,GAGA,CAAA7a,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKkc,OAAS5a,GAAS,EAC3B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgB6a,GACnB,IAAM2jB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASuW,EAAM9I,IAEvCrT,KAAKa,UAAUm/B,gBAAgBqkC,EAAAJ,gBAD/BlkC,EAC8C,GAAAh8B,OAAAqe,EACvC0d,GAAQ,CACX3jB,EAAM9I,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMmZ,EAAM9I,EAAE,GAGjD,IAAC,CAhFsC,GAgFtCmxD,SAhFQC,0CAA8Br8D,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA8P,WAAA,kDAA9BmsD,EAA8B37D,UAAA,+BAAAqW,OAAA,CAAAulD,aAAA,gBAAA37D,SAAA,CAAAX,EAAAknB,6BAR5B,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMqkC,CAA8B,GAC5DpkC,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,aAdsBC,UAAAC,MAAAC,EAAA,uGA3DoDF,UAAAG,MAAAD,EAAA,yNAD/CF,UAAAI,MAAAF,EAAA,4GACJ,gBAAmDG,GAgB/CL,UAAAM,MAAAJ,EAAA,8LAA+B,mBAC/B,kBAAW,oBAWXF,UAAAO,MAAAL,EAAA,8LAAgC,mBAChC,kBAAW,8vCAtEnCtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA2yD,EAAA,cAyFJv8D,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAmiD,iBAAiB,GAGtBpjD,EADJiF,yBAAA,UACIjF,CADoD,gBACzBA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAERvlB,EAFuCkF,wBAEvClF,KACAA,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,YACJlB,EAAAkF,gCArG0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAA6S,sGAgHrBuoD,CAA8B,qOCnI3C,IAAAnkE,EAAAzC,EAAA,OAOAwC,GADAxC,EAAA,MACAA,EAAA,QACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAQAspC,EAAAtpC,EAAA,OACA8yB,EAAA9yB,EAAA,sCAuBA8B,iBAG4B,eAAAilE,EAAf5qC,EAAe,SAAAp5B,GAoIxB,SAAAo5B,EACYl5B,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAg6B,IAElC/4B,EAAAC,EAAAlB,KAAAg6B,IAHQl5B,OACAG,EAAAJ,YArIJI,EAAAgwB,SAAW,IAAI7X,EAAAuB,gBAA0B,IAEjC1Z,EAAAqhB,QACZrhB,EAAKgwB,SAASnW,eACX7Z,EAAA6gB,OAAS7gB,EAAKH,KAAK+jE,WAAW/hE,QACjC1C,EAAAkb,KAAI,SAACtY,GACD,IAAK/B,EAAKJ,UAAUyE,IAAI,kBAAmB,CACvC,IAAMw/D,EAAO7jE,EAAKH,KAAKikE,qBACjBC,EAAUF,EAAKxpD,IAAI,SAAClD,GAAG,OAAKA,EAAI/E,EAAE,GAClCL,EAAOhQ,EAAEwY,OACX,SAACi0C,GAAG,OACAuV,EAAQp/D,SAAS6pD,EAAI57C,YACrB47C,EAAIzL,KAAKp+C,SAAS,UAAU,GAEpCoN,SAAKsI,IAAI,SAACm0C,GAAG,IAAAwV,EAAA,OAAAp2C,IAAA,GACN4gC,GAAG,IACNh6C,aAAY,GAAA1R,OACgC,QADhCkhE,EACRH,EAAK51C,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOo8C,EAAI57C,SAAS,UAAC,IAAAoxD,OAAA,EAAxCA,EAA0CxvD,aAC9C,OAAA1R,OAAM0rD,EAAIh6C,eAAc,GAErBzC,CACX,CACA,OAAOhQ,EAAEwY,OACL,SAACi0C,GAAG,OACAA,EAAI57C,YAAc5S,EAAKH,KAAK+U,SAASxC,IACrCo8C,EAAIzL,KAAKp+C,SAAS,UAAU,EAExC,IAGG3E,EAAAib,UAAS9C,EAAA2I,eAAc,CAAC9gB,EAAK6gB,SAAShf,QACzC1C,EAAAob,QAAO,SAAAvV,GAAA,IAAAi/D,EAAM,QAAe,QAARA,EAAbjjD,EAAAhc,EAAA,GAAM,GAAa,UAAE,IAAAi/D,IAAPA,EAAS7xD,GAAE,MAChCjT,EAAAwxB,WAAU,SAAA1P,GAAa,IAAXJ,EAAWG,EAAAC,EAAA,GAAL,GACdjhB,SAAKgwB,SAAS9uB,KAAI,GAAA4B,OAAAqe,EAAKnhB,EAAKgwB,SAAS9Y,YAAU,CAAE,aAAS,EACnDiB,EAAA0zB,UACHhrB,EAAOxG,IAAI,SAACm0C,GAAG,SACXpvD,EAAAuoC,cAAa6mB,EAAIp8C,GAAI,kBAAkBvQ,QACnC1C,EAAAkb,KACI,SAACrD,GAAC,OACGA,EAAEvB,mBAAmB8nB,MAChBvmB,EAAEvB,QACF,IACJ4E,IAAI,SAACgN,GAAC,OAAAuG,IAAA,GACDvG,GAAC,IACJkgB,QAASinB,EAAIp8C,IAAE,EACE,GAEhC,GAGb,IAAC,EACDjT,EAAAkb,KAAI,SAACtI,GAAI,SAAK1S,EAAAmyB,SAAsBzf,EAAK,MACzC5S,EAAAyiB,KAAI,kBACA5hB,EAAKgwB,SAAS9uB,KACVlB,EAAKgwB,SAAS9Y,WAAWqD,OAAO,SAACxY,GAAC,MAAW,WAANA,CAAc,GACxD,MAEL5C,EAAAsyB,aAAY,IAITzxB,EAAA6W,SAAQsB,EAAA2I,eAAc,CAAC9gB,EAAKH,KAAK2W,kBAAkB3U,QACtD1C,EAAAob,QAAO,SAAAwsB,GAAA,IAAE5vB,EAAF6J,EAAA+lB,EAAA,GAAK,WAAW,MAAH5vB,MAAK/E,GAAE,MAC3BjT,EAAAwxB,WAAU,SAAAiB,GAAU,IAARza,EAAQ6J,EAAA4Q,EAAA,GAAL,GACX5xB,SAAKgwB,SAAS9uB,KAAI,GAAA4B,OAAAqe,EAAKnhB,EAAKgwB,SAAS9Y,YAAU,CAAE,YAAQ,EAClD9X,EAAAuoC,cAAaxwB,EAAI/E,GAAI,gBAChC,IAAC,EACDjT,EAAAkb,KACI,SAAC+kC,GAAQ,OACJA,EAAS3pC,mBAAmB8nB,MACvB6hB,EAAS3pC,QACT,EAAE,IAAkB,EAElCtW,EAAAyiB,KAAI,kBACA5hB,EAAKgwB,SAAS9uB,KACVlB,EAAKgwB,SAAS9Y,WAAWqD,OAAO,SAACxY,GAAC,MAAW,UAANA,CAAa,GACvD,MAEL5C,EAAAsyB,aAAY,IAGAzxB,EAAAmyC,eAAiBnyC,EAAKib,OAAOpZ,QACzC1C,EAAAkb,KAAI,SAACtI,GAAI,OACLA,EAAKkc,KACD,SAAClsB,GAAC,IAAAmiE,EAAAC,EAAA,OACe,QAAbD,EAAAniE,EAAEq4C,mBAAW,IAAA8pB,OAAA,EAAbA,EAAenyC,kBACI,QADSoyC,KAC5B9kE,EAAAkG,eAAcE,aAAK,IAAA0+D,OAAA,EAAnBA,EAAqBpyC,cAAa,EACzC,IAIO/xB,EAAAokE,aAAepkE,EAAK6W,MAAMhV,QACtC1C,EAAAkb,KAAI,SAACtI,GAAI,OACLA,EAAKkc,KACD,SAAClsB,GAAC,IAAAsiE,EAAAC,EAAA,OACS,QAAPD,EAAAtiE,EAAE0D,aAAK,IAAA4+D,OAAA,EAAPA,EAAStyC,kBACU,QADGuyC,KACtBjlE,EAAAkG,eAAcE,aAAK,IAAA6+D,OAAA,EAAnBA,EAAqBvyC,cAAa,EACzC,IAIO/xB,EAAAukE,oBAAsBvkE,EAAKokE,aAAaviE,QACpD1C,EAAAkb,KAAI,SAAC5E,GAAO,QAAc,MAAPA,MAAS+uD,KAAI,IAGpBxkE,EAAAykE,gBAAetsD,EAAA2I,eAAc,CACzC9gB,EAAKH,KAAK2W,gBACVxW,EAAKib,SACNpZ,QACC1C,EAAAkb,KAAI,SAAAmtB,GAAA,IAAKvsB,EAAL+F,EAAAwmB,EAAA,GAAW,YACXtB,EAAAxT,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAW1Z,KAAKuX,QAC1CoC,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS5Z,KAAKuX,QACtCze,KAAM,YACP9P,QACC1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,MACvBxZ,EAAAkb,KAAI,SAACyzB,GAAY,OACbA,EACKzzB,IAAI,SAACoc,GAAO,OACTxb,EAAOgT,KACH,SAAC/S,GAAK,OAAKA,EAAM9I,KAAOqkB,EAAQxmB,QAAQ,EAC3C,GAEJsK,OAAO,SAACW,GAAK,QAAOA,CAAK,EAAC,GAEtC,MAEL/b,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE,EAAE,MACf5C,EAAAsyB,aAAY,IAQZzxB,EAAK4R,aAAa,SAAU5R,EAAKmyC,eAAergC,aAAa9R,CACjE,CAACG,SAAA44B,EAAAp5B,GAAAd,EAAAk6B,EAAA,CA1IuB,CAAQ15B,EAAA6H,cAAYy8D,SAAnC5qC,0CAAc5xB,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAA,qDAAdyxB,EAAc/c,QAAd+c,EAAc9c,UAAAC,WAFX,SAEH6c,CAAe,mIC7C5B,IAAArJ,EAAA9yB,EAAA,OAEA8nE,EAAA9nE,EAAA,OAIA8B,WAAqBG,EAkBjB,SAAA8lE,IAAwC,IAA5BnjE,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAAE7E,EAAAC,KAAA4lE,GACpC5lE,KAAKqT,GAAK5Q,EAAK4Q,IAAM,GACrBrT,KAAKuT,KAAO9Q,EAAK8Q,MAAQ,GACzBvT,KAAK6lE,UAAYpjE,EAAKojE,QACtB7lE,KAAK8lE,QAAUrjE,EAAKqjE,SAAW,GAC/B9lE,KAAK64C,WAAap2C,EAAKo2C,SACvB74C,KAAKqyB,SAAW,IAAIszC,EAAAI,MAAMtjE,EAAK4vB,UAAa5vB,EAAaiW,QACzD1Y,KAAKgmE,cAAgBvjE,EAAKujE,cAAgB,IAAI1qD,IAC1C,SAAArV,GAAwD,IAArDggE,EAAShgE,EAATggE,UAAWC,EAAOjgE,EAAPigE,QAAep0D,EAAQ7L,EAAR6L,SAAU4vB,EAAMz7B,EAANy7B,OACnC,MAAO,CACH7vB,KAAM,IAAIiI,KAFS7T,EAAJ4L,MAEoB,IAAZo0D,GAAkBvwC,UACzC5jB,SACIA,MACA6e,EAAA+H,qBAA8B,IAAVwtC,EAA4B,IAAZD,GACxCvkC,OAAQA,EAEhB,GAEJ1hC,KAAKi7C,SAAWx4C,EAAKw4C,MACzB,yNC3CJ,IAAA56C,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,MAEAyC,EAAAzC,EAAA,OAGA8nE,EAAA9nE,EAAA,OACAsoE,EAAAtoE,EAAA,OAGMuoE,EAAoB,0BAU1B,SAAgBC,EACZt6B,GAEA,IAAM1Y,KAAQ/yB,EAAA0rC,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OACHqiE,EAAiB,iBAAAriE,OAAgBsvB,EAAQ,IAAMA,EAAQ,KAC5DvwB,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE9W,IAAI,SAACikB,GAAC,OAAK,IAAI4mC,EAAAP,SAASrmC,EAAE,EAAC,GACnD,CAdA5/B,iBAAA,SAAgB2mE,IACZ,SAAOjmE,EAAAiF,KAAI8gE,GAAmBtjE,QAC1B1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE9W,IAAI,SAACikB,GAAC,OAAK,IAAI4mC,EAAAP,SAASrmC,EAAE,EAAC,GAEhD,EAGA5/B,4BAAA0mE,EASA,IAAME,EAAoB,SAACC,GAAI,SAC3BpmE,EAAAkb,KAAI,SAACtI,GAAgB,OACjBA,EACKwI,OAAO,SAACirD,GAAG,QAAOA,EAAIp0C,QAAQ,GAC9B/W,IACG,SAACmrD,GAAG,OACA,IAAId,EAAAI,MAAKl3C,IAAA,GACF43C,EAAIp0C,UAAQ,IACf7b,MAAOgwD,GAAKv3C,YAAYw3C,EAAIp0C,SAAS1e,OACrCqyD,aAAcS,EAAIT,eACpB,GAETxqD,OAAO,SAACW,GAAK,OAAKA,EAAMi/B,QAAQ,EAAC,EACzC,EAGLz7C,iCAAA,SAAgB+mE,EACZ36B,EACAy6B,GAEA,OAAOH,EAA0Bt6B,GAAGjpC,KAAKyjE,EAAkBC,GAC/D,EAEA7mE,oBAAA,SAAgBgnE,EAAkB56B,GAC9B,IAAM1Y,KAAQ/yB,EAAA0rC,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OACHqiE,EAAiB,cAAAriE,OAAasvB,EAAQ,IAAMA,EAAQ,KACzDvwB,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,CAAe,GACrC,EAGAzyB,qBAAA,SAAgBinE,EACZ76B,EACAy6B,GAEA,IAAMnzC,KAAQ/yB,EAAA0rC,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OACHqiE,EAAiB,cAAAriE,OAAasvB,EAAQ,IAAMA,EAAQ,KACzDvwB,QACE1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE9W,IAAI,SAACikB,GAAC,OAAK,IAAI4mC,EAAAP,SAASrmC,EAAE,EAAC,GACxCgnC,EAAkBC,GAE1B,mFCxEAvsC,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,6KCFA,IAAAiK,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,OACAgpE,EAAAhpE,EAAA,8FAQgBuK,EADJiF,yBAAA,aACIjF,CAD2C,cACjCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,iEAMIA,EAJRiF,yBAAA,SAIQjF,CAJgC,UAIhCA,CADH,gBAC8BA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,iDAA2CnF,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,aAGIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAUF,EAAAw1D,gBAAA31D,GAAuB,GAEzC/I,EALIkF,wBAKJlF,GAEIA,EADJiF,yBAAA,UACIjF,CADoD,cAIhDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA4V,mBAAkB,GAE3B9e,EAAAmF,iBAAA,yBAGZnF,EAFQkF,wBAERlF,+BAEIA,EAAAiF,yBAAA,aAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GACPnF,EADoBkF,wBACpBlF,2CADOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAgR,UApCnB3iB,mCA0C6C,eAAAonE,EAAhCC,EAAgC,WAIzC,OAAAlnE,EA9CJ,SAAAknE,IAAAjnE,EAAAC,KAAAgnE,GA2CqBhnE,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,cAG7B,EAAA3d,IAAA,kBAAAC,MACO,SAAgBwsB,GAAgB,IAAA7sB,EAAAjB,KACnCA,KAAKsiB,QAAU,0BACf,IAAM2iC,EAA4Bn3B,EAAMm5C,OACxC,GAAY,MAAPhiB,MAASiiB,MAAO,OAAQlnE,KAAKsiB,QAAU,GAC5C,IAAM4kD,EAAkBjiB,EAAQiiB,MAChC,IAAKA,EAAMliE,OAAQ,OAAQhF,KAAKsiB,QAAU,GAC1C,IAAM6kD,EAAOD,EAAM,GACbE,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAACzjD,GACpC,IACMphB,KAAOnC,EAAAinE,WADI1jD,EAAEojD,OAAO7/D,QAE1BnG,EAAKqhB,QAAU,GACfrhB,EAAK6sB,MAAM5O,KAAK,CACZoP,OAAQ,OACR+xB,SAAU59C,EACL+Y,OAAO,SAACxY,GAAC,MAAsC,UAAhCA,EAAE4P,MAAQ,IAAIogB,aAAwB,GACrD1X,IACG,SAAC8W,GAAC,OACE,IAAIy0C,EAAAW,aAAY34C,IAAA,GACTuD,GAAC,IACJpQ,QAASvf,EACJ+Y,OACG,SAACxY,GAAC,MAEM,YADHA,EAAE4P,MAAQ,IAAIogB,eACChwB,EAAEghD,OAAS5xB,EAAE/e,EAAE,GAEtCiI,IAAI,SAACtY,GAAC,MAAM,CACTqQ,GAAIrQ,EAAEqQ,GACNE,KAAMvQ,EAAEuQ,KACR0nB,MAAOj4B,EAAE8gC,SACT6yB,SAAU3zD,EAAE2zD,SACZvsB,WAAYpnC,EAAEonC,WACjB,KACP,IAGtB,GACAg9B,EAAWK,WAAWN,EAC1B,GAAC,CAAA9lE,IAAA,mBAAAC,MAEM,YAIH,EAAAhB,EAAAonE,cAAa,2BAHC,sJAIlB,IAAC,CAlDwC,GAkDxCX,SAlDQC,yCAAgC,kDAAhCA,EAAgCl+D,UAAA,iCAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,8rBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAtCjChB,EADJiF,yBAAA,aACIjF,CADmE,QAC/DA,EAAAmF,iBAAA,0BAAoBnF,EAAAkF,yBACxBlF,EAAA4J,qBAAA,EAAA21D,EAAA,gBAGJv/D,EAAAkF,yBAuBAlF,EAtBA4J,qBAAA,EAAA41D,EAAA,cAsBAx/D,CAtBwC,EAAAy/D,EAAA,yBAAAz/D,EAAA2c,yEAJL3c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAI5Bla,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA0/D,+FAiClBd,CAAgC,gMC9C7C,IAAAe,EAAAlqE,EAAA,OACA+L,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAEAiQ,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,OACAgpE,EAAAhpE,EAAA,0NAagBuK,EADJiF,yBAAA,aACIjF,CADqD,cAC3CA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,6BASQA,EADJiF,yBAAA,WACIjF,CADkD,cAQ9CA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACtBnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAMAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,sBAEnBnF,EAFmCkF,wBAEnClF,8CAhBQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA/N,EAAAZ,KAAAgT,SAAAnQ,KAAAy0D,SAAA12D,EAAAZ,KAAAgT,SAAAnQ,KAAA00D,mCAkBJ7/D,EADJiF,yBAAA,WACIjF,CADsD,cAQlDA,EAAAmF,iBAAA,eAAQnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QAC1BnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAOAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,0BAEnBnF,EAFuCkF,wBAEvClF,2EAjBQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA/N,EAAAZ,KAAAgT,SAAAogB,SAAAkkC,SAAA12D,EAAAZ,KAAAgT,SAAAogB,SAAAmkC,SAaI7/D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAAi3D,iEAkBJ9/D,EAAAiF,yBAAA,qBAEIjF,EAAA4I,qBAAA,yBAAA4yB,EAAAx7B,EAAAgJ,wBAAA2E,GAAAwH,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAWF,EAAA62D,UAAAvkC,GAAe,GAE1Bx7B,EAAAmF,iBAAA,GAKInF,EAJJiF,yBAAA,cAIIjF,CADH,cACaA,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,+BAPIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAm2B,EAAA,KAGIx7B,EAAAoF,sIAlBhBpF,EADJiF,yBAAA,WACIjF,CADkD,cAClDA,EAAAulB,iBAAA,KAQAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,sBACIjF,CADiC,wBAE7BA,EAAA4J,qBAAA,EAAAo2D,EAAA,uBAYJhgE,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAOIjF,EAAA4I,qBAAA,gCAAAG,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAwBF,EAAA+2D,OAAAl3D,GAAc,GAGlD/I,EAVQkF,wBAURlF,6EAhCQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA/N,EAAAZ,KAAAgT,SAAAsgC,KAAAgkB,SAAA12D,EAAAZ,KAAAgT,SAAAsgC,KAAAikB,SAUyB7/D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAg3D,UAgBrBlgE,EAAAoF,sBAEApF,EAFA6I,qBAAA,kBAAAs3D,EAEAngE,CAF4B,gCAAAkJ,EAAAk3D,WAE5BpgE,CAD4C,mDAOpDA,EADJiF,yBAAA,WACIjF,CADyD,cAChCA,EAAAmF,iBAAA,kBAAYnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,iBAORlB,EADIkF,wBACJlF,6BAEIA,EADJiF,yBAAA,WACIjF,CADwD,cAQpDA,EAAAmF,iBAAA,iBAAUnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QAC5BnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAOAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,4BAEnBnF,EAFyCkF,wBAEzClF,8CAjBQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA/N,EAAAZ,KAAAgT,SAAA0mB,WAAA49B,SAAA12D,EAAAZ,KAAAgT,SAAA0mB,WAAA69B,gCA2FJ7/D,EADJiF,yBAAA,WACIjF,CADoD,cACpDA,EAAAulB,iBAAA,KAAgDvlB,EAAAkF,yBAChDlF,EAAAkB,oBAAA,yBAIJlB,EAAAkF,uFA7LAlF,EALJiF,yBAAA,YAKIjF,CADH,YAsBOA,EApBA4J,qBAAA,EAAAy2D,EAAA,cAoBArgE,CApBsD,EAAAsgE,EAAA,eAyC1DtgE,EAAAkF,yBAgDAlF,EA/CA4J,qBAAA,EAAA22D,EAAA,aA+CAvgE,CA/CsD,EAAAwgE,EAAA,aA+CtDxgE,CAX6D,EAAAygE,EAAA,eAiCzDzgE,EADJiF,yBAAA,WACIjF,CAD2B,cACWA,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBACpDlF,EAAAiF,yBAAA,sBAA8CjF,EAAAmF,iBAAA,IAGlDnF,EADMkF,wBACNlF,GAEIA,EADJiF,yBAAA,YACIjF,CADmD,sBAG/CA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAL,EAEmCG,EAAA+2D,OAAO,CAAA/mE,MACtD,gBACRgQ,EAAA62D,UAAU,eACR,GAEkB//D,EAAAmF,iBAAA,yBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAL,EACsCG,EAAA+2D,OAAO,CAAA/mE,MAAS,UACpEgQ,EAAA62D,UAAU,SACd,GAEkB//D,EAAAmF,iBAAA,mBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAL,EAEmCG,EAAA+2D,OACvD,CAAA/mE,MAAS,eACRgQ,EAAA62D,UAAU,cACT,GAEkB//D,EAAAmF,iBAAA,uBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAL,EAEmCG,EAAA+2D,OAAO,CAAA/mE,MACzD,mBAAkDgQ,EAAA62D,UAChD,kBACL,GAEkB//D,EAAAmF,iBAAA,2BACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAL,EAEmCG,EAAA+2D,OAAO,CAAA/mE,MACxD,kBAAiDgQ,EAAA62D,UAC/C,iBACN,GAEkB//D,EAAAmF,iBAAA,0BAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD2B,eACQA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBAC/ClF,EAAAkB,oBAAA,mBAQJlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA82D,EAAA,cAOJ1gE,EAAAkF,qEAhMIlF,EAAA6I,qBAAA,YAAAK,EAAAZ,MAGgCtI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAAnQ,MAoBAnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAAogB,UAsBJ17B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAAsgC,MAoCA57C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAAjQ,aAWArL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAA0mB,YAuBsBhiC,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,OAAA2oD,EAAAxrD,EAAAZ,KAAApL,IAAA,mBAAAw3D,EAAAx7D,MAAA,YAM1C8G,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,UAAAK,EAAAy3D,OAAA,eAMA3gE,CANiC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAWjCxJ,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,UAAAK,EAAAy3D,OAAA,SAIA3gE,CAJ2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAS3BxJ,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,UAAAK,EAAAy3D,OAAA,cAMA3gE,CANgC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAWhCxJ,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,UAAAK,EAAAy3D,OAAA,kBAMA3gE,CANoC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAWpCxJ,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,UAAAK,EAAAy3D,OAAA,iBAMA3gE,CANmC,iBAAAA,EAAAuJ,0BAAA,GAAAC,IAgBnCxJ,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,QAGA7I,CAHS,UAGTA,CAFW,SAEXA,CADU,YAAAkJ,EAAA03D,eAIU5gE,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAA0G,sEAY5BhiB,EAJJiF,yBAAA,cAIIjF,CADH,eAKOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAAxsD,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA23D,cAAa,GAEtB7gE,EAAAmF,iBAAA,YAERnF,EADIkF,wBACJlF,6CALQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAAK,EAAAZ,KAAAw4D,8BAOJ9gE,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,6BACPnF,EAD8BkF,wBAC9BlF,6BAGAA,EAAAiF,yBAAA,mBACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAF8ClF,EAAA6I,qBAAA,QAAAk4D,GAC1C/gE,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA07D,EAAA,MAlOhBxpE,6BA8OuC,eAAAypE,EAA1BC,EAA0B,WAiDnC,OAAAvpE,EAJA,SAAAupE,EACqC1iC,GAA4B5mC,EAAAC,KAAAqpE,GAA5BrpE,KAAA2mC,QA5CpB3mC,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aAEtBhf,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACxBr2B,KAAM,IAAIhK,EAAAsgC,YAAY7pC,KAAKyb,KAAKlI,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WACxDt2B,YAAa,IAAIlK,EAAAsgC,YAAY7pC,KAAKyb,KAAKhI,aAAe,IACtDqwB,SAAU,IAAIv6B,EAAAsgC,YAAY7pC,KAAKyb,KAAKqoB,UAAY,GAAI,CAChDv6B,EAAAugC,WAAWC,WAEfK,WAAY,IAAI7gC,EAAAsgC,YAAY7pC,KAAKyb,KAAK2uB,WAAY,CAC9C7gC,EAAAugC,WAAWC,WAEfia,KAAM,IAAIz6C,EAAAsgC,YAAY7pC,KAAKyb,KAAKuoC,MAAQ,IACxCslB,cAAe,IAAI//D,EAAAsgC,YAAY7pC,KAAKyb,KAAK6tD,gBAAiB,GAC1DC,aAAc,IAAIhgE,EAAAsgC,YAAY7pC,KAAKyb,KAAK8tD,cAAgB,GACxDn/C,OAAQ,IAAI7gB,EAAAsgC,YAAY7pC,KAAKyb,KAAK2O,QAAU,MAGzCpqB,KAAAsiB,SAAU,EAEDtiB,KAAAwoE,WAAuB,CAACT,EAAAyB,MAAOzB,EAAA0B,MAAO1B,EAAA2B,MA0BnD,EAEH,EAAAroE,IAAA,OAAAiE,eAxBI,OAAOtF,KAAK2mC,MAAMlrB,MAAQ,IAAIorD,EAAAW,YAClC,GAEA,CAAAnmE,IAAA,aAAAiE,IACA,WACI,OAAOtF,KAAK2mC,MAAMtC,YAAc,EACpC,GAAC,CAAAhjC,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAK0Q,KAAKgT,SAASsgC,KAAK1iD,KACnC,GAAC,CAAAD,IAAA,gBAAAC,MAEM,WACH,SAAAyC,OADiBa,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EAClB,IACnB,GAAC,CAAAvD,IAAA,SAAAC,MAEM,SAAOqoE,GACV,OAAO3pE,KAAKsoE,SAAS1iE,SAAS+jE,EAClC,GAAC,CAAAtoE,IAAA,SAAAC,MAUM,SAAOwsB,GACV,GAAK9tB,KAAK0Q,MAAS1Q,KAAK0Q,KAAKgT,SAASsgC,KACtC,CAAAhkD,KAAK0Q,KAAKgT,SAASsgC,KAAK4lB,cACxB,IAAMC,EAAQ/7C,EAAM+7C,MACdvoE,EAAQwsB,EAAMxsB,MACdgnE,EAAWtoE,KAAKsoE,UACjBhnE,GAAS,IAAI+hD,SACdilB,EAASrvC,KAAK33B,GACdtB,KAAK0Q,KAAKgT,SAASsgC,KAAKtkB,SAAS4oC,IAIjCuB,IAAOA,EAAMvoE,MAAQ,IAC7B,GAEA,CAAAD,IAAA,YAAAC,MAIO,SAAUwoE,GACb,GAAK9pE,KAAK0Q,MAAS1Q,KAAK0Q,KAAKgT,SAASsgC,KACtC,KAAMskB,EAAWtoE,KAAKsoE,SACtBtoE,KAAK0Q,KAAKgT,SAASsgC,KAAK4lB,cACxB,IAAMG,EAAQzB,EAAS0B,QAAQF,GAE3BC,GAAS,IACTzB,EAASnsB,OAAO4tB,EAAO,GACvB/pE,KAAK0Q,KAAKgT,SAASsgC,KAAKtkB,SAAS4oC,GAAQ,CAEjD,GAAC,CAAAjnE,IAAA,cAAAC,MAEM,WACHtB,KAAKsiB,SAAU,EACftiB,KAAK8tB,MAAM5O,KAAK,CACZoP,OAAQ,OACR+xB,SAAU,CACN5kC,KAAM,IAAIorD,EAAAW,aAAY34C,IAAA,GACf7uB,KAAKyb,MAAI,IACZpI,GAAIrT,KAAKyb,KAAKpI,IAAE,QAAAtP,UAAYzD,EAAAo+B,WAAU,YACnC1+B,KAAK0Q,KAAKpP,UAI7B,IAAC,CAhGkC,GAgGlC8nE,SAhGQC,0CAA0BjhE,EAAAC,4BA8CvByF,EAAAg5B,iBAAe,kDA9ClBuiC,EAA0BvgE,UAAA,0BAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,GAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,WA1JFC,UAAAC,MAAAC,EAAA,0MApBpBF,UAAAG,MAAAD,EAAA,mGAsIwCF,UAAAI,MAAAF,EAAA,k6DAlM7CtnB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,GAAmCnF,EAAAkF,yBACvClF,EAAA4J,qBAAA,EAAAi4D,EAAA,gBAGJ7hE,EAAAkF,yBAkNAlF,EAjNA4J,qBAAA,EAAAk4D,EAAA,eAiNA9hE,CA7MC,EAAA+hE,EAAA,eA6MD/hE,CAVC,EAAAgiE,EAAA,yBAAAhiE,EAAA2c,kCAgBD3c,EAAAiF,yBAAA,6BACIjF,EAAA4J,qBAAA,GAAAq4D,EAAA,oBAGJjiE,EAAAkF,gEAhOQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAApE,EAAAoS,KAAApI,GAAA,sBACqCjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAMxCla,EAAAoF,sBAAwBpF,EAAxB6I,qBAAA,OAAA5H,EAAAqH,OAAArH,EAAAiZ,QAAwBla,CAAA,WAAA8c,GAmMxB9c,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAmB8Bla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAg7B,0oBAa9BglC,CAA0B,uICzPvC1pE,eAAyB,WAuEpB,OAAAG,EA9BD,SAAA0nE,IAA4C,IAAA8C,EAAAC,EAAhC9nE,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA8B,GAAE7E,EAAAC,KAAAwnE,GACxCxnE,KAAKqT,GAAK5Q,EAAK4Q,IAAM,GACrBrT,KAAKuT,KAAO9Q,EAAK8Q,MAAQ9Q,EAAK4Q,IAAM,GACpCrT,KAAK8jC,SAAWrhC,EAAKqhC,UAAY,GACjC9jC,KAAKoqC,WAAa3nC,EAAK2nC,YAAc,EACrCpqC,KAAKyT,YAAchR,EAAKgR,aAAe,GACvCzT,KAAK27B,SAAWl5B,EAAKk5B,UAAY,EACjC37B,KAAKupE,aAAe9mE,EAAK8mE,cAAgB,EACzCvpE,KAAKspE,gBAAkB7mE,EAAK6mE,cAC5BtpE,KAAKgkD,KAAOvhD,EAAKuhD,MAAQ,GACzBhkD,KAAKoqB,OAAS3nB,EAAK2nB,QAAU,GAC7BpqB,KAAKgiB,QAAUvf,EAAKuf,SAAW,GAC/B,IAAMwoD,EAAcxqE,KAAKgiB,QAAQmpB,KAAK,SAACnoC,GAAC,OAAkB,IAAbA,EAAEm/B,MAAe,GAC9DniC,KAAKqvB,aACAm7C,EACKxqE,KAAKgiB,QAAQxG,OAAO,SAACxY,GAAC,OAAkB,IAAbA,EAAEm/B,MAAe,GAC5C1/B,EAAK4sB,cAAgB,GAC/BrvB,KAAKyqE,eAAiBhoE,EAAKgoE,gBAAkB,GAC7CzqE,KAAK0qE,wBACD1qE,KAAKoqC,WACLpqC,KAAKqvB,YACA/T,IAAI,SAAC8W,GAAC,OAAKA,EAAEgY,YAAc,CAAC,GAC5B/K,OAAO,SAACE,EAAGtM,GAAC,OAAKsM,EAAItM,CAAC,EAAE,GACjCjzB,KAAK2qE,WAAa3qE,KAAK0qE,wBAA0B1qE,KAAK27B,SACtD37B,KAAK4qE,gBACW,QAAZN,EAAAtqE,KAAKgiB,eAAO,IAAAsoD,OAAA,EAAZA,EACMhvD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,IAAM,EAAE,GACtBmJ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEqV,cAAchqB,EAAE,GACjCzJ,KAAK,OAAQ,GACtB7U,KAAK6qE,SAAwB,QAAhBN,EAAG9nE,EAAKooE,gBAAQ,IAAAN,IACjC,EAAC,EAAAlpE,IAAA,YAAAiE,IAnCD,WACI,IAAM0c,EAAUhiB,KAAKqvB,YAAY/T,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,KACvD,SAAA9Q,OAAU/D,KAAKqT,GAAE,KAAAtP,OAAIie,EAAO,KAAAje,OAAK/D,KAAK6qE,SAAoB,GAAT,OACrD,IAAC,CAvCoB,6MCFzB,IAAAjhE,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QAOAitE,EAAAjtE,EAAA,OACAktE,EAAAltE,EAAA,OAEA8yB,GADA9yB,EAAA,MACAA,EAAA,uHA6BgCuK,EALJiF,yBAAA,WAKIjF,CADH,cACaA,EAAAmF,iBAAA,mBACdnF,EAD2BkF,wBAC3BlF,4CAJIA,EAAA6I,qBAAA,aAAAK,EAAAgqB,2EAaZlzB,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAA25D,EAAA5iE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA25D,eAAAD,GAAqB,GAE9B5iE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,kBACdnF,EAD0BkF,wBAC1BlF,iEACAA,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAi1D,EAAA5iE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA45D,UAAAF,GAAgB,GAEzB5iE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,iEACAA,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA60D,EAAA5iE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA65D,YAAAH,GAAkB,GAE3B5iE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,6BA8BQA,EAAAiF,yBAAA,aAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,0GAHIlF,EAAA6I,qBAAA,aAAAK,EAAA85D,WAAA90B,IAEAluC,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA6oC,EAAAjnB,YAAA,KAAAinB,EAAAjnB,YAAArqB,SAAA,iFAiBRoD,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA8P,GAAA,IAAAo1B,EAAAluC,EAAAmJ,0BAAAgM,UAAAytD,EAAA5iE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA+5D,gBAAAL,EAAA10B,GAA4B,GAErCluC,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,iEAjCAA,EAJJiF,yBAAA,WAIIjF,CADH,YAEOA,EAAAmF,iBAAA,GACAnF,EAAA4J,qBAAA,EAAAs5D,EAAA,eAOJljE,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,oCAKJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAu5D,EAAA,iBAUAnjE,EAAAiF,yBAAA,gBAUIjF,EAAA4I,qBAAA,uBAAAslC,EAAAluC,EAAAgJ,wBAAAy9C,GAAAtxC,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAAoqB,gBAAA4a,GAAqB,GAE9BluC,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,8DAnDQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6oC,EAAA/iC,MAAA,YAGKnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAqlC,EAAAjnB,YAAA,KAAAinB,EAAAjnB,YAAArqB,QASLoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,KAAA6oC,EAAA3a,SAAA,KAKAvzB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAiiC,EAAAo0B,wBAAA,IAAAp5D,EAAAk6D,eAAA,QAWCpjE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,EAAAsrB,UAcDx0B,EAAAoF,sBAAApF,EAAAiX,sBAAA,gBAAA/N,EAAAsqB,UAAAh2B,SAAA0wC,EAAAjjC,KALAjL,EAAA6I,qBAAA,aAAAK,EAAAsqB,UAAAh2B,SAAA0wC,EAAAjjC,IAAA,8CAQUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAsqB,UAAAh2B,SAAA0wC,EAAAjjC,IAAA,4FA1HVjL,EAVhBiF,yBAAA,UAUgBjF,CAJf,UAIeA,CAHiC,UAGjCA,CAFY,UAEZA,CADqC,SAEjCA,EAAAmF,iBAAA,6DAIJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAy5D,EAAA,aAOJrjE,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,sCAKRnF,EADIkF,wBACJlF,GAmBAA,EAlBA4J,qBAAA,GAAA05D,EAAA,gBAkBAtjE,CAZC,GAAAujE,EAAA,gBAYDvjE,CAHC,GAAAwjE,EAAA,iBAaDxjE,EAAAiF,yBAAA,gBAQIjF,EAAA4I,qBAAA,uBAAAg6D,EAAA5iE,EAAAgJ,wBAAAW,GAAAwL,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAu6D,WAAAb,EAAA33D,KAAA/B,EAAAu6D,WAAAb,EAAA33D,IAAA,GAEAjL,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,aAIIjF,EAAA4J,qBAAA,GAAA85D,EAAA,gBA0DR1jE,EADIkF,wBACJlF,2DAvIIA,EADAiX,sBAAA,eAAA/N,EAAAyY,SAAAihD,EAAA7uC,WACA/zB,CADkD,kBAAAkJ,EAAAyY,UAAAihD,EAAA7uC,YAOlC/zB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,cAAAlX,EAAAiM,sBAAA,KAAA22D,EAAA5uC,gBAAA,qBAAAh0B,EAAAiM,sBAAA,KAAA22D,EAAA5uC,gBAAA9qB,EAAAqd,aAAA,KAQCvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAyY,SAAAihD,EAAA7uC,YAML/zB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAA0rD,EAAAvrC,WAAA,gBAAAr3B,EAAAiM,sBAAA,MAAA22D,EAAAL,WAAA,IAAAr5D,EAAAk6D,eAAA,KAUHpjE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,EAAAsrB,UASAx0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAsrB,UAUAx0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAsrB,UAQDx0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,EAAAu6D,WAAAb,EAAA33D,IAAA,uCAQIjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAu6D,WAAAb,EAAA33D,IAAA,iCAURjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAu6D,WAAAb,EAAA33D,IAAA,eAIqBjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA+5D,EAAAzuC,QA1FzC,IAAMC,EAAa,GAEnB78B,6BA2KuC,eAAAosE,EAA1BC,EAA0B,WA4CnC,OAAAlsE,EANA,SAAAksE,EACYnrE,EACAC,EACA0W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAAgsE,GAFlBhsE,KAAAa,YACAb,KAAAc,OACAd,KAAAwX,UAxCIxX,KAAAgiB,QAKZ,GACGhiB,KAAAq+B,OAA0B,GAC1Br+B,KAAA6rE,WAAsC,GACtC7rE,KAAA48B,UAAW,EACX58B,KAAAs7B,YACH,2EAIGt7B,KAAA8e,SAA4B,GAwDnB9e,KAAA68B,iBAAmB,SAACC,GAAgC,OAC/D77B,EAAK87B,UAAYD,CAAE,EACR98B,KAAAg9B,kBAAoB,SAACF,GAAgC,OAChE77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CAjClE,EAEH,EAAAjnB,IAAA,YAAAiE,IA3BA,WACI,OACItF,KAAKa,UAAUyE,IAAc,yBAA2Bk3B,CAEhE,GAAC,CAAAn7B,IAAA,WAAAiE,IAED,WACI,IAAMsyB,GACD53B,KAAKgiB,QAAQnQ,MAAQiI,KAAKuX,OACK,IAA/BrxB,KAAKgiB,QAAQlQ,UAAY,IAAW,IACzC,OAAO9R,KAAKgiB,QAAQwO,WAAUG,EAAA+C,UAASkE,GAAMlC,UAAYkC,CAC7D,GAAC,CAAAv2B,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,aAAe,WACzC,GAAC,CAAAttB,IAAA,gBAAAiE,IAED,WAAwB,IAAA60C,EACpB,OAAyB,QAAlBA,EAAAn6C,KAAKc,KAAK+U,gBAAQ,IAAAskC,OAAA,EAAlBA,EAAoB8xB,WAAY,KAC3C,GAAC,CAAA5qE,IAAA,WAAAC,MAYM,SAASg8B,GACZt9B,KAAKq+B,OAASf,EACVt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKq+B,OAC5C,GAAC,CAAAh9B,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAAAt4B,EAAA9E,KACjCo9B,EAAQpb,UACRhiB,KAAKq+B,QAAUr+B,KAAKq+B,QAAU,IAAI/iB,IAC9B,SAACtY,GAAC,OAAK,IAAI+nE,EAAAmB,cAAar9C,IAAA,GAAM7rB,GAAC,IAAE8qB,MAAOhpB,EAAKkd,UAAiB,GAG1E,GAEA,CAAA3gB,IAAA,aAAAC,MAIO,SAAWA,GAAsB,IAAA4E,EAAAlG,KACpCA,KAAKq+B,QAAU/8B,GAAS,IAAIga,IACxB,SAACtY,GAAC,OAAK,IAAI+nE,EAAAmB,cAAar9C,IAAA,GAAM7rB,GAAC,IAAE8qB,MAAO5nB,EAAK8b,UAAiB,EAEtE,GAAC,CAAA3gB,IAAA,cAAAC,MAQM,SAAYk8B,GACf,IAAMmC,EAAe3/B,KAAKq+B,OAAO7iB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAChErT,KAAK0/B,SAASC,EAClB,GAAC,CAAAt+B,IAAA,iBAAAC,MAEM,SAAek8B,GAClB,IAAMoB,EAAY,IAAImsC,EAAAmB,cAAar9C,IAAA,GAC5B2O,GAAK,IACRnqB,GAAE,SAAAtP,UAAWzD,EAAAs/B,cAAa,OAE9B5/B,KAAK0/B,SAAQ,GAAA37B,OAAAqe,EAAKpiB,KAAKq+B,QAAM,CAAEO,IACnC,GAAC,CAAAv9B,IAAA,kBAAAC,MAEM,SAAgBk8B,EAAsB/hB,GACzC,IAAMmjB,EAAY,IAAImsC,EAAAmB,cAAar9C,IAAA,GAC5B2O,GAAK,IACRjB,MAAOiB,EAAMjB,MAAM/gB,OAAO,SAACxY,GAAC,OAAKA,EAAEmpE,YAAc1wD,EAAK0wD,SAAS,MAE7DxsC,EAAe3/B,KAAKq+B,OAAO7iB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAE5DrT,KAAK0/B,SADLd,EAAUrC,MAAMv3B,OAAS,EACZ,GAAAjB,OAAAqe,EAAKud,GAAY,CAAEf,IACfe,EACzB,GAAC,CAAAt+B,IAAA,YAAAC,MAEM,WAAoD,IAAAwF,EAAA9G,KAA1Cw9B,EAAA54B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,IAAImmE,EAAAmB,cAClCt0D,EAAM5X,KAAKwX,QAAQzC,KAAK+1D,EAAAsB,+BAAgC,CAC1D3pE,KAAM,CACF85B,MAAOiB,EAAMjB,MACb7lB,QAAOmY,IAAA,GACA7uB,KAAKgiB,SAAO,IACfnQ,KAAM7R,KAAKgiB,QAAQwO,WACbG,EAAA6C,YAAWxzB,KAAKgiB,QAAQnQ,MAAM6jB,UAC9B11B,KAAKgiB,QAAQnQ,KACnBC,SAAU9R,KAAKgiB,QAAQwO,QACjBwH,KAAK8F,IAAI,KAAS99B,KAAKgiB,QAAQlQ,UAC/B9R,KAAKgiB,QAAQlQ,WAEvBisB,aAAcP,EAAMQ,aACpBC,OAAQT,EAAMU,eACdC,WAAYX,EAAMY,sBAG1BxmB,EAAII,cAAcjF,UAAU,SAACwpB,GACzB,IAAM8B,EAASv3B,EAAKu3B,OAAO7iB,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOmqB,EAAMnqB,EAAE,GAC1D,GAAU,MAALkpB,KAAOv3B,OACZ,KACwBsyB,EADlBM,EAAO,IAAI9d,KAAKhT,EAAKkb,QAAQnQ,MAAMwlB,EAAAa,EACtBqE,GAAK,IAAxB,IAAAlF,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0B,KAAf3c,EAAI6b,EAAAh2B,MACVma,EAAauG,QAAOI,EACd3G,EAAKuG,QAAQ1G,IAAI,SAACtY,GAAC,OAAA6rB,EAAA,GAAW7rB,EAAC,IACpC,IAC+By0B,EAD/BD,EAAAU,EACmBzc,EAAKuG,SAAO,QAAA0Y,EAAA,WAAE,IAAxB2xC,EAAM50C,EAAAn2B,MACPgrE,GAAM7wD,EAAK4T,YAAYH,KACzB,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOg5D,EAAOh5D,EAAE,GAE7Bg5D,EAAOlqC,SAAWmqC,EACtB,EALA,IAAA90C,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAAsC,GAKC,OAAApR,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACL,CAAC,OAAA7P,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,IAAMyF,EAAY,IAAImsC,EAAAmB,cAAar9C,IAAA,GAC5B2O,GAAK,IACRjB,QACAzO,MAAOhnB,EAAKkb,QACZkc,eAAgBtmB,EAAIM,kBAAkB+lB,OACtCD,aAAcpmB,EAAIM,kBAAkB6lB,WAC9BnG,EAAKoH,WAAapH,EAAKqH,aAAe,GACtC,KACNb,mBAAoBxmB,EAAIM,kBAAkBimB,YAAc,KAExDS,EAAUa,YAAc,GAC5B34B,EAAK44B,SAAQ,GAAA37B,OAAAqe,EAAKic,GAAM,CAAEO,IAAU,CACxC,EACJ,GAAC,CAAAv9B,IAAA,aAAAC,MAEM,SAAWma,GAAkB,IAAA2T,EAChC,OAAuB,QAAvBA,EAAO3T,EAAK4T,mBAAW,IAAAD,OAAA,EAAhBA,EAAkB9T,IAAI,SAACtY,GAAC,OAAKA,EAAEuQ,IAAI,GAAEsB,KAAK,KACrD,GAAC,CAAAxT,IAAA,kBAAAC,MAEM,SAAgBirE,GACnB,IAAMzsC,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS2mE,EAAal5D,IAE9CrT,KAAKa,UAAUm/B,gBAAgB,uBAD/BD,EACqD,GAAAh8B,OAAAqe,EAC9C0d,GAAQ,CACXysC,EAAal5D,KAKbysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMupE,EAAal5D,EAAE,GAGxD,IAAC,CAvKkC,GAuKlC04D,SAvKQC,0CAA0B5jE,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAA4P,WAAA,kDAA1B0zD,EAA0BljE,UAAA,0BAAAqW,OAAA,CAAA6C,QAAA,WAAAjZ,SAAA,CAAAX,EAAAknB,6BATxB,CACP,CACI/iB,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAM4rC,CAA0B,GACxD3rC,OAAO,KAEdj4B,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,khEAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtKGhB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAw6D,EAAA,eA6IJpkE,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,0BAAS3H,EAAA6hE,WAAW,GAGhB9iE,EADJiF,yBAAA,UACIjF,CADoD,cAC1CA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,eAEdnF,EAFuBkF,wBAEvBlF,YAxJ0BA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAg1B,QAiJtBj2B,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAA5H,EAAAuzB,+HAUI,CAACt8B,EAAAkY,mCAUJwzD,CAA0B,sLCxLvCnuE,EAAA,WACAgpE,EAAAhpE,EAAA,OACAyC,EAAAzC,EAAA,UACAA,EAAA,ojBAuCYuK,EAAAiF,yBAAA,oBAKIjF,EAAA4I,qBAAA,yBAAAG,GAAA,IAAAs7D,EAAArkE,EAAAgJ,wBAAAW,GAAA26D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBua,EAAA4gD,WAAAF,EAAAt7D,GAAuB,GAC3C/I,EAAAkF,2EAFGlF,EAAA6I,qBAAA,UAAA8a,EAAA6gD,UAAAH,8BAKJrkE,EAAAiF,yBAAA,WAGIjF,EAAAmF,iBAAA,kEACJnF,EAAAkF,0EADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAw4D,EAAA,IAAAzkE,EAAAwN,sBAAA,IAAAmW,EAAA+gD,SAAA,mEAYI1kE,EARRiF,yBAAA,UAQQjF,CAR6C,aAQ7CA,CADH,cACaA,EAAAmF,iBAAA,eACdnF,EADuBkF,wBACvBlF,GAEIA,EADJiF,yBAAA,oBACIjF,CADsB,eAIlBA,EAAA4I,qBAAA,uBAAA+7D,EAAA3kE,EAAAgJ,wBAAA2E,GAAA22D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAihD,UAAAD,GAAc,GAGnB3kE,EADJiF,yBAAA,WACIjF,CAD0C,cAChCA,EAAAmF,iBAAA,SAAGnF,EAAAkF,yBACblF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,iBAEbnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,uBAAA+7D,EAAA3kE,EAAAgJ,wBAAA2E,GAAA22D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAkhD,SAAAF,GAAa,GAGlB3kE,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,gBAEbnF,EAFsBkF,wBAEtBlF,KACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,uBAAA+7D,EAAA3kE,EAAAgJ,wBAAA2E,GAAA22D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAuwB,WAAAywB,GAAe,GAGpB3kE,EADJiF,yBAAA,YACIjF,CAD0C,kBACbA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACnClF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,kBAGjBnF,EAH4BkF,wBAG5BlF,OACAA,EAAAiF,yBAAA,gBAUIjF,EAAA4I,qBAAA,uBAAA+7D,EAAA3kE,EAAAgJ,wBAAA2E,GAAA22D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAAmhD,cAAAH,EAAA15D,KAAA0Y,EAAAmhD,cAAAH,EAAA15D,IAAA,GAEAjL,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,oFAzDQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,aAAA0M,EAAA8sB,UACAzwC,EAFA6I,qBAAA,YAAA8a,EAAA8sB,SAEAzwC,CAFsB,oBAAA+kE,GAyCtB/kE,EAAAoF,oBAAA,IACApF,EADA6I,qBAAA,mBAAA87D,EAAA/qD,SAAA+qD,EAAA/qD,QAAAhd,QACAoD,CADiC,mBAAA2kE,EAAA/qD,SAAA+qD,EAAA/qD,QAAAhd,QAAA+mB,EAAAmhD,cAAAH,EAAA15D,IAAA,wCAU7BjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAmhD,cAAAH,EAAA15D,IAAA,yGAuBRjL,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAAqL,EAAA/gE,EAAAmJ,0BAAAgM,UAAA6vD,EAAAhlE,EAAAmJ,0BAAAm7D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAshD,WAAAD,EAAAjE,GAAuB,GAGhC/gE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,iEACAA,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAylC,GAAA,IAAAsyB,EAAA/gE,EAAAmJ,0BAAAgM,UAAA6vD,EAAAhlE,EAAAmJ,0BAAAm7D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAuhD,aAAAF,EAAAjE,GAAyB,GAGlC/gE,EAAAiF,yBAAA,iBAA6BjF,EAAAmF,iBAAA,YACjCnF,EADuCkF,wBACvClF,6BA/BJA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,YAIIlB,EADJiF,yBAAA,WACIjF,CAD0B,YACRA,EAAAmF,iBAAA,GAAiBnF,EAAAkF,yBACnClF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,GAUAA,EATA4J,qBAAA,EAAAu7D,EAAA,gBASAnlE,CAHC,EAAAolE,EAAA,iBAaLplE,EAAAkF,gFAxB0BlF,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAg1D,EAAA51D,MAEdnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA07D,EAAAluC,MAAA,KAQH7yB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAA8sB,UAUAzwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAA8sB,gCA5BTzwC,EAAA4J,qBAAA,EAAAy7D,EAAA,mBAEuBrlE,EAAA6I,qBAAA,gBAAA+Q,SAxHnCriB,wBAoKkC,eAAA+tE,EAArBC,EAAqB,WA+B1B,OAAA7tE,EAHJ,SAAA6tE,EACYC,EACAC,GAA8B,IAAA5sE,EAAAjB,KAAAD,EAAAC,KAAA2tE,GAD9B3tE,KAAA4tE,YACA5tE,KAAA6tE,UA7BL7tE,KAAAktE,cAAyC,GAEhCltE,KAAA8tE,KAAO9tE,KAAK4tE,UAAUE,KAEtB9tE,KAAAgtE,UAAY,SAACvxD,GAAI,OAAKxa,EAAK2sE,UAAUZ,UAAUvxD,EAAK,EAEpDzb,KAAAqtE,WAAa,SAAC5xD,EAAM4wD,GAAM,OACtCprE,EAAK2sE,UAAUZ,UAAUvxD,EAAM4wD,EAAO,EAE1BrsE,KAAAstE,aAAe,SAAC7xD,EAAM4wD,GAAM,OACxCprE,EAAK2sE,UAAUG,aAAatyD,EAAM4wD,EAAO,EAE7BrsE,KAAAitE,SAAW,SAACxxD,GAAI,OAAKxa,EAAK2sE,UAAUI,QAAQvyD,EAAK,EAEjDzb,KAAAs8C,WAAa,SAAC7gC,GAAI,OAAKxa,EAAK2sE,UAAUK,WAAWxyD,EAAK,CAgBnE,EAAC,EAAApa,IAAA,UAAAiE,IAdJ,WACI,OAAOtF,KAAK6tE,QAAQt3C,OACxB,GAAC,CAAAl1B,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAK4tE,UAAUM,WAC1B,GAAC,CAAA7sE,IAAA,aAAAiE,IACD,WACI,OAAOtF,KAAK4tE,UAAUvpC,UAC1B,GAAC,CAAAhjC,IAAA,YAAAC,MAOM,SAAUma,GACb,OAAQA,EAAKgvD,eAAe7kE,SAAS5F,KAAK4tE,UAAUh6D,KACxD,GAAC,CAAAvS,IAAA,aAAAC,MAEM,SAAWma,EAAoB8hB,GAAc,IAAAz4B,EAAA9E,KAC5CgT,EAAOyI,EAAKgvD,eAEXz3D,EADAuqB,EACOvqB,EAAKwI,OAAO,SAACxY,GAAC,OAAKA,IAAM8B,EAAK8oE,UAAUh6D,IAAI,IAD5CZ,EAAO1S,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAAKpP,GAAI,CAAEhT,KAAK4tE,UAAUh6D,QAEnD5T,KAAK4tE,UAAUO,WACX,IAAItH,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEgvD,eAAgBz3D,KAEpD,IAAC,CA5C6B,GA4C7B06D,SA5CQC,0CAAqBvlE,EAAAC,4BAAAC,EAAA8lE,sBAAAhmE,EAAAC,4BAAAG,EAAA6lE,uBAAA,kDAArBV,EAAqB7kE,UAAA,oBAAAG,MAAA,EAAAC,KAAA,GAAAkE,OAAA,68CAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjK1BhB,EAAAkB,oBAAA,oBAkHAlB,EAjFA4J,qBAAA,EAAAs8D,EAAA,yBAAAlmE,EAAA2c,iCAiFA3c,CAjF4C,EAAAmmE,EAAA,yBAAAnmE,EAAA2c,iCAiF5C3c,CAxE6C,EAAAomE,EAAA,0BAAApmE,EAAA2c,iCAwE7C3c,CAjE6C,EAAAqmE,EAAA,yBAAArmE,EAAA2c,gKAnBzC3c,EA5BA6I,qBAAA,OAAA5H,EAAAykE,KA4BA1lE,CA5Ba,UAAAA,EAAAsmE,0BAAA,GAAAC,EAAAvmE,EAAAoqC,0BAAA,EAAA5gC,EAAAg9D,GAAAxmE,EAAAuJ,0BAAA,EAAA2E,GAAAlO,EAAAuJ,0BAAA,EAAAk9D,GAAAzmE,EAAAoqC,0BAAA,GAAAs8B,EAAAC,GAAA3mE,EAAAoqC,0BAAA,GAAAw8B,EAAAC,IA4Bb7mE,CAJE,eAAAiB,EAAAktB,QAAA,KAAAltB,EAAAktB,QAAA0N,OAIF77B,CAH0B,gBAAAiB,EAAA6jE,cAG1B9kE,CAF+B,iBAAA8mE,EAE/B9mE,CADiC,uYAoIhCulE,CAAqB,8KC7KlC,IAAA/jE,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OACAiQ,EAAAjQ,EAAA,OAGAi4D,EAAAj4D,EAAA,OAEAgpE,EAAAhpE,EAAA,qJAegBuK,EADJiF,yBAAA,aACIjF,CAD2C,cACjCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,6BAQIA,EADJiF,yBAAA,UACIjF,CADkD,cAO9CA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACtBnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAMAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,sBAEnBnF,EAFmCkF,wBAEnClF,8CAfQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAzZ,KAAAgT,SAAAnQ,KAAAy0D,SAAA79C,EAAAzZ,KAAAgT,SAAAnQ,KAAA00D,mCAiBJ7/D,EADJiF,yBAAA,UACIjF,CADmD,cAQ/CA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACtBnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAOAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,sBAEnBnF,EAFmCkF,wBAEnClF,2EAjBQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAzZ,KAAAgT,SAAAuX,MAAA+sC,SAAA79C,EAAAzZ,KAAAgT,SAAAuX,MAAAgtC,SAaI7/D,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAAk+D,0BAMR/mE,EADJiF,yBAAA,UACIjF,CADwD,cACrCA,EAAAmF,iBAAA,iBAAWnF,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAQRlB,EADIkF,wBACJlF,0BAEIA,EADJiF,yBAAA,UACIjF,CADsD,qBAElDA,EAAAmF,iBAAA,mCAERnF,EADIkF,wBACJlF,6BA7DJA,EAAAiF,yBAAA,YAyDIjF,EApDA4J,qBAAA,EAAAo9D,EAAA,aAoDAhnE,CApDsD,EAAAinE,EAAA,aAoDtDjnE,CAjCuD,EAAAknE,EAAA,YAiCvDlnE,CAZ4D,EAAAmnE,EAAA,aAiBhEnnE,EAAAkF,iEA3DIlF,EAAA6I,qBAAA,YAAAkZ,EAAAzZ,MAE4BtI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAnQ,MAmBAnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAuX,OAqBA7yB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAA0mB,YAYAhiC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAizC,wEAU5BvuD,EAJJiF,yBAAA,cAIIjF,CADH,eAKOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAA8Y,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA8+C,cAAa,GAEtB7gE,EAAAmF,iBAAA,YAERnF,EADIkF,wBACJlF,6CALQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAAkZ,EAAAzZ,KAAAw4D,8BAOJ9gE,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,oCACPnF,EADqCkF,wBACrClF,6BAGAA,EAAAiF,yBAAA,mBACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAFyClF,EAAA6I,qBAAA,QAAAu+D,GACrCpnE,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+hE,EAAA,MA7FhB7vE,mCAmG6C,eAAA8vE,EAAhCC,EAAgC,WAyBrC,OAAA5vE,EAFJ,SAAA4vE,EACqC/oC,GAAkC5mC,EAAAC,KAAA0vE,GAAlC1vE,KAAA2mC,QAtBpB3mC,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aAEtBhf,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACxBr2B,KAAM,IAAIhK,EAAAsgC,YAAY7pC,KAAKqsE,OAAO94D,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WAC1D9O,MAAO,IAAI1xB,EAAAsgC,YAAY7pC,KAAKqsE,OAAOpxC,OAAS,GAAI,CAAC1xB,EAAAugC,WAAWC,WAC5DK,WAAY,IAAI7gC,EAAAsgC,YAAY7pC,KAAKqsE,OAAOjiC,YACxCusB,SAAU,IAAIptD,EAAAsgC,cAAc7pC,KAAKqsE,OAAO1V,SAAU,MAG/C32D,KAAAsiB,SAAU,CAcd,EAAC,EAAAjhB,IAAA,SAAAiE,eAVA,OAAOtF,KAAK2mC,MAAM0lC,MACtB,GAEA,CAAAhrE,IAAA,QAAAiE,IACA,WACI,OAAOtF,KAAK2mC,MAAMgpC,OAAS,EAC/B,GAAC,CAAAtuE,IAAA,cAAAC,MAMM,WACHtB,KAAKsiB,SAAU,EACf,IAAMstD,EAAU/gD,IAAA,GACT7uB,KAAKqsE,QAAM,IACdh5D,GAAIrT,KAAKqsE,OAAOh5D,IAAE,UAAAtP,UAAc+xD,EAAAp3B,WAAU,YACvC1+B,KAAK0Q,KAAKpP,OAEjBtB,KAAK8tB,MAAM5O,KAAK,CACZoP,OAAQ,OACR+xB,SAAU,CACN5kC,KAAM,IAAIorD,EAAAW,aAAY34C,IAAA,GACf7uB,KAAK2mC,MAAMkpC,QAAM,IACpB7tD,QAAShiB,KAAK2mC,MAAMkpC,OAAO7tD,QACtBxG,OAAO,SAAC4W,GAAC,OAAKA,EAAE/e,KAAOu8D,EAAWv8D,EAAE,GACpCtP,OAAO,CAAC6rE,SAI7B,IAAC,CA7CwC,GA6CxCH,SA7CQC,0CAAgCtnE,EAAAC,4BAwB7ByF,EAAAg5B,iBAAe,kDAxBlB4oC,EAAgC5mE,UAAA,4BAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,GAAAC,KAAA,EAAAkE,OAAA,ylCAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA/FjChB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,GAA4CnF,EAAAkF,yBAChDlF,EAAA4J,qBAAA,EAAA89D,EAAA,gBAGJ1nE,EAAAkF,yBA6EAlF,EA5EA4J,qBAAA,EAAA+9D,EAAA,aA4EA3nE,CAxEC,EAAA4nE,EAAA,eAwED5nE,CAVC,EAAA6nE,EAAA,yBAAA7nE,EAAA2c,kCAgBD3c,EAAAiF,yBAAA,6BACIjF,EAAA4J,qBAAA,GAAAk+D,EAAA,oBAGJ9nE,EAAAkF,gEA3FQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAApE,EAAAgjE,OAAAh5D,GAAA,6BAC2BjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAM9Bla,EAAAoF,sBAAwBpF,EAAxB6I,qBAAA,OAAA5H,EAAAqH,OAAArH,EAAAiZ,QAAwBla,CAAA,WAAA+kB,GA8DxB/kB,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAmB8Bla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAsmE,yWAO9BD,CAAgC,oJCjH7C7xE,EAAA,4GAyCwBuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,2EADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAw9C,EAAA13C,KAAA,+BALRnL,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAm+D,EAAA,0EAEK/nE,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAg6C,iEApCrB7iD,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,WAIJlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADmB,cASfA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA8+D,SAAQ,GAEjBhoE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAElBnF,EAFuDkF,wBAEvDlF,KAKQA,EAJRiF,yBAAA,UAIQjF,CAFP,UAEOA,CADU,WAINA,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YAAoBjF,EAAAmF,iBAAA,IAAgBnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,GAAAq+D,EAAA,uBASRjoE,EADIkF,wBACJlF,iFA7BQA,EAAAoF,oBAAA,GAEApF,EAFAiX,sBAAA,aAAA/N,EAAA6wB,OAEA/5B,CAF2B,aAAAkJ,EAAA6wB,OAE3B/5B,CAD2B,eAAAkJ,EAAA6wB,QAIjB/5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA6wB,OAAA,sBAUN/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAmK,KAAA,KAAAnK,EAAAmK,KAAA+lB,UAAA,MAAAlwB,EAAAmK,KAAA,KAAAnK,EAAAmK,KAAAkgB,WAAA,WAGYvzB,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA7C,EAAAmK,KAAA,KAAAnK,EAAAmK,KAAAlI,MAEcnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAmK,KAAA4T,cAtClD,IAAMihD,EAAe,IAAIC,IAEzB5wE,6BAwDuC,eAAA6wE,EAA1BC,EAA0B,WAuBtC,OAAA3wE,EA/ED,SAAA2wE,IAAA1wE,EAAAC,KAAAywE,GA4DWzwE,KAAAmiC,QAAS,GAmBnB,EAAA9gC,IAAA,WAAAiE,IAjBG,WAAmB,IAAAorE,EACf,SAAA3sE,OAAU/D,KAAK2wE,SAAQ,KAAA5sE,OAAa,QAAb2sE,EAAI1wE,KAAKyb,YAAI,IAAAi1D,OAAA,EAATA,EAAWr9D,GAC1C,GAAC,CAAAhS,IAAA,WAAAC,MAEM,WACHtB,KAAKmiC,OAASmuC,EAAazjC,IAAI7sC,KAAK4wE,SACxC,GAAC,CAAAvvE,IAAA,SAAAC,MAEM,WACCgvE,EAAazjC,IAAI7sC,KAAK4wE,WACtBN,EAAYrjC,OAAQjtC,KAAK4wE,UACzB5wE,KAAKmiC,QAAS,IAEdmuC,EAAa3rB,IAAI3kD,KAAK4wE,UACtB5wE,KAAKmiC,QAAS,EAEtB,IAAC,CAtBkC,GAsBlCquC,SAtBQC,yCAA0B,kDAA1BA,EAA0B3nE,UAAA,gCAAAqW,OAAA,CAAAwxD,SAAA,WAAAl1D,KAAA,QAAAiD,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,0yBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GArD/BhB,EAAA4J,qBAAA,EAAA6+D,EAAA,6BAAezoE,EAAA6I,qBAAA,OAAA5H,EAAAoS,kPAqDVg1D,CAA0B,+NC3DvC5yE,EAAA,WACAyC,EAAAzC,EAAA,OACAizE,EAAAjzE,EAAA,iwBAsEwBuK,EAJRiF,yBAAA,WAIQjF,CAJS,WAITA,CADH,cACaA,EAAAmF,iBAAA,kBAElBnF,EAF8BkF,wBAE9BlF,+BAIIA,EADJiF,yBAAA,WACIjF,CADa,SACRA,EAAAmF,iBAAA,gCAAyCnF,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,uHAMRnF,EADIkF,wBACJlF,4DARSA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,cAAArF,EAAAiM,sBAAA,IAAA08D,EAAAhlD,EAAA4C,aAAA,IAEDvmB,EAAAoF,oBAAA,GAAApF,EAAAiS,6BAAA,IAAAjS,EAAAiM,sBAAA,UAAAo4D,GAAA,MAAAA,EAAA3+C,MAAA,KAAA2+C,EAAA3+C,MAAAjc,KAAA,cAAAzJ,EAAAiM,sBAAA,WAAAo4D,GAAA,MAAAA,EAAA3+C,MAAA,KAAA2+C,EAAA3+C,MAAAjc,KAAAka,EAAA4C,aAAA,MAAAvmB,EAAAiM,sBAAA,WAAAo4D,GAAA,MAAAA,EAAA3+C,MAAA,KAAA2+C,EAAA3+C,MAAA2C,SAAA,cAAAroB,EAAAiM,sBAAA,WAAAo4D,GAAA,MAAAA,EAAA3+C,MAAA,KAAA2+C,EAAA3+C,MAAA2C,SAAA1E,EAAA4C,aAAA,4BAWJvmB,EAAAiF,yBAAA,aAMIjF,EAAAmF,iBAAA,mBACJnF,EAAAkF,mDATJlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GACAnF,EAAA4J,qBAAA,EAAAg/D,EAAA,eAQJ5oE,EAAAkF,4CATIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAAo/D,GAAA,MAAAA,EAAA1wD,MAAA,KAAA0wD,EAAA1wD,MAAA1G,gBAAA,MAAAo3D,GAAA,MAAAA,EAAA1wD,MAAA,KAAA0wD,EAAA1wD,MAAA5I,OAAA,QAGKnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA47D,GAAA,MAAAA,EAAA1wD,OAAA0wD,EAAA1wD,MAAA1G,cAAA,MAAAo3D,GAAA,MAAAA,EAAA1wD,OAAA0wD,EAAA1wD,MAAA5I,8BAYDnL,EAAAiF,yBAAA,aAIIjF,EAAAmF,iBAAA,oBACJnF,EAAAkF,mDAPJlF,EADJiF,yBAAA,WACIjF,CADmB,SAEfA,EAAAmF,iBAAA,GACAnF,EAAA4J,qBAAA,EAAAi/D,EAAA,eAMJ7oE,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,sBAXQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAyjE,GAAA,MAAAA,EAAAn5D,UAAA,KAAAm5D,EAAAn5D,UAAAxE,QAAA,MAAA29D,EAAA,KAAAA,EAAAz8D,OAAA,QAGKrM,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAigE,GAAA,MAAAA,EAAAn5D,WAAAm5D,EAAAn5D,UAAAxE,MAAA,MAAA29D,KAAAz8D,OAMLrM,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAyjE,GAAA,MAAAA,EAAAn5D,UAAA,KAAAm5D,EAAAn5D,UAAArR,SAAA,MAAAwqE,EAAA,KAAAA,EAAAz8D,MAAA,mEAoBJrM,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,uBAAAmgE,EAAA/oE,EAAAgJ,wBAAA+E,GAAAoH,UAAA6zD,EAAAhpE,EAAAmJ,0BAAAm7D,IAAA3gD,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAslD,aAAAD,EAAAD,EAAA99D,IAA4B,GAErCjL,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,YAIAlB,EAAAiF,yBAAA,aAAwBjF,EAAAmF,iBAAA,GAEhCnF,EAFiDkF,wBAEjDlF,+BAJYA,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,mBAAA6X,EAAAG,QAEoBlpE,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAg9D,EAAA59D,gCAlB5BnL,EARRiF,yBAAA,WAQQjF,CARe,cAQfA,CADH,YAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,iBAAuBjF,EAAAmF,iBAAA,qBAE/BnF,EAF8CkF,wBAE9ClF,KACAA,EAAAiF,yBAAA,qBACIjF,EAAA4J,qBAAA,EAAAu/D,EAAA,iBAcJnpE,EAAAkF,2GAxBQlF,EAAAoF,sBAAApF,EAAAkxD,sBAAA,oBAAAkY,EAAAzlD,EAAA2V,OAAA+vC,IAAA,KAAAD,EAAAF,QACAlpE,EAAA6I,qBAAA,oBAAAygE,GAGItpE,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAsjD,EAAAhlC,EAAA2V,OAAA+vC,IAAA,KAAA1gB,EAAAx9C,KAAA,KAQenL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA8a,EAAA4lD,oCAgCfvpE,EAHJiF,yBAAA,WAGIjF,CADH,YACqBA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBACvBlF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,+CAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAmkE,EAAA/vC,MAAA,mEARRz5B,EAXRiF,yBAAA,WAWQjF,CAX6C,cAW7CA,CADH,cACaA,EAAAmF,iBAAA,iBACdnF,EADyBkF,wBACzBlF,GACAA,EAAA4J,qBAAA,EAAA6/D,EAAA,yBAAAzpE,EAAA2c,kCAUA3c,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,uBAAA4gE,EAAAxpE,EAAAgJ,wBAAAylC,GAAA61B,IAAA3gD,GAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,GAAAmhD,cAAA0E,EAAAv+D,KAAA0Y,GAAAmhD,cAAA0E,EAAAv+D,IAAA,GAEAjL,EAAAiF,yBAAA,cACIjF,EAAAmF,iBAAA,GAOZnF,EAFQkF,wBAERlF,oFA/BQA,EAAAoF,sBAIApF,EAJA6I,qBAAA,WAIA7I,CAJc,UAAA0pE,EAId1pE,CAD0B,YAAAwpE,EAAA/vC,OAqBtBz5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAmhD,cAAA0E,EAAAv+D,IAAA,oEAcRjL,EAAAkB,oBAAA,qEAKIlB,EADA6I,qBAAA,iBAAA8gE,EAAA,KAAAA,EAAA1+D,GACAjL,CADoB,OAAA4pE,6BAR5B5pE,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAigE,EAAA,aAOJ7pE,EAAAkF,qEAJyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA8gE,EAAAx1C,gCAPzBn0B,EAAA4J,qBAAA,EAAAkgE,EAAA,8BACK9pE,EAAA6I,qBAAA,aAAA8gE,EAAA,KAAAA,EAAAx1C,MAAAv3B,SA1LrBrF,6BAmNwC,eAAAwyE,EAA3BC,EAA2B,SAAAxxE,GAsBpC,SAAAwxE,EACYvE,EACAhtE,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAoyE,IAElCnxE,EAAAC,EAAAlB,KAAAoyE,IAHQvE,UACA5sE,EAAAJ,YAtBII,EAAAw8B,WAAax8B,EAAK4sE,QAAQz+B,SAE1BnuC,EAAAqhB,QAAUrhB,EAAK4sE,QAAQvrD,QAEvBrhB,EAAA0wE,SAAWb,EAAAuB,kBACXpxE,EAAAisE,cAAyC,GAEzCjsE,EAAAowE,aAAY,eAAAprE,EAAAzE,EAAAC,IAAAC,KAAG,SAAAC,GAAO67B,GAAOlV,IAAC,OAAA7mB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACpClB,EAAK4sE,QAAQwD,aAAa7zC,GAAOlV,IAAE,OACzCrnB,EAAKuC,QAAQ,gBAAiB,kBAAQg6B,GAAckE,OAASpZ,EAAC,GAAG,wBAAArmB,GAAAwC,OAAA,EAAA9C,GAAA,IACpE,gBAAAgb,GAAA2c,IAAA,OAAArzB,EAAAtB,MAAA3E,KAAA4E,UAAA,EAH2B,GAG1B3D,CAeF,CAACG,SAAAgxE,EAAAxxE,GAAAd,EAAAsyE,EAAA,EAAA/wE,IAAA,cAAAiE,IAbD,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,SAAAC,MAEM,SAAOA,GACV,OAAOwvE,EAAAuB,kBAAkBnjD,KAAK,SAACkD,GAAC,OAAKA,EAAE/e,KAAO/R,CAAK,EACvD,GAAC,CAAAD,IAAA,WAAAC,MASM,WACHtB,KAAK6tE,QAAQhhD,cACjB,GAAC,CAAAxrB,IAAA,cAAAC,MAEM,WACHtB,KAAK6tE,QAAQp0C,aACjB,GAEA,CAAAp4B,IAAA,YAAAC,MACO,SAAUyoE,EAAevsC,GAC5B,OAAOA,EAAQA,EAAMnqB,QAAKpO,CAC9B,IAAC,CAxCmC,CAAQ3E,EAAA6H,cAAYgqE,SAA/CC,0CAA0BhqE,EAAAC,4BAAAC,EAAA+lE,uBAAAjmE,EAAAC,4BAAAG,EAAAD,iBAAA,kDAA1B6pE,EAA0BtpE,UAAA,0BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,8qDAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhN/BhB,EAAAiF,yBAAA,WAMIjF,EAAAkB,oBAAA,qBA+KAlB,EAzHA4J,qBAAA,EAAAsgE,EAAA,yBAAAlqE,EAAA2c,iCAyHA3c,CAzH6C,EAAAmqE,EAAA,2BAAAnqE,EAAA2c,iCAyH7C3c,CAhH0D,EAAAoqE,EAAA,yBAAApqE,EAAA2c,iCAgH1D3c,CApGgD,EAAAqqE,EAAA,yBAAArqE,EAAA2c,iCAoGhD3c,CAvF4C,GAAAsqE,EAAA,yBAAAtqE,EAAA2c,iCAuF5C3c,CAvE4D,GAAAuqE,EAAA,yBAAAvqE,EAAA2c,iCAuE5D3c,CAvC6C,GAAAwqE,EAAA,yBAAAxqE,EAAA2c,kCAqDjD3c,EAAAkF,qPA3LQlF,EAAAoF,sBAgDApF,EAhDA6I,qBAAA,OAAA5H,EAAAo0B,WAgDAr1B,CAhDmB,UAAAA,EAAAyqE,0BAAA,GAAAC,EAAA1qE,EAAAoqC,0BAAA,EAAA5gC,EAAAmhE,GAAA3qE,EAAAoqC,0BAAA,EAAAl8B,EAAA08D,GAAA5qE,EAAAoqC,0BAAA,EAAAq8B,EAAAoE,GAAA7qE,EAAAoqC,0BAAA,GAAAs8B,EAAAoE,IAAA9qE,EAAAuJ,0BAAA,GAAAq9D,GAAA5mE,EAAAuJ,0BAAA,GAAAg9D,GAAAvmE,EAAAoqC,0BAAA,GAAA2gC,EAAAC,IAAAhrE,EAAAoqC,0BAAA,GAAA6gC,EAAAC,KAgDnBlrE,CAHE,cAGFA,CAFiB,gBAAAiB,EAAA6jE,cAEjB9kE,CAD+B,iBAAAmrE,kXAyJlCnB,CAA2B,yRC1NxC,IAAAxoE,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OAGAyC,EAAAzC,EAAA,OAEAgpE,EAAAhpE,EAAA,OACAktE,EAAAltE,EAAA,OAGA21E,GADA31E,EAAA,MACAA,EAAA,4KAmCwCuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,yBACJnF,EAAAkF,uFAUJlF,EAAAiF,yBAAA,kBAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAA0hE,GAAArrE,EAAAmJ,0BAAAgM,UAAAwO,GAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE5Bua,GAAA2nD,mBAAAD,GAAAtiE,GACV,GACmC/I,EAAAkF,6EALGlF,EAAA6I,qBAAA,UAAAwiE,EAAA93C,wEAsBQvzB,EAhBZiF,yBAAA,WAgBYjF,CAbX,WAaWA,CANP,cAMOA,CADH,cACaA,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,KACAA,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAA2oD,EAAArrE,EAAAmJ,0BAAAgM,UAAAwO,GAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,GAAAiiD,QAAAyF,GAAa,GAEtBrrE,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,SAElBnF,EAFqBkF,wBAErBlF,yDA1BQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAwiE,EAAA93C,SAAA,sEASIvzB,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAQJ7I,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAgmE,EAAA93C,SAAA,+BAhDJvzB,EANRiF,yBAAA,WAMQjF,CAFP,WAEOA,CADsB,YAElBA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA2hE,EAAA,cAMJvrE,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,oCAIJnF,EAAAkF,yBASAlF,EARA4J,qBAAA,EAAA4hE,EAAA,mBAQAxrE,CADC,EAAAyrE,EAAA,eAiCLzrE,EAAAkF,gFAzDYlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAgmE,EAAAlgE,KAAA,KAICnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAwiE,EAAAzxD,QAAAhd,QAQLoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAo/D,EAAArpC,WAAA,IAAAre,EAAA+nD,MAAA,KAWC1rE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAwiE,EAAAzxD,QAAAhd,QAIAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAwiE,EAAAzxD,QAAAhd,kCAnCboD,EAJJiF,yBAAA,cAIIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAA+hE,EAAA,eAkER3rE,EADIkF,wBACJlF,oFArEIA,EAAA6I,qBAAA,QAAA+iE,GAMyB5rE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAAA8a,EAAAkoD,YAAA7rE,EAAAuJ,0BAAA,EAAAC,IAAAoiE,8BATjC5rE,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAkiE,EAAA,4GACK9rE,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA8a,EAAAkoD,YAAA7rE,EAAAuJ,0BAAA,EAAAC,IAAAoiE,GAAAhvE,kCAJjBoD,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,mBACIjF,EAAA4J,qBAAA,EAAAmiE,EAAA,sBA0EJ/rE,EAAAkF,sGA1EkClF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA8a,EAAAsY,sCAH1Cj8B,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAoiE,EAAA,sBA8EJhsE,EAAAkF,8FA9EmBlF,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,QAAA8a,EAAAsoD,mBAA2BjsE,CAAA,WAAAksE,iEAmF1ClsE,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,cACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAQIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAy9C,GAAA,IAAA9iC,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAua,EAAAsoD,oBAA8B,EAAI,GAElCjsE,EAAAmF,iBAAA,eACJnF,EAAAkF,wGAPIlF,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,YAAA8a,EAAAyR,MAAAiC,WAEAr3B,CAF8B,WAAA2jB,EAAAyR,MAAAiC,WAE9Br3B,CAD6B,kBAAA2jB,EAAAyR,MAAAiC,0EASjCr3B,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA/xC,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAua,EAAAsoD,oBAA8B,EAAK,GAEnCjsE,EAAAmF,iBAAA,YACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAA2BjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA/xC,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAwoD,YAAW,GAC3CnsE,EAAAmF,iBAAA,kBACJnF,EAAAkF,mDA/BRlF,EAAAiF,yBAAA,eAqBIjF,EAjBA4J,qBAAA,EAAAwiE,EAAA,qBAiBApsE,CAjB8D,EAAAqsE,EAAA,yBAAArsE,EAAA2c,kCA6BlE3c,EAAAkF,8FA7BmBlF,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,QAAA8a,EAAAsoD,mBAA2BjsE,CAAA,WAAAssE,6BA+B1CtsE,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GACPnF,EADoBkF,wBACpBlF,2CADOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAzJ,mCAeKla,EAAAiF,yBAAA,YAKIjF,EAAAmF,iBAAA,GAIJnF,EAAAkF,0GANIlF,EAAA6I,qBAAA,aAAA8a,EAAA4oD,WAAAC,IAEAxsE,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAs1D,EAAA5yD,QAAAhd,OAAA,cAAA4vE,EAAA5yD,QAAAhd,OAAA,mFANJoD,EANRiF,yBAAA,WAMQjF,CAFP,WAEOA,CADsB,YACIA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACzClF,EAAA4J,qBAAA,EAAA6iE,EAAA,cAUJzsE,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,oCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBAEIjF,EAAA4I,qBAAA,yBAAAG,IAAA,IAAAyjE,GAAAxsE,EAAAgJ,wBAAAulC,GAAAp5B,UAAAwO,GAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBua,GAAA2nD,mBAAAkB,GAAAzjE,IAAgC,GAEzD/I,EADKkF,wBACLlF,4DArBkCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAygE,EAAArhE,MAGrBnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA2jE,EAAA5yD,QAAAhd,QAYLoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAugE,EAAAjK,WAAA,IAAA5+C,EAAA+nD,MAAA,KAGA1rE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA2jE,EAAAj5C,oCA3BRvzB,EADJiF,yBAAA,cACIjF,CADwB,QACpBA,EAAAmF,iBAAA,mBACRnF,EADqBkF,wBACrBlF,GACAA,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAA8iE,EAAA,cA4BJ1sE,EAAAkF,iEAzByBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA8a,EAAAyR,MAAAjB,QAnIrC58B,8BAqMI,eAAAo1E,EADSC,EACT,SAAAp0E,GAwBA,SAAAo0E,EACYl0E,EACyB6lC,GAA6B,IAAA1lC,GAAAlB,SAAAC,KAAAg1E,IAE9D/zE,GAAAC,EAAAlB,KAAAg1E,IAHQl0E,OACyBG,GAAA0lC,QAtBpB1lC,GAAA6sB,MAAQ,IAAIlkB,EAAAoV,aAEtB/d,GAAAqhB,QAAU,GAUVrhB,GAAAgzE,WAAsC,GAEtChzE,GAAAojC,WAAuB,GAW1BpjC,GAAKqhB,QAAU,kBAAkBrhB,EACrC,CAACG,SAAA4zE,EAAAp0E,GAAAd,EAAAk1E,EAAA,EAAA3zE,IAAA,OAAAiE,IAVD,WACI,OAAOtF,KAAKc,KAAK0qE,aACrB,GAAC,CAAAnqE,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAUM,SAAAC,KAAA,IAAAszE,GAAAnwE,GAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAnC,KAAKsiB,QAAU,kBACftiB,KAAKw9B,MAAQ,IAAIutC,EAAAmB,cAAclsE,KAAK2mC,MAAMnJ,OAAOv7B,GAAAE,KAAA,EAC9BnC,KAAK2mC,MAAMuuC,kBACV,QAD2BD,GAC3Cj1E,KAAKw9B,MAAM1P,aAAK,IAAAmnD,IAAO,QAAPA,GAAhBA,GAAkB94D,aAAK,IAAA84D,IAAO,QAAPA,GAAvBA,GAAyBz+D,aAAK,IAAAy+D,QAAA,EAA9BA,GAAgCphE,WACnC,OAFD7T,KAAK0nC,MAAKzlC,GAAA4B,KAGV7D,KAAK2mC,MAAMmnC,KAAK/6D,UAAU,SAACC,GACvBlO,GAAKwd,QAAU,kBACf,IAE4BgV,GAFtB+M,KAAa/jC,EAAAqvC,QAAO38B,EAAKsI,IAAI,SAACG,IAAI,OAAKA,GAAKqoB,QAAQ,IACpDxoB,GAAM,GAAG+b,GAAAa,EACGmM,GAAU,QAAA3J,GAAA,WAAE,IAAnBy6C,GAAG79C,GAAAh2B,MACVga,GAAI65D,IAAOniE,EAAKwI,OAAO,SAACC,IACpB,OACIA,GAAKqoB,WAAaqxC,OAClB3B,EAAA4B,uBACI35D,GACA3W,GAAK4iC,MACL5iC,GAAK04B,MAAM1P,MAGvB,EACJ,EAXA,IAAAuJ,GAAA/O,MAAAgP,GAAAD,GAAAc,KAAAC,MAAAsC,IAWC,OAAApR,IAAA+N,GAAAxT,EAAAyF,GAAA,SAAA+N,GAAA8B,GAAA,CACDr0B,GAAKu/B,WAAaA,EAClBv/B,GAAKmvE,WAAa34D,GAClBxW,GAAKuwE,uBACLvwE,GAAKtB,QAAQ,gBAAiB,kBAAOsB,GAAKwd,QAAU,EAAE,EAAG,IAC7D,GAAG,wBAAArgB,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IACN,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAEM,SAAQma,GAAkD,IAAA65D,GAAApvE,GAAAlG,KAA9Bu1E,KAAA3wE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACzB4wE,GAAWx1E,KAAKw9B,MAAMjB,MAAMrN,KAC9B,SAACumD,IAAG,OACAA,GAAIpiE,KAAOoI,EAAKpI,IAChBoiE,GAAIzzD,QAAQhd,SACRywE,GAAIzzD,QAAQqd,OACR,SAACE,EAAGhd,GAAC,OACDgd,GACC9jB,EAAKuG,QAAQkN,KAAK,SAACo9C,IAAG,OAAK/pD,EAAElP,KAAOi5D,GAAIj5D,EAAE,GACrC,EACA,EAAE,EACZ,EACH,GAETkiE,IAA8B,QAAhBD,GAAI75D,EAAKuG,eAAO,IAAAszD,IAAZA,GAActwE,OAChChF,KAAK2mC,MAAM+uC,cAAcj6D,EAAKuG,SAAS2zD,KAAK,SAAC3zD,IACzC,IAAM4zD,EAAW,IAAI/O,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEuG,cAC7C9b,GAAK8nE,QAAQ4H,GAAU,EAC3B,GAEA51E,KAAKw9B,MAAQ,IAAIutC,EAAAmB,cAAar9C,IAAA,GACvB7uB,KAAKw9B,OAAK,GAFVg4C,GAEU,CACbj5C,MAAOv8B,KAAKw9B,MAAMjB,MACb/gB,OACG,SAAC4W,IAAC,QAEMA,GAAE/e,KAAOoI,EAAKpI,IACd+e,GAAEw4C,iBAAmBnvD,EAAKmvD,eAC7B,GAER7mE,OAAO,CACJ,IAAI8iE,EAAAW,aAAY34C,IAAA,GACTpT,GAAI,IACPkgB,SAAU65C,GAAS75C,SAAW,QAM7B,CACbY,MAAOv8B,KAAKw9B,MAAMjB,MAAMx4B,OAAO,CAC3B,IAAI8iE,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEkgB,SAAU,UAIlD37B,KAAKq1E,sBACT,GAAC,CAAAh0E,IAAA,aAAAC,MAEM,SAAWma,GACdzb,KAAKw9B,MAAQ,IAAIutC,EAAAmB,cAAar9C,IAAA,GACvB7uB,KAAKw9B,OAAK,IACbjB,MAAOv8B,KAAKw9B,MAAMjB,MAAM/gB,OACpB,SAACxY,IAAC,OACEA,GAAEqQ,KAAOoI,EAAKpI,IAAMrQ,GAAE4nE,iBAAmBnvD,EAAKmvD,cAAc,MAGxE5qE,KAAKq1E,sBACT,GAAC,CAAAh0E,IAAA,qBAAAC,MAEM,SAAmBma,EAAoB+lB,IAC1C,IAAMg0C,GAAWx1E,KAAKw9B,MAAMjB,MAAMrN,KAC9B,SAACumD,IAAG,OACAA,GAAIpiE,KAAOoI,EAAKpI,IAAMoiE,GAAI7K,iBAAmBnvD,EAAKmvD,cAAc,GAEpEruC,GAAKna,EAAOpiB,KAAKw9B,MAAMjB,QAEvBA,GADAi5C,GACQx1E,KAAKw9B,MAAMjB,MACd/gB,OACG,SAAC4W,IAAC,QAEMA,GAAE/e,KAAOoI,EAAKpI,IACd+e,GAAEw4C,iBAAmBnvD,EAAKmvD,eAC7B,GAER7mE,OAAO,CAAC,IAAI8iE,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEkgB,SAAU6F,QAE3CxhC,KAAKw9B,MAAMjB,MAAMx4B,OAAO,CAC5B,IAAI8iE,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEkgB,SAAU6F,SAGxChlB,KAAK,SAACyW,GAAG3U,IAAC,OAAK2U,GAAE1f,KAAK+0B,cAAchqB,GAAE/K,KAAK,GACjDvT,KAAKw9B,MAAQ,IAAIutC,EAAAmB,cAAar9C,IAAA,GACvB7uB,KAAKw9B,OAAK,IACbjB,YAEJv8B,KAAKq1E,sBACT,GAAC,CAAAh0E,IAAA,uBAAAC,MAEM,WAAoB,IAAAwF,EAAA9G,KACvB,QAAWm1E,MAAOn1E,KAAKi0E,WAAY,KACQx8C,GADRD,GAAAU,EACZl4B,KAAKi0E,WAAWkB,KAAI,QAAA/1C,GAAA,WAAE,IAA9B3jB,EAAIgc,GAAAn2B,MACVma,EAAakgB,SAAW70B,EAAK02B,MAAMjB,MAAM8C,OACtC,SAACE,EAAGnN,IAAC,OAAMA,GAAE/e,KAAOoI,EAAKpI,GAAKksB,EAAInN,GAAEuJ,SAAW4D,CAAC,EAChD,EAER,EALA,IAAA/H,GAAAlP,MAAAmP,GAAAD,GAAAW,KAAAC,MAAAgH,IAKC,OAAA9V,IAAAkO,GAAA3T,EAAAyF,GAAA,SAAAkO,GAAA2B,GAAA,CACL,CACJ,GAAC,CAAA93B,IAAA,aAAAC,MAEM,SAAWma,GACd,OAAOA,EAAKuG,QAAQ1G,IAAI,SAAC8W,IAAC,OAAKA,GAAE7e,IAAI,GAAEsB,KAAK,KAChD,GAAC,CAAAxT,IAAA,YAAAC,MAEM,WACHtB,KAAK8tB,MAAM5O,KAAK,CACZoP,OAAQ,OACR+xB,SAAU,CAAE7iB,MAAOx9B,KAAKw9B,QAEhC,GAAC,CAAAn8B,IAAA,eAAAC,MAEM,WACHtB,KAAKq0E,oBAAqB,CAC9B,KAvJC,IAAA9yE,CAuJA,CA7KD,CAAQjB,EAAA6H,cAAY4sE,SADXC,0CAA2B5sE,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BA2BxByF,EAAAg5B,iBAAe,kDA3BlBkuC,EAA2BlsE,UAAA,+BAAAsW,QAAA,CAAA0O,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,4hDAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,GAzEhChB,EAxHA4J,qBAAA,EAAA6jE,EAAA,YAwHAztE,CAxHkE,EAAA0tE,EAAA,eAwHlE1tE,CArCC,EAAA2tE,EAAA,yBAAA3tE,EAAA2c,iCAqCD3c,CANyB,EAAA4tE,EAAA,yBAAA5tE,EAAA2c,wEAlHwB3c,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA6tE,GAiF5C7tE,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,61BAgHA0yD,CACT,gMC7NJ,IAAAprE,EAAA/L,EAAA,MAOAyC,EAAAzC,EAAA,UACAA,EAAA,iIA+CwBuK,EAAAiF,yBAAA,OACIjF,EAAAmF,iBAAA,oCACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA/C,EAAAmK,KAAA2uB,WAAA,IAAA94B,EAAAwiE,MAAA,+BAaR1rE,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAyoE,EAAA,+BA6CwB9tE,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCAIJnF,EAAAkF,0GAJIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAArF,EAAAiM,sBAAA,IAAA8hE,EAAA/rC,WAAA,IAAA94B,EAAAwiE,MAAA,+BATJ1rE,EARRiF,yBAAA,wBAQQjF,CAJP,WAIOA,CADH,YAIOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAokE,EAAA,cAURhuE,EADIkF,wBACJlF,2BApBIA,EAAA6I,qBAAA,QAAAklE,EAAA9iE,IAQQjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0oE,EAAA5iE,KAAA,KAICnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAklE,EAAA/rC,0EAhCrBhiC,EAAAwY,kCAAA,GAGIxY,EAAAiF,yBAAA,wBAGIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAurD,EAAAjuE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAglE,YAAAD,EAAA9iE,MAAApC,KAAAG,EAAAglE,YAAAD,EAAA9iE,MAAApC,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAurD,EAAAjuE,EAAAmJ,0BAAAgM,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE5BF,EAAAilE,kBAAAF,EAAAllE,GACV,GAG0C/I,EADJiF,yBAAA,wBACIjF,CADmC,aACnCA,EAAAulB,iBAAA,KAGJvlB,EAFakF,wBAEblF,GACAA,EAAA4J,qBAAA,EAAAwkE,EAAA,2BAwBJpuE,EAAAkF,gJAnCIlF,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAglE,YAAAD,EAAA9iE,OAIAnL,EAAA6I,qBAAA,iBAAAK,EAAAmK,KAAA,KAAAnK,EAAAmK,KAAAovD,UASoBziE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,gBAAAolE,EAAA,KAAAA,EAAAr0D,mCAyChB5Z,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCAIJnF,EAAAkF,0GAJIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAArF,EAAAiM,sBAAA,IAAAoiE,EAAArsC,WAAA,IAAA94B,EAAAwiE,MAAA,mEApBZ1rE,EAAAiF,yBAAA,qBAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAslE,EAAAruE,EAAAgJ,wBAAAy9C,GAAAtxC,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAolE,aAAAD,EAAApjE,IAAAlC,KAAAG,EAAAolE,aAAAD,EAAApjE,IAAAlC,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA,IAAAslE,EAAAruE,EAAAgJ,wBAAAy9C,GAAAtxC,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAE9BF,EAAAqlE,mBAAAF,EAAApjE,GAAAlC,GACR,GAK0C/I,EAHJiF,yBAAA,WAGIjF,CADH,YAIOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA4kE,EAAA,cAURxuE,EADIkF,wBACJlF,4DAxBIA,EAAAqV,2BAAA,UAAAnM,EAAAolE,aAAAD,EAAApjE,KAIAjL,EAAA6I,qBAAA,iBAAAK,EAAAmK,KAAA,KAAAnK,EAAAmK,KAAAovD,UAQQziE,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAgpE,EAAAljE,KAAA,KAICnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAwlE,EAAArsC,qCAlBbhiC,EAAA4J,qBAAA,EAAA6kE,EAAA,wEACoBzuE,EAAA6I,qBAAA,gBAAAolE,EAAA,KAAAA,EAAAr0D,mCAjD5B5Z,EALJiF,yBAAA,WAKIjF,CADH,YAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YA4CIjF,EA3CA4J,qBAAA,EAAA8kE,EAAA,qBA2CA1uE,CAzCC,EAAA2uE,EAAA,yBAAA3uE,EAAA2c,kCAuET3c,EADIkF,wBACJlF,gGA5EQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA4oE,EAAA9iE,KAAA,KAIKnL,EAAAoF,oBAAA,GAAuBpF,EAAvB6I,qBAAA,QAAAolE,EAAA1f,SAAuBvuD,CAAA,WAAA4uE,iEArEpD5uE,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eACIjF,EAAAkB,oBAAA,sBAIAlB,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAGrB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2wB,UAAA/iB,OAAgB,GAGzB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAIlBnF,EAFUkF,wBAEVlF,KAIYA,EAHZiF,yBAAA,UAGYjF,CAH0C,gBAG1CA,CAFuD,SAEvDA,CADC,YAEGA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAilE,EAAA,YAGJ7uE,EAAAkF,yBACAlF,EAAAiF,yBAAA,mBACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAmK,KAAAkgB,SAAAxqB,KAAAG,EAAAmK,KAAAkgB,SAAAxqB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,2BAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA6wB,OAC0C7wB,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAElE,GAAE,GAGc/5B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,iBACIjF,EAAA4J,qBAAA,GAAAklE,EAAA,cAMJ9uE,EAAAkF,yBACAlF,EAAAkB,oBAAA,SAEIlB,EADJiF,yBAAA,gBACIjF,CAD+B,aAE3BA,EAAA4J,qBAAA,GAAAmlE,EAAA,cAqFZ/uE,EAFQkF,wBAERlF,KAIIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAOOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAD,SAAA6wB,QAAA7wB,EAAA6wB,OAAA/5B,EAAAoJ,sBAA2BF,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAAyB,GAGhD/5B,EADJiF,yBAAA,YACIjF,CAD0C,kBACfA,EAAAmF,iBAAA,IAEzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,qFAlKQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAAK,EAAAmK,KAAA2O,QAgBAhiB,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,cAAA/N,EAAA+wB,IACAj6B,CADyB,gBAAAkJ,EAAA+wB,KAKfj6B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA+wB,IAAA,8BASFj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAmK,KAAAlI,KAAA,KAEAnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAmK,KAAA2uB,YAKJhiC,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAmK,KAAAkgB,UAKAvzB,EADA6I,qBAAA,QACA7I,CADS,MAAAkJ,EAAAmK,KAAAmpB,OAAA,IAOOx8B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAmK,KAAAuoC,MAUM57C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA4pC,QA2F1B9yC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,UAAA/N,EAAA6wB,QAK+B/5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA6wB,OAAA,gBAIvB/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6wB,OAAA,+DAWZ/5B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,IAlLZzI,+BAkMyC,eAAAy3E,EAA5BC,EAA4B,WAiExC,OAAAv3E,EAnQD,SAAAu3E,IAAAt3E,EAAAC,KAAAq3E,GAoMoBr3E,KAAAmiC,QAAkB,EAClBniC,KAAAqiC,KAAe,EACfriC,KAAA8zE,KAAe,MAEd9zE,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAAoiC,aAAe,IAAIx4B,EAAAoV,aACnBhf,KAAA0H,MAAQ,IAAIkC,EAAAoV,aAEtBhf,KAAA02E,aAAwC,GACxC12E,KAAAs2E,YAAsC,IAsDhD,EAAAj1E,IAAA,cAAAC,MAnDU,SAAY87B,GACXA,EAAQ3hB,MAAQzb,KAAKyb,MACrBzb,KAAKsxB,SAEb,GAAC,CAAAjwB,IAAA,oBAAAC,MAEM,SAAkB25B,EAA4B5nB,GACjD,GAAK4nB,EACL,CAAAj7B,KAAKs2E,YAAYr7C,EAAM1nB,MAAQF,EAAG,IACAikB,EADAD,EAAAa,EACb+C,EAAMjZ,SAAO,IAAlC,IAAAqV,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAoC,KAAzBi0C,EAAM/0C,EAAAh2B,MACb+qE,EAAOlqC,OAASkqC,EAAOh5D,KAAOA,CAClC,CAAC,OAAAiW,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,EACL,GAAC,CAAA93B,IAAA,qBAAAC,MAEM,SAAmB+R,EAAYkqB,GAAc,IAAAmzC,EAC1CrE,EAAkB,QAAZqE,EAAG1wE,KAAKyb,YAAI,IAAAi1D,OAAA,EAATA,EAAW1uD,QAAQkN,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOA,CAAE,GACrDg5D,IAAQA,EAAOlqC,OAAS5E,EAChC,GAAC,CAAAl8B,IAAA,UAAAC,MAEO,WAAO,IAAAL,EAAAjB,KACX,GAAKA,KAAKyb,KACV,CAAKzb,KAAKyb,KAAKkgB,WACV37B,KAAKyb,KAAakgB,SAAW,GAElC37B,KAAK02E,aAAe,GACpB12E,KAAKs2E,YAAc,GACnB,IAE0B7+C,EAFpByjB,KAAS56C,EAAAqvC,QAAO3vC,KAAKyb,KAAKuG,QAAQ1G,IAAI,SAAC8W,GAAC,OAAKA,EAAE6I,OAAS,OAAO,IAC/Dq8C,EAAa,GAAG9/C,EAAAU,EACFgjB,GAAM,QAAA9b,EAAA,WAAE,IAAjBnE,EAAKxD,EAAAn2B,MACN0gB,EAAU/gB,EAAKwa,KAAKuG,QAAQxG,OAAO,SAAC4W,GAAC,OAAKA,EAAE6I,QAAUA,CAAK,GACjEq8C,EAAWr+C,KAAK,CACZ1lB,KAAM0nB,EACN07B,WAAY30C,EAAQkN,KAAK,SAACkD,GAAC,OAAKA,EAAEukC,QAAQ,GAC1C30C,WAER,EAPA,IAAAwV,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAAgH,GAOC,OAAA9V,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CAED,GADAn5B,KAAKk7C,OAASo8B,EACVt3E,KAAKyb,KAAK4T,YAAa,KACgBsP,EADhBO,EAAAhH,EACLl4B,KAAKyb,KAAK4T,aAAW,QAAAqL,EAAA,WAAE,IAA9B4xC,EAAG3tC,EAAAr9B,MACJ+qE,EAASprE,EAAKwa,KAAKuG,QAAQkN,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOi5D,EAAIj5D,EAAE,GACxDg5D,IACAA,EAAOlqC,QAAS,EAChBlhC,EAAKy1E,aAAapK,EAAIj5D,KAAM,EAC5BpS,EAAKs1E,kBACDt1E,EAAKi6C,OAAOhsB,KAAK,SAACqoD,GAAC,OAAKA,EAAEhkE,OAAS84D,EAAOpxC,KAAK,GAC/CoxC,EAAOh5D,IAGnB,EAVA,IAAA6rB,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAAAsC,GAUC,OAAApR,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACL,EACJ,IAAC,CAhEoC,GAgEpCi+C,SAhEQC,yCAA4B,kDAA5BA,EAA4BvuE,UAAA,4BAAAqW,OAAA,CAAA1D,KAAA,OAAA0mB,OAAA,SAAAE,IAAA,MAAAyxC,KAAA,QAAA10D,QAAA,CAAA6iB,UAAA,YAAAG,aAAA,eAAA16B,MAAA,SAAAqB,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,0DA7GQoiB,UAAAC,MAAAC,EAAA,qFA0FMF,UAAAG,MAAAD,EAAA,mhEAL/CtnB,EAvKA4J,qBAAA,EAAAwlE,EAAA,uBAuKApvE,CAvK6C,EAAAqvE,EAAA,yBAAArvE,EAAA2c,wEAAlB3c,EAAZ6I,qBAAA,OAAA5H,EAAAoS,KAAYrT,CAAA,WAAAsvE,uZA+LtBL,CAA4B,0QCnNzC,IAAAztE,EAAA/L,EAAA,MACAuC,EAAAvC,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QACA8yB,EAAA9yB,EAAA,2KAyEQuK,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,mDAmBgBlF,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAA6xB,EAAAzvB,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAyuB,EAAAxhC,MAAA,iFAdhB8G,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,WAAOjF,EAAAmF,iBAAA,mBAAanF,EAAAkF,yBAKhBlF,EAJJiF,yBAAA,sBAIIjF,CADH,mBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAA6sB,WAAAhtB,KAAAG,EAAA6sB,WAAAhtB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,EAAAyxB,iBAAA5gC,KAAAgP,GAA6B,GAE9C/I,EAAA4J,qBAAA,EAAA2lE,EAAA,qBAORvvE,EADIkF,wBACJlF,kFAVQA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAA6sB,YAIoB/1B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA2xB,2EAlBhC76B,EADJiF,yBAAA,WACIjF,CAD4C,qBAExCA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA4xB,QAAA/xB,KAAAG,EAAA4xB,QAAA/xB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA6xB,cAAAhhC,KAAAgP,GAA0B,GAG3C/I,EAAAmF,iBAAA,kBACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA4lE,EAAA,uBAmBAxvE,EAAAiF,yBAAA,WAAOjF,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBACrBlF,EAAAiF,yBAAA,uDACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA2sB,OAAA9sB,KAAAG,EAAA2sB,OAAA9sB,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA+xB,aAAAlhC,KAAAgP,GAAyB,GASlD/I,EADKkF,wBACLlF,+CArCQA,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAA4xB,SAEA96B,EAAA6I,qBAAA,aAAAK,EAAAgyB,eAIWl7B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2xB,YAAAj+B,OAAA,GAqBXoD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAA2sB,QAQA71B,EANA6I,qBAAA,OAAAK,EAAA6sB,WAAA,EAAA7sB,EAAAiyB,cAAA,OAAA5iB,EAAAvY,EAAAwN,sBAAA,IAAAtE,EAAAilB,UAAA,KAAA5V,EAAA9O,KAMAzJ,CAJC,OAAAkJ,EAAAkyB,cAIDp7B,CAHsB,MAAAkJ,EAAAmyB,WAGtBr7B,CAFkB,MAAAkJ,EAAAoyB,WAElBt7B,CADkB,WAAAkJ,EAAAqyB,iCAI1Bv7B,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,uFAMIlF,EAAAiF,yBAAA,mDAIIjF,EAAA4I,qBAAA,+BAAA4yB,EAAAx7B,EAAAgJ,wBAAA2E,GAAAwH,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAuyB,eAAAD,GAAoB,GAErCx7B,EAAAmF,iBAAA,GACJnF,EAAAkF,mFAJIlF,EAAA6I,qBAAA,iBAAA8M,EAAA3V,EAAAwN,sBAAA,IAAAtE,EAAAilB,WAAA,MAAAxY,EAAAsmB,WAAA,KAAAtmB,EAAAsmB,WAAAz+B,SAAAg+B,sCAGAx7B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAm2B,EAAA,MAzHhB,IAAMi0C,EAAQ,CACVC,OAAM,knNAgBNC,OAAM,glEAaNC,OAAM,krLAMNC,MAAK,ioMAcTt4E,+BAoFI,eAAAu4E,EADSC,EACT,SAAAv3E,GA4DA,SAAAu3E,EACY7+D,EACAzY,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAm4E,IAElCl3E,EAAAC,EAAAlB,KAAAm4E,IAHQ7+D,SACArY,EAAAJ,YA3DII,EAAAgjC,QAAS,EAEThjC,EAAAiiC,SAAU,EACTjiC,EAAAkiC,cAAgB,IAAIv5B,EAAAoV,aACrB/d,EAAAg9B,OAAS,EACRh9B,EAAAoiC,aAAe,IAAIz5B,EAAAoV,aACpB/d,EAAAk9B,WAAa,EACZl9B,EAAA8hC,iBAAmB,IAAIn5B,EAAAoV,aAEhC/d,EAAAijC,YAAc,EACdjjC,EAAAkjC,YAAc,GAENljC,EAAAm3E,MAAQP,EAER52E,EAAAs1B,QAAUt1B,EAAKqY,OAAOid,QAEtBt1B,EAAAo3E,WAAa,SAACl/C,GAAC,OAAKl4B,EAAKqY,OAAO++D,WAAWl/C,EAAE,EAE7Cl4B,EAAAojC,WAAapjC,EAAKqY,OAAO+qB,WAEzBpjC,EAAAqiC,cACZ,6HAkCGriC,EAAAgiC,YAAc,GAAGhiC,CAOxB,CAACG,SAAA+2E,EAAAv3E,GAAAd,EAAAq4E,EAAA,EAAA92E,IAAA,gBAAAiE,IAvCD,WACI,SAAOqrB,EAAA6C,eACH7C,EAAAoQ,SAAQ/gC,KAAKsZ,OAAOg/D,aAAazmE,KAAM7R,KAAKm+B,aAC9CzI,SACN,GAAC,CAAAr0B,IAAA,aAAAiE,IAED,WACI,OAAOtF,KAAKm+B,WAAa,EAAI,EAAIn+B,KAAKkkC,WAC1C,GAAC,CAAA7iC,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,+BAAiC,CAC/D,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,IAAMse,EAAMoU,KAAKC,OACbtH,EAAA+C,aACI/C,EAAAoQ,SAAQ/gC,KAAKsZ,OAAOg/D,aAAazmE,KAAM7R,KAAKm+B,aAC9CzI,WAAO,EACT/E,EAAA2H,YACIt4B,KAAKsZ,OAAOg/D,aAAazmE,KACzB7R,KAAKsZ,OAAOg/D,aAAaxmE,UAC3B4jB,WAEAiC,KAAOhH,EAAA+H,qBAAoB9U,EAAK5jB,KAAKsZ,OAAOg/D,aAAazmE,MAC/D,OAAOmmB,KAAKC,IAAIN,EAAMK,KAAKC,IAAI,KAAaj4B,KAAKmkC,aACrD,GAAC,CAAA9iC,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,WAAAC,MAWM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAKkkC,YAAclM,KAAK8F,IACpB99B,KAAKa,UAAUyE,IAAI,2BACnB,GAEJtF,KAAK6S,aACD,UACA7S,KAAKsZ,OAAOid,QAAQxjB,UAAU,WAC1BjO,EAAKq/B,YAAcnM,KAAK8F,IACpB,IACCh5B,EAAKwU,OAAOg/D,aAAaxmE,UAAY,IAClChN,EAAKjE,UAAUyE,IAAI,4BAE3BR,EAAK2/B,mBACT,IAEJzkC,KAAKykC,mBACT,GAAC,CAAApjC,IAAA,iBAAAC,OAAAi3E,EAAA/2E,EAAAC,IAAAC,KAEM,SAAAC,EAAqB4R,GAAY,IAAA8wB,EAAA,OAAA5iC,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACPnC,KAAKu2B,QAAQzzB,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,QAA3DohC,EAA2DpiC,EAAA4B,KAA3DwgC,YACOz+B,SAAS2N,GACpBvT,KAAKq4E,WAAW,CACZh0C,WAAYA,EAAW7oB,OAAO,SAACxY,GAAC,OAAKA,IAAMuQ,CAAI,KAElDvT,KAAKq4E,WAAW,CAAEh0C,WAAU,GAAAtgC,OAAAqe,EAAMiiB,GAAU,CAAE9wB,MAAS,wBAAAtR,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC/D,SAAA6jC,EAAAlnB,GAAA,OAAA47D,EAAA5zE,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,YAAAC,MAAA,eAAAk3E,EAAAh3E,EAAAC,IAAAC,KAEM,SAAAwD,EAAgBykE,GAAW,IAAA3lB,EAAA,OAAAviD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACPnC,KAAKu2B,QAAQzzB,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,QAArD+gD,EAAqD5+C,EAAAvB,KAArDmgD,MACCp+C,SAAS+jE,GACd3pE,KAAKq4E,WAAW,CAAEr0B,KAAMA,EAAKxoC,OAAO,SAACxY,GAAC,OAAKA,IAAM2mE,CAAG,KACnD3pE,KAAKq4E,WAAW,CAAEr0B,KAAI,GAAAjgD,OAAAqe,EAAM4hC,GAAI,CAAE2lB,MAAQ,wBAAAvkE,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAClD,gBAAAy4E,EAAAn/C,GAAA,OAAAk/C,EAAA7zE,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,oBAAAC,MAEO,WACJ,IAAAo3E,EAA2B14E,KAAKsZ,OAAOg/D,aAA/BzmE,EAAI6mE,EAAJ7mE,KAAMC,EAAQ4mE,EAAR5mE,SACd,GAAIA,GAAY,KAAS,OAAQ9R,KAAKijC,YAAc,GAKpD,QAJI0B,KAAMhU,EAAA6C,YAAW3hB,GACjB+yB,EAAQ,EACNhhB,KAAM+M,EAAA+C,aAAS/C,EAAA2H,YAAWzmB,EAAMC,IAAW4jB,UAC3C1T,EAAU,GACT2iB,EAAIjP,WAAa9R,GACpB5B,EAAQiX,KAAK,CAAE5lB,GAAIuxB,EAAOtjC,MAAOqjC,EAAIjP,YACrCiP,KAAMhU,EAAAoQ,SAAQ4D,EAAK,GACnBC,IAEJ5kC,KAAKijC,YAAcjhB,CACvB,KA/BC,IAAAu2D,CA+BA,CAnHD,CAAQj4E,EAAA6H,cAAY+vE,SADXC,0CAA4B/vE,EAAAC,4BAAAC,EAAAqwE,2BAAAvwE,EAAAC,4BAAAG,EAAAD,iBAAA,kDAA5B4vE,EAA4BrvE,UAAA,4BAAAqW,OAAA,CAAA8kB,OAAA,SAAAf,QAAA,UAAAjF,OAAA,SAAAE,WAAA,cAAA/e,QAAA,CAAA+jB,cAAA,gBAAAE,aAAA,eAAAN,iBAAA,oBAAAh6B,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBArEsCoiB,UAAAC,MAAAC,EAAA,yFA2CAF,UAAAG,MAAAD,EAAA,06BApD/DtnB,EAFRiF,yBAAA,UAEQjF,CAFgD,qBAEhDA,CADqD,gBACjBA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAC1ClF,EAAAiF,yBAAA,2CAGIjF,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAgvE,WAAW,CAAAp0C,OAAA9yB,GAAmB,GAI3D/I,EAPQkF,wBAORlF,KA4CAA,EA3CA4J,qBAAA,EAAA4mE,EAAA,WA2CAxwE,CA3CuE,EAAAywE,EAAA,aA2CvEzwE,CAxCgD,EAAA0wE,EAAA,YA2ChD1wE,EAAAiF,yBAAA,WAKIjF,EAAA4J,qBAAA,GAAA+mE,EAAA,sDAQJ3wE,EAAAkF,gCAtE4BlF,EAAAiX,sBAAA,aAAAhW,EAAA46B,QAKhB77B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,iBAAA89C,EAAA3mD,EAAAwN,sBAAA,KAAAvM,EAAAktB,UAAA,KAAAw4B,EAAA9qB,QAMuC77B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAGlB77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAwCkB77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAA46B,QAK/C77B,EAAAoF,sBACApF,EADAiX,sBAAA,YAAAhW,EAAA46B,OACA77B,CAD0B,WAAAiB,EAAA46B,QAIL77B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAg7B,kYAiBpB8zC,CACT,wJCnJJ,IAAAvuE,EAAA/L,EAAA,SACAA,EAAA,qFAmBoBuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAAmK,KAAAkgB,UAAA,kCAEJvzB,EAAAkB,oBAAA,mDAIIlB,EAAA6I,qBAAA,SAAAK,EAAAmK,KAAA2O,OAAA,0BAGAhiB,EAAAkB,oBAAA,qCAcAlB,EAAAiF,yBAAA,UAIIjF,EAAAmF,iBAAA,oCACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA/C,EAAAmK,KAAA2uB,WAAA,IAAA94B,EAAAwiE,MAAA,+BAEJ1rE,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA0Q,QAAA,4BAEJ5Z,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,UACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,UACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,SACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,SACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,SACJnF,EAAAkF,0BArFxB3N,gCAyG0C,eAAAq5E,EAA7BC,EAA6B,WAYzC,OAAAn5E,EArHD,SAAAm5E,IAAAl5E,EAAAC,KAAAi5E,GA2GoBj5E,KAAAmiC,QAAS,EACTniC,KAAA8e,UAAW,EACX9e,KAAAk5E,WAAY,EACZl5E,KAAA8zE,KAAe,MACd9zE,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAAm5E,OAAS,IAAIvvE,EAAAoV,cAKjC,EAAA3d,IAAA,UAAAiE,IAHG,WAAkB,IAAA8zE,EACd,OAA4B,QAA5BA,EAAOp5E,KAAKyb,KAAK4T,mBAAW,IAAA+pD,OAAA,EAArBA,EAAuB99D,IAAI,SAACtY,GAAC,OAAKA,EAAEuQ,IAAI,GAAEsB,KAAK,KAC1D,IAAC,CAXqC,GAWrCmkE,SAXQC,yCAA6B,kDAA7BA,EAA6BnwE,UAAA,8BAAAqW,OAAA,CAAA1D,KAAA,OAAA0mB,OAAA,SAAArjB,SAAA,WAAAo6D,UAAA,YAAApF,KAAA,QAAA10D,QAAA,CAAA6iB,UAAA,YAAAk3C,OAAA,UAAAlwE,MAAA,GAAAC,KAAA,GAAAkE,OAAA,grEAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCAhG9BhB,EANJiF,yBAAA,SAMIjF,CADH,cAIOA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA8vE,OAAAj6D,OAAa,GAEtB9W,EAAAiF,yBAAA,WAeIjF,EAZA4J,qBAAA,EAAAqnE,EAAA,YAYAjxE,CATC,EAAAkxE,EAAA,YASDlxE,CADE,EAAAmxE,EAAA,yBAAAnxE,EAAA2c,kCAON3c,EAAAkF,yBAGQlF,EAFRiF,yBAAA,UAEQjF,CAFgC,UAEhCA,CADyC,SACpCA,EAAAmF,iBAAA,IAAyBnF,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YAqCIjF,EApCA4J,qBAAA,GAAAwnE,EAAA,WAoCApxE,CAjCC,GAAAqxE,EAAA,aAiCDrxE,CA3BC,GAAAsxE,EAAA,aA2BDtxE,CArBC,GAAAuxE,EAAA,aAqBDvxE,CAfC,GAAAwxE,EAAA,aAeDxxE,CATC,GAAAyxE,EAAA,aASDzxE,CAHC,GAAA0xE,EAAA,cAWb1xE,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA44B,UAAA/iB,OAAgB,GAEzB9W,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAIlBnF,EAFUkF,wBAEVlF,8CAhGIA,EAAAiX,sBAAA,mBAAAhW,EAAA84B,QAca/5B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAoS,KAAAkgB,UAAAtyB,EAAAyV,UAMA1W,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,aAAA5H,EAAAoS,KAAA2O,OAAA,KAAA/gB,EAAAoS,KAAA2O,OAAAplB,OAA2BoD,CAAA,WAAA2xE,GAavB3xE,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAoS,KAAAlI,MAAA,QAEDnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAoS,KAAAqoB,SAAA,KAMC17B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAoS,KAAA2uB,YAMAhiC,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAA4T,YAAA,KAAAhmB,EAAAoS,KAAA4T,YAAArqB,QAMAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAAuoC,KAAA,KAAA36C,EAAAoS,KAAAuoC,KAAAp+C,SAAA,gBAMAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAAuoC,KAAA,KAAA36C,EAAAoS,KAAAuoC,KAAAp+C,SAAA,UAMAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAAuoC,KAAA,KAAA36C,EAAAoS,KAAAuoC,KAAAp+C,SAAA,eAMAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAAuoC,KAAA,KAAA36C,EAAAoS,KAAAuoC,KAAAp+C,SAAA,mBAMAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAoS,KAAAuoC,KAAA,KAAA36C,EAAAoS,KAAAuoC,KAAAp+C,SAAA,kBAYbwC,EAAAoF,sBAAApF,EAAAiX,sBAAA,gBAAAhW,EAAA6vE,WAGU9wE,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA6vE,UAAA,iIAQbD,CAA6B,oJC5G1C,IAAArvE,EAAA/L,EAAA,MAOAub,EAAAvb,EAAA,UAEAA,EAAA,yHAaoBuK,EAAAiF,yBAAA,+BAQIjF,EADA4I,qBAAA,2BAAAyiE,EAAArrE,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAaua,EAAAkW,UAAA/iB,KAAAu0D,EAAApgE,IAAuB,EACpCjL,CADqC,wBAAAqrE,EAAArrE,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAC3Bua,EAAAiuD,WAAAvG,GAAiB,GAAK,GACnCrrE,EAAAkF,kFAHGlF,EAHA6I,qBAAA,OAAAwiE,EAGArrE,CAHa,SAAA2jB,EAAAoW,SAAAsxC,EAAAtH,UAGb/jE,CAFoC,cAEpCA,CADiB,YAAA2jB,EAAAwZ,YAAAkuC,EAAApgE,+BAZ7BjL,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,UAA2BjF,EAAAmF,iBAAA,mBAAanF,EAAAkF,yBACxClF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,iCACJnF,EAAAkF,yBAEAlF,EAAAiF,yBAAA,UACIjF,EAAA4J,qBAAA,EAAAioE,EAAA,+DAUJ7xE,EAAAkF,uGAdIlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAuQ,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAA/Y,OAAA,KAAAgL,EAAAhZ,SAAA,gBAMqBoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAA/Y,qEAmBrB5K,EAAAiF,yBAAA,gCASIjF,EADA4I,qBAAA,2BAAAwqB,EAAApzB,EAAAgJ,wBAAA0Z,GAAAvN,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAaua,EAAAkW,UAAAzG,EAAAnoB,IAAkB,EAC/BjL,CADgC,wBAAAozB,EAAApzB,EAAAgJ,wBAAA0Z,GAAAvN,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBACtBua,EAAAiuD,WAAAx+C,GAAiB,GAAK,GACnCpzB,EAAAkF,kFAHGlF,EAJA6I,qBAAA,OAAAuqB,EAIApzB,CAJa,SAAA2jB,EAAAoW,SAAA3G,EAAA2wC,UAIb/jE,CAHoC,WAAA2jB,EAAAjN,SAAAlZ,SAAA41B,EAAA2wC,WAGpC/jE,CAF8C,YAAA2jB,EAAAwZ,YAAA/J,EAAAnoB,IAE9CjL,CADkC,OAAA2jB,EAAA+nD,gCAV1C1rE,EAAAiF,yBAAA,UAIIjF,EAAA4J,qBAAA,EAAAkoE,EAAA,gEAWJ9xE,EAAAkF,kEATyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAAouD,sCAP7B/xE,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAooE,EAAA,uJAEKhyE,EAAAoF,sBAAmCpF,EAAnC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAouD,YAAA,KAAAn8D,EAAAhZ,OAAmCoD,CAAA,WAAAiyE,0BAqBxCjyE,EAJJiF,yBAAA,WAIIjF,CADH,UAEOA,EAAAmF,iBAAA,2DAERnF,EADIkF,wBACJlF,0BAGAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAsBjF,EAAAmF,iBAAA,gCAC1BnF,EADoDkF,wBACpDlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBA7D7BtR,4BAoEsC,eAAA26E,EAAzBC,EAAyB,WAgBuB,OAAAz6E,EAAzD,SAAAy6E,EAAoBjhE,GAAiCvZ,EAAAC,KAAAu6E,GAAjCv6E,KAAAsZ,SAfJtZ,KAAAmiC,OAAiB,GACjBniC,KAAA8e,SAAmB,GACnB9e,KAAA8lC,eAAiC,GACjC9lC,KAAA47B,UAAsB,GACrB57B,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAChBhf,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aAEhBhf,KAAAgT,KAAO,IAAIoG,EAAAuB,gBAAgC,IAC3C3a,KAAAsiB,QAAUtiB,KAAKsZ,OAAOgJ,QACtBtiB,KAAAm6E,UAAYn6E,KAAKsZ,OAAOkhE,aAMgB,EAAC,EAAAn5E,IAAA,OAAAiE,IAJzD,WACI,OAAOtF,KAAKsZ,OAAOkyD,aACvB,GAAC,CAAAnqE,IAAA,cAAAC,MAIM,SAAY87B,GACXA,EAAQ0I,gBACR9lC,KAAKgT,KAAK7Q,KAAKnC,KAAK8lC,gBAAkB,GAE9C,GAAC,CAAAzkC,IAAA,cAAAC,MAEM,SAAYm5E,GAAe,IAAAC,EAC9B,OAAqB,QAArBA,EAAO16E,KAAK47B,iBAAS,IAAA8+C,OAAA,EAAdA,EAAgB90E,SAAS60E,EACpC,GAAC,CAAAp5E,IAAA,aAAAC,MAEM,SAAWma,GAAgD,IAE7C65D,EAFiBqF,EAAA/1E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAClC5E,KAAK+lC,SAAS7mB,KAAKzD,GACfk/D,IACY,QAAZrF,EAAA75D,EAAKuG,eAAO,IAAAszD,GAAZA,EAAcjtD,QAAQ,SAACrlB,GAAC,cAAYA,EAAEm/B,MAAM,GAEpD,IAAC,CAjCiC,GAiCjCm4C,SAjCQC,0CAAyBnyE,EAAAC,4BAAAC,EAAAqwE,2BAAA,kDAAzB4B,EAAyBzxE,UAAA,yBAAAqW,OAAA,CAAAgjB,OAAA,SAAArjB,SAAA,WAAAgnB,eAAA,iBAAAlK,UAAA,aAAAxc,QAAA,CAAA6iB,UAAA,YAAA8D,SAAA,YAAAh9B,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,GAAAkE,OAAA,y3BAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE9BhB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA4oE,EAAA,oDAmBAxyE,EAAAiF,yBAAA,UAA2BjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,iCACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA6oE,EAAA,oDAkBJzyE,EAAAkF,yBAWAlF,EAVA4J,qBAAA,GAAA8oE,EAAA,yBAAA1yE,EAAA2c,iCAUA3c,CAV0B,GAAA2yE,EAAA,yBAAA3yE,EAAA2c,8EA1CP3c,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAA8M,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAA2J,OAAA,KAAA+K,EAAA/Y,QAqBXoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAuQ,EAAA5V,EAAAwN,sBAAA,IAAAvM,EAAA8wE,YAAA,KAAAn8D,EAAAhZ,SAAA,uBAEWoD,EAAAoF,oBAAA,GAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAA4yE,wGAyCxCT,CAAyB,8NC9EtC,IAAAj6E,EAAAzC,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,QACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAQAgpE,EAAAhpE,EAAA,OACA21E,EAAA31E,EAAA,sCAoBA8B,4BAGsC,eAAAs7E,EAAzBtC,EAAyB,WA2G9B,OAAA74E,EAHJ,SAAA64E,EACY73E,EACAD,GAA0B,IAAAI,EAAAjB,KAAAD,EAAAC,KAAA24E,GAD1B34E,KAAAc,OACAd,KAAAa,YAzGJb,KAAAunC,SAAW,IAAInuB,EAAAuB,gBAAsC,IACrD3a,KAAAkxB,SAAW,IAAI9X,EAAAuB,gBAAsC,CACzDspB,OAAQ,GACR+f,KAAM,GACN3f,WAAY,KAERrkC,KAAAixB,SAAW,IAAI7X,EAAAuB,gBAAgB,IAEvB3a,KAAAsiB,QAAUtiB,KAAKixB,SAASnW,eACxB9a,KAAAu2B,QAAUv2B,KAAKkxB,SAASpW,eAExB9a,KAAAmF,SAAWnF,KAAKc,KAAK2W,gBAAgB3U,QACjD1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAwxB,WAAU,SAAC5uB,GAAC,SACR3C,EAAAuoC,cAAa5lC,EAAEqQ,GAAI,qBAAqBvQ,QACpC1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAoB,GAC5C,MAELxZ,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE0T,OAA2B,MACxCtW,EAAAyiB,KAAI,SAAC7f,GAAC,OACF/B,EAAKJ,UAAUqrC,KAAK,2BAA6B,MAADlpC,MAAGk4E,eAAc,MAErE96E,EAAAsyB,aAAY,IAGA1yB,KAAAm7E,aAAen7E,KAAKmF,SAASrC,QACzC1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEm4E,cAAgB,EAAE,IAEnBn7E,KAAAgmE,aAAehmE,KAAKmF,SAASrC,QACzC1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE6lC,gBAAkB,EAAE,IAGrB7oC,KAAAo7E,kBAA6ChiE,EAAA2I,eAAc,CACvE/hB,KAAKunC,SACLvnC,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAob,QAAO,SAAAvV,GAAQ,QAARgc,EAAAhc,EAAA,GAAQ,EAAW,MAC1B7F,EAAAwxB,WAAU,SAAA1P,GAAoB,IAAAC,EAAAF,EAAAC,EAAA,GAAhBtO,EAAIuO,EAAA,GAAJvO,KAAQwE,EAAG+J,EAAA,GACrBlhB,SAAKgwB,SAAS9uB,KAAK,WAAQ,EACpB9B,EAAAuoC,cAAah1B,GAAQwE,EAAI/E,GAAI,YAAYvQ,QAC5C1C,EAAAkb,KAAI,SAACrD,GAAC,OACDA,EAAEvB,mBAAmB8nB,MAAQvmB,EAAEvB,QAAU,IAAI4E,IAC1C,SAACtY,GAAC,OAAK,IAAI6jE,EAAAW,aAAaxkE,EAAE,EAC7B,MAEL5C,EAAAkyB,YAAW,SAACtvB,GAAC,MAAK,EAAE,GAE5B,IAAC,EACD5C,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,EAAKgwB,SAAS9uB,KAAK,GAAG,MACjC/B,EAAAsyB,aAAY,IAGA1yB,KAAAqkC,WAAarkC,KAAKo7E,eAAet4E,QAC7C1C,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAqvC,QAAO3sC,EAAEsY,IAAI,SAAC8W,GAAC,OAAKA,EAAE0R,QAAQ,GAAE,IAG/B9jC,KAAAw6E,iBAAgBphE,EAAA2I,eAAc,CAC1C/hB,KAAKkxB,SACLlxB,KAAKo7E,iBACNt4E,QACC1C,EAAAwxB,WAAS,eAAAoW,EAAAxmC,EACL,SAAAoxB,GAAA,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAAsV,EAAArV,EAAA,GAEQoR,EAAMiE,EAANjE,OACA+f,EAAI9b,EAAJ8b,KACA3f,EAAU6D,EAAV7D,WACAmE,EAAON,EAAPM,QACA32B,EAAIq2B,EAAJr2B,KACAC,EAAQo2B,EAARp2B,SACAyE,EAAS2xB,EAAT3xB,UAEJo5C,EAAC98B,EAAA,UAAApxB,IAAAC,KAAA,SAAAC,IAAA,IAAA+lC,EAAA10B,EAAA,OAAAvR,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KAEmBqxE,EAAA6H,yBAChB7yC,GACFvlC,YAAW,OAFPykC,SAAKzlC,EAAA4B,KAGXogC,EAASA,EAAOjR,cACZhgB,EAAOixB,EACL0rB,EAAEn0C,OAAO,SAACxY,GAAC,OAAKA,EAAEuQ,KAAKyf,cAAcptB,SAASq+B,EAAO,GACrD0rB,EACN38C,EAAOgxC,EAAKh/C,OACNgO,EAAKwI,OAAO,SAACxY,GAAC,OAAKghD,EAAKnT,MAAM,SAACvR,GAAC,OAAKt8B,EAAEghD,KAAKp+C,SAAS05B,EAAE,EAAC,GACxDtsB,EAINA,GAHAA,EAAOqxB,EAAWr/B,OACZgO,EAAKwI,OAAO,SAACxY,GAAC,OAAKqhC,EAAWz+B,SAAS5C,EAAE8gC,SAAS,GAClD9wB,GACMwI,OAAO,SAACxY,GAAC,SACjBwwE,EAAA4B,uBAAsBpyE,EAAG0kC,EAAO,CAC5B71B,OACAC,WACAyE,aACK,GACXtU,EAAAqB,OAAA,SACK0P,GAAI,wBAAA/Q,EAAAwC,OAAA,EAAA9C,EAAA,EAtBVF,EAsBU,GACd,gBAAAkb,GAAA,OAAAqrB,EAAArjC,MAAA3E,KAAA4E,UAAA,EAlCI,KAkCJ,EAELxE,EAAAsyB,aAAY,GAUb,EAAC,EAAArxB,IAAA,gBAAAiE,IAPJ,WACI,OAAOtF,KAAKc,KAAK0qE,aACrB,GAAC,CAAAnqE,IAAA,aAAAC,MAOM,SAAWg6E,GACdt7E,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASpvB,YAAemjE,GACzD,GAAC,CAAAj6E,IAAA,aAAAC,MAEM,SAAWg6E,GACdt7E,KAAKkxB,SAAS/uB,KAAI0sB,IAAA,GAAM7uB,KAAKkxB,SAAS/Y,YAAemjE,GACzD,GAAC,CAAAj6E,IAAA,aAAAC,MAEM,WACH,OAAAutB,EAAA,GAAY7uB,KAAKkxB,SAAS/Y,WAC9B,IAAC,CAvHiC,GAuHjC8iE,SAvHQtC,0CAAyBvwE,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAA,qDAAzBowE,EAAyB17D,QAAzB07D,EAAyBz7D,UAAAC,WAFtB,SAEHw7D,CAAyB,2NCpCtC,IAAA7qE,EAAAjQ,EAAA,OAGAgpE,GAFAhpE,EAAA,OACAA,EAAA,MACAA,EAAA,WACAA,EAAA,0LAkEgBuK,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAm1B,UAAqB,KAAI,GAN7Br+B,EAAAulB,iBAAA,KAUAvlB,EAAAkF,0BA1EhB,IAAMkvB,EAAuB,GAE7B78B,iCAsI2C,eAAA47E,EAA9BnP,EAA8B,WAgDtC,OAAAtsE,EAvBD,SAAAssE,EACYvrE,EACA26E,EACA16E,EAEA6lC,GAMP,IAAAC,EAAA7mC,EAAAC,KAAAosE,GAVOpsE,KAAAa,YACAb,KAAAw7E,SACAx7E,KAAAc,OAEAd,KAAA2mC,QA7BL3mC,KAAAymC,UAAiC,KACjCzmC,KAAA8e,SAAQsD,EAAwBpiB,KAAK2mC,MAAMpK,OAAS,IACpDv8B,KAAA+9B,WAAkC,QAAxB6I,EAAG5mC,KAAK2mC,MAAM5I,kBAAU,IAAA6I,KAmCrC,IAAQ90B,EAAa9R,KAAK2mC,MAAMjwB,QAAxB5E,SACR9R,KAAKw7E,OAAOnD,WAAWr4E,KAAK2mC,MAAMjwB,SAClC1W,KAAKi+B,OAASjG,KAAKC,IACfD,KAAK8F,IACD99B,KAAKa,UAAUyE,IAAI,2BACnBtF,KAAK2mC,MAAM1I,QAAU,IAExBnsB,GAAY,IAAM9R,KAAKa,UAAUyE,IAAI,4BAE1CtF,KAAKm+B,WAAan+B,KAAK2mC,MAAMxI,YAAc,CAC/C,EAAC,EAAA98B,IAAA,YAAAiE,IAzCD,WACI,OACItF,KAAKa,UAAUyE,IAAc,yBAA2Bk3B,CAEhE,GAAC,CAAAn7B,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEmpE,SAAS,GAAEt3D,KAAK,IACtD,GAAC,CAAAxT,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAK8e,SAASugB,OAAO,SAACC,EAAGlN,GAAC,OAAKkN,EAAIlN,EAAEuJ,QAAQ,EAAE,EAC1D,GAAC,CAAAt6B,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKc,KAAK0qE,aACrB,GAAC,CAAAnqE,IAAA,aAAAC,MA2BM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYma,EAAoB8hB,GACnC,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OACvB,SAACxY,GAAC,OAAKA,EAAEmpE,YAAc1wD,EAAK0wD,SAAS,GAEzC,GAAI5uC,EAAO,CACP,IAAMq4C,EAAW,IAAI/O,EAAAW,aAAY34C,IAAA,GAAMpT,GAAI,IAAEovD,UAAU,KACvD73D,EAAKimB,KAAK28C,GACV51E,KAAKymC,UAAYmvC,CACrB,CACA51E,KAAK8e,SAAW9L,CACpB,GAAC,CAAA3R,IAAA,kBAAAC,MAEM,SAAgBma,GACnB,IAAMqkB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS6V,EAAKpI,IAEtCrT,KAAKa,UAAUm/B,gBAAgB,uBAD/BD,EACqD,GAAAh8B,OAAAqe,EAC9C0d,GAAQ,CACXrkB,EAAKpI,KAKLysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMyY,EAAKpI,EAAE,GAGhD,IAAC,CAhFsC,GAgFtCkoE,SAhFQnP,0CAA8BhkE,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAmwE,2BAAAvwE,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BA6B3ByF,EAAAg5B,iBAAe,kDA7BlBslC,EAA8BtjE,UAAA,+BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAvHlBoiB,UAAAC,MAAAC,EAAA,6FAkERF,UAAAG,MAAAD,EAAA,4FAgBwCF,UAAAI,MAAAF,EAAA,4FAGNF,UAAAM,MAAAJ,EAAA,mHAC/B,iBA/BHF,UAAAO,MAAAL,EAAA,24DAzDGtnB,EAVZiF,yBAAA,UAUYjF,CARX,aAQWA,CAP2C,aAO3CA,CADH,cACaA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,KACJvlB,EADyBkF,wBACzBlF,GAIIA,EAHJiF,yBAAA,WAGIjF,CADH,6BAKOA,EAFAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA00B,WAAA5sB,KAAA9H,EAAA00B,WAAA5sB,IAAA,EAEA/I,CAFwB,wBAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAA40B,OAAA9sB,KAAA9H,EAAA40B,OAAA9sB,IAAA,EAExB/I,CADmB,4BAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAA80B,WAAAhtB,KAAA9H,EAAA80B,WAAAhtB,IAAA,GAEtB/I,EAAAkF,yBACDlF,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,+BAIAlB,EAAAiF,yBAAA,4BAMIjF,EADA4I,qBAAA,qBAAAG,GAAA,OAAa9H,EAAAqyB,gBAAAvqB,EAAuB,EACpC/I,CADqC,oBAAA+I,GAAA,OAAA9H,EAAAo9B,UAAAt1B,CAAA,GAI7C/I,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,+BAaIjF,EAPA4I,qBAAA,wBAAAG,GAAA,OAAgB9H,EAAA09B,YAAA19B,EAAAo9B,UAAAt1B,EAA+B,EAO/C/I,CAPgD,8BAMnCiB,EAAAqyB,gBAAAryB,EAAAo9B,UAA2B,EACxCr+B,CADyC,0BAAAiB,EAAAo9B,UACpB,IAAI,GAEjCr+B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAAypE,EAAA,iBAWArzE,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAWJvlB,EADIkF,wBACJlF,GAYYA,EAXZiF,yBAAA,eAWYjF,CATX,eASWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqDkF,wBAErDlF,KACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,0BAER3H,EAAA09B,YAAA19B,EAAAo9B,WAC0Cp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,WAGpD,GAEsB/jE,EADJiF,yBAAA,YACIjF,CAD2B,kBACDA,EAAAmF,iBAAA,IAExBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IASpBnF,EAJgBkF,wBAIhBlF,gBAxHYA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAYA1W,EAAAoF,oBAAA,GAEApF,EAFAqV,2BAAA,UAAApU,EAAA00B,WAEA31B,CAFwB,SAAAiB,EAAA40B,OAExB71B,CADmB,aAAAiB,EAAA80B,YAQf/1B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAGA7I,EAAAoF,sBAGApF,EAHA6I,qBAAA,eAAA5H,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,UAGA/jE,CAH+B,WAAAiB,EAAAw9B,aAG/Bz+B,CAFyB,iBAAAiB,EAAAyV,SAEzB1W,CAD2B,YAAAiB,EAAAuyB,WAU/BxzB,EAAAoF,sBACApF,EADAiX,sBAAA,UAAAhW,EAAAo9B,UACAr+B,CAD2B,UAAAiB,EAAAo9B,WAK3Br+B,EAPA6I,qBAAA,OAAA5H,EAAAo9B,UAOAr+B,CAPmB,SAAAiB,EAAAw9B,aAAAjhC,UAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,YAAA,IAOnB/jE,CAH4D,OAAAiB,EAAAyqE,KAG5D1rE,CADa,QAAAiB,EAAAo9B,WAAAp9B,EAAAuyB,UAAAh2B,UAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAAA,KAiBZjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAWDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAeA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UASA1W,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAAu7B,mCAOAx8B,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,YADA/jE,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAU8Br+B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,WAAA,gBAItB/jE,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAA0lC,WAAA,6MAafC,CAA8B,gLC/I3C,IAAAxiE,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OAGAi4D,EAAAj4D,EAAA,uHA6CoCuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCAIJnF,EAAAkF,0GAJIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAArF,EAAAiM,sBAAA,IAAAqnE,EAAAtxC,WAAA,IAAAre,EAAA+nD,MAAA,+BAPJ1rE,EANRiF,yBAAA,wBAMQjF,CAFP,WAEOA,CAD0C,YAEtCA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA2pE,EAAA,cAURvzE,EADIkF,wBACJlF,2BAhBIA,EAAA6I,qBAAA,QAAAyqE,EAAAroE,IAIQjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAiuE,EAAAnoE,KAAA,KAICnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAyqE,EAAAtxC,0EArBrBhiC,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,wBAIIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAA6pE,EAAAxzE,EAAAmJ,0BAAAgM,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBua,EAAAwqD,kBAAAqF,EAAAzqE,GAAgC,GAG7C/I,EADJiF,yBAAA,wBACIjF,CADyC,aACXA,EAAAmF,iBAAA,UAClCnF,EADsCkF,wBACtClF,GACAA,EAAA4J,qBAAA,EAAA6pE,EAAA,2BAoBJzzE,EAAAkF,iHAlBwBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,gBAAA2qE,EAAA,KAAAA,EAAA55D,mCA6BhB5Z,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCACJnF,EAAAkF,0GADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAArF,EAAAiM,sBAAA,IAAA8hE,EAAA/rC,WAAA,IAAAre,EAAA+nD,MAAA,mEAZZ1rE,EAAAiF,yBAAA,qBAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAglE,EAAA/tE,EAAAgJ,wBAAA2E,GAAAwH,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAuO,EAAA2qD,aAAAP,EAAA9iE,IAAAlC,KAAA4a,EAAA2qD,aAAAP,EAAA9iE,IAAAlC,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAGI/I,EADJiF,yBAAA,WACIjF,CAD0C,YAEtCA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA8pE,EAAA,cAOR1zE,EADIkF,wBACJlF,4DAbIA,EAAAqV,2BAAA,UAAAsO,EAAA2qD,aAAAP,EAAA9iE,KAIQjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0oE,EAAA5iE,KAAA,KAICnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAklE,EAAA/rC,qCAVbhiC,EAAA4J,qBAAA,EAAA+pE,EAAA,wEACoB3zE,EAAA6I,qBAAA,gBAAA2qE,EAAA,KAAAA,EAAA55D,mCApC5B5Z,EALJiF,yBAAA,UAKIjF,CADH,WAC2CA,EAAAmF,iBAAA,GAAgBnF,EAAAkF,yBACxDlF,EAAAiF,yBAAA,WAiCIjF,EAhCA4J,qBAAA,EAAAgqE,EAAA,qBAgCA5zE,CAhC0D,EAAA6zE,EAAA,yBAAA7zE,EAAA2c,kCAmDlE3c,EADIkF,wBACJlF,gGArD4CA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAynE,EAAAroE,MAErBnL,EAAAoF,oBAAA,GAAuBpF,EAAvB6I,qBAAA,QAAA2qE,EAAAjlB,SAAuBvuD,CAAA,WAAA8zE,IAjB1Dv8E,qCAsF+C,eAAAw8E,EAAlCC,EAAkC,WAyB1C,OAAAt8E,EAhBD,SAAAs8E,EACqCz1C,GAAoC,IAAA1lC,EAAAjB,KAAAD,EAAAC,KAAAo8E,GAApCp8E,KAAA2mC,QARpB3mC,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aAItBhf,KAAA02E,aAAiC,GACxB12E,KAAA8zE,KAAO9zE,KAAK2mC,MAAMmtC,KAK9B,IAI0Bx8C,EAJpB4jB,KAAS4a,EAAAnmB,QACX3vC,KAAK2mC,MAAM3kB,QAAQ1G,IAAI,SAAC8W,GAAC,OAAKA,EAAE6I,OAAS,OAAO,IAE9Cq8C,EAAa,GAAGjgD,EAAAa,EACFgjB,GAAM,QAAAxgB,EAAA,WAAE,IAAjBO,EAAK3D,EAAAh2B,MACN0gB,EAAU/gB,EAAK0lC,MAAM3kB,QAAQxG,OAAO,SAAC4W,GAAC,OAAKA,EAAE6I,QAAUA,CAAK,GAClEq8C,EAAWr+C,KAAK,CACZ1lB,KAAM0nB,EACN07B,WAAY30C,EAAQkN,KAAK,SAACkD,GAAC,OAAKA,EAAEukC,QAAQ,GAC1C30C,WAER,EAPA,IAAAqV,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAOC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACDn5B,KAAKk7C,OAASo8B,CAClB,EAAC,EAAAj2E,IAAA,oBAAAC,MAEM,SAAkB25B,EAA4B5nB,GAAU,IACzBokB,EADyBD,EAAAU,EACtC+C,EAAMjZ,SAAO,IAAlC,IAAAwV,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAoC,KAAzBi0C,EAAM50C,EAAAn2B,MACbtB,KAAK02E,aAAarK,EAAOh5D,IAAMg5D,EAAOh5D,KAAOA,CACjD,CAAC,OAAAiW,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACL,GAAC,CAAA93B,IAAA,cAAAC,MAEM,WAAW,IAAAwD,EAAA9E,KACRgiB,EAAUhiB,KAAK2mC,MAAM3kB,QAAQxG,OAC/B,SAAC8wD,GAAG,OAAKxnE,EAAK4xE,aAAapK,EAAIj5D,GAAG,GAEtCrT,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,OAAQ+xB,SAAU,CAAEr+B,YAClD,IAAC,CAtC0C,GAsC1Cm6D,SAtCQC,0CAAkCh0E,EAAAC,4BAU/ByF,EAAAg5B,iBAAe,kDAVlBs1C,EAAkCtzE,UAAA,iCAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,GAAAC,KAAA,EAAAkE,OAAA,+wBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlFnChB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBAEdlF,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAqqE,EAAA,aA2DJj0E,EAAAkF,yBAEIlF,EADJiF,yBAAA,aACIjF,CADgB,cACmBA,EAAA4I,qBAAA,0BAAS3H,EAAAizE,aAAa,GACrDl0E,EAAAmF,iBAAA,aAERnF,EADIkF,wBACJlF,UA9D0BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA6xC,+WA0ErBkhC,CAAkC,wICnG/C,IAAA97E,EAAAzC,EAAA,OAGAgpE,EAAAhpE,EAAA,OAEA8yB,EAAA9yB,EAAA,OAEA,SAAS2iC,EAAchD,GAAoB,IAAA++C,EAAAC,EACnC3qE,GAAkB,QAAX0qE,EAAA/+C,EAAM1P,aAAK,IAAAyuD,OAAA,EAAXA,EAAa1qE,OAAS2rB,EAAcmD,MAC/C,OAAInD,EAAMQ,eACNnsB,KAAO8e,EAAAzV,KAAIrJ,EAAM,CACb+uB,MAAO5I,KAAK6I,MAAMrD,EAAMQ,cACxB8C,QAAUtD,EAAMQ,aAAe,EAAK,KACrCtI,YAEH8H,EAAMY,mBAAqB,GAAgB,QAAfo+C,EAAIh/C,EAAM1P,aAAK,IAAA0uD,GAAXA,EAAahsD,WAC7C3e,KAAO8e,EAAAoQ,YAAQpQ,EAAA6C,YAAW3hB,GAAO2rB,EAAMY,oBAAoB1I,YAAO,EAE/D/E,EAAA2H,YAAWzmB,EAAM2rB,EAAMU,gBAAgBxI,SAClD,CAEA/1B,gBAA0B,WAsErB,OAAAG,EAzBD,SAAAosE,IAA6C,IAAAuQ,EAAjCh6E,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,GAAE7E,EAAAC,KAAAksE,GAfrClsE,KAAA2gC,SAAQhQ,EAAA0H,eAAcve,KAAKuX,OAAOqE,UAgBtC11B,KAAKqT,GAAK5Q,EAAK4Q,IAAE,SAAAtP,UAAazD,EAAAo+B,WAAU,QAAW,MACnD1+B,KAAK+0B,UAAYtyB,EAAKsyB,WAAa,GACnC/0B,KAAKshC,SAAW7+B,EAAK6+B,WAAsB,QAAdm7C,EAAIh6E,EAAKqrB,aAAK,IAAA2uD,OAAA,EAAVA,EAAYppE,KAAM,GACnDrT,KAAKu8B,OAAS95B,EAAK85B,OAAS,IAAIjhB,IAAI,SAAC8W,GAAC,OAClCA,aAAay0C,EAAAW,aAAep1C,EAAI,IAAIy0C,EAAAW,aAAap1C,EAAE,GAEvDpyB,KAAKy/B,WAAaz/B,KAAKu8B,MAAM8C,OACzB,SAACmC,EAAQ/lB,GAAI,OAAK+lB,EAAS/lB,EAAKkgB,QAAQ,EACxC,GAEJ37B,KAAK2qE,WAAa3qE,KAAKu8B,MAAM8C,OACzB,SAACmC,EAAQ/lB,GAAI,OAAK+lB,GAAU/lB,EAAKkvD,YAAc,EAAE,EACjD,GAEJ3qE,KAAK08E,YAAcj6E,EAAKi6E,aAAe,GACvC18E,KAAK0hC,OACDj/B,EAAI,GAAAsB,OAAI/D,KAAKshC,SAAQ,aAAc7+B,EAAKi/B,QAAU,WACtD1hC,KAAKmqC,eAAiB1nC,EAAK0nC,gBAAkB,GAC7CnqC,KAAK8tB,MAAQrrB,EAAKqrB,OAAS,KAC3B9tB,KAAK6hC,MAAQp/B,EAAKo/B,OAAS,GAC3B7hC,KAAKg+B,aAAev7B,EAAKu7B,mBAAgB/4B,EACzCjF,KAAKk+B,eAAiBz7B,EAAKy7B,gBAAkB,EAC7Cl+B,KAAKo+B,mBAAqB37B,EAAK27B,oBAAsB,EACrDp+B,KAAKo8B,gBAAkBoE,EAAcxgC,KACzC,EAAC,EAAAqB,IAAA,aAAAiE,IAtCD,WACI,OAAOk7B,EAAcxgC,KACzB,GAAC,CAAAqB,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKyhC,OAChB,EAACvmB,IAED,SAAkB5Z,GACdtB,KAAKyhC,QAAUngC,EACftB,KAAI,GAAA+D,OAAI/D,KAAKshC,SAAQ,YAAahgC,CACtC,IAAC,CA3CqB,iRCpB1B,IAAA8X,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAQA8yB,EAAA9yB,EAAA,OAEAyC,EAAAzC,EAAA,OACA8+E,EAAA9+E,EAAA,OAKA2C,EAAA3C,EAAA,MAEAktE,EAAAltE,EAAA,iBA0BA8B,wBAGmC,eAAAi9E,EAAtBvO,EAAsB,SAAAztE,GA6D/B,SAAAytE,IAAA,IAAAptE,EAAAlB,SAAAC,KAAAquE,IACIptE,EAAAC,EAAAlB,KAAAquE,IA7DIt9C,MAAQ,IAAI3X,EAAAuB,gBAAwB,GACpC1Z,EAAAgwB,SAAW,IAAI7X,EAAAuB,iBAAyB,GACxC1Z,EAAAiwB,SAAW,IAAI9X,EAAAuB,gBAAsC,IAG7C1Z,EAAAo9B,UAAsCjlB,EAAA2I,eAAc,CAChE9gB,EAAKiwB,SACLjwB,EAAK8vB,QACNjuB,QACC1C,EAAAmxB,cAAa,MAAI,EACjBnxB,EAAAwxB,WAAU,SAAA3rB,GAAsB,IAAA42E,EAAA56D,EAAAhc,EAAA,MAAlB4L,EAAIgrE,EAAJhrE,KAAM8B,EAAKkpE,EAALlpE,MAChB1S,EAAKgwB,SAAS9uB,MAAK,GACnB,IAAM4sB,KAAQ4B,EAAA4C,gBAAY5C,EAAA6C,YAAW3hB,GAAQiI,KAAKuX,QAC5CzN,KAAM+M,EAAA4C,gBAAY5C,EAAA+C,UAAS7hB,GAAQiI,KAAKuX,QAC9C,SAAOsrD,EAAA9oD,aAAY,CACfq+B,UAAWv+C,GAAS,IAAIkB,KAAK,KAC7Bye,aAAcvE,EACd0E,WAAY7P,IACb9gB,QACC1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,MACvBxZ,EAAAkb,KAAI,SAACwY,GAAM,SACPxzB,EAAAmyB,SACIqB,EAAOxY,IAAI,SAACwS,GAAK,OACbA,EAAMgvD,eAAexhE,IACjB,SAACiH,GAAC,OAAK,IAAIwoD,EAAAmB,cAAar9C,IAAA,GAAMtM,GAAC,IAAEuL,UAAQ,EAC5C,GAER,MAEL1tB,EAAAkb,KAAI,SAAC+iB,GAAM,OACPA,EAAO7iB,OACH,SAAC+G,GAAC,SACEoO,EAAAkI,QAAOtW,EAAE4Z,WAAY,iBAAY,EACjCxL,EAAAkI,QAAe,IAAR9J,EAAc,aAAa,EACzC,GAGb,IAAC,EACD3uB,EAAAyiB,KAAI,kBAAM5hB,EAAKgwB,SAAS9uB,MAAK,EAAM,MACnC/B,EAAAsyB,aAAY,IAGAzxB,EAAAqhB,QAAUrhB,EAAKgwB,SAASnW,eAUxB7Z,EAAAmuC,SAAWnuC,EAAKo9B,OAAOv7B,QACnC1C,EAAAkb,KAAI,SAACtI,GAAI,OACLA,EACKwI,OAAO,SAACgiB,GAAK,OAzE9B,SAASu/C,EACLv/C,EACAjH,GAEA,IAAMjO,GAAKiO,EAAQ0N,QAAU,IAAIjR,cACjC,QAASwK,EAAMjB,MAAMrN,KACjB,SAACzT,GAAI,OACDA,EAAKlI,KAAKyf,cAAcptB,SAAS0iB,MAC/B7M,EAAKuG,QAAQkN,KAAK,SAACm9C,GAAM,OACvBA,EAAO94D,KAAKyf,cAAcptB,SAAS0iB,EAAE,EACxC,EAEb,CA6DmCy0D,CAAWv/C,EAAOv8B,EAAKiwB,SAAS/Y,WAAW,GAC7DqE,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEkJ,WAAa7d,EAAE6d,UAAU,EAAC,IAMpDl7B,EAAK4R,aAAa,UAAW5R,EAAKo9B,OAAOtrB,aAAa9R,CAC1D,CAEAG,SAAAitE,EAAAztE,GAAAd,EAAAuuE,EAAA,EAAAhtE,IAAA,UAAAiE,eApBI,OAAOtF,KAAKkxB,SAAS/Y,UACzB,EACA+C,IACA,SAAmBqb,GACfv2B,KAAKkxB,SAAS/uB,KAAKo0B,EACvB,GAAC,CAAAl1B,IAAA,eAAAC,MAgBM,WAAsC,IAAAwD,EAAA9E,KACzCA,KAAK42B,SACD,UACA,kBAAM9xB,EAAKisB,MAAM5uB,UAAS2X,MAAO4b,UAAU,EAH/B9wB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,KAMpC,GAEA,CAAAvD,IAAA,cAAAC,MACO,WACHtB,KAAK05B,cAAc,UACvB,GAEA,CAAAr4B,IAAA,eAAAC,OAAA07E,EAAAx7E,EAAAC,IAAAC,KAKO,SAAAC,EACH67B,EACAkE,GAA2B,IAAAu7C,EAAAz1B,EAAA01B,EAAA9mE,EAAA0X,EAAAiH,EAAA2C,EAAAxxB,EAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE3Bq7B,SAAMkE,OAASA,EACTw7C,EAAgB,IAAInS,EAAAmB,cAAar9C,IAAA,GAChC2O,GAAK,IACRkE,SACA5T,MAAO,QAEL1X,EAAW,GAAArS,OAAAqe,GACTob,EAAM1P,MAAM8H,eAAexf,UAAY,IAAIoF,OAC3C,SAAC+G,GAAC,OAAKA,EAAElP,KAAOmqB,EAAMnqB,EAAE,IAC3B,CACD6pE,IACF5hE,IAAI,SAAC8W,GAAC,OAAK,IAAI24C,EAAAmB,cAAar9C,EAAA,GAAMuD,GAAI,GAClCtE,EAAQ,IAAIttB,EAAAssB,cAAa+B,IAAA,GACxB2O,EAAM1P,OAAK,IACd1X,cAEE2e,GAAiB,MAALjH,GAAmB,QAAdmvD,EAALnvD,EAAOvX,UAAU,UAAE,IAAA0mE,OAAA,EAAnBA,EAAqB5pE,MAAW,MAALya,GAAa,QAAR05B,EAAL15B,EAAOpV,cAAM,IAAA8uC,OAAA,EAAbA,EAAen0C,IAAEpR,EAAAE,KAAA,KACxCw6E,EAAAQ,qBAClBrvD,EAAMza,GACN0hB,EACAjH,EAAM8H,gBACR3yB,YAAW,OAJPy0B,SAAOz1B,EAAA4B,KAKb7D,KAAKwD,QAAQ,eAAgB,kBAAM0C,EAAK6qB,MAAM5uB,KAAK2X,KAAKuX,MAAM,EAAE,KAC/DmM,EAAckE,OAASA,EAAOz/B,EAAAqB,OAAA,SACxBo0B,GAAO,yBAAAz1B,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjB,SAAAqxE,EAAA10D,EAAA2c,GAAA,OAAA0jD,EAAAr4E,MAAA3E,KAAA4E,UAAA,MAlCD,IAAAo4E,CAkCC,CAlH8B,CAAQ18E,EAAA6H,cAAYy0E,SAA1CvO,yCAAqB,qDAArBA,EAAqBpxD,QAArBoxD,EAAqBnxD,UAAAC,WAFlB,SAEHkxD,CAAsB,iRChDnCxwE,EAAA,WACAwC,EAAAxC,EAAA,OAKAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAWAyC,EAAAzC,EAAA,OAWAu/E,GAFAv/E,EAAA,MAEAA,EAAA,QAIAw/E,EAAAx/E,EAAA,OAIAK,EAAAL,EAAA,OAKAgpE,EAAAhpE,EAAA,OACAktE,EAAAltE,EAAA,OACAy/E,EAAAz/E,EAAA,OAKA0/E,EAAA1/E,EAAA,OAIA2/E,EAAA3/E,EAAA,iDAQA8B,uBAGkC,eAAA89E,EAArBrP,EAAqB,SAAAxtE,GAoD9B,SAAAwtE,EACYttE,EACA0W,EACA3W,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAouE,IAElCntE,EAAAC,EAAAlB,KAAAouE,IAJQttE,OACAG,EAAAuW,UACAvW,EAAAJ,YAtDJI,EAAAy8E,SAAW,IAAItkE,EAAAuB,gBAAgB,GAE/B1Z,EAAA08E,MAAQ,IAAIvkE,EAAAuB,gBAAgC,IAE5C1Z,EAAAgwB,SAAW,IAAI7X,EAAAuB,iBAAyB,GAExC1Z,EAAA28E,UAAY,IAAIxkE,EAAAuB,gBAAwB,OAExC1Z,EAAAwxD,QAAU,IAAIr5C,EAAAuB,gBAAgB,GAEtB1Z,EAAA6sE,KAAO7sE,EAAK08E,MAAM7iE,eAElB7Z,EAAAqhB,QAAUrhB,EAAKgwB,SAASnW,eAExB7Z,EAAAgrE,SAAWhrE,EAAK28E,UAAU9iE,eAE1B7Z,EAAAkE,YAAWiU,EAAA2I,eAAc,CACrC9gB,EAAKH,KAAK2W,gBACVxW,EAAKwxD,UACN3vD,QACC1C,EAAAob,QAAO,SAAAvV,GAAG,QAAHgc,EAAAhc,EAAA,GAAG,EAAS,MACnB7F,EAAAwxB,WAAU,SAAA1P,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAG,SACT7hB,EAAAuoC,cADSzmB,EAAA,GACM9O,GAAI,qBAAqBvQ,QACpC1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAoB,GAC5C,MAELxZ,EAAAkb,KAAI,SAACtY,GAAC,OAAMA,EAAE0T,SAAgC,EAAE,MAChDtW,EAAAyiB,KAAI,SAAC7f,GAAC,OACF/B,EAAKJ,UAAUqrC,KAAK,2BAA6B,MAADlpC,MAAGk4E,eAAc,MAErE96E,EAAAsyB,aAAY,IAGAzxB,EAAAk6E,aAAel6E,EAAKkE,SAASrC,QACzC1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEm4E,cAAgB,EAAE,IAEnBl6E,EAAA+kE,aAAe/kE,EAAKkE,SAASrC,QACzC1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE6lC,gBAAkB,EAAE,IAG9B5nC,EAAA2S,KAAO,GAiBV3S,EAAK4R,aACD,WACA5R,EAAKH,KAAK2W,gBAAgB1E,UAAS,eAAAi1B,EAAAxmC,EAAAC,IAAAC,KAAC,SAAAC,EAAOyW,GAAa,IAAA01D,EAAA,OAAArsE,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAChDiW,EAAG,CAAAnW,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACiBlB,EAAK48E,mBAAmBzlE,EAAI/E,IAAG,OAA7Cy6D,EAAI7rE,EAAA4B,KAA2CyX,IACjD,SAAC8W,GAAC,OAAK,IAAIy0C,EAAAW,aAAap1C,EAAE,GAE9BnxB,EAAK28E,UAAUz7E,KACXlB,EAAKJ,UAAUyE,IAAI,iBACf8S,EAAI6zD,UACJ,OAERhrE,EAAK08E,MAAMx7E,KAAK2rE,GAAM,wBAAA7rE,EAAAwC,OAAA,EAAA9C,EAAA,IAE7B,gBAAAgb,GAAA,OAAAqrB,EAAArjC,MAAA3E,KAAA4E,UAAA,EAZkC,KAarC3D,CACN,CAEAG,SAAAgtE,EAAAxtE,GAAAd,EAAAsuE,EAAA,EAAA/sE,IAAA,cAAAiE,IAjCA,WAAsB,IAAA60C,EAClB,OAAQn6C,KAAK4T,MAAQ5T,KAAK4T,QAA2B,QAAvBumC,EAAKn6C,KAAKc,KAAK+U,gBAAQ,IAAAskC,OAAA,EAAlBA,EAAoB9mC,GAC3D,GAAC,CAAAhS,IAAA,aAAAiE,IAED,WACI,IAAMwoE,EAAO9tE,KAAK29E,MAAMxlE,WACxB,SAAO7X,EAAAqvC,QAAOm+B,EAAKxyD,IAAI,SAAC8W,GAAC,OAAKA,EAAE0R,QAAQ,GAC5C,GAAC,CAAAziC,IAAA,sBAAAC,OAAAw8E,EAAAt8E,EAAAC,IAAAC,KA8BM,SAAAwD,EAA0Bs4B,GAAoB,IAAAugD,EAAAnmE,EAAAlB,EAAA5R,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAC3CyV,SAAM5X,KAAKwX,QAAQzC,KAGvBuoE,EAAAtI,4BAA6B,CAC3BvyE,KAAM,CACFqxE,KAAM9zE,KAAK49E,UAAUzlE,WACrBqlB,QACAswC,KAAM9tE,KAAK8tE,KACXxrD,QAAStiB,KAAKsiB,QACd4yD,kBAAmB,SAAClyE,GAAC,OAAK8B,EAAKowE,kBAAkBlyE,EAAE,EACnD0yE,cAAe,SAAC1yE,GAAC,OAAK8B,EAAK4wE,cAAc1yE,EAAE,KAEjDoC,EAAAjD,KAAA,EACoBwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALIyT,SAAOtR,EAAAvB,KAMb+T,EAAIlQ,QAAQtC,EAAA9B,OAAA,UACE,MAAPoT,GAAiB,QAAVqnE,EAAPrnE,EAAS2pC,gBAAQ,IAAA09B,OAAA,EAAjBA,EAAmBvgD,QAASA,GAAK,wBAAAp4B,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC3C,SAAAg+E,EAAA1kD,GAAA,OAAAwkD,EAAAn5E,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAAA,eAAA28E,EAAAz8E,EAEM,eAAA0E,EAAAlG,KAAcyb,EAAA7W,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,IAAIiiE,EAAAW,aAAc,OAAA/lE,IAAAC,KAAA,SAAAsE,IAAA,IAAA4R,EAAAlB,EAAAo3D,EAAA/D,EAAA,OAAAtoE,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAClDyV,SAAM1R,EAAKsR,QAAQzC,KAGvBqoE,EAAA/T,2BAA4B,CAC1B5mE,KAAM,CACFgZ,OACA4oB,WAAYn+B,EAAKm+B,cAEvBl+B,EAAAhE,KAAA,EACoBwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALW,GAAPyT,EAAOvQ,EAAAtC,KAMW,SAApB6S,GAAS4X,OAAiB,CAAAnoB,EAAAhE,KAAA,eAAAgE,EAAA7C,OAAA,iBACxBwqE,EAAO5nE,EAAKy3E,MAAMxlE,YAClB4xD,EAAQ+D,EAAK1xB,UAAU,SAACq5B,GAAG,OAAKA,EAAIpiE,KAAOoI,EAAKpI,EAAE,KAC3C,EACTy6D,EAAK3xB,OAAO4tB,EAAO,EAAGrzD,EAAQ2pC,SAAS5kC,MAEvCqyD,EAAK70C,KAAKviB,EAAQ2pC,SAAS5kC,MAE/BvV,EAAKg4E,WAAWh4E,EAAKpF,KAAK+U,SAASxC,GAAIy6D,GAAM6H,KACzC,WACIzvE,EAAKy3E,MAAMx7E,KAAIigB,EAAK0rD,IACpBl2D,EAAIlQ,OACR,EACA,kBAAOkQ,EAAIM,kBAAkBoK,SAAU,CAAK,GAC9C,yBAAAnc,EAAA1B,OAAA,EAAAuB,EAAA,EA9BsDvE,EA8BtD,GACL,gBAAAusE,IAAA,OAAAiQ,EAAAt5E,MAAA3E,KAAA4E,UAAA,EAjCA,IAiCA,CAAAvD,IAAA,aAAAC,MAEM,SAAWma,GAAkB,IAAA3U,EAAA9G,KAC1B8tE,EAAO9tE,KAAK29E,MAAMxlE,WAClB4xD,EAAQ+D,EAAK1xB,UAAU,SAACq5B,GAAG,OAAKA,EAAIpiE,KAAOoI,EAAKpI,EAAE,GACpD02D,GAAS,EAAG+D,EAAK3xB,OAAO4tB,EAAO,EAAGtuD,GACjCqyD,EAAK70C,KAAKxd,GACfzb,KAAKk+E,WAAWl+E,KAAKc,KAAK+U,SAASxC,GAAIy6D,GAAM6H,KAAK,kBAC9C7uE,EAAK62E,MAAMx7E,KAAIigB,EAAK0rD,GAAM,EAElC,GAAC,CAAAzsE,IAAA,YAAAC,MAAA,eAAA68E,EAAA38E,EAEM,SACHia,GAAkB,IAAAikC,EAAA1/C,KAClBqsE,EAAAznE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyB,GAAS,OAAAnD,IAAAC,KAAA,SAAAmF,IAAA,IAAA8oE,EAAA/3D,EAAAlB,EAAAo3D,EAAA/D,EAAA,OAAAtoE,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAE5BwtE,YAAQrvE,EAAAqvC,QAAOl0B,EAAKuG,QAAQ1G,IAAI,SAAC8W,GAAC,OAAKA,EAAE6I,KAAK,IAC9CrjB,EAAM8nC,EAAKloC,QAAQzC,KAGvBsoE,EAAA3N,iCAAkC,CAChCjtE,KAAM,CACFotE,OAAQp0D,EACR4wD,SACAsD,WAEN5oE,EAAA5E,KAAA,EACoBwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALW,GAAPyT,EAAO3P,EAAAlD,KAMW,SAApB6S,GAAS4X,OAAiB,CAAAvnB,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,iBACxBwqE,EAAOpuB,EAAKi+B,MAAMxlE,YAClB4xD,EAAQ+D,EAAK1xB,UAAU,SAACq5B,GAAG,OAAKA,EAAIpiE,KAAOoI,EAAKpI,EAAE,KAC3C,EACTy6D,EAAK3xB,OAAO4tB,EAAO,EAAGrzD,EAAQ2pC,SAAS5kC,MAEvCqyD,EAAK70C,KAAKviB,EAAQ2pC,SAAS5kC,MAE/BikC,EAAKw+B,WAAWx+B,EAAK5+C,KAAK+U,SAASxC,GAAIy6D,GAAM6H,KACzC,WACIj2B,EAAKi+B,MAAMx7E,KAAIigB,EAAK0rD,IACpBl2D,EAAIlQ,OACR,EACA,kBAAOkQ,EAAIM,kBAAkBoK,SAAU,CAAK,GAC9C,yBAAAvb,EAAAtC,OAAA,EAAAoC,EAAA,EAjCgCpF,EAiChC,GACL,gBAAAurE,EAAAlzC,GAAA,OAAAqkD,EAAAx5E,MAAA3E,KAAA4E,UAAA,EAtCA,IAsCA,CAAAvD,IAAA,gBAAAC,MAAA,eAAA88E,EAAA58E,EAAAC,IAAAC,KAEM,SAAAi+C,EAAoB39B,GAAyB,IAAApK,EAAAlB,EAAA,OAAAjV,IAAAO,KAAA,SAAAg+C,GAAA,cAAAA,EAAA99C,KAAA89C,EAAA79C,MAAA,OAC1CyV,SAAM5X,KAAKwX,QAAQzC,KAGvBwoE,EAAAnB,mCAAoC,CAClC35E,KAAM,CACFqxE,KAAM9zE,KAAK49E,UAAUzlE,WACrB6J,aAENg+B,EAAA79C,KAAA,EACoBwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALW,GAAPyT,EAAOspC,EAAAn8C,KAMW,SAApB6S,GAAS4X,OAAiB,CAAA0xB,EAAA79C,KAAA,eAAA69C,EAAA18C,OAAA,SAAS,IAAE,OACzCsU,SAAIlQ,QAAQs4C,EAAA18C,OAAA,SACLoT,EAAQ2pC,SAASr+B,SAAO,wBAAAg+B,EAAAv7C,OAAA,EAAAk7C,EAAA3/C,KAAA,IAClC,gBAAA01E,EAAAz0B,GAAA,OAAAm9B,EAAAz5E,MAAA3E,KAAA4E,UAAA,EArBA,IAqBA,CAAAvD,IAAA,aAAAC,MAAA,eAAA+8E,EAAA78E,EAAAC,IAAAC,KAEM,SAAAg/C,EAAiBjlC,GAAkB,IAAA/E,EAAAo3D,EAAAwQ,EAAAt+E,KAAA,OAAAyB,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,OAAA2+C,SAAA3+C,KAAA,KAChB7B,EAAA8tB,kBAClB,CACIjtB,MAAO,uBACPslB,QAAO,qDAAA1iB,OAAuD0X,EAAKlI,KAAI,mBACvE8a,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,WAGjBzmB,KAAKwX,SACR,OAXY,GAYU,UAZjBd,EAAOoqC,EAAAj9C,MAYDyqB,OAAiB,CAAAwyB,EAAA3+C,KAAA,eAAA2+C,EAAAx9C,OAAA,iBAC7BoT,EAAQ4L,QAAQ,6BACVwrD,EAAO9tE,KAAK29E,MAAMxlE,WAAWqD,OAAO,SAACi6D,GAAG,OAAKh6D,EAAKpI,KAAOoiE,EAAIpiE,EAAE,GACrErT,KAAKk+E,WAAWl+E,KAAKc,KAAK+U,SAASxC,GAAIy6D,GAAM6H,KACzC,WACI2I,EAAKX,MAAMx7E,KAAIigB,EAAK0rD,IACpBp3D,EAAQhP,OACZ,EACA,kBAAMgP,EAAQ4L,QAAQ,GAAG,GAC3B,wBAAAw+B,EAAAr8C,OAAA,EAAAi8C,EAAA1gD,KAAA,IACL,gBAAAiuE,EAAA/sB,GAAA,OAAAm9B,EAAA15E,MAAA3E,KAAA4E,UAAA,EAzBA,IAyBA,CAAAvD,IAAA,eAAAC,MAAA,eAAAk9E,EAAAh9E,EAAAC,IAAAC,KAEM,SAAA+8E,EAAmBhjE,EAAoB4wD,GAAsB,IAAA31D,EAAAo3D,EAAA4Q,EAAA1+E,KAAA,OAAAyB,IAAAO,KAAA,SAAA6+C,GAAA,cAAAA,EAAA3+C,KAAA2+C,EAAA1+C,MAAA,OAAA0+C,SAAA1+C,KAAA,KAC1C7B,EAAA8tB,kBAClB,CACIjtB,MAAO,8BACPslB,QAAO,wDAAA1iB,OAA0DsoE,EAAO94D,KAAI,YAAAxP,OAAW0X,EAAKlI,KAAI,MAChG8a,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,WAGjBzmB,KAAKwX,SACR,OAXY,GAYU,UAZjBd,EAAOmqC,EAAAh9C,MAYDyqB,OAAiB,CAAAuyB,EAAA1+C,KAAA,eAAA0+C,EAAAv9C,OAAA,iBAC7BoT,EAAQ4L,QAAQ,qCACVwrD,EAAO9tE,KAAK29E,MAAMxlE,YACnBgkC,OACD2xB,EAAK1xB,UAAU,SAACq5B,GAAG,OAAKA,EAAIpiE,KAAOoI,EAAKpI,EAAE,GAC1C,EACA,IAAIwzD,EAAAW,aAAY34C,IAAA,GACTpT,GAAI,IACPuG,QAASvG,EAAKuG,QAAQxG,OAAO,SAAC8wD,GAAG,OAAKA,EAAIj5D,KAAOg5D,EAAOh5D,EAAE,OAGlErT,KAAKk+E,WAAWl+E,KAAKc,KAAK+U,SAASxC,GAAIy6D,GAAM6H,KACzC,WACI+I,EAAKf,MAAMx7E,KAAIigB,EAAK0rD,IACpBp3D,EAAQhP,OACZ,EACA,kBAAMgP,EAAQ4L,QAAQ,GAAG,GAC3B,wBAAAu+B,EAAAp8C,OAAA,EAAAg6E,EAAAz+E,KAAA,IACL,gBAAA+tE,EAAA5sB,EAAAw9B,GAAA,OAAAH,EAAA75E,MAAA3E,KAAA4E,UAAA,EAjCA,IAiCA,CAAAvD,IAAA,aAAAC,MAAA,eAAAs9E,EAAAp9E,EAAAC,IAAAC,KAEM,SAAAm9E,IAAA,IAAAC,EAAA5D,EAAApN,EAAA6B,EAAA/3D,EAAAlB,EAAAqoE,EAAA/+E,KAAA,OAAAyB,IAAAO,KAAA,SAAAg9E,GAAA,cAAAA,EAAA98E,KAAA88E,EAAA78E,MAAA,OAAA68E,SAAA78E,KAAA,EACkBnC,KAAKk1E,kBAAkBl1E,KAAKc,KAAK+U,SAASxC,IAAG,OAA5DyrE,SAAME,EAAAn7E,KAAAm7E,EAAA78E,KAAA,EACoBnC,KAAKmF,SAASrC,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAAg8E,OAA/D/D,EAA+D8D,EAAAn7E,KAA/Dq3E,cACFpN,EAAO9tE,KAAK29E,MAAMxlE,WAClBw3D,KAAQrvE,EAAAqvC,WAAOrvC,EAAAmyB,SAAQq7C,EAAKxyD,IAAI,SAAC8W,GAAC,OAAMA,EAAE0R,UAAQ//B,OAAAqe,EAAKgQ,EAAE4xB,MAAI,KAC7DpsC,EAAM5X,KAAKwX,QAAQzC,KAGvB7W,EAAAghF,qCAAsC,CACpCz8E,KAAM,CACFq8E,SACAnP,QACAuL,gBACAiE,UAAW,SAAC7gE,GAAC,OAAKygE,EAAKK,aAAa,CAAElE,cAAe58D,GAAI,KAE/D0gE,EAAA78E,KAAA,GACoBwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,QALW,GAAPyT,EAAOsoE,EAAAn7E,KAMW,SAApB6S,GAAS4X,OAAiB,CAAA0wD,EAAA78E,KAAA,gBAAA68E,EAAA17E,OAAA,kBAC9BtD,KAAKq/E,aAAar/E,KAAKc,KAAK+U,SAASxC,GAAIqD,EAAQ2pC,UAAUs1B,KACvD,kBAAM/9D,EAAIlQ,OAAO,EACjB,kBAAOkQ,EAAIM,kBAAkBoK,SAAU,CAAK,GAC9C,yBAAA08D,EAAAv6E,OAAA,EAAAo6E,EAAA7+E,KAAA,IACL,gBAAAs/E,IAAA,OAAAV,EAAAj6E,MAAA3E,KAAA4E,UAAA,EA7BA,IA6BA,CAAAvD,IAAA,aAAAC,MAAA,eAAAi+E,EAAA/9E,EAAAC,IAAAC,KAEM,SAAA89E,IAAA,IAAA5nE,EAAAlB,EAAAo3D,EAAA11D,EAAAqnE,EAAA,OAAAh+E,IAAAO,KAAA,SAAA09E,GAAA,cAAAA,EAAAx9E,KAAAw9E,EAAAv9E,MAAA,OACGyV,SAAM5X,KAAKwX,QAAQzC,KAAKyoE,EAAAxW,kCAAiC0Y,EAAAv9E,KAAA,EACzCwB,QAAQ67C,KAAK,CAC/B5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OALW,GAAPyT,EAAOgpE,EAAA77E,KAMW,SAApB6S,GAAS4X,OAAiB,CAAAoxD,EAAAv9E,KAAA,eAAAu9E,EAAAp8E,OAAA,iBAC9BsU,SAAIM,kBAAkBoK,QAAU,mBAC1BwrD,EAAO9tE,KAAK29E,MAAMxlE,WAClBC,EAAMpY,KAAKc,KAAK+U,SAChB4pE,KAAen/E,EAAAqvC,QAAOj5B,EAAQ2pC,SAASt8C,OAAO+pE,GAAO,MAAK4R,EAAAv9E,KAAA,GAC1DnC,KAAKk+E,WAAW9lE,EAAI/E,GAAIosE,GAAat7E,MAAO,SAACnB,GAC/C,QAAA1C,EAAAqU,aAAY,iCACZiD,EAAIlQ,QACE1E,CACV,GAAE,SACF,EAAA1C,EAAAs3C,eAAa,wCAAA7zC,OAC+B2S,EAAQ2pC,SAASr7C,OAAM,oBAEnE4S,EAAIlQ,QAAQ,yBAAAg4E,EAAAj7E,OAAA,EAAA+6E,EAAAx/E,KAAA,IACf,gBAAA2/E,IAAA,OAAAJ,EAAA56E,MAAA3E,KAAA4E,UAAA,EAxBA,IAwBA,CAAAvD,IAAA,aAAAC,MAEO,SAAWknC,EAAiBslC,GAChC,SAAOztE,EAAAy+D,gBAAet2B,EAAS,CAC3Bn1B,GAAIm1B,EACJj1B,KAAM,WACNmD,QAASo3D,EACTr6D,YAAW,qBAAA1P,OAAuBykC,KACnCvlC,WACP,GAAC,CAAA5B,IAAA,eAAAC,MAAA,eAAAs+E,EAAAp+E,EAAAC,IAAAC,KAEM,SAAAm+E,EAAmB16E,GAA0B,IAAA26E,EAAA14E,EAAA,OAAA3F,IAAAO,KAAA,SAAA+9E,GAAA,cAAAA,EAAA79E,KAAA69E,EAAA59E,MAAA,OAAA49E,SAAA59E,KAAA,EACrBnC,KAAKmF,SAASrC,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAA5D68E,SAAYC,EAAAl8E,KAAAk8E,EAAA59E,KAAA,KACG9B,EAAAy+D,gBAAe9+D,KAAKc,KAAK+U,SAASxC,GAAI,CACvDA,GAAIrT,KAAKc,KAAK+U,SAASxC,GACvBE,KAAM,oBACNmD,QAAOmY,IAAA,GAAOixD,GAAiB36E,GAC/BsO,YAAW,yBAAA1P,OAA2B/D,KAAKc,KAAK+U,SAASxC,MAC1DpQ,YAAW,OALRmE,SAAM24E,EAAAl8E,KAMZ7D,KAAKyyD,QAAQtwD,KAAK2X,KAAKuX,OAAO0uD,EAAAz8E,OAAA,SACvB8D,GAAM,wBAAA24E,EAAAt7E,OAAA,EAAAo7E,EAAA7/E,KAAA,IAChB,gBAAAo/E,EAAAY,GAAA,OAAAJ,EAAAj7E,MAAA3E,KAAA4E,UAAA,EAZA,IAYA,CAAAvD,IAAA,qBAAAC,MAAA,eAAA2+E,EAAAz+E,EAAAC,IAAAC,KAEO,SAAAw+E,EAAyB13C,GAAe,IAAAslC,EAAA,OAAArsE,IAAAO,KAAA,SAAAm+E,GAAA,cAAAA,EAAAj+E,KAAAi+E,EAAAh+E,MAAA,OAAAg+E,SAAAh+E,KAAA,KACxB9B,EAAAuoC,cAAaJ,EAAS,YAAYvlC,YAAW,OAA3D6qE,OACMqS,EAAA78E,OAAA,UADNwqE,EAAIqS,EAAAt8E,KACL6S,mBACkB8nB,MAAQsvC,EAAO,IAAE,wBAAAqS,EAAA17E,OAAA,EAAAy7E,EAAA,IAC3C,gBAAArC,EAAAuC,GAAA,OAAAH,EAAAt7E,MAAA3E,KAAA4E,UAAA,EANA,IAMA,CAAAvD,IAAA,oBAAAC,MAAA,eAAA++E,EAAA7+E,EAEM,eACHgnC,EAAA5jC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB5E,KAAKc,KAAK+U,SAASxC,GAAE,OAAA5R,IAAAC,KAAA,SAAA4+E,IAAA,IAAA54C,EAAA,OAAAjmC,IAAAO,KAAA,SAAAu+E,GAAA,cAAAA,EAAAr+E,KAAAq+E,EAAAp+E,MAAA,OAAAo+E,SAAAp+E,KAAA,KAG7B9B,EAAAuoC,cAAaJ,EAAS,mBAAmBvlC,YAAW,OADxDykC,OAEG64C,EAAAj9E,OAAA,UAFHokC,EAAK64C,EAAA18E,KAET6S,mBACsB8nB,MAASkJ,EAAgB,IAAE,wBAAA64C,EAAA97E,OAAA,EAAA67E,EAAA,EALZ7+E,EAKY,GACtD,gBAAAyzE,IAAA,OAAAmL,EAAA17E,MAAA3E,KAAA4E,UAAA,EATA,IASA,CAAAvD,IAAA,eAAAC,MAEO,SAAaknC,EAAiBs2C,GAClC,SAAOz+E,EAAAy+D,gBAAet2B,EAAS,CAC3Bn1B,GAAIm1B,EACJj1B,KAAM,kBACNmD,QAASooE,EACTrrE,YAAW,4BAAA1P,OAA8BykC,KAC1CvlC,WACP,GAAC,CAAA5B,IAAA,iBAAAC,MAEM,SAAek8B,EAAsBo4C,GACxC,IAAIr5C,EAAQiB,EAAMjB,MACZgS,EAAQhS,EAAMrN,KAChB,SAACzT,GAAI,IAAA+kE,EAAAlL,EAAA,OACD75D,EAAKpI,KAAOuiE,EAASviE,KACL,QAAhBmtE,EAAA5K,EAAS5zD,eAAO,IAAAw+D,OAAA,EAAhBA,EAAkBx7E,WACF,QADQswE,EACpB75D,EAAKuG,eAAO,IAAAszD,OAAA,EAAZA,EAAcj2C,OACV,SAACE,EAAGhd,GAAC,OACDgd,GACCq2C,EAAS5zD,QAAQkN,KAAK,SAACo9C,GAAG,OAAK/pD,EAAElP,KAAOi5D,EAAIj5D,EAAE,GACzC,EACA,EAAE,EACZ,GACH,GAYb,OAVAk7B,EACQA,EAAc5S,UAAY,EAC3BY,EAAQA,EAAMx4B,OAAO,CAClB,IAAI8iE,EAAAW,aAAY34C,IAAA,GAAM+mD,GAAQ,IAAEj6C,SAAU,OAElC,IAAIovC,EAAAmB,cAAar9C,IAAA,GAC5B2O,GAAK,IACRjB,QACAzO,MAAO,OAGf,KAlVC,IAAAgwD,CAkVA,CApY6B,CAAQx9E,EAAA6H,cAAYs1E,SAAzCrP,0CAAoBhmE,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAA8P,WAAAlQ,EAAA4U,mBAAAtU,EAAAH,iBAAA,qDAApB6lE,EAAoBnxD,QAApBmxD,EAAoBlxD,UAAAC,WAFjB,SAEHixD,CAAqB,+MCjElC,IAAA9tE,EAAAzC,EAAA,OAEA0L,GADA1L,EAAA,MACAA,EAAA,QACA8P,EAAA9P,EAAA,OACAuQ,EAAAvQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAsQ,EAAAtQ,EAAA,OACAwQ,EAAAxQ,EAAA,OACA0Q,EAAA1Q,EAAA,OACAyQ,EAAAzQ,EAAA,OACAkQ,EAAAlQ,EAAA,OAEAqM,EAAArM,EAAA,OAEA6rD,EAAA7rD,EAAA,OAkBAoQ,GAhBApQ,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,kBAsBA8B,uBAqBiC,eAAA8gF,EAApBv0E,EAAoBpM,EAAA,SAAAoM,IAAAnM,EAAAC,KAAAkM,EAAA,GAAAu0E,SAApBv0E,yCAAoB,iDAApBA,uDAlBL5L,EAAAyY,aACA5K,EAAA2B,cACAzB,EAAA4B,cACAtC,EAAAgC,sBACA7B,EAAAuB,gBACAjB,EAAA2B,kBACAxB,EAAA6B,eACA9B,EAAA6B,iBACA5G,EAAAmC,YACAnC,EAAA0C,oBACAy9C,EAAAx6C,iBACAnB,EAAAuB,mBACApF,EAAA8B,iBACAiC,EAAAwB,4BAKKvD,CAAoB,sFC3EjC+tB,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,+FCZaA,oBAAgC,CACzC,CAAE0T,GAAI,UAAWE,KAAM,UAAW8a,KAAM,CAAEkwD,MAAO,kBAAoBjN,OAAQ,QAC7E,CAAEj+D,GAAI,WAAYE,KAAM,WAAY8a,KAAM,CAAEkwD,MAAO,mBAAqBjN,OAAQ,WAChF,CACIj+D,GAAI,YACJE,KAAM,YACN8a,KAAM,CAAEkwD,MAAO,oBACfjN,OAAQ,WAEZ,CAAEj+D,GAAI,QAASE,KAAM,QAAS8a,KAAM,CAAEkwD,MAAO,gBAAkBjN,OAAQ,WACvE,CACIj+D,GAAI,YACJE,KAAM,YACN8a,KAAM,CAAEkwD,MAAO,oBACfjN,OAAQ,WAEZ,CACIj+D,GAAI,YACJE,KAAM,YACN8a,KAAM,CAAEkwD,MAAO,oBACfjN,OAAQ,uNCrBhBzzE,EAAA,WACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,SACAA,EAAA,gLAwBoBuK,EATRiF,yBAAA,UASQjF,CAFP,qBAEOA,CADqD,aAGjDA,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAuvE,EAAAt4E,EAAAgJ,wBAAAW,GAAAg4D,MAAAh+C,EAAA3jB,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAuO,EAAAovD,aAAAuF,GAAAvvE,KAAA4a,EAAAovD,aAAAuF,GAAAvvE,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAGR/I,EALIkF,wBAKJlF,GACAA,EAAAiF,yBAAA,cAAajF,EAAA4I,qBAAA,uBAAA0vE,EAAAt4E,EAAAgJ,wBAAAW,GAAAg4D,MAAAh+C,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAA40D,WAAAD,GAAa,GAC/Bt4E,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,0DAPYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAsO,EAAAovD,aAAAuF,8BAfhBt4E,EAAAiF,yBAAA,YAIIjF,EAAA4J,qBAAA,EAAA4uE,EAAA,aAmBJx4E,EAAAkF,iEAfJlF,EAAAoF,sBAEFpF,EAFE6I,qBAAA,UAAA8a,EAAAovD,aAEF/yE,CADI,eAAA2jB,EAAAK,yEAmBMhkB,EAJJiF,yBAAA,cAIIjF,CADH,eAEOA,EAAAmF,iBAAA,oBACAnF,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAUua,EAAA80D,iBAAA1vE,GAAwB,GAE1C/I,EALIkF,wBAKJlF,GACAA,EAAAiF,yBAAA,eAAmCjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA+0D,UAAS,GACjD14E,EAAAmF,iBAAA,gBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAmCjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAg1D,kBAAiB,GACzD34E,EAAAmF,iBAAA,oBAERnF,EADIkF,wBACJlF,0BAEIA,EAAAiF,yBAAA,aAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,uCACPnF,EADwCkF,wBACxClF,IA1DZzI,+BA+DyC,eAAAqhF,EAA5BC,EAA4B,WAOjC,OAAAnhF,EAHJ,SAAAmhF,EACY3nE,EACAs6C,GAAuD7zD,EAAAC,KAAAihF,GADvDjhF,KAAAsZ,SACAtZ,KAAA4zD,cALL5zD,KAAAm7E,aAAyB,GACzBn7E,KAAAsiB,SAAU,CAKd,EAAC,EAAAjhB,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAEQnC,KAAKsZ,OAAO6hE,aAAar4E,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,UAAAhB,EAAAiC,GAAAjC,EAAA4B,KAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,EAAAiC,GAAK,GAAE,OADpElE,KAAKm7E,aAAYl5E,EAAAiC,GAAA,wBAAAjC,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAEpB,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAEM,WACHtB,KAAKm7E,aAAaliD,KAAK,GAC3B,GAAC,CAAA53B,IAAA,aAAAC,MAEM,SAAWyoE,GACd/pE,KAAKm7E,aAAah/B,OAAO4tB,EAAO,EACpC,GAEA,CAAA1oE,IAAA,mBAAAC,MAIO,SAAiBwsB,GAAK,IAAA7sB,EAAAjB,KAEzB,GAAI8tB,EAAMm5C,OAAQ,CACd,IAAME,EAAOr5C,EAAMm5C,OAAOC,MAAM,GAEhC,GAAIC,EAAM,CACN,IAAM+Z,EAAS,IAAI7Z,WACnB6Z,EAAOzZ,WAAWN,EAAM,SACxB+Z,EAAO5Z,iBAAiB,OAAQ,SAAC6Z,GAC7B,IAEwC7pD,EAFlCtkB,KACF1S,EAAAinE,WAAW4Z,EAAIC,WAAmBh6E,SAAW,GAAGiwB,EAAAa,EAChBllB,GAAI,IAAxC,IAAAqkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0C,CACtCn3B,EAAKk6E,aAAaliD,KADoB3B,EAAAh2B,MAA7BwyE,KAEb,CAAC,OAAAxqD,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACDl4B,EAAKk6E,gBAAe76E,EAAAqvC,QAAO1uC,EAAKk6E,cAChCrtD,EAAMm5C,OAAO3lE,MAAQ,EACzB,GACA4/E,EAAO5Z,iBAAiB,QAAS,SAACtkE,GAAC,SAC/B1C,EAAAqU,aAAY,sBAAsB,EAE1C,CACJ,CACJ,GAAC,CAAAtT,IAAA,kBAAAC,MAAA,eAAA+/E,EAAA7/E,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAAo8E,EAAA,OAAA7/E,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACH,OAAAnC,KAAKsiB,SAAU,EACTg/D,EAAgBthF,KAAKm7E,aAAa3/D,OAAO,SAACxY,GAAC,OAAKA,GAAKA,EAAEqgD,MAAM,GAACj+C,EAAAjD,KAAA,EAC9DnC,KAAKsZ,OAAO8lE,aAAa,CAAEjE,aAAcmG,IAAgB,OAC/DthF,KAAK4zD,YAAYlsD,QAAQ,wBAAAtC,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC5B,gBAAA+gF,IAAA,OAAAM,EAAA18E,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,YAAAC,MAEM,SAAU2uC,EAAax0B,GAC1B,OAAOw0B,CACX,KApDI,IAAA1uC,CAoDH,CA3DoC,GA2DpCy/E,SA3DQC,0CAA4B74E,EAAAC,4BAAAC,EAAA8lE,sBAAAhmE,EAAAC,4BAAAG,EAAAqrD,cAAA,kDAA5BotB,EAA4Bn4E,UAAA,6BAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,i6BAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA3D7BhB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,uBAAiBnF,EAAAkF,yBAEjBlF,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KA4CAA,EA3CA4J,qBAAA,EAAAuvE,EAAA,aA2CAn5E,CAxCC,EAAAo5E,EAAA,eAwCDp5E,CAhBC,EAAAq5E,EAAA,yBAAAr5E,EAAA2c,yEA1BI3c,EAAAoF,oBAAA,GAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA+kB,GAyBhB/kB,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,4LA4BA2+D,CAA4B,uJCrEzC,IAAAtwD,EAAA9yB,EAAA,OAIAub,EAAAvb,EAAA,OACAwC,EAAAxC,EAAA,OACAuC,EAAAvC,EAAA,MACAyC,EAAAzC,EAAA,OAGMgtC,EAAuE,GAE7ElrC,0BAAA,SAAgB07E,EACZ7yC,GAGA,OAAKA,KACAqC,EAAcrC,IAHnB5jC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,MAIIimC,EAAcrC,IAAO,EAAInoC,EAAAuoC,cAAaJ,EAAS,mBAAmB1lC,QAC9D1C,EAAAkb,KACI,SAACtY,GAAC,OACGA,EAAE0T,mBAAmB8nB,MAChBx7B,EAAE0T,QACF,EAAE,IAA8B,EAE9CtW,EAAAkyB,YAAW,SAACzO,GAAC,SAAKzK,EAAAQ,IAAG,GAAgC,KAEtDixB,EAAcrC,KAAO,EAXPpvB,EAAAQ,IAAG,GAY5B,EAEAja,wBAAA,SAAgBy1E,EACZ35D,EACAisB,EACA5Z,GAEA,IACwBwJ,EADpBoqD,GAAe,EAAKrqD,EAAAa,EACLwP,GAAK,QAAAhN,EAAA,WAAE,IAAAwQ,EAAfD,EAAI3T,EAAAh2B,MACX,GACIma,EAAKqoB,WAAamH,EAAK13B,MACvBkI,EAAKuoC,KAAKp+C,SAASqlC,EAAK13B,OACxBua,EAAMvX,UAAU2Y,KAAK,SAAClsB,GAAC,OAAKA,EAAE2Q,MAAM/N,SAASqlC,EAAK13B,KAAK,IAC5C,QAD6C23B,EACxDpd,EAAM3R,aAAK,IAAA+uB,GAAXA,EAAav3B,MAAM/N,SAASqlC,EAAK13B,OACnB,MAAd03B,EAAK13B,KACP,CACE,IACkCkkB,EAD9B2T,EAAU,EAAE5T,EAAAU,EACQ+S,EAAKvD,OAAK,IAAlC,IAAAlQ,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAoC,KAAzBiT,EAAS5T,EAAAn2B,MACVuQ,EAAO,IAAIiI,KAAKgU,EAAMjc,MAC5B,OAAQw5B,EAAU,IACd,IAAK,YACDD,MAAWza,EAAA2a,UACPxxB,KAAKuX,OAAG,EACRV,EAAA4a,UAAS15B,EAAMw5B,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,eACDD,MAAWza,EAAA6a,SACP1xB,KAAKuX,OAAG,EACRV,EAAA4a,UAAS15B,EAAMw5B,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,aACDD,MAAWza,EAAA6a,SAAQ35B,KAAM8e,EAAA8a,UAAS55B,EAAMw5B,EAAU,KAC5C,EACA,EACN,MACJ,IAAK,cACDD,MAAWza,EAAA2a,UAASz5B,KAAM8e,EAAA8a,UAAS55B,EAAMw5B,EAAU,KAC7C,EACA,EACN,MACJ,IAAK,aACDD,GACItd,EAAMhc,aAAYxR,EAAAorC,iBAAgBL,EAAU,IACtC,EACA,EACV,MACJ,IAAK,aACDD,GACItd,EAAMhc,aAAYxR,EAAAorC,iBAAgBL,EAAU,IACtC,EACA,EACV,MACJ,IAAK,eACDD,GACItd,EAAM6d,IAAI,kBAAoBN,EAAU,GAAK,EAAI,EACrD,MACJ,QACID,GAAW,EAEvB,CAAC,OAAA9hB,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACDuoD,EAAet2C,GAAWH,EAAKvD,MAAM1iC,MACzC,CACJ,EA5DA,IAAAqyB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GA4DC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOuoD,CACX,oFClGAznD,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,KAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,2ICTA,IAAA+J,EAAA7L,EAAA,OAEa8B,gCAA6B+J,EAAAi4E,SAAQ,OAAQ,IACtDj4E,EAAAk4E,YAAW,SAAU,IACjBl4E,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,KAAG,EAC/BwC,EAAAo4E,SAAQ,OAAKp4E,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,UAC5C,EACDwC,EAAAk4E,YAAW,SAAU,IACjBl4E,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,OAAK,EACjCwC,EAAAo4E,SAAQ,OAAKp4E,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,SAIpCvH,oCAAiC+J,EAAAi4E,SAAQ,OAAQ,IAC1Dj4E,EAAA6zB,OAAM,UAAQ7zB,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,QAAM,EAChDwC,EAAA6zB,OAAM,UAAQ7zB,EAAAg8C,OAAM,CAAEm8B,QAAS,EAAG36E,OAAQ,EAAG,iBAAkB,WAAS,EACxEwC,EAAAk4E,YAAW,mBAAiBl4E,EAAAo4E,SAAQ,4GCdxC,IAAMC,EAAgB,MAAC98E,EAAW,KAAM,IAMxCtF,gBAAA,SAAgBqsC,EAAc1wB,GAC1B,IAAI0mE,EAAM,GACV,GAAI1mE,EACA,QAAWja,KAAOia,EACVja,KAAOia,IAAQymE,EAAcn8E,SAAS0V,EAAIja,MAC1C2gF,GAAG,GAAAj+E,OAAOi+E,EAAM,IAAM,IAAEj+E,OAAG1C,EAAG,KAAA0C,OAAIgkD,mBAC9BzsC,EAAIja,MAKpB,OAAO2gF,CACX,oKClBA,IAGIC,EAHJnsB,EAAAj4D,EAAA,OACAg4D,EAAAh4D,EAAA,OAGIqkF,GAAe,EA8BU,SAAAC,aAAA3gF,EAAAC,IAAAC,KAA7B,SAAAC,EAA8BygF,GAAe,OAAA3gF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtB,GADsBF,EAAAiC,GACrCk+E,EAAMxV,WAAS3qE,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EAAWigF,EAAMC,iBAAgB,OAAApgF,EAAAiC,GAAAjC,EAAA4B,KAAA,WAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,SAChD,SAAA2zD,EAAAnzD,KAAI,QAAO,sCAAwCV,EAAAE,KAAA,EACvCigF,EAAME,iBAAgB,UAAArgF,EAAA4B,KAAA,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBAClC4+E,GAAe,KACfrsB,EAAA0sB,YACI,gDACA,UACA,kBAAM78E,SAASwC,QAAQ,GACzB,yBAAAjG,EAAAwC,OAAA,EAAA9C,EAAA,KAETgD,MAAA3E,KAAA4E,UAAA,CAvCDjF,gBAAA,SAAgB6iF,IACZ,OAAON,CACX,EAQAviF,aAAA,SAAgByG,EAAWg8E,GAAiD,IAAhCxrD,EAAAhyB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IACvDw9E,EAAMxV,YACFqV,GAAQvoD,cAAcuoD,GAC1BA,EAAcQ,YAAY,YACtB,EAAA3sB,EAAAnzD,KAAI,QAAO,2BAUvB,SAIe2/E,EAAc3lE,GAAAwlE,EAAAx9E,MAAA3E,KAAA4E,UAAA,CAbjB09E,CAAeF,EACnB,EAAGxrD,GAEX,EAEAj3B,kBAAA,SAAgB+iF,IACRT,GAAQvoD,cAAcuoD,EAC9B,wJC7BA,IAAA7oE,EAAAvb,EAAA,iBAQA8B,eAGyB,eAAAgjF,EAAZx6E,EAAY,WAcrB,OAAArI,EAjBJ,SAAAqI,IAAApI,EAAAC,KAAAmI,GAKcnI,KAAA4iF,QAAsC,GAEtC5iF,KAAA6iF,WAAyC,GAEzC7iF,KAAA8iF,eAEN,GAEe9iF,KAAA+iF,aAAe,IAAI3pE,EAAAuB,iBAAyB,GAE/C3a,KAAA6C,YAAc7C,KAAK+iF,aAAajoE,gBAEhD,EAAAzZ,IAAA,iBAAAiE,IACA,WACI,OAAOtF,KAAK+iF,aAAa5qE,UAC7B,GAAC,CAAA9W,IAAA,cAAAC,MAEM,WACHtB,KAAKgjF,SACT,GAAC,CAAA3hF,IAAA,UAAAC,MAES,WACN,QAAWD,KAAOrB,KAAK4iF,QACfvhF,KAAOrB,KAAK4iF,SACZ5iF,KAAK8D,aAAazC,GAG1B,QAAWA,KAAOrB,KAAK6iF,WACfxhF,KAAOrB,KAAK6iF,YACZ7iF,KAAK05B,cAAcr4B,GAG3B,QAAWA,KAAOrB,KAAK8iF,eACfzhF,KAAOrB,KAAK8iF,gBACZ9iF,KAAKijF,MAAM5hF,EAGvB,GAEA,CAAAA,IAAA,UAAAC,MAMU,SAAQiS,EAAcupB,GAAmC,IAAA77B,EAAAjB,KAAnBkjF,EAAAt+E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC5D,KAAI2O,GAAQupB,GAAMA,aAAcqmD,UAO5B,MAAM,IAAIC,MACN7vE,EACM,6CACA,8CATVvT,KAAK8D,aAAayP,GAClBvT,KAAK4iF,QAAQrvE,GAAay5B,WAAW,WACjClQ,WACO77B,EAAK2hF,QAAQrvE,EACxB,EAAG2vE,EAQX,GAEA,CAAA7hF,IAAA,eAAAC,MAAA,SAAA+hF,GAAA,SAAAv/E,EAAA6Y,GAAA,OAAA0mE,EAAA1+E,MAAA3E,KAAA4E,UAAA,CAAAd,SAAAw/E,SAAA,kBAAAD,EAAAC,UAAA,EAAAx/E,CAAA,EAIU,SAAayP,GACfvT,KAAK4iF,QAAQrvE,KACbzP,aAAa9D,KAAK4iF,QAAQrvE,WACnBvT,KAAK4iF,QAAQrvE,GAE5B,IAEA,CAAAlS,IAAA,WAAAC,MAMU,SAASiS,EAAcupB,GAAmC,IAAnBomD,EAAAt+E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC7D,KAAI2O,GAAQupB,GAAMA,aAAcqmD,UAI5B,MAAM,IAAIC,MACN7vE,EACM,8CACA,+CANVvT,KAAK05B,cAAcnmB,GACnBvT,KAAK6iF,WAAWtvE,GAAakvE,YAAY,kBAAM3lD,GAAI,EAAEomD,EAQ7D,GAEA,CAAA7hF,IAAA,gBAAAC,MAAA,SAAAiiF,GAAA,SAAA7pD,EAAAJ,GAAA,OAAAiqD,EAAA5+E,MAAA3E,KAAA4E,UAAA,CAAA80B,SAAA4pD,SAAA,kBAAAC,EAAAD,UAAA,EAAA5pD,CAAA,EAIU,SAAcnmB,GAChBvT,KAAK6iF,WAAWtvE,KAChBmmB,cAAc15B,KAAK6iF,WAAWtvE,WACvBvT,KAAK6iF,WAAWtvE,GAE/B,IAEA,CAAAlS,IAAA,eAAAC,MAKU,SAAaiS,EAAc0vE,GACjCjjF,KAAKijF,MAAM1vE,GACXvT,KAAK8iF,eAAevvE,GAAQ0vE,CAChC,GAAC,CAAA5hF,IAAA,kBAAAC,MAES,SAAgBiS,GACtB,OACIvT,KAAK8iF,eAAevvE,aAAiB6F,EAAAoqE,gBACnCxjF,KAAK8iF,eAAevvE,EAE9B,GAEA,CAAAlS,IAAA,QAAAC,MAIU,SAAMiS,GACRA,KAAQvT,KAAK8iF,iBACT9iF,KAAK8iF,eAAevvE,aAAiB6F,EAAAoqE,aACpCxjF,KAAK8iF,eAAevvE,GAAcwJ,cAC5B/c,KAAK8iF,eAAevvE,IAC1BvT,KAAK8iF,eAAevvE,YAElBvT,KAAK8iF,eAAevvE,GAEnC,GAEA,CAAAlS,IAAA,YAAAC,MACU,SAAUmiF,GAChB,IAGsBnsD,EAHhBosD,EAAO36D,OAAOC,KAAKhpB,KAAK8iF,gBAAgBtnE,OAAO,SAACmoE,GAAC,OACnDA,EAAE/9E,SAAS69E,EAAS,GACtBpsD,EAAAa,EACgBwrD,GAAI,IAAtB,IAAArsD,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MACIp4B,KAAKijF,MADK3rD,EAAAh2B,MAEb,OAAAgoB,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,IAAC,CAhJoB,GAgJpBwpD,SAhJQx6E,yCAAY,qDAAZA,EAAY8U,QAAZ9U,EAAY+U,UAAAC,WAFT,SAEHhV,CAAY,sNCZzB,IAAAwoB,EAAA9yB,EAAA,OAoDM+lF,EAAM,KACNC,EAAO,EAAID,EACXE,EAAQ,GAAKF,EAEbG,EAA+C,CACjDC,MAAOF,EACPG,OAAQH,EACRI,KAAML,EACNM,MAAON,EACPl/C,IAAKi/C,EACLQ,KAAMR,EACN5pE,KAZS,GAaT4mB,MAbS,GAcT3mB,OAfW,EAgBX6mB,QAhBW,GAmBTujD,EAA8B,CAChCC,cAAc,EACdrpC,QAAQ,GAOZ,SAAgBvP,EAAgBs2C,GAC5B,IAAMuC,GAASvC,GAAO,IAAIr7E,MAAM,KAChC,OAAO49E,EAAMv/E,OAAS,GACfu/E,EAAM,GAAKR,EAAaQ,EAAM,GAAGvxD,eAClC,CACV,CAEA,SAAgBwxD,EAAU7/B,GACtB,SAAOh0B,EAAA2H,YAD4B1zB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,IAAIkV,KACrC4xB,EAAgBiZ,GAC5C,CAaA,SAAgB3J,EACZtkC,EACA+tE,GAEA,KAAMA,aAAwBjmD,OAAQ,OAAO6lD,EAAc,IACzB/sD,EADyBD,EAAAa,EACrCusD,GAAY,IAAlC,IAAAptD,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAoC,KAAAssD,EAAAC,EAAzBC,EAAOttD,EAAAh2B,MACd,IACqB,MAAjBsjF,EAAQhxE,MACRgxE,EAAQhxE,QAA8B,QAA1B8wE,EAAKhuE,EAAQ2b,SAASze,YAAI,IAAA8wE,OAAA,EAArBA,EAAuBrxE,KAClB,QADoBsxE,EAC1CjuE,EAAQ2b,SAAS1e,aAAK,IAAAgxE,GAAtBA,EAAwB/+E,SAASg/E,EAAQhxE,QAErCixE,EAAgBnuE,EAASkuE,GAOzB,OAAOA,EAAQl9C,KAG3B,CAMA,OAAApe,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACA,OAAOkrD,CACX,CAEA,SAAgBQ,EAAe5+E,EAE3B2+E,GAAuB,IADrB/yE,EAAI5L,EAAJ4L,KAAMC,EAAQ7L,EAAR6L,SAAU2C,EAAIxO,EAAJwO,KAAM4d,EAAQpsB,EAARosB,SAGlByyD,EAAW,IAAIhrE,KAAKjI,GACtBu5B,EAAU,EACN25C,EAAeH,EAAfG,WACR,OAAKA,IAEDA,EAAW7pC,kBAAkB1c,OAC7BumD,EAAW7pC,OAAOrK,MAAM,SAAC7tC,GAAC,IAAAgiF,EAAA,OAAS,MAAJvwE,GAAY,QAARuwE,EAAJvwE,EAAMymC,cAAM,IAAA8pC,OAAA,EAAZA,EAAcp/E,SAAS5C,EAAE,KAExDooC,GAAW,GAEX25C,EAAWE,cACXt0D,EAAA2a,aAAS3a,EAAA2H,YAAWzmB,EAAMC,GAAW0yE,EAAUO,EAAWE,cAE1D75C,GAAW,GACX25C,EAAWG,aAAYv0D,EAAA6a,SAAQ35B,EAAM2yE,EAAUO,EAAWG,aAC1D95C,GAAW,GACX25C,EAAWI,YAAcJ,EAAWI,YAAcrzE,IAClDs5B,GAAW,GAEX25C,EAAWK,YACXN,EAAS9lD,WAAa8lD,EAAS7lD,aAAe,IAC1C8lD,EAAWK,WAAW,IAC1BN,EAAS9lD,WAAa8lD,EAAS7lD,aAAe,GAC1C8lD,EAAWK,WAAW,KAE1Bh6C,GAAW,GAEX25C,EAAWM,WACXxzE,GAAQkzE,EAAWM,UAAU,IAC7BxzE,EAAOkzE,EAAWM,UAAU,KAE5Bj6C,GAAW,GACX25C,EAAWO,YAAcP,EAAWO,YAAcxzE,IAClDs5B,GAAW,GAEX25C,EAAWQ,cACXR,EAAWQ,aAAa3/E,SAASysB,EAAShf,MAE1C+3B,GAAW,GACX25C,EAAWS,WAAaT,EAAWS,UAAU5/E,SAASysB,EAAS9e,QAC/D63B,GAAW,GACRA,GAAWriB,OAAOC,KAAK+7D,GAAY//E,OAC9C,CAnGArF,kBAAA+rC,EAOA/rC,YAAA6kF,EAIA7kF,2BAAA,SAAgB8lF,EACZlvE,EACAG,EACA+tE,GAEA,OAAOluE,EAAUiF,OACb,SAACxY,GAAC,IAAA0iF,EAAA,QAC8D,QAA5DA,EAAC1qC,EAAgBnsB,IAAA,GAAMnY,GAAO,IAAE2b,SAAUrvB,IAAKyhF,UAAa,IAAAiB,GAA3DA,EAA6DzqC,OAAM,EAEhF,EAEAt7C,mBAAAq7C,EA+BAr7C,kBAAAklF,6MClIA,IAAAl0D,EAAA9yB,EAAA,OACA+tC,EAAA/tC,EAAA,OACA8nF,EAAA9nF,EAAA,OACAi4D,EAAAj4D,EAAA,OAqBA,SAAS+nF,EAAU/zE,GACf,IAAMg0E,KAAWF,EAAAG,iBAAgBj0E,EAAM,OACvC,SAAA9N,UAAU4sB,EAAAkI,QAAOgtD,EAAU,YAAW,KAAA9hF,UAAI4sB,EAAAkI,QAAOgtD,EAAU,UAAS,IACxE,CAEA,SAASE,EAAal0E,GAClB,SAAA9N,UAAU4sB,EAAAkI,QAAOhnB,EAAM,YAC3B,CA0GA,SAASm0E,EAAkBhE,GACvB,OAAOA,EACFp6C,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,SAAU,MAClBA,QAAQ,OAAQ,OAChBA,QAAQ,iBAAkB,MACnC,CA/GAjoC,2BAAA,SAAgBkiD,EAAyB/zB,GAAe,IAAAm4D,EAAAC,EAAAC,EAC9CC,EAA0B,GAC1B3yE,EAAcuyE,EAAiB,GAAAjiF,OAC9B+pB,EAAMijB,MAAQ,IAAEhtC,OAAG+pB,EAAMza,GAAK,WAAaya,EAAMza,GAAK,IAAM,KAE7D3N,EAAWsgF,EAAiB,GAAAjiF,OAAI+pB,EAAMpoB,WAC5C0gF,EAAOntD,KAAK,CAAC,QAAS,cACtBmtD,EAAOntD,KAAK,CAAC,UAAW,QACxBmtD,EAAOntD,KAAK,CAAC,QAAS,WACtBmtD,EAAOntD,KAAK,CAAC,MAAK,GAAAl1B,OAAK+pB,EAAMu4D,eAC7BD,EAAOntD,KAAK,CACR,UAAS,GAAAl1B,OACN,IAAI+V,KACHgU,EAAM0C,WACAG,EAAA0H,kBAAc1H,EAAAzV,KAAI4S,EAAMjc,KAAM,CAAE+uB,MAAO,EAAGE,QAAS,KACnDhT,EAAMjc,MACdy0E,iBAENF,EAAOntD,KAAK,CACR,QAAO,GAAAl1B,OAEH+pB,EAAM0C,WACAG,EAAA0H,kBACI1H,EAAAzV,KAAI4S,EAAMjc,KAAM,CAAE+uB,MAAO,GAAIE,QAAS,KACxCwlD,eAAW,EACb31D,EAAA2H,YAAWxK,EAAMjc,KAAoB,QAAhBo0E,EAAEn4D,EAAMhc,gBAAQ,IAAAm0E,IAAI,IAAIK,iBAG3DF,EAAOntD,KAAK,CAAC,UAAS,GAAAl1B,OAAK+pB,EAAM3sB,SACjCilF,EAAOntD,KAAK,CAAC,cAAexlB,IAC5B2yE,EAAOntD,KAAK,CAAC,WAAYvzB,IACzB,IAAM+O,GACa,QAAfyxE,EAAAp4D,EAAM/V,iBAAS,IAAAmuE,OAAA,EAAfA,EAAiB3yE,QACP,QADW4yE,EACrBr4D,EAAMrZ,YAAI,IAAA0xE,OAAA,EAAVA,EAAYx/E,MAAM,OAClBmnB,EAAMmwB,WACN,OACJmoC,EAAOntD,KAAK,CACR,YAAW,MAAAl1B,OACL0Q,EAAI,YAAA1Q,OAAW+pB,EAAMrZ,MAAQqZ,EAAMuiB,cAE7C,IAAMk2C,EAAWH,EACZ9qE,IAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAO3E,EAAKwG,EAAA,YAAA/D,OAAP+D,EAAA,GAAmB,KAAA/D,OAAIgkD,mBAAmBzmD,GAAM,GACzDuT,KAAK,MACV,yCAAA9Q,OAA0CwiF,EAC9C,EAEA5mF,6BAAA,SAAgBgiD,EAA2B7zB,GAAe,IAAA04D,EAAAC,EAChDC,EAAM54D,EAAM0C,QAAUu1D,EAAeH,EACrClvE,EAAe,CACjBqP,OAAQ,WACR4gE,KAAM74D,EAAM3sB,MACZuV,QAAO,GAAA3S,OAAK+pB,EAAMijB,MAAQ,IAAEhtC,OACxB+pB,EAAMza,GAAK,WAAaya,EAAMza,GAAK,IAAM,IAE7C3N,SAAUooB,EAAMpoB,SAChBkhF,KAAK,EACLC,MAAK,GAAA9iF,OAAK2iF,EAAI54D,EAAMjc,MAAK,KAAA9N,OAAI2iF,KACzB/1D,EAAA2H,YAAWxK,EAAMjc,KAAoB,QAAhB20E,EAAE14D,EAAMhc,gBAAQ,IAAA00E,IAAI,OAG3CM,GAAUh5D,EAAM5X,WAAa,IAAIoF,IAAI,SAACtY,GAAM,OAAKA,EAAE0D,OAAS1D,CAAC,GAC7DuT,IACc,QAAfkwE,EAAA34D,EAAMvX,iBAAS,IAAAkwE,GAAfA,EAAiBzhF,OAAS8oB,EAAMvX,UAAY,OAAS,CAACuX,EAAMpV,SAC/D4C,IAAI,SAACtY,GAAM,OAAKA,GAAG0D,OAAS1D,CAAC,GAC/B,OAAI8jF,EAAO9hF,QAAUuR,EAAUvR,UAC3B0R,EAAQiuC,OAAMmR,EAAAnmB,QAAM,GAAA5rC,OAAAqe,EAAK0kE,GAAM1kE,EAAK7L,KAAY1B,QACpD,+CAAA9Q,UAAsD6nC,EAAAI,eAClDt1B,GAER,EAEA/W,gCAAA,SAAgB8hD,EACZ3zB,GACqC,IAAAi5D,EAAAC,EAAAC,EAArCr0E,EAAAhO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,SAExBkpB,EAAMjc,OAAMic,EAAMjc,KAAOiI,KAAKuX,OACnC,IAAM5uB,EAAY,CACdhE,KAAM,2BACNyoF,IAAK,WACLC,QAAS,IAAIrtE,KAAKgU,EAAMjc,MAAMy0E,cAC9Bc,SAAOz2D,EAAA2H,YAAWxK,EAAMjc,KAAoB,QAAhBk1E,EAAEj5D,EAAMhc,gBAAQ,IAAAi1E,IAAI,IAAIT,cACpDe,QAASv5D,EAAM3sB,MACf4vC,KAAI,GAAAhtC,OAAK+pB,EAAMijB,MAAQ,IAAEhtC,OACrB+pB,EAAMza,GAAK,WAAaya,EAAMza,GAAK,IAAM,IAE7C3N,SAAUooB,EAAMpoB,SAChB4hF,OAAqB,QAAfN,EAAEl5D,EAAM0C,eAAO,IAAAw2D,MAErBl5D,EAAM0C,gBAAgB/tB,EAAK2kF,MAC/B,IAAMN,GAAUh5D,EAAM5X,WAAa,IAAIoF,IAAI,SAACtY,GAAM,OAAKA,EAAE0D,OAAS1D,CAAC,GAC7DuT,IACc,QAAf0wE,EAAAn5D,EAAMvX,iBAAS,IAAA0wE,GAAfA,EAAiBjiF,OAAS8oB,EAAMvX,UAAY,OAAS,CAACuX,EAAMpV,SAC/D4C,IAAI,SAACtY,GAAM,OAAKA,GAAG0D,OAAS1D,CAAC,GAC/B,OAAI8jF,EAAO9hF,QAAUuR,EAAUvR,UAC3BvC,EAAK8kF,MAAKzxB,EAAAnmB,QAAM,GAAA5rC,OAAAqe,EAAK0kE,GAAM1kE,EAAK7L,KAAY1B,QAChC,WAATjC,EAAiB,wDAAA7O,UACsC6nC,EAAAI,eACpDvpC,IACH,sDAAAsB,UACqD6nC,EAAAI,eAClDvpC,GAEd,oNCxIAovC,EAAAh0C,EAAA,OAASkrB,uCAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAAusC,EAAA1pC,YAAY,IACrB,IAAAs/E,EAAA5pF,EAAA,OAASkrB,iDAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAAmiF,EAAAC,sBAAsB,IAC/B,IAAAC,EAAA9pF,EAAA,OAASkrB,yCAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAAqiF,EAAAC,cAAc,IACvB,IAAAC,EAAAhqF,EAAA,OAASkrB,0CAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAAuiF,EAAAt/E,eAAe,IACxB,IAAAu/E,EAAAjqF,EAAA,OAASkrB,wCAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAAwiF,EAAAC,aAAa,IACtB,IAAAC,EAAAnqF,EAAA,OAASkrB,kCAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAA0iF,EAAAC,OAAO,IAChB,IAAAC,EAAArqF,EAAA,OAASkrB,4CAAA,CAAAy+D,YAAA,EAAAliF,IAAA,kBAAA4iF,EAAAtkB,iBAAiB,IAE1B3pC,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,wMCnBA9B,EAAA,WACAuC,EAAAvC,EAAA,SAEAA,EAAA,OACAA,EAAA,+CAEA8B,qBAAwCG,EAAA,SAAAqoF,IAAApoF,EAAAC,KAAAmoF,EAAA,GAIxCxoF,wBAGkC,eAAAyoF,EAArBC,EAAqB,WAK1B,OAAAvoF,EAJJ,SAAAuoF,EACY73E,EACA3P,EACAC,GAAyBf,EAAAC,KAAAqoF,GAFzBroF,KAAAwQ,UACAxQ,KAAAa,YACAb,KAAAc,MACT,EAAC,EAAAO,IAAA,cAAAC,OAAAgnF,EAAA9mF,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SACItD,KAAKuoF,gBAAc,wBAAAtmF,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC7B,SAAAnB,IAAA,OAAAypF,EAAA3jF,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAAA,eAAAknF,EAAAhnF,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SACItD,KAAKuoF,gBAAc,wBAAAnjF,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC7B,gBAAAjB,IAAA,OAAAypF,EAAA7jF,MAAA3E,KAAA4E,UAAA,EAJA,IAIA,CAAAvD,IAAA,eAAAC,MAAA,eAAAmnF,EAAAjnF,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAA+C,EAAA2/E,EAAAznF,EAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACEnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAkD,SAAAhE,KAAA,EACvDnC,KAAKa,UAAUgC,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC5D8F,SAAW/I,KAAKa,UAAUyE,IAAI,0BAA4B,IAC1DojF,GAAgB3/E,EAASmmB,KAAK,SAAClsB,GAAC,OAClC/B,EAAKuP,QAAQ9C,IAAI9H,SAAS5C,EAAE,KAG5BhD,KAAKwQ,QAAQK,SAAS,CAAC,MAC1B1K,EAAA7C,OAAA,WACQolF,GAAY,wBAAAviF,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACxB,gBAAAuoF,IAAA,OAAAE,EAAA9jF,MAAA3E,KAAA4E,UAAA,EAbA,MARG,IAAA0jF,CAqBH,CA1B6B,GA0B7BF,SA1BQC,0CAAqBjgF,EAAA4U,mBAAA1U,EAAA6E,QAAA/E,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAtU,EAAAD,qBAAA,qDAArB4/E,EAAqBprE,QAArBorE,EAAqBnrE,UAAAC,WAFlB,SAEHkrE,CAAqB,iGCblC,IAAA13D,EAAA9yB,EAAA,OAIA8B,mBAAA,SAAgBivB,EAAiBlY,GAC7B,IAAI4Z,EAAkB5Z,EAAQ4Z,SAAW,GACzCA,SAAUA,EAAQq4D,OAAO,GAAG7kC,cAAgBxzB,EAAQs4D,MAAM,IAC5C,GAAA7kF,OAAMusB,EAAO,WAAAvsB,UAAU4sB,EAAAkI,QAAO,IAAI/e,KAAKpD,EAAQkN,KAAM,gBAAmB,iBAC1F,2mBCTA,IAAAra,EAAA1L,EAAA,OAEAuC,EAAAvC,EAAA,MACAgrF,EAAAhrF,EAAA,OAiBIirF,EAAY,MA4EhB,SAAgBpqD,EAAUqqD,GAA+B,IAAjBloD,EAAAj8B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACpD,OAAOozB,KAAK6I,MAAM7I,KAAKgxD,UAAYD,EAAOloD,IAAUA,CACxD,CAmCsC,SAAAooD,aAAAznF,EAAAC,IAAAC,KAA/B,SAAAC,EACHc,EACA4E,GAAiB,IAAAuQ,EAAA,OAAAnW,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEXyV,SAAMvQ,EAAO0N,KACf8zE,EAAAK,sBAAqBr6D,IAAA,GAEdg6D,EAAAM,kBAAgB,IACnB1mF,UAEPR,EAAAiC,GAAA2qB,EAAA5sB,EAAAo3B,GAAAxK,EAAA5sB,EAAAi9C,GAAA,GAAAj9C,EAAAE,KAAA,EAEawB,QAAQ67C,KAAK,CACnB5nC,EAAIM,kBAAkB4V,MACjBhrB,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEsrB,MAAiB,IACrCrrB,YACL2U,EAAII,cAAc/U,cACpB,OAAAhB,SAAAk9C,GAAAl9C,EAAA4B,KAAA5B,EAAAmnF,MAAAnnF,EAAAo3B,IAAAp3B,EAAAi9C,GAAAj9C,EAAAk9C,IAAAl9C,EAAAonF,GAAA,GAAApnF,EAAAqnF,GAAA,CACFhnE,QAAS,SAACgG,IAAC,OAAM1Q,EAAIM,kBAAkBoK,QAAUgG,EAAC,EAClD5gB,MAAO,kBAAMkQ,EAAIlQ,OAAO,GAAAzF,EAAAqB,OAAA,YAAArB,EAAAiC,IAAAjC,EAAAmnF,GAAAnnF,EAAAonF,GAAApnF,EAAAqnF,KAAA,yBAAArnF,EAAAwC,OAAA,EAAA9C,EAAA,KAE/BgD,MAAA3E,KAAA4E,UAAA,CApIDjF,aAAA,SAAgB0F,EAAWkO,GACvBu1E,EAAYv1E,CAChB,EAUA5T,MAAA,SAAgBgD,EACZiQ,EACA22E,EACAC,GAG4B,IAF5BC,EAAA7kF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwB,QAExB8kF,EAAA9kF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmBkkF,EAEnB,IAAIxmF,OAAOqnF,OACPrnF,OAAOsnF,OAJXhlF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,IAI2B,CACvB,IAKUilF,GAMHC,GAXDC,EAAmB,CACrB,iBACA,iBACA,kBAEAP,GACAK,GAAAznF,SAAQqnF,GAAO9kF,MAAAklF,GAAA,OAAA9lF,OACL2lF,EAAQ,QAAA3lF,OAAO6O,EAAI,QAAA7O,OAAOwlF,IAAGxlF,OAChCgmF,EAAM,CACTP,MAGJM,GAAA1nF,SAAQqnF,GAAO9kF,MAAAmlF,GAAA,OAAA/lF,OAAO2lF,EAAQ,QAAA3lF,OAAO6O,EAAI,QAAA7O,OAAOwlF,IAAGxlF,OAAOgmF,GAElE,CACJ,EAOApqF,kBAAA,SAAgBqqF,EAAgBhhE,EAAgB1N,GAC5C,IAAMja,EAAM2nB,EAAK,GACjB,OAAI1N,GAAOja,KAAOia,EACP0N,EAAKhkB,OAAS,EACfglF,EAAgBhhE,EAAK4/D,MAAM,GAAIttE,EAAIja,IAAQ,IAC3Cia,EAAIja,GAEP,IACX,EAOA1B,SAAA,SAAgBgwC,IAAiD,IAAhBtuC,EAAAuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,GACrDokB,EAAO,GACb,OAF4BpkB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE5B4W,OAAO,SAACyuE,GACjB,IAAM52E,EAAKhS,EAAM4oF,EAAG5oF,GAAO4oF,EACrBC,EAASlhE,EAAKpjB,SAASyN,GAC7B,OAAK62E,GAAQlhE,EAAKiQ,KAAK5lB,IACf62E,CACZ,EACJ,EAOAvqF,YAAA++B,EASA/+B,YAAA,SAAgBwqF,EAAUnI,GAAwC,IAAlBh9E,EAAAJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAE7D,IADAo9E,EAAG,GAAAj+E,OAAMi+E,GACFA,EAAIh9E,OAASA,GAAQg9E,EAAG,IAAAj+E,OAAOi+E,GACtC,OAAOA,CACX,EAOAriF,eAAA,SAAgBigC,EACZ56B,GAIA,QAHAolF,EAAAxlF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,gEAEZo9E,EAAM,GACD5vD,EAAI,EAAGA,EAAIptB,EAAQotB,IACxB4vD,GAAOoI,EAAM1rD,EAAU0rD,EAAMplF,SAEjC,OAAOg9E,CACX,EAQAriF,mBARC,SAQqByuB,EAAgBzR,EAAA2c,GAAA,OAAA2vD,EAAAtkF,MAAA3E,KAAA4E,UAAA,EA2BtCjF,YAAA,SAAgB4nE,EAAU8iB,GAOtB,QANMC,EAAa,IAAIC,OACnB,+DACA,MAEAC,EAAa,KACXC,EAAU,CAAC,IACTD,EAAaF,EAAWI,KAAKL,IAAO,KAAAM,EACpCH,EAAW,GAAGxlF,QAA4B,MAAlBwlF,EAAW,IAAYC,EAAQxxD,KAAK,IAChEwxD,EAAQA,EAAQzlF,OAAS,GAAGi0B,KACxBuxD,EAAW,GACQ,QADNG,EACPH,EAAW,UAAE,IAAAG,OAAA,EAAbA,EAAe/iD,QAAQ,IAAI2iD,OAAO,KAAM,KAAM,KAC9CC,EAAW,GAEzB,CACA,IAAMI,EAAoBH,EAAQtuC,OAAO,EAAG,GAAG,GAe/C,OAdiBsuC,EAAQnvE,IAAI,SAACoxD,IAE1B,QADMznB,GAAU,GACP7yB,GAAI,EAAGA,GAAIs6C,GAAI1nE,OAAQotB,KAAK,CACjC,IAAM/wB,IAAOupF,EAAQx4D,KAAM,IAAIzrB,MAAM,KAAKkO,KAAK,KAAKme,cACpD,IAAI,IAAA63D,EACA5lC,GAAQ5jD,IAAO+C,KAAKo1B,MAAY,QAAPqxD,EAACne,GAAIt6C,WAAE,IAAAy4D,OAAA,EAANA,EAAQjjD,QAAQ,IAAK,KACnD,OACIqd,GAAQ5jD,IAAOqrE,GAAIt6C,KAAM,EAC7B,EACqB,SAAjB6yB,GAAQ5jD,KAAoC,UAAjB4jD,GAAQ5jD,OACnC4jD,GAAQ5jD,IAAwB,SAAjB4jD,GAAQ5jD,IAC/B,CACA,OAAO4jD,EACX,EAEJ,EAEAtlD,6BAAA,SAAgBmrF,EAA2Bh9D,GAAiB,IAAA7sB,EAAAjB,KACxD,OAAO,IAAI2D,QAAgB,SAACC,EAASmnF,GAEjC,GAAIj9D,EAAMm5C,OAAQ,CACd,IAAMhiB,EAAUn3B,EAAMm5C,OAChBE,EAAOliB,EAAQiiB,MAAM,GAE3B,GAAIC,EAAM,CACN,IAAM+Z,EAAS,IAAI7Z,WACnB6Z,EAAOzZ,WAAWN,EAAM,SACxB+Z,EAAO5Z,iBAAiB,OAAQ,SAAC6Z,IAC7Bv9E,EAASu9E,GAAIC,WAAmBh6E,QAChC69C,EAAQ3jD,MAAQ,EACpB,GACA4/E,EAAO5Z,iBAAiB,QAAS,SAACtkE,IAC9B/B,EAAKqhB,QAAU,GACfyoE,EAAO,CAAC,qBAAsB/nF,IAClC,EACJ,CACJ,CACJ,EACJ,EAMArD,YAAA,SAAgBqrF,EAAU5hC,GAAgC,IAAf6hC,EAASrmF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,IACnD,GAAIwkD,aAAgB5qB,OAAS4qB,EAAKpkD,OAAS,EAAG,CAC1C,IACMkmF,EADOniE,OAAOC,KAAKogC,EAAK,IACN5tC,OAAO,SAACna,GAAG,OAAKA,KAAO+nD,EAAK,EAAE,GACtD,SAAArlD,OAAUmnF,EAAWr2E,KAAKo2E,GAAU,MAAAlnF,OAAKqlD,EACpC9tC,IAAI,SAACG,GAAI,OACNyvE,EACK5vE,IAAI,SAACja,GAAG,IAAA4E,EAAA,OAC2B,QAD3BA,EACJ7B,KAAKC,UAAUoX,EAAKpa,KAAS,UAAE,IAAA4E,OAAA,EAAhCA,EAAmC2hC,QAAQ,IAAK,IAAI,GAEvD/yB,KAAKo2E,EAAU,GAEvBp2E,KAAK,MACd,CACA,MAAO,EACX,EAOAlV,eAAA,SAAgB+nE,EAAayjB,EAAkBC,GAC3C,IAAMnmC,EAAUO,SAASC,cAAc,KACvCR,EAAQomC,aACJ,OACA,iCAAmCtjC,mBAAmBqjC,IAE1DnmC,EAAQomC,aAAa,WAAYF,GAEjClmC,EAAQS,MAAM5+B,QAAU,OACxB0+B,SAASzU,KAAK8U,YAAYZ,GAE1BA,EAAQqmC,QAER9lC,SAASzU,KAAKmV,YAAYjB,EAC9B,EAEAtlD,WAAA,SAAgB4rF,EAASloF,GACrB,IACMmoF,EADYnoF,EAAMsD,MAAM,KAAK,GACVihC,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpD6jD,EAAcC,mBAChBC,KAAKH,GACA7kF,MAAM,IACN2U,IAAI,SAACikB,GACF,MAAO,KAAO,KAAOA,EAAEqsD,WAAW,GAAGtI,SAAS,KAAKsF,OAAM,EAC7D,GACC/zE,KAAK,KAEd,OAAOzQ,KAAKo1B,MAAMiyD,EACtB,EAOA9rF,UAAA,SAAgB8yB,EAAiBo5D,GAG7B,QAFMC,EAAK1pE,EAAOypE,GACZE,EAAM,GACLD,EAAM9mF,QAAQ,CAEjB,IAAM7C,EAAO2pF,EAAMnwC,MACfnd,MAAMwtD,QAAQ7pF,GAEd2pF,EAAM7yD,KAAIt0B,MAAVmnF,EAAK1pE,EAASjgB,IAEd4pF,EAAI9yD,KAAK92B,EAEjB,CAEA,OAAO4pF,EAAIE,SACf,EASAtsF,uBAAA,SAAgBusF,EACZC,EACAC,EACAC,EACAC,GAEA,OACKH,GAAME,GAAMF,EAAKG,GACjBD,GAAMF,GAAME,EAAKD,GACjBA,EAAKC,GAAMD,GAAME,GACjBA,EAAKH,GAAMG,GAAMF,CAE1B,EAEA,IACMG,EAmBN,SAASC,EAAMv5D,EAAG3U,EAAGihB,EAAGtnB,GACpB,OAAO,WAKH,IAAIqnB,GAJJrM,KAAO,IACP3U,KAAO,GAGW,EAClB2U,SAAI3U,EAAKA,IAAM,EACfA,GAJAihB,KAAO,IAIGA,GAAK,GAAM,EAIrBA,GAHAA,EAAKA,GAAK,GAAOA,IAAM,KAEvBD,EAAKA,GADLrnB,EAAS,GALTA,KAAO,GAKO,GACA,GACA,GACNqnB,IAAM,GAAK,UACvB,CACJ,CAlCaktD,CAAM,WAAY,UAAY,WAO3C,SAASC,EAAMzK,GAEX,QADI0K,EAAI,WAAa1K,EAAIh9E,OAChBotB,EAAI,EAAGA,EAAI4vD,EAAIh9E,OAAQotB,IAEvBs6D,GADJA,EAAI10D,KAAK20D,KAAKD,EAAI1K,EAAI4J,WAAWx5D,GAAI,cACvB,GAAOs6D,IAAM,GAChC,OAAO,WACHA,SAAI10D,KAAK20D,KAAKD,EAAKA,IAAM,GAAK,YAC9BA,EAAI10D,KAAK20D,KAAKD,EAAKA,IAAM,GAAK,aACtBA,GAAKA,IAAM,MAAQ,CAC/B,CACJ,CAlBaD,CAAM,UACoCG,IA0CvD,SAAgBC,IACZ,IACMC,GADO,IAAIhzE,MAEZC,mBACGyrC,SAASunC,cAAc,QAAQC,aAAa,SACxCC,UAAUC,UAEjBl6D,cACL,OAAO85D,EAAa9iB,QAAQ,MAAQ,GAAK8iB,EAAa9iB,QAAQ,MAAQ,CAC1E,CAgFA,SAASmjB,EAAiBC,GACtB,OAAOA,GAAWp1D,KAAKq1D,GAAK,IAChC,CAMA,SAAgBC,EAASC,GAIrB,MAAO,CAHCj5B,SAASi5B,EAAI3E,MAAM,EAAG,GAAI,IAC1Bt0B,SAASi5B,EAAI3E,MAAM,EAAG,GAAI,IAC1Bt0B,SAASi5B,EAAI3E,MAAM,EAAG,GAAI,IAEtC,CAIA,SAAgB4E,EAAkBC,EAAWC,EAAWC,GACpD,IACIpW,EAAIkW,EAAK,IAAMC,EAAK,GAAKD,EAAK,IAAME,EACpCrvE,EAAImvE,EAAK,IAAMC,EAAK,GAAKD,EAAK,IAAME,EACxC,MAAO,CAAC31D,KAAK41D,MAHLH,EAAK,IAAMC,EAAK,GAAKD,EAAK,IAAME,GAGjB31D,KAAK41D,MAAMrW,GAAIv/C,KAAK41D,MAAMtvE,GACrD,CAEA,SAAgBuvE,EAASv9C,EAAWinC,EAAWj5D,GAC3C,SAASwvE,EAAevuD,GACpB,IAAMguD,EAAMhuD,EAAE+jD,SAAS,IACvB,OAAqB,GAAdiK,EAAIvoF,OAAc,IAAMuoF,EAAMA,CACzC,CACA,MAAO,IAAMO,EAAex9C,GAAKw9C,EAAevW,GAAKuW,EAAexvE,EACxE,CA/JA3e,uBAAA,SAAgBouF,IAA0D,IAArChF,EAAAnkF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAKi8B,EAAAj8B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACrE,OAAOozB,KAAK6I,MAAM0rD,KAAUxD,EAAOloD,IAAUA,CACjD,EAiCAlhC,mBAAA,SAAgBquF,IACZ,OAAOnB,IAAiB,QAAU,QACtC,EAGAltF,eAAAktF,EAWAltF,mBAAA,SAAgBiV,EAAiBlE,GAAoC,IAAnBu9E,EAAArpF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAC3DojE,EAAU,GACd,QAAW3mE,KAAOqP,EAAKgT,SACfhT,EAAKgT,SAASriB,aAAgBkI,EAAAqgC,UAC9Bo+B,EAAO,GAAAjkE,OAAAqe,EACA4lD,GAAO5lD,EACPxN,EAAiBlE,EAAKgT,SAASriB,GAAiB,GAAA0C,OAAK1C,EAAG,QAEvDqP,EAAKgT,SAASriB,GAAKqT,OAC3BszD,EAAQ/uC,KAAI,GAAAl1B,OAAIkqF,GAAMlqF,OAAG1C,IAGjC,OAAO2mE,CACX,EAEAroE,oBAAA,SAAgB6kD,EAAkB0pC,GAC9B,QAAW7sF,KAAO6sF,GACVA,QAAI7sF,IAAwD,KAAb6sF,EAAI7sF,YAC5C6sF,EAAI7sF,EAGvB,EAEA1B,wBAAA,SAAgByjD,EAAsB+qC,GAClC,SAAApqF,OAAUoqF,EAAK,GAAGrqC,eAAa//C,OAAGoqF,EAAKC,UAAU,GACrD,EAEAzuF,aAAA,SAAgB0uF,EACZ9xE,GAC4C,IAA5C+xE,EAAA1pF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,MAACK,EAAW,KAAM,IAEzC,OAAOsX,EAAMf,OAAO,SAACxY,GAAC,OAAMsrF,EAAc1oF,SAAS5C,EAAE,EACzD,EAEArD,iBAAA,SAAgB4uF,IACZ,MACI,CACI,iBACA,mBACA,iBACA,OACA,SACA,QACF3oF,SAASqnF,UAAUuB,WAEpBvB,UAAUwB,UAAU7oF,SAAS,QAAU,eAAgB4/C,QAEhE,EAEA7lD,gBAAA,SAAgB+uF,IACZ,OAAOpsF,OAAOoD,WAAapD,OAAOutE,OAAOnqE,QAC7C,EAGA/F,oBAAA,SAAgBgvF,EACZC,EACAC,EACAC,EACAC,GAEA,IAEMC,EAAO7B,EAAiB2B,EAAOF,GAC/BK,EAAO9B,EAAiB4B,EAAOF,GAErCD,EAAOzB,EAAiByB,GACxBE,EAAO3B,EAAiB2B,GAExB,IAAM77D,GACF+E,KAAKk3D,IAAIF,EAAO,GAAKh3D,KAAKk3D,IAAIF,EAAO,GACrCh3D,KAAKk3D,IAAID,EAAO,GACZj3D,KAAKk3D,IAAID,EAAO,GAChBj3D,KAAKm3D,IAAIP,GACT52D,KAAKm3D,IAAIL,GAEjB,OADU,EAAI92D,KAAKo3D,MAAMp3D,KAAKiuB,KAAKhzB,IAAI+E,KAAKiuB,KAAK,EAAIhzB,KAdtC,IAgBnB,EAUAtzB,WAAA2tF,EASA3tF,oBAAA6tF,EAOA7tF,WAAAkuF,EAQAluF,oBAAA,SAAgB0vF,EACZC,EACAC,EACA5B,GAEA,IAEM6B,EAAYhC,EAFLF,EAASgC,GACThC,EAASiC,GAC0B5B,GAChD,OAAOE,EAAS2B,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAC1D,kKCveA3xF,EAAA,WACAi4D,EAAAj4D,EAAA,4BAWA8B,yBAGmC,eAAA8vF,EAAtB/H,EAAsB,WAeK,OAAA5nF,EAApC,SAAA4nF,EAAoBvmF,GAAYpB,EAAAC,KAAA0nF,GAAZ1nF,KAAAmB,QATbnB,KAAA8M,SAAU,EAEV9M,KAAA0pF,SAAW,SAKV1pF,KAAA0vF,OAAqC,EAEV,EAAC,EAAAruF,IAAA,OAAAC,MAE7B,WAA6B,IAAxBquF,EAAA/qF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,GACzBtC,OAAOstF,OACRttF,OAAOutF,UAAYvtF,OAAOutF,WAAa,GACtC,SAAUC,EAAG73E,EAAGqQ,EAAGqnC,EAAGv9B,GACnB09D,EAAEngC,GAAKmgC,EAAEngC,IAAM,GACfmgC,EAAEngC,GAAG12B,KAAK,CACN,iBAAiBnf,MAAO8e,UACxB9K,MAAO,WAEX,IAAIqL,EAAIlhB,EAAE83E,qBAAqBznE,GAAG,GAC9B0nE,EAAI/3E,EAAEwtC,cAAcn9B,GAExB0nE,EAAEC,OAAQ,EACVD,EAAEE,IAAM,8CAAgD99D,EACxD+G,EAAEg3D,WAAWC,aAAaJ,EAAG72D,EACjC,CAZC,CAYE72B,OAAQkjD,SAAU,SAAU,YAAamqC,IAAW,EACvD75B,EAAAnzD,KAAI,YAAa,UAAW,wCAEhC3C,KAAKqwF,QAAU/tF,OAAOstF,IAC1B,GAAC,CAAAvuF,IAAA,OAAAC,MAEM,SAAK4sF,GACR5rF,OAAOutF,UAAU52D,KAAKi1D,EAC1B,GAEA,CAAA7sF,IAAA,OAAAC,MAIO,SAAKquF,GACR,IAAK3vF,KAAK8M,QACN,MAAM,IAAIs2E,MACN,iEAGR,IAAKpjF,KAAKqwF,QACN,MAAM,IAAIjN,MACN,wDAGR,EAAAttB,EAAAnzD,KAAI,YAAa,UAAS,2BAAAoB,OAA6B4rF,IACvD3vF,KAAKswF,KAAK,GACd,GACA,CAAAjvF,IAAA,UAAAC,MAIO,SAAQ+R,GAAU,IAAApS,EAAAjB,KACrB,IAAKA,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJpjF,KAAK8M,SACL9M,KAAKwD,QAAO,QAAAO,OACAsP,GACR,YACI,EAAAyiD,EAAAnzD,KAAI,YAAa,UAAS,gBAAAoB,OAAkBsP,IAC5CpS,EAAKovF,QAAQ,MAAO,SAAUh9E,GAC9BpS,EAAK6sB,MAAM,iBAAkB,oBACjC,EACA,IAGZ,GAAC,CAAAzsB,IAAA,OAAAC,MAEM,SAAKsR,EAActR,GAA0B,IAAAwD,EAAA9E,KAChD,IAAKA,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJpjF,KAAK8M,SACL9M,KAAKwD,QAAO,OAAAO,OAAQ6O,GAAQ,WACxB9N,EAAKm0B,KAAIpK,IAAA,GACFvtB,GAAK,IACRwsB,MAAO,UAEf,EAER,GAEA,CAAAzsB,IAAA,QAAAC,MAOO,SACHwiC,EACA/d,EACAwqE,EACAjvF,GAAc,IAAA4E,EAAAlG,KAEd,IAAKA,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJpjF,KAAK8M,SACL9M,KAAKwD,QAAO,SAAAO,OACC+/B,EAAQ,KAAA//B,OAAIgiB,EAAM,KAAAhiB,OAAIwsF,EAAK,KAAAxsF,OAAIzC,GACxC,WACI,IAAMquD,EAAI4gC,EAAQ,KAAOA,EAAQ,IACjC,EAAAz6B,EAAAnzD,KACI,YACA,UAAS,UAAAoB,OACC+/B,EAAQ,MAAA//B,OAAKgiB,GAAMhiB,OAAG4rD,GAAC5rD,OAC7BzC,EAAQ,KAAOA,EAAQ,KAI/B4E,EAAK+yB,KAAK,CACNnL,MAAO,QACPgW,SAAUA,EACV/d,OAAQA,EACRwqE,MAAOA,GAEf,EACA,IAGZ,GAEA,CAAAlvF,IAAA,SAAAC,MAKO,SAAOiS,EAAcm2E,GAAiB,IAAA5iF,EAAA9G,KACzC,IAAKA,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJ7vE,GAAQvT,KAAK8M,SACb9M,KAAKwD,QAAO,SAAAO,OACCwP,EAAI,KAAAxP,OAAI2lF,GAAY1pF,KAAK0pF,UAClC,YACI,EAAA5zB,EAAAnzD,KACI,YACA,UAAS,WAAAoB,OACEwP,GAAIxP,OAAG2lF,EAAW,KAAOA,EAAW,KAEnD5iF,EAAKmyB,KAAK,CACNnL,MAAO,aACP0iE,QAAS9G,GAAY5iF,EAAK4iF,SAC1B+G,WAAYl9E,GAEpB,EACA,IAGZ,GAEA,CAAAlS,IAAA,OAAAC,MAKO,SAAKovF,GAAsC,IAAAhxC,EAAA1/C,KAAvB2F,EAAAf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACvB,IAAK5E,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJpjF,KAAK8M,UACL9M,KAAK2wF,WAAaD,GAAS,IAC3B1wF,KAAKwD,QAAO,QAAAO,OACA2sF,GACR,YACI,EAAA56B,EAAAnzD,KAAI,YAAa,UAAS,SAAAoB,OAAW2sF,IACrChxC,EAAKzmB,KAAK,CACNnL,MAAO,WACPpgB,IAAG,GAAA3J,OAAK4B,EAASD,SAASC,OAAS,IAAE5B,OAAG2sF,IAEhD,EACA,KAGZ,GAEA,CAAArvF,IAAA,SAAAC,MAOO,SACHwiC,EACA8sD,EACAtvF,EACAivF,GAAc,IAAAjS,EAAAt+E,KAEd,IAAKA,KAAKqwF,QACN,MAAM,IAAIjN,MACN,uDAGJpjF,KAAK8M,SACL9M,KAAKwD,QAAO,QAAAO,OACA+/B,EAAQ,KAAA//B,OAAI6sF,EAAQ,KAAA7sF,OAAIzC,EAAK,KAAAyC,OAAIwsF,GACzC,YACI,EAAAz6B,EAAAnzD,KACI,YACA,UAAS,WAAAoB,OACE+/B,EAAQ,MAAA//B,OAAK6sF,EAAQ,MAAA7sF,OAAKzC,GAAKyC,OACtCwsF,EAAQ,KAAOA,EAAQ,KAG/BjS,EAAKrlD,KAAK,CACNnL,MAAO,SACPgW,WACA8sD,WACAtvF,QACAivF,SAER,EACA,IAGZ,GAEA,CAAAlvF,IAAA,UAAAC,MAMQ,SAAQiS,EAAcupB,GAAmC,IAAA4hD,EAAA1+E,KAAnBkjF,EAAAt+E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IACtD5E,KAAK0vF,OAAOn8E,KACZzP,aAAa9D,KAAK0vF,OAAOn8E,WAClBvT,KAAK0vF,OAAOn8E,IAEvBvT,KAAK0vF,OAAOn8E,GAAay5B,WAAW,WAC5BlQ,aAAcqmD,UACdrmD,WAEG4hD,EAAKgR,OAAOn8E,EACvB,EAAG2vE,EACP,IAAC,CAnQ8B,GAmQ9BuM,SAnQQ/H,0CAAsBt/E,EAAA4U,mBAAA1U,EAAAuoF,OAAA,qDAAtBnJ,EAAsBzqE,QAAtByqE,EAAsBxqE,UAAAC,WAFnB,SAEHuqE,CAAsB,4JCfnC,IAAAtuE,EAAAvb,EAAA,OAGAi4D,EAAAj4D,EAAA,iBAGMizF,EAAoC,CACtC,UACA,QACA,MACA,OACA,MAGJnxF,iBAG2B,eAAAoxF,EAAdnJ,EAAc,WAwCvB,OAAA9nF,EA1BA,SAAA8nF,IAAA,IAAA3mF,EAAAjB,KAAAD,EAAAC,KAAA4nF,GAZQ5nF,KAAAgxF,eAAmD,GAEnDhxF,KAAAixF,kBAAiD,GAEjDjxF,KAAAkxF,UAAsB,GAEtBlxF,KAAAmxF,kBAAgC,GAEhCnxF,KAAAoxF,QAAkB,EAKtB9uF,OAAOglE,iBAAiB,UAAW,SAACx5C,GAChC,IAAMgmD,EAAO7yE,EAAKowF,QAAQvjE,EAAMgmD,MAAQ,IAAI9gD,eACxC/xB,EAAKqwF,YAAcxd,IACd7yE,EAAK+vF,eAAeld,KACrB7yE,EAAK+vF,eAAeld,GAAQ,IAAI16D,EAAAuB,gBAAgB,MAChD1Z,EAAKgwF,kBAAkBnd,GACnB7yE,EAAK+vF,eAAeld,GAAMh5D,gBAElC7Z,EAAK+vF,eAAeld,GAAM3xE,OAAOlB,EAAKmwF,SAClCnwF,EAAKiwF,UAAUlnB,QAAQ8J,IAAS,GAChChmD,EAAMyjE,iBAEVtwF,EAAKqwF,UAAYxd,EAEzB,GAEAxxE,OAAOglE,iBAAiB,QAAS,SAACx5C,GAAwB,IAAA0jE,EAChD1d,EAAO7yE,EAAKowF,QAAQvjE,EAAMgmD,MAAQ,IAAI9gD,eACnB,QAAzBw+D,EAAAvwF,EAAK+vF,eAAeld,UAAK,IAAA0d,GAAzBA,EAA2BrvF,KAAK,MAC5BlB,EAAKqwF,YAAcxd,IACnB7yE,EAAKqwF,UAAY,KAEzB,EACJ,EAEA,EAAAjwF,IAAA,SAAAC,MAKO,SAAOmwF,EAA0BtvF,GAAgB,IAAA2C,EAAA9E,KAE9C0xF,GADND,EAAQA,aAAiBjzD,MAAQizD,EAAQA,EAAM9qF,MAAM,MACjB2U,IAAI,SAAC8W,GAAC,OACtCttB,EAAKusF,OAAOj/D,EAAEY,cAAc,GAEhC,GAAI0+D,EAAY1sF,OAAS,GAAKhF,KAAK2xF,iBAAiBD,GAAc,CAC9D1xF,KAAKmxF,kBAAkBl4D,KAAKy4D,GAC5B,IAAME,EAAWF,EAAYA,EAAY1sF,OAAS,GAClD,OAAKhF,KAAKgxF,eAAeY,KACrB5xF,KAAKgxF,eAAeY,GAAY,IAAIx4E,EAAAuB,gBAAgB,MACpD3a,KAAKixF,kBAAkBW,GACnB5xF,KAAKgxF,eAAeY,GAAU92E,gBAEtC9a,KAAK6xF,2BACE7xF,KAAKixF,kBAAkBW,GAAU7+E,UAAU,SAAC6xB,GAC/C,GAAIA,EAAO,CACP,IAAMktD,EAAoB,GAC1B,GAAIJ,EAAY1sF,OAAS,EAAG,CACxB,IAC6BsyB,EAD7BD,EAAAa,EACkBw5D,GAAW,IAA7B,IAAAr6D,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA+B,KACrBmF,EAAQz4B,EAAKksF,eADT15D,EAAAh2B,OAEVwwF,EAAQ74D,KAAKsE,GAAQA,EAAMplB,aAAc,EAC7C,CACA,OAAAmR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACA,QAAS/G,EAAI,EAAGA,EAAIs/D,EAAY1sF,OAAS,EAAGotB,IACxC,GAAI0/D,EAAQ1/D,GAAK0/D,EAAQ1/D,EAAI,GACzB,MAGZ,CACc0/D,EAAQzyD,OAClB,SAACpM,EAAGvQ,GAAC,OAAKuQ,GAAKvQ,EAAI,EAAI,GAAI,EAAG,EAC9B,IAESgvE,EAAY1sF,QACrB7C,GAER,CACJ,EACJ,CACA,OAAO,IACX,GAEA,CAAAd,IAAA,SAAAC,MAIQ,SAAOwyE,GACX,OACIA,EAAK9J,QAAQ,QAAU,GACvB8J,EAAK9J,QAAQ,UAAY,GACzB8J,EAAK9J,QAAQ,YAAc,EAEpB8J,EAAKlsC,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAE9CksC,CACX,GAEA,CAAAzyE,IAAA,2BAAAC,MAGQ,WACJ,IAC0Cm2B,EADtBD,EAAAU,EACAl4B,KAAKmxF,mBAAiB,IAA1C,IAAA35D,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAA4C,KAAjCq5D,EAAKh6D,EAAAn2B,MACZtB,KAAKkxF,UAAUj4D,KAAKw4D,EAAMA,EAAMzsF,OAAS,GAC7C,CAAC,OAAAskB,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACDn5B,KAAKkxF,aAAYp7B,EAAAnmB,QAJA,GAKrB,GAEA,CAAAtuC,IAAA,mBAAAC,MAIQ,SAAiBmwF,GACrB,IACuB9yD,EADnBozD,EAAW,EAAE7yD,EAAAhH,EACCu5D,GAAK,IAAvB,IAAAvyD,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MACQ04D,EAAwB9mB,QADlBrrC,EAAAr9B,OACiC,GACvCywF,GAEP,OAAAzoE,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACD,OAAO44D,EAAW,CACtB,IAAC,CA9HsB,GA8HtBhB,SA9HQnJ,yCAAc,qDAAdA,EAAc3qE,QAAd2qE,EAAc1qE,UAAAC,WAFX,SAEHyqE,CAAc,gLCjB3B,IAAAvnF,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MACAg0C,EAAAh0C,EAAA,iBAEA8B,mBAG8B,eAAAqyF,EAAjBC,EAAiB,SAAAj/C,GAU1B,SAAAi/C,IAAA,IAAAhxF,EAAAlB,SAAAC,KAAAiyF,IACIhxF,EAAAC,EAAAlB,KAAAiyF,IAVIC,WAAa,IAAI94E,EAAAuB,gBAAwB,IACzC1Z,EAAAkxF,OAAS,KAETlxF,EAAAwgC,QAAUxgC,EAAKixF,WAAWpvF,QAC9B1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAwxB,WAAU,SAACve,GAAE,SAAK+F,EAAA2I,eAAc,IAAC3I,EAAAQ,IAAGvG,GAAKpS,EAAKmxF,QAAQ/+E,EAAI,SAAS,MACnEjT,EAAAyiB,KAAI,kBAAM5hB,EAAKuC,QAAQ,OAAQ,kBAAMkC,SAASwC,QAAQ,EAAEjH,EAAKkxF,OAAO,IAKpElxF,EAAK4R,aAAa,SAAU5R,EAAKwgC,QAAQ1uB,aAAa9R,CAC1D,CAACG,SAAA6wF,EAAAj/C,GAAAlzC,EAAAmyF,EAAA,EAAA5wF,IAAA,YAAAC,MAEM,SAAU+R,GACbrT,KAAKkyF,WAAW/vF,KAAKkR,EACzB,GAAC,CAAAhS,IAAA,iBAAAC,MAEM,SAAe4hF,GAClBljF,KAAKmyF,OAASjP,CAClB,GAEA,CAAA7hF,IAAA,UAAAC,MACQ,SAAQ+R,EAAYE,GAA0C,IAC5DqhD,KAASv0D,EAAA2xB,WAAU3e,EADazO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,gBAClBmtB,QAAQxe,GAC1C,OAAAvT,KAAK6S,aAAY,QAAA9O,OAASwP,GAAQqhD,EAAOpiC,QAClCoiC,EAAO1iC,QAClB,IAAC,CA5ByB,CAAQ2f,EAAA1pC,cAAY6pF,SAArCC,yCAAgB,qDAAhBA,EAAgBh1E,QAAhBg1E,EAAgB/0E,UAAAC,WAFb,SAEH80E,CAAiB,gNCR9Bp0F,EAAA,OACAA,EAAA,MADA,IAEAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAQAg0C,EAAAh0C,EAAA,OACAi4D,EAAAj4D,EAAA,sCAEYymB,EAAZ,SAAYA,GACRA,WAAA+tE,WAAA,gBACA/tE,IAAAguE,OAAA,YAFQhuE,CAGZ,CAHA,CAAYA,IAAU3kB,aAAV2kB,EAAU,KAWtB3kB,oBAG+B,eAAA4yF,EAAlB3uB,EAAkB,SAAA5wB,GA4C3B,SAAA4wB,EACY/iE,EACAC,GAAyB,IAAAG,EAAAlB,SAAAC,KAAA4jE,IAEjC3iE,EAAAC,EAAAlB,KAAA4jE,IAHQ/iE,YACAI,EAAAH,OA7CJG,EAAAuxF,aAAe,IAAIp5E,EAAAuB,gBAA4B,MAC/C1Z,EAAAwxF,WAAa,IAAIr5E,EAAAuB,gBAAwB,IACzC1Z,EAAAyxF,OAAS,IAAIt5E,EAAAuB,iBAAgB,GAC7B1Z,EAAA0xF,UAAqC,GACrC1xF,EAAA2xF,aAAe,IAAIx5E,EAAAuB,gBAAwB,IAEnC1Z,EAAA4xF,cAAaz5E,EAAA2I,eAAc,CACvC9gB,EAAKH,KAAK2W,gBACVxW,EAAK2xF,aACL3xF,EAAKH,KAAK+B,cACXC,QACC1C,EAAAob,QAAO,SAAAvV,GAAG,QAAHgc,EAAAhc,EAAA,GAAG,EAAS,MACnB7F,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,kBAAM5hB,EAAK6xF,oBAAoB,MACnC1yF,EAAAkb,KACI,SAAA4G,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAW,OACPjhB,EAAK8xF,SAASC,cACb/xF,EAAKgyF,YAAYrtF,SAFXuc,EAAA,IAANA,EAAA,GAEsC9O,KACnCpS,EAAKgyF,YAAYrtF,SAAS,KAAK,MAE3CxF,EAAAsyB,aAAY,IACdzxB,CA2BF,CAACG,SAAAwiE,EAAA5wB,GAAAlzC,EAAA8jE,EAAA,EAAAviE,IAAA,WAAAiE,IAzBD,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,yBAA2B,EACzD,GAAC,CAAAjE,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,8BAAgC,EAC9D,GAAC,CAAAjE,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKwyF,aAAar6E,UAC7B,GAAC,CAAA9W,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKyyF,WAAWt6E,UAC3B,GAAC,CAAA9W,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAK0yF,OAAOv6E,UACvB,GAAC,CAAA9W,IAAA,gBAAAC,MASM,SAAcknC,GACjBxoC,KAAK4yF,aAAazwF,KAAKqmC,EAC3B,GAAC,CAAAnnC,IAAA,qBAAAC,MAEO,WAAkB,IAAAwD,EAAA9E,MACtB,EAAA81D,EAAAnzD,KAAI,aAAc,8BAClB3C,KAAK0yF,OAAOvwF,MAAK,GACjB,IAAA+wF,EAAwClzF,KAAK+yF,SAArCC,EAAWE,EAAXF,YAAaG,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAC7B,GAAKJ,EACL,IAAIA,IAAgBhzF,KAAK2yF,UAAUK,YAAa,CAC5C,IAAMK,EAAS7tC,SAASC,cAAc,UACtC4tC,EAAOnD,IAAG,yFAAAnsF,OAA4FivF,GACtGxtC,SAASzU,KAAK8U,YAAYwtC,GAC1BrzF,KAAK2yF,UAAUK,aAAc,CACjC,CACA,GAAIG,GAAUC,EAOV,YANA,EAAAt9B,EAAAnzD,KACI,aACA,4CACAsC,EACA,SAIR,GAAIkuF,IAAWnzF,KAAK2yF,UAAUQ,OAAQ,CAClC,IAAME,EAAS7tC,SAASC,cAAc,UACtC4tC,EAAOnD,IAAG,kEAAAnsF,OAAqEovF,GAC/E3tC,SAASzU,KAAK8U,YAAYwtC,GAC1BrzF,KAAKwyF,aAAarwF,KAAKmiB,EAAW+tE,YAClCryF,KAAK2yF,UAAUQ,QAAS,CAC5B,SAAWC,IAAWpzF,KAAK2yF,UAAUS,OAAQ,CACzC,IAAMC,EAAS7tC,SAASC,cAAc,UACtC4tC,EAAOnD,IAAG,2DACV1qC,SAASzU,KAAK8U,YAAYwtC,GAC1B,IAAMxsE,EAAS2+B,SAASC,cAAc,QACtC5+B,EAAOysE,IAAM,aACbzsE,EAAOlf,KAAI,4DACX69C,SAAS+tC,KAAK1tC,YAAYh/B,GAC1B7mB,KAAKwyF,aAAarwF,KAAKmiB,EAAWguE,QAClCtyF,KAAKyyF,WAAWtwF,KAAKixF,GACrBpzF,KAAK2yF,UAAUS,QAAS,CAC5B,EAEID,GAAUC,QACVt9B,EAAAnzD,KACI,aAAY,iCAAAoB,OAERovF,EAAS,cAAgB,WAGjCnzF,KAAKwD,QAAQ,QAAS,kBAAMsB,EAAK4tF,OAAOvwF,MAAK,EAAK,EAAE,KAAG,CAE/D,IAAC,CAvG0B,CAAQ0vC,EAAA1pC,cAAYoqF,SAAtC3uB,0CAAiBx7D,EAAA4U,mBAAA1U,EAAAC,iBAAAH,EAAA4U,mBAAAxU,EAAAC,qBAAA,qDAAjBm7D,EAAiB3mD,QAAjB2mD,EAAiB1mD,UAAAC,WAFd,SAEHymD,CAAkB,wLC3B/B,IAAIrzD,EACAijF,GAAmB,EAoBvB,SAAgBC,EACZ7gF,EACAy2C,GAGuC,IAFvCtjC,EAAAnhB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KACjB8uF,EAAsB9uF,UAAAI,OAAA,EAAAJ,UAAA,QAAAK,EACtB65E,EAAAl6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,GAErC,IAAK2L,EACD,OACKijF,GACDpxF,QAAQuxF,KAAK,4CAGrB,IAAMC,EAAerjF,EAASwE,KAAKs0C,EAAStjC,EAAM8I,EAAA,CAC9C7H,WAAY,CAACpU,GACbd,SAAU,KACPgtE,IAEH/4D,IACA2tE,EAAYA,GAAc,kBAAME,EAAar1E,SAAS,EACtDq1E,EAAaC,WAAW9gF,UAAU,kBAAM2gF,GAAW,GAE3D,CAtCA/zF,kBAAA,SAAgBiD,EACZkxF,GAGAvjF,EAAWujF,EACXN,EAHe5uF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,EAInB,EAUAjF,SAAA8zF,EA+BA9zF,gBAAA,SAAgBi4C,EACZ2xC,EACAxjE,EACA2tE,GACuC,IAAvC5U,EAAAl6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpC4uF,GAAoBpxF,QAAQwnF,MAAML,GAChB,iBAARA,IAAkBA,EAAM,WACnCkK,EAAO,UAAWlK,EAAKxjE,EAAQ2tE,EAAW5U,EAC9C,EASAn/E,cAAA,SAAgBgV,EACZ40E,EACAxjE,EACA2tE,GACuC,IAAAK,EAAAC,EAAvClV,EAAAl6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpC4uF,GAAoBpxF,QAAQwnF,MAAML,GAChB,iBAARA,IACPA,GACgB,QAAXwK,EAAAxK,SAAW,IAAAwK,OAAA,EAAXA,EAAajuF,SAAqB,QAAhBkuF,EAAKzK,SAAW,IAAAyK,OAAA,EAAXA,EAAa3qC,UAAW,qBACxDoqC,EAAO,QAASlK,EAAKxjE,EAAQ2tE,EAAW5U,EAC5C,EASAn/E,aAAA,SAAgB0/C,EACZkqC,EACAxjE,EACA2tE,GACuC,IAAvC5U,EAAAl6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpC4uF,GAAoBpxF,QAAQwnF,MAAML,GACnCkK,EAAO,OAAQlK,EAAKxjE,EAAQ2tE,EAAW5U,EAC3C,EASAn/E,aAAA,SAAgB4iF,EACZgH,EACAxjE,EACA2tE,GACuC,IAAvC5U,EAAAl6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpC4uF,GAAoBpxF,QAAQwnF,MAAML,GACnCkK,EAAO,OAAQlK,EAAKxjE,EAAQ2tE,EAAW5U,EAC3C,kICrHA,IAAAz+E,EAAAxC,EAAA,OACAg4D,EAAAh4D,EAAA,OAwBgC,SAAAo2F,aAAAzyF,EAAAC,IAAAC,KAAzB,SAAAC,EAA0BwD,GAAuB,IAAA+uF,EAAAz/E,EAAA0/E,EAAAzmF,EAAAgjF,EAAAjrF,EAAAq5E,EAAA,OAAAr9E,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9C+xF,SAAW/uF,EAAS+uF,UAAYxuF,SAASwuF,SACzCz/E,EAAOtP,EAASivF,QAAU1uF,SAAS2uF,SACnCF,EAAOhvF,EAASgvF,MAAQzuF,SAASyuF,KACjCzmF,EAAMvI,EAASmvF,WAAU,GAAAvwF,OACtBmwF,EAAQ,MAAAnwF,OAAK0Q,EAAI,KAAA1Q,OAAIowF,GACxBzuF,SAASC,OACT+qF,GAAShrF,SAASsB,SAAW,KAAK4gC,QAAQ,KAAM,KAChDniC,EACFN,EAASM,MACTC,SAASiC,KAAK/B,SAAS,cACU,SAAjC2uD,aAAa3sD,QAAQ,QAEnBk3E,EAA2B,CAC7ByV,UAAW,YACXC,MAAO,SACP//E,KAAI,GAAA1Q,OAAK0Q,GAAI1Q,OAAGowF,EAAO,IAAMA,EAAO,IACpCM,SAAQ,GAAA1wF,OAAK2J,EAAG,yBAChBgnF,UAAS,GAAA3wF,OAAK2J,EAAG,qBACjBinF,aAAY,GAAA5wF,OAAK2B,SAASC,QAAM5B,OAAG2sF,EAAK,mBACxCkE,cAAezvF,EAASI,YACxBsvF,YAAY,EACZpvF,QAEA8uD,cACAA,aAAatwD,QACT,OAAM,GAAAF,SACD0B,IAASC,SAASiC,KAAK/B,SAAS,gBAGzCH,MACAowD,EAAA0sB,YAAW,6BACdtgF,EAAAqB,OAAA,YACMjD,EAAAy0F,OAAMhW,IAAO,yBAAA78E,EAAAwC,OAAA,EAAA9C,EAAA,KACvBgD,MAAA3E,KAAA4E,UAAA,CAlCDjF,aAHA,SAGsBkG,EAAU8W,GAAA,OAAAs3E,EAAAtvF,MAAA3E,KAAA4E,UAAA,6FCzBhC,IAAAmwF,EAAAl3F,EAAA,OAGA8B,iBAAA,SAAgBq1F,EAAelhB,GAAsD,IAAAmhB,EAC3EC,EAAK,IAAIH,EAAAI,UAAU,CACrBznF,IAAKomE,GAAQ,QACbva,KAAM,IACN67B,WAJ+CxwF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,QAKlDywF,UALoEzwF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,OAMvE0wF,SAAS,EACTC,SAAU,EACVC,UAAU,EACVC,WAAY,IAEhB,OAAS,MAAFP,GAAsB,QAApBD,EAAFC,EAAIQ,QAAQ,kBAAU,IAAAT,OAAA,EAAtBA,EAAwB/E,GACnC,0PCdA,IAAA7vF,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEAg0C,EAAAh0C,EAAA,OACAi4D,EAAAj4D,EAAA,iBA0BI83F,EACAphC,aAAa3sD,QAAQ,sBAAoB,OAAA7D,UAAW+xD,EAAAl2B,cAAa,IAErEjgC,uBAGkC,eAAAi2F,EAArBC,EAAqB,SAAA7iD,GA8B9B,SAAA6iD,IAAA,IAAA50F,EAAAlB,SAAAC,KAAA61F,IACI50F,EAAAC,EAAAlB,KAAA61F,IA9BIC,mBAA6B,EAC7B70F,EAAAixF,WAAa,IAAI94E,EAAAuB,gBAAwB,IACzC1Z,EAAA80F,QAAU,IAAI38E,EAAA48E,QAEd/0F,EAAAg1F,eAAiBh1F,EAAK80F,QAAQjzF,QAAK1C,EAAAsyB,aAAY,MAC/CzxB,EAAAi1F,UAAY,KAEZj1F,EAAAk1F,kBAAoBl1F,EAAKixF,WAAWpvF,QACxC1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAwxB,WAAU,SAACve,GAAE,SAAK+F,EAAA2I,eAAc,IAAC3I,EAAAQ,IAAGvG,GAAKpS,EAAKmxF,QAAQ/+E,EAAI,YAAY,MACtEjT,EAAAob,QAAO,SAAAvV,GAAY,QAAZgc,EAAAhc,EAAA,GAAY,EAAe,MAClC7F,EAAAkb,KAAI,SAAA4G,GAAA,IAAE7O,EAAF4O,EAAAC,EAAA,GAAI,UACJjhB,EAAK4R,aACD,cACA5R,EAAKg1F,eAAeljF,UAAS,eAAAi1B,EAAAxmC,EAAAC,IAAAC,KAAC,SAAAC,EAAOsW,GAAC,OAAAxW,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClClB,SAAK60F,mBAAoB,EAAK7zF,EAAAE,KAAA,KACxB9B,EAAA2xB,WAAU3e,EAAI,UACf4hB,QAAQ,aAAc,CAAChd,IAAG9T,QACnB,OACZlD,EAAK60F,mBAAoB,EAAM,wBAAA7zF,EAAAwC,OAAA,EAAA9C,EAAA,IAClC,gBAAAgb,GAAA,OAAAqrB,EAAArjC,MAAA3E,KAAA4E,UAAA,EAN4B,IAOhC,IAIO3D,EAAAsB,QAAUtB,EAAKg1F,eAM3B1hC,aAAatwD,QAAQ,oBAAqB0xF,GAC1C10F,EAAKm1F,uBACLn1F,EAAKk1F,kBAAkBpjF,aAAS,EAChC+iD,EAAAnzD,KAAI,SAAU,iCAAiC1B,CACnD,CAACG,SAAAy0F,EAAA7iD,GAAAlzC,EAAA+1F,EAAA,EAAAx0F,IAAA,cAAAC,MARM,SAAY++C,GAAgB,GAAC,CAAAh/C,IAAA,YAAAC,MAU7B,SAAU+R,GACbrT,KAAKkyF,WAAW/vF,KAAKkR,EACzB,GAAC,CAAAhS,IAAA,uBAAAC,MAEO,WAQJ,QARwBwD,EAAA9E,KAOtB06B,EAAA,WACG,IAAMr5B,EAAGg1F,EAAAC,IArEtB,SAASC,EACLC,EACAC,EACAC,GAEA,IAAIC,EAAmBH,EAAWC,GACjCD,EAAmBC,GAAkB,WAAmB,QAAAG,EAAAhyF,UAAAI,OAAfwkF,EAAW,IAAAhrD,MAAAo4D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAXrN,EAAWqN,GAAAjyF,UAAAiyF,GACjDH,EAAgBlN,GACfmN,EAAyBv3C,KAAIz6C,MAA7BgyF,EAAwB,CAAMH,GAAUzyF,OAAKylF,GAClD,CAEJ,CA2DY+M,CAAWn0F,QAASf,EAAK,mBAAAy1F,EAAAlyF,UAAAI,OAAIwkF,EAAI,IAAAhrD,MAAAs4D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvN,EAAIuN,GAAAnyF,UAAAmyF,GAAA,OAAKjyF,EAAKkyF,aAAa31F,EAAKmoF,EAAK,EACtE,EAFA8M,EAAA,EAAAD,EAPiC,CAC7B,MACA,QACA,OACA,OACA,SAEmBC,EAAAD,EAAArxF,OAAAsxF,IAAA57D,GAG3B,GAAC,CAAAr5B,IAAA,eAAAC,MAEO,SAAasR,EAAcnQ,GAAsC,IAA3Bw0F,EAAAryF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB,UAC5D,IAAInC,EAAKmD,SAAS,cAAe5F,KAAK81F,kBACtC,KAAM/zD,EAAI3f,EAAO3f,EAAK,IACtBs/B,EAAK,GACkB,iBAAZA,EAAK,GAAkBA,EAAK,GAAG6F,QAAQ,OAAQ,IAAM7F,EAAK,GACrE/hC,KAAK+1F,QAAQ5zF,KAAK,CACdkR,GAAE,GAAAtP,OAAKkzF,EAAU,KAAAlzF,UAAI+xD,EAAAp3B,WAAU,aAC/Bw4D,UAAWvB,EACX/iF,KAAMqkF,EACNE,QAASvkF,EACTwkF,UAAWt9E,KAAKuX,MAChBgmE,IAAK50F,EACLA,KAAMs/B,EAAKvmB,OACP,SAACxY,GAAC,MAAkB,iBAANA,IAAmBA,EAAEs0F,WAAW,SAAS,GAE3Dj3C,SAAUrgD,KAAKk2F,WAAa,MAC/B,CACL,GAEA,CAAA70F,IAAA,UAAAC,MACQ,SAAQ+R,EAAYE,GAAoC,IACtDqhD,KAASv0D,EAAA2xB,WAAU3e,EADazO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,UAClBmtB,QAAQxe,GAC1C,OAAAvT,KAAK6S,aAAY,QAAA9O,OAASwP,GAAQqhD,EAAOpiC,QAClCoiC,EAAO1iC,QAClB,IAAC,CA/E6B,CAAQ2f,EAAA1pC,cAAYytF,SAAzCC,yCAAoB,qDAApBA,EAAoB54E,QAApB44E,EAAoB34E,UAAAC,WAFjB,SAEH04E,CAAqB,0IC/BrBl2F,kBAAkB,SAACszB,EAAsB3U,GAElD,OADOuQ,IAAA,GAA2BoE,GAAM3U,EAE5C,EAEa3e,oBAAoB,WAGR,IADrB43F,EAAA3yF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmC,GAE7B0W,EAAM,IAHZ1W,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuC,IAIvByjB,QAAQ,SAAC8Q,GAAC,OAAM7d,EAAI6d,EAAE9lB,IAAM8lB,CAAC,GAC7C,IAAMq+D,EAA8B,GACpCD,SAAYlvE,QAAQ,SAACioB,GACXh1B,EAAIg1B,EAAEj9B,KACRmkF,EAAOv+D,QAAKt5B,EAAA83F,iBAAgBn8E,EAAIg1B,EAAEj9B,IAAKi9B,GAE/C,GACOknD,CACX,2QCxBA35F,EAAA,WACAub,EAAAvb,EAAA,OACAwC,EAAAxC,EAAA,OACA8yB,EAAA9yB,EAAA,OACAuC,EAAAvC,EAAA,MAEAi4D,EAAAj4D,EAAA,OACA65F,EAAA75F,EAAA,OAEAg0C,EAAAh0C,EAAA,OAEAmqF,EAAAnqF,EAAA,OACA85F,EAAA95F,EAAA,UACAA,EAAA,sCASA8B,kBAG6B,eAAAi4F,EAAhBrvF,EAAgB,SAAAyqC,GA2DzB,SAAAzqC,EACYsvF,EACYC,GAAkC,IAAA72F,EAAAlB,EAAAC,KAAAuI,IAEtDtH,EAAAC,EAAAlB,KAAAuI,IAHQsvF,SACY52F,EAAA62F,aA3DhB72F,EAAA6nF,UAAY,UAEZ7nF,EAAA82F,WAAa,IAAI3+E,EAAAuB,gBAA2B,IAE5C1Z,EAAA+2F,eAAiB,IAAI5+E,EAAAuB,gBAAyB,IAE9C1Z,EAAAg3F,UAA2C,GAE3Ch3F,EAAAi3F,aAAyC,GAEzCj3F,EAAAk3F,kBAA6B,GAoDjC,IAAM9mE,EAAM,IAAIvX,KACV8d,EAAO,IAAI9d,KAAKkuE,EAAAC,QAAQrwD,MACxBwgE,KAAQznE,EAAAoC,WAAU1B,EAAKuG,GAAK,YAAA7zB,UAChB4sB,EAAAkI,QAAOjB,EAAM,WAAQ,EACjCjH,EAAAkI,QAAOjB,EAAM,sBACnB,SAAAk+B,EAAAnzD,KAAI,OAAM,GAAAoB,OAAKikF,EAAAC,QAAQoQ,QAAU,KAAM,SAAS,IAAI,EACpDviC,EAAAnzD,KAAI,MAAK,GAAAoB,OAAKikF,EAAAC,QAAQqQ,KAAI,cAAAv0F,OAAaq0F,GAAS,KAAM,SAAS,GAC/Dn3F,EAAKs3F,OAAOt3F,CAChB,CAEAG,SAAAmH,EAAAyqC,GAAAlzC,EAAAyI,EAAA,EAAAlH,IAAA,YAAA6Z,aAzDqB5Z,GACjBtB,KAAK+3F,WAAW51F,KAAKb,GACrBtB,KAAKw4F,oBACT,GAEA,CAAAn3F,IAAA,SAAAC,MACO,SAAgBiS,GACnB,OAAKvT,KAAKk4F,aAAa3kF,KACnBvT,KAAKi4F,UAAU1kF,GAAQ,IAAI6F,EAAAuB,gBAAmB,MAC9C3a,KAAKk4F,aAAa3kF,GAAQvT,KAAKi4F,UAAU1kF,GAAMuH,gBAE5C9a,KAAKk4F,aAAa3kF,EAC7B,GAEA,CAAAlS,IAAA,OAAAC,MACO,SAAQiS,EAAcjS,GACpBtB,KAAKk4F,aAAa3kF,KACnBvT,KAAKi4F,UAAU1kF,GAAQ,IAAI6F,EAAAuB,gBAAmB,MAC9C3a,KAAKk4F,aAAa3kF,GAAQvT,KAAKi4F,UAAU1kF,GAAMuH,gBAEnD9a,KAAKi4F,UAAU1kF,GAAMpR,KAAKb,EAC9B,GAAC,CAAAD,IAAA,QAAAC,MAEM,SAAeiS,GAClB,OAAQvT,KAAKk4F,aAAa3kF,GAEpBvT,KAAKi4F,UAAU1kF,GAAM4E,WADrB,IAEV,GAEA,CAAA9W,IAAA,QAAAiE,IACA,WACI,OAAOtF,KAAK63F,OAAOY,UACvB,EAACv9E,IACD,SAAiB5Z,GAAa,IAAAo3F,EAC1B14F,KAAK63F,OAAOc,SAAQ,GAAA50F,OACbzC,EAAK,OAAAyC,OAAM/D,KAAKsF,IAAI,aAAetF,KAAK8oF,YAE3B9oF,KAAKsF,IAAI,+BAEd,QAAfozF,EAAA14F,KAAK83F,kBAAU,IAAAY,GAAfA,EAAiBE,KAAK,WAAY,CAAEz3F,MAAOG,IAC/C,GAAC,CAAAD,IAAA,OAAAC,OAAAu3F,EAAAr3F,EAAAC,IAAAC,KAoBM,SAAAC,IAAA,IAAAm3F,EAAArsE,EAAA3nB,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAInC,KAAKsF,IAAI,WAAUhD,OAAOsnF,OAAQ,GACnB,QAAnBkP,EAAI94F,KAAKsF,IAAI,cAAM,IAAAwzF,GAAfA,EAAiBvlF,OACjBvT,KAAK8oF,UAAY9oF,KAAKsF,IAAI,OAAOiO,MAErCvT,KAAK8oF,UACDpjF,SAASsB,SAAS4gC,QAAQ,UAAW,IAAIyb,QAAUrjD,KAAK8oF,aAC5DhzB,EAAAzwD,YAAWrF,KAAK8oF,UAAUniF,MAAM,KAAKkO,KAAK,KAAKivC,gBAAa,EAC5DgS,EAAAnzD,KAAI,WAAY,gCAChB3C,KAAK+iF,aAAa5gF,MAAK,GACnBG,OAAOsnF,QACFtnF,OAAOy2F,cAAaz2F,OAAOy2F,YAAc,IAC9Cz2F,OAAOy2F,YAAY5zF,SAAWnF,MAElCA,KAAK6S,aACD,gBACA7S,KAAKg4F,eAAejlF,UAAU,SAAC/P,GAAC,OAAK8B,EAAKk0F,mBAAmBh2F,EAAE,IACjEf,EAAAE,KAAA,GACiBw1F,EAAArxF,aAAaxD,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,QAA7DwpB,SAAIxqB,EAAA4B,KAAA5B,EAAAE,KAAA,MACS9B,EAAAuoC,cAAanc,EAAKpZ,GAAI,YAAYpQ,YAAW,QAChEjD,KAAKg4F,eAAe71F,KADVF,EAAA4B,KACoB6S,SAAW,IACzC1W,KAAKi5F,gBACLj5F,KAAKk5F,cACLl5F,KAAKm5F,eAAe,yBAAAl3F,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACvB,SAAAu4F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,IAED,CAAAvD,IAAA,WAAAiE,IACA,WACI,OAAOtF,KAAK8oF,SAChB,GAAC,CAAAznF,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKsF,IAAI,wBAA0B,QAAU,QACxD,GAEA,CAAAjE,IAAA,MAAAC,MAIO,SAAaD,GAChB,IACuB4E,EAAA6B,EADjBkhB,EAAO3nB,EAAIsF,MAAM,KACvB,GAAgB,QAAZqiB,EAAK,GACL,OAEyD,QAFzD/iB,EACiD,QADjD6B,KACIguD,EAAAk0B,iBAAgBhhE,EAAMhpB,KAAKm4F,0BAAkB,IAAArwF,OAC7CguD,EAAAk0B,iBAAgBhhE,EAAMhpB,KAAKg4F,eAAe7/E,mBAAW,IAAAlS,OACrD6vD,EAAAk0B,iBAAgBhhE,EAAM0uE,EAAA0B,kBAG9B,IACwC9hE,EADlC+hE,EAAiBj3E,EAAOpiB,KAAK+3F,WAAW5/E,YAAYkf,EAAAa,EACnCmhE,GAAiB,IAAxC,IAAAhiE,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0C,KAA/BkhE,EAAQhiE,EAAAh2B,MACTA,KAAQw0D,EAAAk0B,iBAAgBhhE,EAAK4/D,MAAM,GAAI0Q,GAC7C,GAAa,MAATh4F,EACA,OAAOA,CAEf,CAAC,OAAAgoB,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,SAAO28B,EAAAk0B,iBAAgBhhE,EAAM0uE,EAAA0B,iBACjC,GAAC,CAAA/3F,IAAA,kBAAAC,MAEM,SAAmBiS,EAAcjS,GAAQ,IAAA4E,EAAAlG,KAC5CA,KAAKm4F,kBAAkB5kF,GAAQjS,EAClB,cAATiS,GAAsBvT,KAAKu5F,SAASj4F,EAAQ,OAAS,IAC5C,cAATiS,GAAsBvT,KAAKm5F,eAC/Bn5F,KAAKwD,QAAQ,gBAAiB,kBAAM0C,EAAKszF,qBAAqB,EAAE,IACpE,GAAC,CAAAn4F,IAAA,sBAAAC,MAEM,SACHD,EACAC,GAC0B,IAA1Bm4F,EAAA70F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAEIqgD,EAAUO,SAASk0C,eAAc,qBAAA31F,OAAsB1C,IACtD4jD,KACDA,EAAUO,SAASC,cAAc,UACzBpyC,GAAE,qBAAAtP,OAAwB1C,GAClCmkD,SAAS+tC,KAAK1tC,YAAYZ,IAE9BA,EAAQ00C,UAAS,kBAAA51F,OAAqB1C,EAAG,MAAA0C,OAAKzC,EAAK,KAAAyC,OAC/C01F,EAAY,aAAe,GAC/B,IACJ,GAAC,CAAAp4F,IAAA,WAAAC,MAEM,SAASs4F,GACU55F,KAAKsF,IAAI,WACTs0F,IACtB55F,KAAKggC,gBAAgB,QAAS45D,GAC9B55F,KAAKk5F,cACT,GAAC,CAAA73F,IAAA,qBAAAC,MAEO,WACJ,IAAMu4F,EAAe75F,KAAKsF,IAAI,sBAAwB,GAClDw0F,EAAa,UACjB,QAAWz4F,KAAOw4F,EACdC,GAAU,KAAA/1F,OAAS1C,EAAG,MAAA0C,OAAK81F,EAAax4F,GAAI,MAEhDy4F,GAAc,IACd,IAAI70C,EAAUO,SAASk0C,eAAe,qBACjCz0C,KACDA,EAAUO,SAASC,cAAc,UACzBpyC,GAAK,oBACbmyC,SAAS+tC,KAAK1tC,YAAYZ,IAE9BA,EAAQ00C,UAAYG,CACxB,GAAC,CAAAz4F,IAAA,sBAAAC,MAAA,eAAAy4F,EAAAv4F,EAAAC,IAAAC,KAEO,SAAAwD,IAAA,IAAAunB,EAAA,OAAAhrB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACsB,GACjB,OADHsqB,KAAOkrE,EAAAnxF,iBACRimB,EAAMpZ,IAAO0V,OAAOC,KAAKhpB,KAAKm4F,mBAAmBnzF,OAAM,CAAAI,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,iBAAA8B,SAAAjD,KAAA,KACtD9B,EAAAy+D,gBAAeryC,EAAKpZ,GAAI,CAC1BE,KAAM,WACNE,YAAa,GACbiD,QAAOmY,IAAA,GACA7uB,KAAKg4F,eAAe7/E,YACpBnY,KAAKm4F,qBAEbl1F,YAAW,OACdjD,KAAKg4F,eAAe71F,KAAI0sB,IAAA,GACjB7uB,KAAKg4F,eAAe7/E,YACpBnY,KAAKm4F,oBAEZn4F,KAAKm4F,kBAAoB,GAAG,wBAAA/yF,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC/B,gBAAAw5F,IAAA,OAAAO,EAAAp1F,MAAA3E,KAAA4E,UAAA,EAlBA,IAkBA,CAAAvD,IAAA,qBAAAC,MAAA,eAAA04F,EAAAx4F,EAAAC,IAAAC,KAEO,SAAAsE,EAAyBb,GAAiB,OAAA1D,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAE7C,wBAAAgE,EAAA1B,OAAA,EAAAuB,EAAA,IACJ,gBAAAgzF,EAAAr8E,GAAA,OAAAq9E,EAAAr1F,MAAA3E,KAAA4E,UAAA,EALA,IAKA,CAAAvD,IAAA,eAAAC,MAEO,WACCtB,KAAKsF,IAAI,cACdtF,KAAKi6F,oBAAoB,YAAW,GAAAl2F,OAAK/D,KAAKsF,IAAI,aAAY,MAClE,GAAC,CAAAjE,IAAA,cAAAC,MAEO,WACJ,IAE6Bm2B,EAFvBmiE,EAAQ55F,KAAKsF,IAAI,SACjB40F,EAAa10C,SAASzU,KAAKopD,UAAU74F,MAAMqF,MAAM,KAAK6wB,EAAAU,EACzCgiE,GAAU,IAA7B,IAAA1iE,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAA+B,KAApB3c,EAAIgc,EAAAn2B,MACPma,EAAK67E,WAAW,WAChB9xC,SAASzU,KAAKopD,UAAUhnD,OAAO13B,EAEvC,CAAC,OAAA6N,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACGygE,EACAp0C,SAASzU,KAAKopD,UAAUx1C,IAAG,SAAA5gD,OAAU61F,IAErCp0C,SAASzU,KAAKopD,UAAUhnD,OAAM,SAAApvC,OAAU61F,GAEhD,GAAC,CAAAv4F,IAAA,gBAAAC,MAEO,WACAtB,KAAKsF,IAAI,QAKjB,KA7KC,IAAAuzF,CA6KA,CAtOwB,CAAQhnD,EAAA1pC,cAAYyvF,SAApCrvF,0CAAeH,EAAA4U,mBAAA1U,EAAAuoF,OAAAzoF,EAAA4U,mBAAAxU,EAAAk/E,uBAAA,wDAAfn/E,EAAe0U,QAAf1U,EAAe2U,UAAAC,WAFZ,SAEH5U,CAAgB,+FCkJhB5I,mBAAwB,CACjCiqF,OAAO,EACPwQ,SAAU,CACNhG,OAAQ,GACR1D,MAAO,SACPwD,SAAU,GACVC,KAAM,GACNG,YAAY,EACZ/uF,aAAa,GAEjB80F,IAlDa,CACb9mF,KAAM,YACNpS,MAAO,wBACPsS,YAAa,sDACb6mF,WAAY,QACZC,WAAY,CACR3nF,KAAM,MACNs9E,IAAK,yBAETsK,UAAW,CACP5nF,KAAM,MACNs9E,IAAK,wBAETnnF,SAAU,CAAC,SAAU,QAAS,UAAW,UAAW,OAAQ,YAC5D0xF,aAAa,EACbC,QAhJiB,CACjBC,OAAQ,CACJtnF,GAAI,IACJT,KAAM,OACN6T,QAAO,IAEXm0E,UAAW,UACXj1C,SAAU,SA0IVk1C,KArIc,CACdC,MAAO,CACH,CACIvnF,KAAM,gBACNwnF,KAAM,qCACN1sE,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,OAEbu0E,WACI,qKAER,CACIznF,KAAM,oBACNwnF,KAAM,8DACN1sE,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,QAEbu0E,WAAY,4BAEhB,CACIznF,KAAM,kBACNwnF,KAAM,qCACN1sE,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,QAEbu0E,WACI,kWAER,CACIznF,KAAM,WACNwnF,KAAM,4BACN1sE,KAAM,CACFzb,KAAM,OACN2rE,MAAO,iBACP93D,QAAS,YAEbu0E,WACI,mWAGZphC,QAAS,GAwFT9lC,OAnFgB,CAChBmnE,iBAAiB,EACjBC,WAAY,EACZ/jF,qBAAqB,EACrBV,cAAc,GAgFd0kF,cA3EuB,CACvBC,aAAa,GA2EbC,UAtEmB,CACnBC,cAAc,EACdC,kBAAmB,GAqEnBC,QAtDiB,CACjBzR,OAAQ,CACJ,aAAc,UACd,gBAAiB,UACjB,aAAc,UACd,qBAAsB,OACtB,gBAAiB,OASjB,WAAY,UACZ,cAAe,UACf,YAAa,WAEjB0R,qBAAqB,EACrBC,yBAAyB,EACzBC,OAAQ,CACJC,OAAQ,CACJ,CAAEv6F,IAAK,aAAckS,KAAM,mBAC3B,CAAElS,IAAK,gBAAiBkS,KAAM,iBAC9B,CAAElS,IAAK,aAAckS,KAAM,gBAC3B,CAAElS,IAAK,qBAAsBkS,KAAM,sBACnC,CAAElS,IAAK,gBAAiBkS,KAAM,cA4BtC4gB,MAAO,CACHhd,qBAAqB,EACrB0kF,cAAc,EACdC,iBAAiB,GAErBC,UAAW,CACPjvF,SAAS,EACT6iF,YAAa,IAEjBqM,eAAe,EACfC,SA3Ea,CACbN,OAAQ,CACJ,CAAEpoF,KAAM,WAAY2oF,MAAO,WAC3B,CAAE3oF,KAAM,UAAW2oF,MAAO,WAC1B,CAAE3oF,KAAM,WAAY2oF,MAAO,aAwE/BC,YAAa,CACT1vE,KAAM,CAAEjW,MAAO,gBAAiBuuC,YAAa,2QCrKrD,IAAA1kD,EAAAxC,EAAA,OAWAuC,EAAAvC,EAAA,MAEMu+F,EAAW,2BAsBjBz8F,iBAAA,SAAgB08F,IACZ,SAAOh8F,EAAAgzB,OAAgB,CACnB+0B,aAFuBxjD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyB,GAGhDk4B,GAAI,SAACrhB,GAAI,OAAKA,CAAgB,EAC9B4sC,SAAU+zC,EACV39F,KAAM,KACPqE,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEP,IAAI,GAC7B,EAEA9C,eAAA,SAAgB28F,EAAajpF,GACzB,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAIq4F,EAAQ,KAAAr4F,OAAIsP,IAAMvQ,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAa,GACjE,EAEA,IAAMu5F,EAAW,IAAIj2E,IAEkB,SAAAk2E,aAAAh7F,EAAhC,SACH6R,GAAU,IACVwlB,EAAAj0B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwB,MAAK,OAAAnD,IAAAC,KAAA,SAAAC,IAAA,IAAAN,EAAAS,EAAA26F,EAAA/uF,EAAA,OAAAjM,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEF,GAArBd,EAAG,GAAA0C,OAAMsP,EAAE,KAAAtP,OAAI80B,IACjB0jE,EAAS1vD,IAAIxrC,GAAI,CAAAY,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASi5F,EAASj3F,IAAIjE,IAAI,OACzCS,YAAMzB,EAAAgD,SACZjB,QAAQO,IAAI,SAAUb,GACtB0jD,SAASk3C,OAAM,GAAA34F,OACH,cAARjC,EACM,WAAaimD,sBAAmB1nD,EAAAs8F,WAChC,gBAAkB50C,mBAAmBjmD,GAC/C,+DAAAiC,OAC0B,WAAtB2B,SAASwuF,SAAwB,UAAY,IAC9CjyF,EAAAE,KAAA,EACoBy6F,MAAK,GAAA74F,OAAIq4F,EAAQ,KAAAr4F,OAAIsP,EAAE,aAAAtP,OAAY80B,IAAS,OAA7D4jE,SAAQx6F,EAAA4B,KAAA5B,EAAAE,KAAA,GACKs6F,EAAS16D,OAAM,QAA5BA,OACAr0B,EAAMmvF,IAAIC,gBADN76F,EAAA4B,MAEV04F,EAASrhF,IAAI7Z,EAAKqM,GAAKzL,EAAAqB,OAAA,SAChBoK,GAAG,yBAAAzL,EAAAwC,OAAA,EAAA9C,EAAA,EAjBmBF,EAiBnB,GACb+6F,EAAA73F,MAAA3E,KAAA4E,UAAA,CAED,SAAgBm4F,EAAet6F,GAC3B,SAAOpC,EAAA6rC,MAAKkwD,EAAU35F,GAAMK,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAa,GAC7D,CAEA,SAAgBg6F,EACZ3pF,EACA5Q,GAEA,SAAOpC,EAAAgsC,KAAG,GAAAtoC,OAAIq4F,EAAQ,KAAAr4F,OAAIsP,GAAM5Q,GAAMK,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAa,GACvE,CA/BArD,oBAF2C,SAErBs9F,EAAiBtgF,GAAA,OAAA6/E,EAAA73F,MAAA3E,KAAA4E,UAAA,EAsBvCjF,iBAAAo9F,EAIAp9F,iBAAAq9F,EAOAr9F,eAAA,SAAgBu9F,EAAaz6F,GACzB,OAAOA,EAAK4Q,GAAK2pF,EAAev6F,EAAK4Q,GAAI5Q,GAAQs6F,EAAet6F,EACpE,EAEA9C,gBAAA,SAAgBw9F,EACZ9pF,EACA5Q,GAEA,SAAOpC,EAAAynD,OAAK,GAAA/jD,OAAIq4F,EAAQ,KAAAr4F,OAAIsP,GAAM5Q,GAAMK,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,CAAa,GACzE,EAEArD,iBAAA,SAAgBy9F,EAAe/pF,GAC3B,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAIq4F,EAAQ,KAAAr4F,OAAIsP,IAAMvQ,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAK,IAAI,GACxD,6DC7FuC,SAAAq6F,aAAA77F,EAAAC,IAAAC,KAAhC,SAAAC,EAAgD27F,GAAuB,OAAA77F,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1Em7F,SAAUC,gBAAgBt7F,EAAAE,KAAA,EACpBm7F,EAAUE,QAAQC,aAAY,OACpCH,EAAUC,gBAAgB,wBAAAt7F,EAAAwC,OAAA,EAAA9C,EAAA,KAC7BgD,MAAA3E,KAAA4E,UAAA,6EAJDjF,6BAAsB+9F,EAAiB/gF,GAAA,OAAA0gF,EAAA14F,MAAA3E,KAAA4E,UAAA,uICHvC,IAAA+rB,EAAA9yB,EAAA,OACA8/F,EAAA9/F,EAAA,OAGa8B,kBAAqB,QAAJi+F,EAAA56C,YAAI,IAAA46C,GAAkB,QAAlBA,EAAJA,EAAM36C,wBAAgB,IAAA26C,GAAmB,QAAnBA,EAAtBA,EAAwB16C,yBAAiB,IAAA06C,OAAA,EAAzCA,EAA2Cz6C,WAAY,mBAErFxjD,kBAAA,SAAgBmmF,EAAgBj0E,GAAgD,IACtEgsF,KAAcF,EAAAG,mBAD6Bl5F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAajF,EAAAo+F,iBACtB,EAAIJ,EAAAG,mBAAkBn+F,EAAAo+F,gBAC9D,SAAOptE,EAAAqtE,iBAAgBnsF,EAAMgsF,GAAanoE,SAC9C,EAEA/1B,kBAAA,SAAgBs+F,EAAgBpsF,GAAgD,IAA3BqsF,EAAAt5F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAajF,EAAAo+F,eACxDF,KAAcF,EAAAG,mBAAkBn+F,EAAAo+F,iBAAc,EAAIJ,EAAAG,mBAAkBI,GAC1E,SAAOvtE,EAAAqtE,iBAAgBnsF,EAAMgsF,GAAanoE,SAC9C,yGCdA,IAAAogC,EAAAj4D,EAAA,OAEa8B,YAAY,CACrB,CACE2B,MAAS,yBACT68F,KAAQ,MACRlgE,QAAU,GACVmgE,OAAS,EACTzX,KAAQ,2CACR0X,IAAO,CACL,eAGJ,CACE/8F,MAAS,SACT68F,KAAQ,IACRlgE,QAAU,GACVmgE,OAAS,EACTzX,KAAQ,4CACR0X,IAAO,CACL,aACA,iBACA,eACA,sBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,QAAU,GACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,aACA,mBACA,mBACA,oBACA,mBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,oBACA,iBACA,eACA,gBACA,oBAGJ,CACE/8F,MAAS,iCACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,8BACR0X,IAAO,CACL,yBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,qBACA,YAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,kBACA,uBACA,qBACA,kBACA,cAGJ,CACE/8F,MAAS,kCACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,0CACR0X,IAAO,CACL,oBACA,qBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,0CACR0X,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACE/8F,MAAS,gCACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,8BACR0X,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACE/8F,MAAS,iCACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,kDACR0X,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACE/8F,MAAS,+BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,2BACR0X,IAAO,CACL,iBACA,0BAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,kCACR0X,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,6BACR0X,IAAO,CACL,0BACA,wBACA,yBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,QAAU,IACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,oBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,qBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,qCACR0X,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACE/8F,MAAS,kCACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,uBACA,mBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,mDACR0X,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,mBACA,sBAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,MACRlgE,QAAU,IACVmgE,OAAS,EACTzX,KAAQ,2BACR0X,IAAO,CACL,qBAGJ,CACE/8F,MAAS,iCACT68F,KAAQ,QACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,sBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,2BACR0X,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,iCACR0X,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,wBACR0X,IAAO,CACL,oBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,yBACR0X,IAAO,CACL,uBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,kBAGJ,CACE/8F,MAAS,SACT68F,KAAQ,IACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,4CACR0X,IAAO,CACL,kBACA,yBACA,cAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,MACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,iCACR0X,IAAO,IAET,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,uBACA,oBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,QAAU,EACVmgE,OAAS,EACTzX,KAAQ,6BACR0X,IAAO,CACL,sBACA,cAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,mBACR0X,IAAO,CACL,oBACA,oBAGJ,CACE/8F,MAAS,MACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,mCACR0X,IAAO,CACL,uBACA,YAGJ,CACE/8F,MAAS,oBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,gCACR0X,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE/8F,MAAS,oBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,4BACR0X,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,+DACR0X,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACE/8F,MAAS,+BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,gEACR0X,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,kDACR0X,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACE/8F,MAAS,iCACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,+CACR0X,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACE/8F,MAAS,kCACT68F,KAAQ,QACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,kCACR0X,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,oBAGJ,CACE/8F,MAAS,oBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,gCACR0X,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,gBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,kBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,wBACR0X,IAAO,CACL,eACA,gBACA,mBACA,kBACA,kBACA,cACA,mBACA,iBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAIJ,CACE/8F,MAAS,6BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,+BACR0X,IAAO,CACL,kBACA,mBACA,kBACA,gBACA,sBACA,gBACA,oBACA,gBACA,gBACA,gBACA,iBACA,cAGJ,CACE/8F,MAAS,oBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,4DACR0X,IAAO,CACL,kBACA,cACA,mBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,oBAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,wBACR0X,IAAO,CACL,mBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,mBAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,eAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,uBAGJ,CACE/8F,MAAS,qBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,6BACR0X,IAAO,CACL,YACA,eACA,cACA,aACA,gBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,qBACA,gBACA,uBACA,kBACA,cACA,iBACA,kBACA,mBACA,iBACA,mBACA,YACA,sBACA,gBACA,mBAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,uDACR0X,IAAO,CACH,eACF,gBACA,oBACA,mBACA,iBAGJ,CACE/8F,MAAS,cACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACH,mBACF,gBACE,qBAGN,CACE/8F,MAAS,qBACT68F,KAAQ,MACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,gBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,gCACR0X,IAAO,CACL,aACA,cACA,cAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,mBACR0X,IAAO,CACL,cAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,yBACR0X,IAAO,CACL,cACA,mBACA,mBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,MACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,eAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,iCACR0X,IAAO,CACL,oBACA,aACA,cACA,gBACA,gBACA,YACA,iBACA,gBACA,YACA,mBACA,oBAGJ,CACE/8F,MAAS,qBACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,4BACR0X,IAAO,CACL,uBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,iCACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,kDACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,kCACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,KACVmgE,OAAS,EACTzX,KAAQ,wBACR0X,IAAO,CACL,mBAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,kCACR0X,IAAO,CACL,oBACA,cACA,eACA,iBACA,cACA,YACA,kBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,aACA,iBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,+BACR0X,IAAO,CACL,eACA,iBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sCACR0X,IAAO,CACL,mBACA,eACA,YACA,eACA,kBACA,iBACA,cACA,iBACA,YACA,qBAGJ,CACE/8F,MAAS,gCACT68F,KAAQ,QACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,oBACA,mBACA,cAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oDACR0X,IAAO,CACL,iBACA,aACA,kBAGJ,CACE/8F,MAAS,2BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,qBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sCACR0X,IAAO,CACL,cACA,oBACA,eACA,gBACA,cACA,iBACA,cAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,OACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,mBACA,oBAGJ,CACE/8F,MAAS,uBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,gBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,kBACA,qBAGJ,CACE/8F,MAAS,gCACT68F,KAAQ,QACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oCACR0X,IAAO,CACL,YACA,gBACA,aACA,YACA,kBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,iBACA,eAGJ,CACE/8F,MAAS,+BACT68F,KAAQ,OACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,qBACA,0BAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,OACRlgE,OAAU,IACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,qBAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,OACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,uBACR0X,IAAO,CACL,qBACA,uBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,OACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,0CACR0X,IAAO,CACL,sBACA,qBAGJ,CACE/8F,MAAS,6BACT68F,KAAQ,OACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,iCACR0X,IAAO,CACL,4BACA,aACA,eACA,uBACA,iBACA,iBAGJ,CACE/8F,MAAS,yBACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,qBACR0X,IAAO,CACL,mBACA,qBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,EACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,aACA,gBACA,iBAGJ,CACE/8F,MAAS,gCACT68F,KAAQ,OACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,yCACR0X,IAAO,CACL,uBACA,aACA,gBACA,sBACA,iBACA,iBACA,mBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,0BACR0X,IAAO,CACL,gBACA,gBACA,qBAGJ,CACE/8F,MAAS,4BACT68F,KAAQ,OACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,mCACR0X,IAAO,CACL,qBACA,qBAGJ,CACE/8F,MAAS,SACT68F,KAAQ,IACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,4CACR0X,IAAO,CACL,aACA,mBACA,oBACA,iBACA,gBACA,iBACA,eACA,mBAGJ,CACE/8F,MAAS,qBACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,mBACR0X,IAAO,CACL,iBAGJ,CACE/8F,MAAS,wBACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,sBACR0X,IAAO,CACL,cACA,iBACA,eACA,uBAGJ,CACE/8F,MAAS,0BACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,6CACR0X,IAAO,CACL,mBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,yBACR0X,IAAO,CACL,aACA,oBACA,kBACA,sBAGJ,CACE/8F,MAAS,sBACT68F,KAAQ,MACRlgE,OAAU,GACVmgE,OAAS,EACTzX,KAAQ,oBACR0X,IAAO,CACL,kBAKK1+F,oBAAiBm2D,EAAAnmB,WAAOmmB,EAAArjC,SAAQ9yB,EAAA2+F,UAAUhjF,IAAI,SAAAtY,GAAC,OAAIA,EAAEq7F,GAAG,KAAI7hF,qQCt4CzE,IAAApD,EAAAvb,EAAA,OACA0gG,EAAA1gG,EAAA,OAEA2gG,GADA3gG,EAAA,OACAA,EAAA,6BAEA8B,iBAG2B,eAAA8+F,EAAdC,EAAc,WAWtB,OAAA5+F,EAND,SAAA4+F,EAAoBlnF,GAAkBzX,EAAAC,KAAA0+F,GAAlB1+F,KAAAwX,UAJZxX,KAAA2+F,aAAe,IAAIvlF,EAAAuB,gBAAiC,IAE5C3a,KAAA4+F,YAAc5+F,KAAK2+F,aAAa7jF,eAGxCy5C,cACAv0D,KAAK2+F,aAAax8F,KACdiC,KAAKo1B,MAAM+6B,aAAa3sD,QAAQ,uBAAyB,MAGrE,EAAC,EAAAvG,IAAA,YAAAC,MAEM,WACH,IAAMu9F,EAAmB7+F,KAAK2+F,aACzBxmF,WACAqD,OAAO,SAAC2rD,GAAI,OAAKA,EAAK23B,SAAW,MAAQ33B,EAAKrhE,KAAK,GACxD9F,KAAK2+F,aAAax8F,KAAK08F,EAC3B,GAAC,CAAAx9F,IAAA,4BAAAC,MAEM,SAA0B6lE,GAAU,IAAAlmE,EAAAjB,KACvC,OAAO,IAAI2D,QAAgB,SAACC,EAASmnF,GACrB9pF,EAAKuW,QAAQzC,KAAKypF,EAAAO,gCAAiC,CAC3Dt8F,KAAM,CAAE0kE,UAERnvD,cAAcjF,UAAS,eAAA9M,EAAAzE,EAAAC,IAAAC,KAAC,SAAAC,EAAO+U,GAAO,OAAAjV,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAClCuU,EAAO,CAAAzU,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACUlB,EAAK+9F,WAClBtoF,EAAQywD,KACRzwD,EAAQuoF,UACRvoF,EAAQwoF,aACX/6F,MAAO,SAAC0f,GACLknE,QAAOlnE,GACDA,CACV,GAAE,OACFjgB,EARQ3B,EAAA4B,MAQI5B,EAAAE,KAAA,eACT4oF,IAAS,wBAAA9oF,EAAAwC,OAAA,EAAA9C,EAAA,IACnB,gBAAAgb,GAAA,OAAA1W,EAAAtB,MAAA3E,KAAA4E,UAAA,EAZ0B,GAa/B,EACJ,GAAC,CAAAvD,IAAA,aAAAC,MAEM,SACH6lE,GAEuC,IAAAriE,EAAA9E,KADvCm/F,IAAAv6F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACAs6F,EAAAt6F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,OAEjC,OAAO,IAAIjB,QAAgB,SAACC,GACxB,IAAIw7F,GAAW,EACTC,EAAY,SAAC3oF,GACV0oF,IACDx7F,EAAQ8S,EAAQrD,IAChB+rF,GAAW,GAEft6F,EAAK65F,aAAax8F,KAAI,GAAA4B,OAAAqe,EACftd,EAAK65F,aACHxmF,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOqD,EAAQrD,EAAE,IAAC,CACvCqD,IAER,GACA,EAAA6nF,EAAAS,YAAW73B,EAAMg4B,EAAKD,GAAansF,UAC/BssF,EACAA,EACA,kBAAMv6F,EAAKw6F,sBAAsB,EAEzC,EACJ,GAAC,CAAAj+F,IAAA,uBAAAC,MAEO,WACJ,IAAMi+F,EAAYv/F,KAAK2+F,aAClBxmF,WACAqD,OAAO,SAAC2rD,GAAI,OAAKA,EAAK23B,UAAY,GAAG,GAC1CS,EAAUl3E,QAAQ,SAAC+J,GAAC,cAAYA,EAAEotE,MAAM,GACpCjrC,cACAA,aAAatwD,QAAQ,kBAAmBG,KAAKC,UAAUk7F,GAE/D,IAAC,CA5EsB,GA4EtBd,SA5EQC,0CAAct2F,EAAA4U,mBAAA1U,EAAAgQ,WAAA,qDAAdomF,EAAczhF,QAAdyhF,EAAcxhF,UAAAC,WAFX,SAEHuhF,CAAc,kHCT3B,IAAAe,EAAA5hG,EAAA,OAKAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEAi4D,EAAAj4D,EAAA,OAEA6hG,EAAA7hG,EAAA,OA2BA8B,aAAA,SAAgBq/F,EACZ73B,GAEuC,IADvCg4B,IAAAv6F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACAs6F,EAAAt6F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,OAEjC,OAAO,IAAIwU,EAAAumF,WAAW,SAACC,GACnB,IAAMx4B,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAACzjD,GACpC,IACMke,EAAO29D,EAASG,kBADFh8E,EAAEojD,OAAO7/D,OACwB+/D,EAAKv0D,MAMpD4sF,GALAZ,EAAca,EAAAK,aAAY,CAAC/9D,GAAO,CACpCg+D,UAAW54B,EAAK5zD,KAChB2rF,cACAc,OAAQb,IAEe,GACrBc,EAAgC,CAClC5sF,MAAIyiD,EAAAp3B,WAAU,cACdnrB,KAAM4zD,EAAK5zD,KACXurF,SAAU,EACV/D,KAAM,GACNmF,kBAAgBT,EAAAU,wBAAuBh5B,EAAK5N,MAC5CA,KAAM4N,EAAK5N,KACXimC,UAEJA,EAAO99D,OACF5+B,QAAK1C,EAAAggG,WAAU,SAACp9F,GAAC,MAAkB,aAAbA,EAAE0+B,MAAqB,GAAE,IAC/C3uB,UAAU,SAACwqB,GACJiiE,EAAOa,aACPJ,EAAelF,KAAQoE,EAMjBK,EAAOa,WANa,GAAAt8F,OAEhB2B,SAASC,OACb,2BAAA5B,OAA0BgkD,mBACtBy3C,EAAOnsF,IACV,SAGX4sF,EAAenB,SAAWvhE,EAAMuhE,SAChCc,EAASz9F,KAAK89F,GACO,UAAjB1iE,EAAMmE,QACNk+D,EAAS95F,MAAK+oB,IAAA,GACPoxE,GAAc,IACjBn6F,MAAOy3B,EAAMz3B,SAEA,aAAjBy3B,EAAMmE,QAAuBk+D,EAASU,UAC9C,GACJV,EAASz9F,KAAK89F,EAClB,GACA74B,EAAWm5B,kBAAkBp5B,EACjC,EACJ,gLCtFA,IAAA/tD,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,gBAEM2iG,EAAe,CAAC,WAAY,YAAa,YAAa,SAAU,SAEtE7gG,sBAGgC,eAAA8gG,EAAnBC,EAAmB,WA0C/B,OAAA5gG,EA7CD,SAAA4gG,IAAA,IAAAz/F,EAAAjB,KAAAD,EAAAC,KAAA0gG,GAIY1gG,KAAA2gG,aAAe,IAAIvnF,EAAAuB,gBAAgBb,KAAKuX,OACxCrxB,KAAAsxB,QAAU,SAACzN,GAAE,OAAK5iB,EAAK2/F,oBAAoB,EAC3C5gG,KAAA6gG,aAAeL,EAEPxgG,KAAA8gG,eAAc1nF,EAAA2I,eAAc,CACxC/hB,KAAK2gG,gBACLvnF,EAAAwd,UAAS,OACV9zB,QACC1C,EAAA2gG,cAAa,MAAG,EAChB3gG,EAAAkb,KAAI,SAAArV,GAAa,OAAbgc,EAAAhc,EAAA,GAAa,EAAiB,IAGtBjG,KAAAghG,UAAYhhG,KAAK8gG,YAAYh+F,QACzC1C,EAAAkb,KAAI,SAACsc,GAAI,OAAK9d,KAAKuX,MAAQuG,CAAI,KA4BtC,EAAAv2B,IAAA,qBAAAC,MAzBW,WACJtB,KAAK2gG,aAAax+F,KAAK2X,KAAKuX,MAChC,GAAC,CAAAhwB,IAAA,UAAAC,MAEM,SAAQ2/F,GACX,IAAMx8F,EAAOzE,KAAKkhG,iBAClB,OAAOlhG,KAAKghG,UAAUl+F,QAClB1C,EAAA2C,OAAM,SAACu8B,GAAC,OAAKA,GAAK2hE,CAAO,MACzB7gG,EAAAyiB,KAAI,kBAAMpe,GAAM,GAExB,GAAC,CAAApD,IAAA,iBAAAC,MAEM,WAAc,IAAAwD,EAAA9E,KACjBA,KAAK2gG,aAAax+F,KAAK2X,KAAKuX,OAAO,IACCiG,EADDD,EAAAa,EAChBl4B,KAAK6gG,cAAY,IAApC,IAAAxpE,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MACIotB,SAASzU,KAAKu2B,iBADHhwC,EAAAh2B,MAC0BtB,KAAKsxB,QAC7C,OAAAhI,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAO,kBAAMr0B,EAAKq8F,eAAe,CACrC,GAAC,CAAA9/F,IAAA,gBAAAC,MAEM,WAAa,IACoBm2B,EADpBD,EAAAU,EACGl4B,KAAK6gG,cAAY,IAApC,IAAArpE,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MACIotB,SAASzU,KAAKqwD,oBADH3pE,EAAAn2B,MAC6BtB,KAAKsxB,QAChD,OAAAhI,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACL,IAAC,CAzC2B,GAyC3BsnE,SAzCQC,yCAAmB,qDAAnBA,EAAmBzjF,QAAnByjF,EAAmBxjF,UAAAC,WAFhB,SAEHujF,CAAmB,2GCThC,IAAArgG,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEA8pD,EAAA9pD,EAAA,OAEMwjG,EAAa,IAAI15C,EAAA25C,UAEjBC,EAAgB,IAAInoF,EAAAuB,gBAA2B,MAExChb,eAAe4hG,EAAczmF,eAI1CkyB,WAAW,WACP,IACI,GAAI28C,KAAM,MACd,OAAS,EACT,EAAAtpF,EAAAmhG,UAAS,WACJ1+F,QACG1C,EAAA8iF,OAAM,MAAI,EACV9iF,EAAAqhG,OAAM,KAAE,EACRrhG,EAAAkb,KAAI,SAAC8W,GAAC,OAAK,IAAIu1B,EAAA25C,UAAUlvE,EAAE,IAE9Brf,UAAU,SAAC0Z,GAAI,OAAK80E,EAAcp/F,KAAKsqB,EAAK,EACrD,EAAG,KAGH9sB,cAAA,SAAgB6G,IACZ,OAAO+6F,EAAcppF,YAAckpF,CACvC,kBC5BA,SAAgBlM,EAAU7kD,GAAG,IAAIzsB,EAAE7jB,KAAKswC,EAAE,iBAAiBA,EAAEA,EAAE,GAAGzsB,EAAE69E,SAAS,EAAE79E,EAAE89E,WAAW,CAACC,IAAI,YAAYC,IAAI,YAAYC,KAAK,aAAaC,IAAI,YAAYC,IAAI,YAAY,UAAU,gBAAgBC,KAAK,aAAaC,KAAK,aAAa,SAAS,gBAAgBr+E,EAAEyxE,QAAQhlD,EAAEglD,QAAQzxE,EAAEs+E,WAAWt+E,EAAEyxE,QAAQ9vC,SAASC,cAAc,OAAOD,SAASC,cAAc,UAAU5hC,EAAEnW,IAAI4iC,EAAE5iC,KAAK,GAAGmW,EAAE01C,KAAKjpB,EAAEipB,MAAM,IAAI11C,EAAEu+E,KAAI,EAAGv+E,EAAEuxE,WAAW9kD,EAAE8kD,YAAY,OAAOvxE,EAAEwxE,UAAU/kD,EAAE+kD,WAAW,OAAOxxE,EAAE0xE,SAASjlD,EAAEilD,UAAU,EAAE1xE,EAAE2xE,SAASllD,EAAEklD,SAAS3xE,EAAE4xE,WAAWnlD,EAAEmlD,YAAY,EAAE,IAAIlzE,EAAE0Q,EAAEqM,EAAElN,EAAE+F,EAAEw3B,EAAEx2B,EAAEoG,EAAE,GAAGjX,EAAE,GAAGrQ,EAAE,GAAGs/D,EAAE,GAAGmV,EAAE,GAAGhqE,EAAE,GAAG2/E,EAAE,SAAS/xD,EAAEzsB,GAAG,IAAItB,EAAE+tB,EAAEzsB,IAAItB,EAAE+tB,EAAEA,EAAEzsB,EAAEA,EAAEtB,GAAGA,EAAEsB,EAAEtB,GAAGsB,EAAEtB,GAAGsB,EAAEtB,IAAI,EAAEg1D,EAAEh1D,GAAG+tB,GAAG,CAAC,EAAEgyD,EAAE,SAAShyD,EAAEzsB,GAAG,IAAItB,EAAE,IAAItK,EAAEq4B,EAAEhR,EAAEzb,GAAG,EAAEtB,GAAE,EAAGA,EAAE,EAAEA,IAAItK,EAAEq4B,EAAE/tB,EAAE+c,GAAGzb,EAAE,IAAI,EAAE5L,EAAEq4B,EAAE,EAAEhR,GAAGzb,EAAEtB,EAAE,IAAI,EAAEtK,EAAEq4B,EAAE,EAAEhR,GAAGzb,EAAEtB,IAAI,EAAEtK,EAAEq4B,EAAE/tB,EAAE,EAAE+c,GAAGzb,EAAE,IAAI,EAAE,IAAItB,EAAE,EAAEA,EAAE,EAAEA,IAAI8/E,EAAE/xD,EAAE,EAAEzsB,EAAEtB,GAAG8/E,EAAE/xD,EAAE,EAAEzsB,EAAEtB,GAAG8/E,EAAE/xD,EAAE/tB,EAAEsB,EAAE,GAAGw+E,EAAE/xD,EAAE/tB,EAAEsB,EAAE,EAAE,EAAE0+E,EAAE,SAASjyD,GAAG,KAAKA,GAAG,KAAKA,IAAIA,GAAG,MAAM,IAAI,IAAIA,GAAG,OAAOA,CAAC,EAAEhyB,EAAE,SAASgyB,EAAEzsB,EAAEtB,EAAE0Q,GAAG,IAAIqM,EAAElN,EAAE+F,EAAEw3B,EAAEwlC,EAAUqN,KAAKrpE,EAAEg8D,EAAUsN,KAAK,IAAInjE,EAAE,EAAEA,EAAErM,EAAEqM,IAAIC,EAAEhd,EAAE+c,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEzb,EAAEyb,IAAI,CAAC,GAAG,MAAMnH,EAAEgB,EAAEoG,EAAE+Q,EAAEhR,GAAGC,EAAEhd,KAAK,IAAI6P,EAAE,EAAEA,EAAEa,EAAEb,IAAImN,EAAEhd,EAAE6P,EAAE,GAAGmN,EAAEhd,EAAE6P,GAAGu9B,EAAE4yC,EAAEpqE,EAAEzV,EAAEuQ,EAAEb,UAAU,IAAIA,EAAE7P,EAAE6P,EAAE7P,EAAE0Q,EAAEb,IAAImN,EAAEnN,GAAGmN,EAAEnN,EAAE,GAAGmN,EAAEhd,EAAE0Q,EAAE,GAAG,KAAKkF,EAAE,EAAEw3B,EAAE4yC,EAAEpqE,EAAEzV,EAAE,IAAI,CAAC,EAAEggF,EAAE,SAASpyD,EAAEzsB,GAAG,IAAItB,EAAE,OAAO+tB,EAAEzsB,IAAItB,EAAE+tB,EAAEA,EAAEzsB,EAAEA,EAAEtB,GAAGA,EAAEsB,EAAEtB,GAAGsB,EAAEA,EAAEtB,IAAI,EAAEg1D,EAAEh1D,GAAG+tB,EAAE,EAAEqyD,EAAE,SAASryD,GAAG,IAAIzsB,EAAEtB,EAAE0Q,EAAEb,EAAE,OAAOke,GAAG,KAAK,EAAE,IAAI/tB,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI,IAAIsB,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIA,EAAEtB,EAAE,GAAGmgF,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAI/c,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI,IAAIsB,EAAE,EAAEA,EAAEyb,EAAEzb,IAAI,EAAEtB,GAAGmgF,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAI/c,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI,IAAI0Q,EAAE,EAAEpP,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGyvE,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIlN,EAAE,EAAE7P,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI6P,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAEb,EAAEvO,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGyvE,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAI/c,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI,IAAI0Q,EAAE,EAAEb,EAAE7P,GAAG,EAAE,EAAEsB,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,EAAEb,GAAGA,GAAGA,GAAGswE,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIlN,EAAE,EAAE7P,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI6P,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEpP,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,IAAIpP,EAAEtB,EAAE,MAAM0Q,GAAGb,IAAIswE,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIlN,EAAE,EAAE7P,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI6P,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEpP,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,IAAIpP,EAAEtB,EAAE,IAAI0Q,GAAGA,GAAGb,GAAG,GAAGswE,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIlN,EAAE,EAAE7P,EAAE,EAAEA,EAAE+c,EAAE/c,IAAI6P,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEpP,EAAE,EAAEA,EAAEyb,EAAEzb,IAAIoP,IAAI,GAAGA,IAAIA,EAAE,IAAIA,GAAGA,GAAGb,IAAIvO,EAAEtB,EAAE,GAAG,GAAGmgF,EAAE7+E,EAAEtB,KAAKtK,EAAE4L,EAAEtB,EAAE+c,IAAI,GAAG,EAAEsjE,EAAE,SAAStyD,GAAG,IAAIzsB,EAAEtB,EAAE,EAAE,IAAIsB,EAAE,EAAEA,GAAGysB,EAAEzsB,IAAI6oE,EAAE7oE,IAAI,IAAItB,GAAG4yE,EAAU0N,GAAGnW,EAAE7oE,GAAG,GAAG,IAAIA,EAAE,EAAEA,EAAEysB,EAAE,EAAEzsB,GAAG,EAAE6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,EAAE,IAAI,EAAE6oE,EAAE7oE,EAAE,IAAI6oE,EAAE7oE,KAAK,GAAG6oE,EAAE7oE,EAAE,IAAIA,EAAE,EAAEysB,GAAG,EAAEo8C,EAAE7oE,EAAE,IAAI,EAAE6oE,EAAE7oE,IAAI,EAAE6oE,EAAE7oE,EAAE,IAAI,EAAE6oE,EAAE7oE,MAAMtB,GAAG4yE,EAAU2N,IAAI,OAAOvgF,CAAC,EAAEohE,EAAE,WAAW,IAAIrzC,EAAEzsB,EAAEtB,EAAE0Q,EAAEb,EAAE+F,EAAE,EAAEw3B,EAAE,EAAE,IAAI9rC,EAAE,EAAEA,EAAEyb,EAAE,EAAEzb,IAAI,IAAIysB,EAAE,EAAEA,EAAEhR,EAAE,EAAEgR,KAAKr4B,EAAEq4B,EAAEhR,EAAEzb,IAAI5L,EAAEq4B,EAAE,EAAEhR,EAAEzb,IAAI5L,EAAEq4B,EAAEhR,GAAGzb,EAAE,KAAK5L,EAAEq4B,EAAE,EAAEhR,GAAGzb,EAAE,OAAO5L,EAAEq4B,EAAEhR,EAAEzb,IAAI5L,EAAEq4B,EAAE,EAAEhR,EAAEzb,IAAI5L,EAAEq4B,EAAEhR,GAAGzb,EAAE,KAAK5L,EAAEq4B,EAAE,EAAEhR,GAAGzb,EAAE,QAAQsU,GAAGg9D,EAAU4N,IAAI,IAAIl/E,EAAE,EAAEA,EAAEyb,EAAEzb,IAAI,CAAC,IAAI6oE,EAAE,GAAG,EAAEnqE,EAAE0Q,EAAEqd,EAAE,EAAEA,EAAEhR,EAAEgR,KAAKle,EAAEna,EAAEq4B,EAAEhR,EAAEzb,KAAKoP,EAAEy5D,EAAEnqE,KAAKmqE,IAAInqE,GAAG,EAAEotC,IAAI18B,EAAEb,GAAG,GAAE,EAAG+F,GAAGyqE,EAAErgF,EAAE,CAACotC,EAAE,IAAIA,GAAGA,GAAG,IAAIx2B,EAAEw2B,EAAEpwB,EAAE,EAAE,IAAIpG,GAAGA,GAAG,EAAEA,IAAI,EAAEA,EAAEmG,EAAEA,GAAGnG,GAAGmG,EAAEA,EAAEC,IAAI,IAAIpH,GAAGoH,EAAE41D,EAAU6N,GAAG1yD,EAAE,EAAEA,EAAEhR,EAAEgR,IAAI,CAAC,IAAIo8C,EAAE,GAAG,EAAEnqE,EAAE0Q,EAAEpP,EAAE,EAAEA,EAAEyb,EAAEzb,KAAKuO,EAAEna,EAAEq4B,EAAEhR,EAAEzb,KAAKoP,EAAEy5D,EAAEnqE,KAAKmqE,IAAInqE,GAAG,EAAE0Q,EAAEb,EAAE+F,GAAGyqE,EAAErgF,EAAE,CAAC,OAAO4V,CAAC,EAAEtU,EAAEo/E,SAAS,SAAS3yD,GAAG,IAAIzsB,EAAE6oE,EAAEkW,EAAEt9C,EAAE49C,EAAEpT,EAAEqT,EAAEC,EAAEC,EAAElO,EAAUmO,UAAU/9C,EAAE4vC,EAAUqN,KAAKe,EAAEpO,EAAUsN,KAAKn9C,EAAEhV,EAAEtrC,OAAOiuB,EAAE,EAAE,MAAMA,IAAI2vE,EAAE,GAAGrgF,EAAE,GAAG,IAAI0Q,EAAE,GAAGb,EAAEixE,EAAET,KAAKzqE,EAAEkrE,EAAET,KAAKjzC,EAAE0zC,EAAET,KAAKzpE,EAAEkqE,EAAET,GAAGt9C,IAAIs9C,EAAEjzC,GAAGv9B,EAAE+F,GAAGA,EAAE,GAAGlF,GAAG,IAAI,YAAYA,EAAE,IAAI,IAAIqM,EAAE,GAAG,EAAErM,EAAEiwE,EAAEvzC,GAAGA,EAAEx2B,IAAI/G,EAAE+F,GAAGA,EAAEmtB,EAAE,EAAEA,EAAE49C,EAAE59C,IAAIh9B,EAAEg9B,GAAG,EAAE,IAAI/lB,EAAE+Q,EAAEs4C,MAAM,GAAGtjC,EAAE,EAAEA,EAAEhmB,EAAEA,EAAEgmB,IAAIrtC,EAAEqtC,GAAG,EAAE,IAAIA,EAAE,EAAEA,GAAGhmB,GAAGA,EAAE,GAAG,GAAG,EAAEgmB,IAAIiyB,EAAEjyB,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAAC,IAAIs9C,EAAE,EAAElW,EAAE,EAAE,GAAGpnC,IAAIs9C,EAAEtjE,EAAE,GAAG,GAAGgmB,IAAIonC,EAAEptD,EAAE,GAAGrnB,EAAEy0E,EAAE,EAAEptD,GAAGsjE,EAAE,IAAI,EAAE/+E,EAAE,EAAEA,EAAE,EAAEA,IAAI5L,EAAEy0E,EAAE7oE,EAAEyb,EAAEsjE,GAAG,EAAE3qF,EAAEy0E,EAAEptD,GAAGsjE,EAAE/+E,EAAE,IAAI,EAAE5L,EAAEy0E,EAAE,EAAEptD,GAAGsjE,EAAE/+E,IAAI,EAAE5L,EAAEy0E,EAAE7oE,EAAE,EAAEyb,GAAGsjE,EAAE,IAAI,EAAE,IAAI/+E,EAAE,EAAEA,EAAE,EAAEA,IAAIw+E,EAAE3V,EAAE7oE,EAAE++E,EAAE,GAAGP,EAAE3V,EAAE,EAAEkW,EAAE/+E,EAAE,GAAGw+E,EAAE3V,EAAE,EAAEkW,EAAE/+E,GAAGw+E,EAAE3V,EAAE7oE,EAAE,EAAE++E,EAAE,GAAG,IAAI/+E,EAAE,EAAEA,EAAE,EAAEA,IAAI5L,EAAEy0E,EAAE7oE,EAAEyb,GAAGsjE,EAAE,IAAI,EAAE3qF,EAAEy0E,EAAE,EAAEptD,GAAGsjE,EAAE/+E,EAAE,IAAI,EAAE5L,EAAEy0E,EAAE,EAAEptD,GAAGsjE,EAAE/+E,IAAI,EAAE5L,EAAEy0E,EAAE7oE,EAAE,EAAEyb,GAAGsjE,EAAE,IAAI,CAAC,CAAC,GAAG3vE,EAAE,EAAE,IAAIqyB,EAAE6vC,EAAUqO,OAAOvwE,GAAGy5D,EAAEptD,EAAE,IAAI,CAAC,IAAIzb,EAAEyb,EAAE,EAAEzb,EAAEyhC,EAAE,IAAIg9C,EAAEz+E,EAAE6oE,KAAK7oE,EAAEyhC,KAAKzhC,GAAGyhC,EAAE,GAAGonC,GAAGpnC,EAAE,EAAE,MAAMg9C,EAAE,EAAE5V,GAAGpnC,GAAGg9C,EAAE5V,EAAE,EAAE,CAAC,IAAIz0E,EAAE,EAAEqnB,GAAGA,EAAE,IAAI,EAAEotD,EAAE,EAAEA,EAAE,EAAEA,IAAI2V,EAAE,EAAE3V,GAAG2V,EAAE/iE,EAAE,EAAEotD,GAAG2V,EAAE,EAAE3V,EAAEptD,EAAE,GAAG,IAAIzb,EAAE,EAAEA,EAAE,EAAEA,IAAIw+E,EAAEx+E,EAAE,GAAGw+E,EAAEx+E,EAAEyb,EAAE,EAAE,GAAG+iE,EAAEx+E,EAAEyb,EAAE,GAAG,IAAIzb,EAAE,EAAEA,EAAE,EAAEA,IAAIw+E,EAAEx+E,EAAE,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIw+E,EAAEx+E,EAAEyb,EAAE,EAAE,GAAG+iE,EAAE,EAAEx+E,GAAG,IAAI6oE,EAAE,EAAEA,EAAE,EAAEA,IAAI2V,EAAE,EAAE3V,EAAEptD,EAAE,GAAG,IAAIzb,EAAE,EAAEA,EAAEyb,EAAE,GAAGzb,IAAI,EAAEA,GAAGw+E,EAAE,EAAEx+E,EAAE,GAAGw+E,EAAE,EAAE,EAAEx+E,KAAK5L,EAAE,EAAE4L,EAAE,EAAEyb,GAAG,EAAErnB,EAAE,EAAEqnB,GAAG,EAAEzb,IAAI,GAAG,GAAGoP,EAAE,EAAE,IAAIqyB,EAAE6vC,EAAUsO,KAAKxwE,EAAE,GAAG2vE,EAAE,GAAG/+E,EAAE,EAAEA,EAAE,EAAEA,IAAI,IAAI6oE,EAAE,EAAEA,EAAE,EAAEA,IAAIkW,IAAI,GAAGA,EAAE,GAAG3vE,GAAG2vE,EAAE,GAAGt9C,GAAGs9C,IAAI3qF,EAAE,EAAE4L,EAAEyb,GAAG,EAAEotD,EAAEptD,EAAE,KAAK,EAAErnB,EAAE,EAAEy0E,EAAEptD,EAAE,GAAGA,GAAG,EAAEzb,IAAI,IAAIw+E,EAAE,EAAEx+E,EAAE,EAAE6oE,EAAEptD,EAAE,IAAI+iE,EAAE,EAAE3V,EAAEptD,EAAE,GAAG,EAAEzb,IAAI,IAAI6oE,EAAE,EAAEA,EAAEptD,EAAEotD,IAAI,IAAI7oE,EAAE,EAAEA,GAAG6oE,EAAE7oE,IAAI5L,EAAE4L,EAAEyb,EAAEotD,IAAI2V,EAAEx+E,EAAE6oE,GAAG,IAAIwW,EAAE3jE,EAAEv6B,OAAO8qF,EAAE,EAAEA,EAAEoT,EAAEpT,IAAIxnE,EAAEwnE,GAAGvwD,EAAEqsD,WAAWkE,GAAG,GAAGvwD,EAAEjX,EAAEsgE,MAAM,GAAGsa,IAAIr/E,EAAE8rC,GAAGv9B,EAAE+F,GAAGA,GAAG,IAAI+qE,EAAEr/E,EAAE,EAAEoP,EAAE,GAAGiwE,KAAKpT,EAAEoT,EAAEjwE,EAAE,EAAE,CAAC,IAAIsM,EAAEuwD,EAAE,GAAG,EAAEvwD,EAAEuwD,EAAE,GAAG,EAAEA,KAAYvwD,EAAEuwD,EAAE,IAAI,KAAfxqC,EAAE/lB,EAAEuwD,KAAkB,EAAEvwD,EAAEuwD,EAAE,GAAGxqC,GAAG,EAAE/lB,EAAE,IAAI,IAAI2jE,GAAG,EAAE3jE,EAAE,GAAG2jE,GAAG,EAAE3jE,EAAE,GAAG,GAAG2jE,GAAG,EAAE,KAAK,CAAC,IAAI3jE,EAAEuwD,EAAE,GAAG,EAAEvwD,EAAEuwD,EAAE,GAAG,EAAEA,KAAYvwD,EAAEuwD,EAAE,IAAI,KAAfxqC,EAAE/lB,EAAEuwD,KAAkB,EAAEvwD,EAAEuwD,EAAE,GAAGxqC,GAAG,EAAE/lB,EAAE,IAAI,IAAI2jE,GAAG,EAAE3jE,EAAE,GAAG,GAAG2jE,GAAG,CAAC,CAAC,IAAIpT,EAAEoT,EAAE,GAAGjwE,EAAE,IAAI68D,EAAEjsE,GAAG0b,EAAEuwD,KAAK,IAAIvwD,EAAEuwD,KAAK,GAAG,IAAIptE,EAAE,GAAG,EAAEotE,EAAE,EAAEA,EAAE32D,EAAE22D,IAAI,CAAC,IAAIptE,EAAEotE,EAAE,GAAG,EAAEqT,EAAErT,EAAEqT,EAAE,EAAEA,IAAIzgF,EAAEygF,GAAGzgF,EAAEygF,GAAGzgF,EAAEygF,EAAE,GAAG59C,EAAEg9C,EAAEgB,EAAE7gF,EAAEygF,IAAIrT,IAAIptE,EAAEygF,EAAE,GAAGzgF,EAAE,GAAG6iC,EAAEg9C,EAAEgB,EAAE7gF,EAAE,IAAIotE,GAAG,CAAC,IAAIA,EAAE,EAAEA,GAAG32D,EAAE22D,IAAIptE,EAAEotE,GAAGyT,EAAE7gF,EAAEotE,IAAI,IAAI8S,EAAE/+E,EAAE6oE,EAAE,EAAEoD,EAAE,EAAEA,EAAE19D,EAAE09D,IAAIxxE,EAAEouE,EAAE/8B,EAAEizC,EAAEzpE,GAAGuzD,GAAG/8B,EAAEizC,GAAGzpE,EAAE,IAAI22D,EAAE,EAAEA,EAAE33D,EAAE23D,IAAIxxE,EAAEouE,EAAE/8B,EAAE,EAAEizC,EAAEzpE,GAAGuzD,GAAG/8B,EAAE,EAAEizC,GAAGzpE,EAAE,IAAIuzD,EAAE,EAAEoD,EAAE,EAAEA,EAAEngC,EAAEmgC,IAAI,CAAC,IAAIqT,EAAE,EAAEA,EAAE/wE,EAAE+wE,IAAI76E,EAAEokE,KAAKntD,EAAEuwD,EAAEqT,EAAExzC,GAAG,IAAIwzC,EAAE,EAAEA,EAAEhrE,EAAEgrE,IAAI76E,EAAEokE,KAAKntD,EAAEnN,EAAEu9B,EAAEmgC,EAAEqT,GAAGxzC,EAAE,GAAG,CAAC,IAAIwzC,EAAE,EAAEA,EAAEhrE,EAAEgrE,IAAI76E,EAAEokE,KAAKntD,EAAEnN,EAAEu9B,EAAEmgC,EAAEqT,GAAGxzC,EAAE,IAAI,IAAImgC,EAAE,EAAEA,EAAE32D,EAAE22D,IAAI,IAAIqT,EAAE,EAAEA,EAAE/wE,EAAE+F,EAAEgrE,IAAI76E,EAAEokE,KAAKntD,EAAE1b,EAAEisE,EAAEqT,EAAEhqE,GAAG,IAAIoG,EAAEjX,EAAEzE,EAAE6oE,EAAEptD,EAAE,EAAEsjE,EAAEM,EAAE,EAAEE,GAAGzzC,EAAEx2B,IAAI/G,EAAE+F,GAAGA,EAAE23D,EAAE,EAAEA,EAAEsT,EAAEtT,IAAI,IAAIxqC,EAAE/lB,EAAEuwD,GAAGqT,EAAE,EAAEA,EAAE,EAAEA,IAAI79C,IAAI,EAAE,CAAC,IAAIA,IAAIrtC,EAAE4L,EAAEyb,EAAEotD,GAAG,GAAG,GAAGwW,EAAEr/E,KAAKA,IAAI++E,EAAE,GAAGlW,EAAEA,KAAKkW,GAAGA,EAAE,IAAI/+E,GAAG,KAAKA,IAAI6oE,EAAE,IAAIA,GAAGptD,EAAE,EAAEotD,KAAKkW,GAAGA,EAAE,IAAI/+E,GAAG,KAAKA,IAAI6oE,GAAG,KAAKwW,GAAGA,QAAQR,EAAE7+E,EAAE6oE,GAAG,CAAC,IAAIntD,EAAEtnB,EAAE2wE,MAAM,GAAGtjC,EAAE,EAAEonC,EAAE,IAAIkW,EAAE,EAAEA,EAAE,IAAID,EAAEC,IAAI/+E,EAAE8/D,KAAK+I,IAAIA,EAAE7oE,EAAEyhC,EAAEs9C,GAAG,GAAGt9C,GAAGs9C,IAAI3qF,EAAEsnB,EAAEqpD,MAAM,GAAG,IAAItjC,GAAGs9C,GAAGD,EAAEr9C,GAAGonC,EAAEyI,EAAUuO,QAAQp+C,GAAG/iC,EAAE,GAAG,IAAIqgF,EAAE,EAAEA,EAAE,EAAEA,IAAIlW,IAAI,EAAE,EAAEA,IAAIz0E,EAAEqnB,EAAE,EAAEsjE,EAAE,EAAEtjE,GAAG,EAAEsjE,EAAE,EAAE3qF,EAAE,EAAEqnB,EAAEsjE,GAAG,EAAE3qF,EAAE,EAAEqnB,GAAGsjE,EAAE,IAAI,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIlW,IAAI,EAAE,EAAEA,IAAIz0E,EAAE,EAAEqnB,GAAGA,EAAE,EAAEsjE,IAAI,EAAEA,EAAE3qF,EAAE,EAAE2qF,EAAE,EAAEtjE,GAAG,EAAErnB,EAAE,EAAE,EAAEqnB,GAAG,GAAG,OAAOrnB,CAAC,EAAE4L,EAAE00E,KAAK,WAAWh2E,EAAEsB,EAAE0xE,SAAS,IAAIjlD,EAAEzsB,EAAEo/E,SAASp/E,EAAEnW,KAAKmW,EAAEyxE,QAAQzxE,EAAE8/E,WAAWrzD,EAAEhR,GAAGzb,EAAE+/E,YAAYtzD,EAAEhR,EAAE,EAAEzb,EAAE00E,MAAM,qEAAtzK54F,YAAAw1F,EAAuzKA,EAAU0O,UAAU,CAACD,YAAY,SAAStzD,EAAEzsB,GAAG,IAAI7jB,KAAKoiG,MAAMpiG,KAAKoiG,IAAIpiG,KAAK8jG,WAAW9jG,KAAKmiG,aAAaniG,KAAKoiG,KAAK,OAAOpiG,KAAKs1F,SAAQ,EAAGt1F,KAAKmiG,WAAW38C,SAASC,cAAc,YAAYzlD,KAAK2jG,WAAWrzD,EAAEzsB,GAAG,IAAItB,EAAEviB,KAAKu5D,KAAKtmC,EAAEjzB,KAAKoiG,IAAInvE,EAAE8wE,UAAU,EAAE,IAAIzkE,EAAE/c,EAAE+c,GAAGzb,EAAE,GAAGyb,EAAEtH,KAAK41D,MAAMtuD,EAAE,IAAI,IAAIlN,EAAE,EAAEpyB,KAAKw1F,UAAUviE,EAAE+wE,OAAO78F,MAAM8rB,EAAE+wE,OAAO98F,OAAOo4B,EAAEzb,EAAEuO,EAAE,GAAGa,EAAE+wE,OAAO78F,MAAM8rB,EAAE+wE,OAAO98F,OAAOqb,EAAE0Q,EAAEgxE,UAAU,EAAE,EAAE1hF,EAAEA,GAAG0Q,EAAEixE,UAAUlkG,KAAKo1F,WAAWniE,EAAEkxE,SAAS,EAAE,EAAE7kE,GAAGzb,EAAE,GAAGyb,GAAGzb,EAAE,IAAIoP,EAAEixE,UAAUlkG,KAAKq1F,UAAU,QAAQl9D,EAAE,EAAEA,EAAEtU,EAAEsU,IAAI,QAAQw3B,EAAE,EAAEA,EAAE9rC,EAAE8rC,IAAIrf,EAAEqf,EAAE9rC,EAAEsU,IAAIlF,EAAEkxE,SAAS7kE,GAAGlN,EAAE+F,GAAGmH,GAAGlN,EAAEu9B,GAAGrwB,EAAEA,EAAE,EAAEqkE,WAAW,SAASrzD,EAAEzsB,GAAG,IAAItB,EAAEviB,KAAKizB,EAAE+E,KAAK41D,MAAM5tF,KAAKu5D,KAAK11C,EAAE,KAAK,KAAKyb,EAAEzb,GAAGtB,EAAEizE,SAAS,EAAE,EAAEjzE,EAAEkzE,YAAYrjE,EAAE7P,EAAEkzE,WAAWt9D,EAAE,SAASlF,EAAE,WAAWA,EAAE,IAAI08B,EAAEptC,EAAE6yE,WAAWj8D,EAAE5W,EAAE8yE,UAAU91D,EAAEimB,SAASC,cAAc,SAASlmB,EAAEmmB,MAAM0+C,QAAQ,qCAAqC,QAAQ97E,EAAErQ,EAAEutC,SAASC,cAAc,MAAM8xB,EAAE/xB,SAASC,cAAc,MAAMinC,EAAE,WAAW,OAAOnV,EAAE8sB,WAAW,EAAE3hF,EAAE,WAAW,IAAI4tB,EAAEo8C,IAAI,OAAOp8C,EAAEoV,MAAM0+C,QAAQjsE,EAAE,cAAcw3B,EAAErf,CAAC,EAAE+xD,EAAE,SAAS/xD,GAAG,QAAQzsB,EAAEysB,EAAEg0D,WAAW/hF,EAAE,EAAEA,EAAE6P,EAAE7P,IAAI+tB,EAAE8/C,aAAa1tE,IAAImB,GAAGysB,EAAEuV,YAAYnjC,IAAI,EAAE4/E,EAAE,EAAEA,EAAEz+E,EAAEy+E,IAAI,CAAC,IAAIC,EAAEtqF,EAAEosF,YAAY9kE,EAAEsmB,YAAY08C,GAAG,QAAQjkF,EAAE,EAAEA,EAAEuF,EAAEvF,IAAI,GAAG,IAAIgyB,EAAEgyD,EAAEz+E,EAAEvF,GAAG,CAAC,IAAIokF,GAAGp6E,OAAE,GAAQA,EAAEokE,KAAKhnC,MAAM0+C,QAAQjsE,EAAE,cAAcgB,EAAE7Q,GAAGi6E,EAAE18C,YAAY68C,EAAE,KAAK,CAAC,IAAIC,EAAEjgF,IAAI6/E,EAAE18C,YAAY88C,EAAE,CAACpgF,EAAEizE,UAAU6M,EAAEE,EAAE,CAAChgF,EAAEizE,UAAU,SAASllD,GAAG,QAAQzsB,EAAEysB,EAAEg0D,WAAWrxE,EAAE,EAAEA,EAAE1Q,EAAEkzE,WAAWxiE,IAAI,CAAC,QAAQb,EAAEna,EAAEosF,YAAYlsE,EAAE,EAAEA,EAAEmH,EAAEnH,IAAI,CAAC,IAAIw3B,EAAEjtC,IAAI0P,EAAEyzB,YAAY8J,EAAE,CAACrf,EAAEuV,YAAYzzB,GAAGke,EAAE8/C,aAAah+D,EAAEiyE,WAAU,GAAIxgF,EAAE,CAAC,CAA9K,CAAgL0b,GAAGhd,EAAE4/E,WAAWoC,UAAU,GAAGhiF,EAAE4/E,WAAWt8C,YAAYtmB,EAAE,EAAEukE,WAAW,SAASxzD,GAAG,OAAOA,EAAEwzD,YAAYxzD,EAAEwzD,WAAW,MAAMxzD,EAAEwzD,WAAW,OAAO1hG,QAAQO,IAAI,4CAA2C,EAAG,EAAE+yF,QAAQ,SAASplD,GAAG,GAAGtwC,KAAKoiG,IAAI,CAAC,IAAIv+E,EAAE7jB,KAAK2hG,WAAWrxD,GAAG,IAAIzsB,EAAE,MAAM,IAAIu/D,MAAM9yC,EAAE,+BAA+B,IAAI/tB,EAAE,IAAIiiF,MAAM,OAAOjiF,EAAE2tE,IAAIlwF,KAAKmiG,WAAWsC,UAAU5gF,GAAGtB,CAAC,CAAC,GAAG4yE,EAAUqO,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIrO,EAAUsO,KAAK,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMtO,EAAUuO,QAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAMvO,EAAUmnO,EAAUsN,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKtN,EAAUqN,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAGrN,EAAU0N,GAAG,EAAE1N,EAAU4N,GAAG,EAAE5N,EAAU2N,GAAG,GAAG3N,EAAU6N,GAAG,qFCA5vWrjG,UAAU,CACnBupE,OAAS,EACTmuB,IAAO,UACPiB,KAAQ,UACRoM,SAAY,KACZ/6B,IAAO,KACP0uB,OAAU,KACVsM,OAAU,UACVC,aAAgB,KAChBC,QAAW,SACXjtE,KAAQ,6NCXZ,IAAAv3B,EAAAxC,EAAA,OAEAg0C,EAAAh0C,EAAA,UACAA,EAAA,2BAEA8B,gBAG2B,eAAAmlG,EAAd/c,EAAc,SAAA/0C,GAIvB,SAAA+0C,EAAoBlnF,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA+nF,IAC1C9mF,EAAAC,EAAAlB,KAAA+nF,IADgBlnF,YAEhBI,EAAK8jG,OAAO9jG,CAChB,CAACG,SAAA2mF,EAAA/0C,GAAAlzC,EAAAioF,EAAA,EAAA1mF,IAAA,OAAAC,OAAA0jG,EAAAxjG,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAA+W,EAAAk8C,EAAA7iC,EAAAjtB,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QACEuW,EAAS1Y,KAAKa,UAAUyE,IAAI,wBAExBsvD,KAASv0D,EAAA2xB,WAAUtZ,EAAQ,aAEvBqZ,EAAU6iC,EAAO7iC,QAAQ,WAC/B/xB,KAAK6S,aAAa,UAAWkf,EAAQS,QACrCxyB,KAAK6S,aACD,gBACAkf,EAAQG,SAASnf,UAAU,SAACwqB,GACxBA,EACMz4B,EAAKmgG,qBACLngG,EAAKogG,oBACf,KAGX,wBAAAjjG,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACJ,SAAA+kG,IAAA,OAAAC,EAAArgG,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,qBAAAC,MAEO,WACJtB,KAAKklG,qBACLllG,KAAKmlG,QAAU3/C,SAASC,cAAc,UACtC,IAAM/3C,EAAM1N,KAAKa,UAAUyE,IAAI,kBAC/BtF,KAAKmlG,QAAQjV,IAAMxiF,GAAG,qBACtB83C,SAAS+tC,KAAK1tC,YAAY7lD,KAAKmlG,QACnC,GAAC,CAAA9jG,IAAA,qBAAAC,MAEO,WACAtB,KAAKmlG,UACLnlG,KAAKmlG,QAAQhV,WAAWjqC,YAAYlmD,KAAKmlG,gBAClCnlG,KAAKmlG,QACZnlG,KAAKmlG,QAAU,KAEvB,KAnCC,IAAAH,CAmCA,CA1CsB,CAAQnzD,EAAA1pC,cAAY28F,SAAlC/c,0CAAa3/E,EAAA4U,mBAAA1U,EAAAC,iBAAA,qDAAbw/E,EAAa9qE,QAAb8qE,EAAa7qE,UAAAC,WAFV,SAEH4qE,CAAc,sFCT3B9tD,EAAAC,aAAAr8B,EAAA,OAAA8B,GAEAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GAEAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,qNCjCA,IAAAW,EAAAzC,EAAA,OACAK,EAAAL,EAAA,+IAoBoBuK,EARRiF,yBAAA,UAQQjF,CAJP,WAIOA,CADH,iBAC6BA,EAAAmF,iBAAA,gBAC9BnF,EADwCkF,wBACxClF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAA0CvlB,EAAAkF,yBAC1ClF,EAAAiF,yBAAA,yBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAA8zF,YAAAj0F,GAAmB,GAE5C/I,EADKkF,wBACLlF,6CAHQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA+zF,yEAmBRj9F,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD0C,aACpBA,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAOnBlF,EANJiF,yBAAA,kBAMIjF,CADH,cAKOA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAg0F,aAAa,YAAWn0F,GAAS,GAE1D/I,EANIkF,wBAMJlF,GACAA,EAAAiF,yBAAA,YAAuBjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBACxBlF,EAAAiF,yBAAA,cAGIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,iFAjBQA,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,SAEA7I,CAFU,SAEVA,CADU,UAMNA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAAi0F,WAQJn9F,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAi0F,UAAA,QAhExB5lG,gCA8E2C,eAAA6lG,EAA9BC,EAA8B,SAAA7kG,GA0BvC,SAAA6kG,EACuC9+D,EAC3B9lC,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAylG,IAElCxkG,EAAAC,EAAAlB,KAAAylG,IAHmC9+D,QAC3B1lC,EAAAJ,YAXII,EAAAqkG,aAAe,SAACntE,EAAGzV,GAAC,OAChCzhB,EAAKuC,QACD,gBACA,kBAAMvC,EAAKJ,UAAUm/B,gBAAgB7H,EAAGzV,EAAE,EAC1C,IACH,EAEWzhB,EAAAyG,MAAQ,eAAAg+F,EAAA,OAAgB,QAAhBA,EAAMzkG,EAAK0lC,aAAK,IAAA++D,OAAA,EAAVA,EAAYh+F,OAAO,EAACzG,CAOlD,CAACG,SAAAqkG,EAAA7kG,GAAAd,EAAA2lG,EAAA,EAAApkG,IAAA,YAAAiE,IA9BD,WACI,MAAuC,SAAhCtF,KAAKa,UAAUyE,IAAI,QAC9B,GAAC,CAAAjE,IAAA,uBAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,wBAChC,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,aAChC,GAAC,CAAAjE,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,cAAgB,EAC9C,GAAC,CAAAjE,IAAA,cAAAC,MAkBM,SAAYi8B,GACf,IAAMq8D,EAAQ55F,KAAKa,UAAUyE,IAAI,SAC7Bi4B,GAAmB,SAAVq8D,EAAkB55F,KAAKa,UAAU04F,SAAS,SAC7Ch8D,GAAmB,SAAVq8D,GAAkB55F,KAAKa,UAAU04F,SAAS,QACjE,IAAC,CArCsC,CAAQj5F,EAAA6H,cAAYq9F,SAAlDC,0CAA6Br9F,EAAAC,4BA2B1BnK,EAAAynG,mBAAiBv9F,EAAAC,4BAAAC,EAAAC,iBAAA,kDA3BpBk9F,EAA6B38F,UAAA,4BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,kBAtEPoiB,UAAAC,MAAAC,EAAA,wGA2BcF,UAAAG,MAAAD,EAAA,yGAfAF,UAAAI,MAAAF,EAAA,0FAsBmBF,UAAAM,MAAAJ,EAAA,q+BApCxDtnB,EAHJiF,yBAAA,UAGIjF,CADH,WACgDA,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GACzDU,EAAAiF,yBAAA,gBAA2BjF,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KACJvlB,EAD8CkF,wBAC9ClF,GACAA,EAAA4J,qBAAA,EAAA4zF,EAAA,aAuBQx9F,EAPRiF,yBAAA,UAOQjF,CAJP,WAIOA,CADH,iBAC6BA,EAAAmF,iBAAA,mBAC9BnF,EAD0CkF,wBAC1ClF,GACAA,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAA0DvlB,EAAAkF,yBAC1DlF,EAAAiF,yBAAA,0BAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAi8F,aAAa,aAAYn0F,EAAS,GAE3D/I,EADKkF,wBACLlF,GACAA,EAAA4J,qBAAA,GAAA6zF,EAAA,wBA2BJz9F,EAAAkF,gCAxDSlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAy8F,sBAyBG19F,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAgxD,YAIOjyD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAgxD,6VAqCdorC,CAA8B,yOC/D3Br9F,EADJiF,yBAAA,QACIjF,CAD6D,cAEzDA,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2CAJKA,EAAA29F,qBAAA,gBAAA57E,EAAAoT,OAEGn1B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,gBAAA0c,EAAAoT,MAAA,2CAGRn1B,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,mBACJlB,EAAAkF,gCADiBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBArB7BtR,sBAiDgC,eAAAqmG,EAAnBC,EAAmBnmG,EAjDhC,SAAAmmG,IAAAlmG,EAAAC,KAAAimG,GAqDoBjmG,KAAAkmG,UAAoB,iBAQpBlmG,KAAAu9B,MAAkC,KACrDyoE,SAbYC,yCAAmB,kDAAnBA,EAAmBn9F,UAAA,kBAAAqW,OAAA,CAAAkP,KAAA,OAAA63E,UAAA,YAAAz/E,QAAA,UAAAnE,QAAA,UAAAsa,SAAA,WAAAW,MAAA,SAAA4oE,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,gMAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCAtCpBhB,EARJiF,yBAAA,aAQIjF,CADH,gBAEOA,EAAAmF,iBAAA,GACAnF,EAAAg+F,uBAAA,GACJh+F,EAAAkF,yBAMAlF,EALA4J,qBAAA,EAAAq0F,EAAA,YAKAj+F,CALiE,EAAAk+F,EAAA,aAQrEl+F,EAAAkF,gCAhBIlF,EAAAiX,sBAAA,sBAAAhW,EAAAk0B,OACAn1B,EAAA6I,qBAAA,WAAA5H,EAAAiZ,SAAAjZ,EAAAuzB,UAGex0B,EAAAoF,sBAAwBpF,EAAxB6I,qBAAA,YAAA5H,EAAA68F,UAAwB99F,CAAD,OAAAiB,EAAAglB,MAClCjmB,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,EAAAod,QAAA,KAGoCre,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAAAjZ,EAAAk0B,OAKZn1B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAiZ,qdA6B3B2jF,CAAmB,oOCpDhC,IAAAr8F,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,qJA6CgBuK,EADJiF,yBAAA,aACIjF,CAD2C,cACjCA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,iEASIA,EAJJiF,yBAAA,UAIIjF,CADH,qBAGOA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAi1F,iBAAAp1F,GAAwB,GAEzC/I,EAAAmF,iBAAA,gCAERnF,EADIkF,wBACJlF,6CALQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA4pE,yCAmGY9yE,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAu1F,EAAAnzF,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+4F,EAAAjzF,KAAA,mEApBhBnL,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,YAOIlB,EAJJiF,yBAAA,sBAIIjF,CADH,mBAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAs1F,EAAAr+F,EAAAgJ,wBAAA+E,GAAAoH,UAAAnV,SAAAoV,6BAAAipF,EAAkB,GAACt1F,KAAAs1F,EAAD,GAACt1F,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAGnB/I,EAAA4J,qBAAA,EAAA00F,EAAA,qBAORt+F,EADIkF,wBACJlF,GAKIA,EAJJiF,yBAAA,sBAIIjF,CADH,cAKOA,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAs1F,EAAAr+F,EAAAgJ,wBAAA+E,GAAAoH,UAAAnV,SAAAoV,6BAAAipF,EAAkB,GAACt1F,KAAAs1F,EAAD,GAACt1F,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAJvB/I,EAAAkF,yBAOAlF,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,4BACfnF,EADqCkF,wBACrClF,GACAA,EAAAiF,yBAAA,eAAuBjF,EAAA4I,qBAAA,uBAAA21F,EAAAv+F,EAAAgJ,wBAAA+E,GAAA4zD,MAAA68B,EAAAx+F,EAAAmJ,0BAAAgM,UAAA,OAAAnV,EAAAoJ,sBAASo1F,EAAAl/D,MAAAyU,OAAAwqD,EAAoB,GAAE,GAClDv+F,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,aAElBnF,EAFwBkF,wBAExBlF,8DA3BYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAgpF,EAAA,IAIqBr+F,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAAu1F,YAerBz+F,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAgpF,EAAA,kEA5FRr+F,EATZiF,yBAAA,WASYjF,CANX,WAMWA,CALsC,sBAKtCA,CADH,cAKOA,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAy1F,EAAAx+F,EAAAgJ,wBAAAC,GAAAkM,UAAAnV,SAAAoV,6BAAAopF,EAAArzF,KAAApC,KAAAy1F,EAAArzF,KAAApC,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAJJ/I,EAAAkF,yBAOAlF,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,8BACfnF,EADuCkF,wBACvClF,GAEIA,EADJiF,yBAAA,cACIjF,CAD8C,cACpCA,EAAAmF,iBAAA,eACdnF,EADuBkF,wBACvBlF,GAEIA,EADJiF,yBAAA,oBACIjF,CADsB,gBAGlBA,EAAA4I,qBAAA,uBAAA41F,EAAAx+F,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,0BACqCq1F,SAAAl/D,MAAAzO,KAAA,CAC9D,GAAI,KAAI7wB,EAAAoJ,sBAAAF,EAAAw1F,WAAAF,EAAAvzF,GAAA,GAGqBjL,EADJiF,yBAAA,YACIjF,CADqC,kBACVA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,eAEbnF,EAFqBkF,wBAErBlF,KACAA,EAAAiF,yBAAA,gBAEIjF,EAAA4I,qBAAA,uBAAA41F,EAAAx+F,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAw1F,WAAAx1F,EAAAw1F,aAAAF,EAAAvzF,GAAAuzF,EAAAvzF,GAG5B,GAAE,GAE8BjL,EADJiF,yBAAA,YACIjF,CADqC,kBACVA,EAAAmF,iBAAA,IAIzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,IAMZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,gBAAsBjF,EAAA4I,qBAAA,uBAAA+1F,EAAA3+F,EAAAgJ,wBAAAC,GAAA04D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA01F,SAAA7qD,OAAA4qD,EAAmB,GAAE,GAE5C3+F,EADJiF,yBAAA,YACIjF,CADgD,kBACrBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,qBAIrBnF,EAJmCkF,wBAInClF,SACAA,EAAAiF,yBAAA,aAQIjF,EAAA4J,qBAAA,GAAAi1F,EAAA,eA0CR7+F,EADIkF,wBACJlF,yFAlGgBA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAmpF,EAAArzF,MAKenL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,oBAAAygE,GAsBgBtpE,EAAAoF,oBAAA,IAAApF,EAAA+L,4BAAA7C,EAAAw1F,aAAAF,EAAAvzF,GAAA,6BAMvBjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAw1F,aAAAF,EAAAvzF,GAAA,yBAkBhBjL,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,UAAAhoD,EAAAw1F,aAAAF,EAAAvzF,GAAA,EAAAuzF,EAAAl/D,MAAA1iC,OAAA,SAOqBoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA21F,EAAAl/D,QA3H5B/nC,aAAyB,CAClC,CAAE0T,GAAI,aAAcE,KAAM,qBAC1B,CAAEF,GAAI,cAAeE,KAAM,sBAC3B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,YAAaE,KAAM,2BACzB,CAAEF,GAAI,eAAgBE,KAAM,+BAC5B,CAAEF,GAAI,eAAgBE,KAAM,gBAC5B,CAAEF,GAAI,SAAUE,KAAM,mBAa1B5T,uCAgKkD,eAAAunG,EAArChoB,EAAqC,SAAAt+E,GAsB9C,SAAAs+E,EACqCv4C,GAAsC,IAAA1lC,EAAAlB,SAAAC,KAAAk/E,IAEvEj+E,EAAAC,EAAAlB,KAAAk/E,IAFiCv4C,QArBpB1lC,EAAA6sB,MAAQ,IAAIlkB,EAAAoV,aAEtB/d,EAAAqhB,SAAU,EAGVrhB,EAAAi6E,cAAgBj6E,EAAK0lC,MAAMu0C,cAClBj6E,EAAA28C,cAAgB38C,EAAK0lC,MAAMiX,eAAiB,WAI5C38C,EAAA4lG,WAAkClnG,EAAAwnG,WAc9ClmG,EAAK+lG,UAAYrgE,EAAMm4C,QAAU,IAAIxjE,IAAI,SAACJ,GACtCA,SAAIwsB,MAAQxsB,EAAIwsB,MAAMpsB,IAAI,SAAC8W,GAAC,MAAK,CAC7BA,EAAE,GACFhuB,KAAKC,UAAU+tB,EAAE,IACpB,GACMlX,CACX,GAAGja,CACP,CAACG,SAAA89E,EAAAt+E,GAAAd,EAAAo/E,EAAA,EAAA79E,IAAA,SAAAiE,IAnBD,WACI,MAAO,WAAa0yB,KAAK6I,MAAsB,SAAhB7I,KAAKgxD,SACxC,GAAC,CAAA3nF,IAAA,iBAAAiE,IAED,WACI,QAAStF,KAAK2mC,MAAMw4C,SACxB,GAAC,CAAA99E,IAAA,mBAAAC,MAeM,SAAiBA,GAAc,IAAAwD,EAAA9E,KAClCA,KAAKwD,QACD,aACA,kBAAOsB,EAAK6hC,MAAMw4C,UAAYr6E,EAAK6hC,MAAMw4C,UAAU79E,GAAS,EAAE,EAC9D,IAER,GAAC,CAAAD,IAAA,cAAAC,MAEM,WACHtB,KAAKsiB,SAAU,EACf,IAAM0kF,EAAWhnG,KAAKgnG,SAAS1rF,IAAI,SAACJ,GAChC,OAAA2T,IAAA,GACO3T,GAAG,IACNwsB,MAAOxsB,EAAIwsB,MAAMpsB,IAAI,SAAC8W,GAClB,IAAI9wB,EAAQ8wB,EAAE,GACd,IACI9wB,EAAQ8C,KAAKo1B,MAAMpH,EAAE,GACzB,OAAa,CACb,MAAO,CAACA,EAAE,GAAI9wB,EAClB,IAER,GACAtB,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,OAAQ+xB,SAAU2mD,GAChD,IAAC,CA1D6C,CAAQ1mG,EAAA6H,cAAY++F,SAAzDhoB,0CAAoC92E,EAAAC,4BAuBjCyF,EAAAg5B,iBAAe,kDAvBlBo4C,EAAoCp2E,UAAA,qCAAAsW,QAAA,CAAA0O,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,m/CAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA5JrChB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,GAAsCnF,EAAAkF,yBAC1ClF,EAAA4J,qBAAA,EAAAo1F,EAAA,gBAGJh/F,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAA4J,qBAAA,EAAAq1F,EAAA,aAWAj/F,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,0BAAS3H,EAAA29F,SAAA/tE,KAAc,CAAA5lB,GAAAhK,EAAAi+F,OAAA5/D,MAAA,IAA0B,GAEjDt/B,EAAAmF,iBAAA,mBACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAu1F,EAAA,cAgHJn/F,EAAAkF,yBAIIlF,EAHJiF,yBAAA,aAGIjF,CADH,eACsCA,EAAA4I,qBAAA,0BAAS3H,EAAA4/D,aAAa,GACrD7gE,EAAAmF,iBAAA,qBAERnF,EADIkF,wBACJlF,UAlJQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,QAAApE,EAAAu0C,cAAA,kBAC2Bx1C,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAS1Bla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAm+F,gBAkBep/F,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA29F,ybAgInB9nB,CAAqC,gOCzMlDrhF,EAAA,UAOAyC,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,iBAEM4pG,EAAc,IAAInhF,IAExB3mB,8BAGyC,eAAA+nG,EAA5BC,EAA4B,SAAA/mG,GAGrC,SAAA+mG,EAAoBC,GAAuC,IAAA3mG,EAAAlB,SAAAC,KAAA2nG,IACvD1mG,EAAAC,EAAAlB,KAAA2nG,IADgBC,YAAuC3mG,CAE3D,CAACG,SAAAumG,EAAA/mG,GAAAd,EAAA6nG,EAAA,EAAAtmG,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQyqE,QAAU7nG,KAAK6nG,QAAQ7nG,KAAK8nG,YAC5C,GAAC,CAAAzmG,IAAA,aAAAC,OAAAymG,EAAAvmG,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAAG,EAAA26F,EAAA/uF,EAAA5I,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACCnC,KAAK4nG,YAAa,EAACvnG,EAAA2nG,aAAW,CAAA/lG,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SACxBtD,KAAKwD,QAAQ,OAAQ,kBAAMsB,EAAKgjG,YAAY,EAAE,MAAI,UAGxD9nG,KAAK6nG,OAAOjiG,SAAS,0BAAyB,CAAA3D,EAAAE,KAAA,QAC/C,OAAAnC,KAAK4nG,UAAUK,cAAc/X,IAAMlwF,KAAK6nG,OAAO5lG,EAAAqB,OAAA,qBAI/CmkG,EAAY56D,IAAI7sC,KAAK6nG,QAAO,CAAA5lG,EAAAE,KAAA,QAC5B,OAAAnC,KAAK4nG,UAAUK,cAAc/X,IAAMuX,EAAYniG,IAAItF,KAAK6nG,QAAQ5lG,EAAAqB,OAAA,iBAG9DxB,YAAMzB,EAAAgD,SACZjB,QAAQO,IAAI,eAAgBb,GAC5B0jD,SAASk3C,OAAM,GAAA34F,OACH,cAARjC,EACM,WAAaimD,sBAAmB1nD,EAAAs8F,WAChC,gBAAkB50C,mBAAmBjmD,GAC/C,4DAAAiC,OAC0B,WAAtB2B,SAASwuF,SAAwB,UAAY,IAC9CjyF,EAAAE,KAAA,GACoBy6F,MAAM58F,KAAK6nG,QAAO,QAAnCpL,SAAQx6F,EAAA4B,KAAA5B,EAAAE,KAAA,GACKs6F,EAAS16D,OAAM,QAC5Br0B,EAAMmvF,IAAIC,gBADN76F,EAAA4B,MAEV4jG,EAAYvsF,IAAIlb,KAAK6nG,OAAQn6F,GAC7B1N,KAAK4nG,UAAUK,cAAc/X,IAAMxiF,EAAI,yBAAAzL,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC1C,SAAA8nG,IAAA,OAAAC,EAAApjG,MAAA3E,KAAA4E,UAAA,MA9BA,IAAAmjG,CA8BA,CAvCoC,CAAQznG,EAAA6H,cAAYu/F,SAAhDC,0CAA2Bv/F,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAA3BP,EAA2B7+F,UAAA,oBAAAqW,OAAA,CAAA0oF,OAAA,UAAA9+F,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,kCAA3BqnE,CAA4B,mLCdzC9pG,EAAA,WACAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,2BAEA8B,uBAGiC,eAAAwoG,EAApBC,EAAoB,WACU,OAAAtoG,EAAvC,SAAAsoG,EAAoB53F,GAAezQ,EAAAC,KAAAooG,GAAfpoG,KAAAwQ,SAAkB,EAAC,EAAAnP,IAAA,cAAAC,OAAAgnF,EAAA9mF,EAAAC,IAAAC,KAEhC,SAAAC,EACHQ,EACAo7B,GAA2B,OAAA97B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SAEpBtD,KAAKqoG,aAAW,wBAAApmG,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC1B,SAAAnB,EAAA8d,EAAA2c,GAAA,OAAAgvD,EAAA3jF,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAAA,eAAAknF,EAAAhnF,EAAAC,IAAAC,KAEM,SAAAwD,EACHwrF,EACA4X,GAAuB,OAAA7mG,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SAEhBtD,KAAKqoG,aAAW,wBAAAjjG,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC1B,gBAAAjB,EAAA+6B,EAAAmnB,GAAA,OAAAunC,EAAA7jF,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,YAAAC,MAAA,eAAAinG,EAAA/mG,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAAymB,EAAAi8D,EAAA,OAAAjnF,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACE9B,EAAAmoG,eACD1lG,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnBC,YAAW,OAAAkD,SAAAhE,KAAA,EACG7B,EAAAgG,aAAaxD,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAA7DwpB,OACAi8D,GADAj8D,EAAItmB,EAAAtC,OACmB4oB,EAAKyuB,OAAOt1C,SAAS,mBAE9C5F,KAAKwQ,QAAQK,SAAS,CAAC,kBAC1B1K,EAAA7C,OAAA,SACMolF,GAAY,wBAAAviF,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACtB,gBAAAqoG,IAAA,OAAAE,EAAA5jG,MAAA3E,KAAA4E,UAAA,EAZA,MAdsC,IAAA0jF,CA0BtC,CA3B4B,GA2B5B6f,SA3BQC,0CAAoBhgG,EAAA4U,mBAAA1U,EAAA6E,QAAA,qDAApBi7F,EAAoBnrF,QAApBmrF,EAAoBlrF,UAAAC,WAFjB,SAEHirF,CAAoB,yNCRjCvqG,EAAA,WAQAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,MACAub,EAAAvb,EAAA,UAGAA,EAAA,OACAA,EAAA,iDAEsBsqF,EAAkBroF,EAAA,SAAAqoF,IAAApoF,EAAAC,KAAAmoF,EAAA,GAAxCxoF,qBAAAwoF,EAIAxoF,sBAGgC,eAAA8oG,EAAnB3pG,EAAmB,WAMxB,OAAAgB,EALJ,SAAAhB,EACY0R,EACA3P,EACAC,EACY4nG,GAA2B3oG,EAAAC,KAAAlB,GAHvCkB,KAAAwQ,UACAxQ,KAAAa,YACAb,KAAAc,OACYd,KAAA0oG,SACrB,EAAC,EAAArnG,IAAA,cAAAC,OAAAgnF,EAAA9mF,EAAAC,IAAAC,KAEG,SAAAC,EACHQ,EACAo7B,GAA2B,OAAA97B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SAEpBtD,KAAKqoG,aAAW,wBAAApmG,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC1B,SAAAnB,EAAA8d,EAAA2c,GAAA,OAAAgvD,EAAA3jF,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAAA,eAAAknF,EAAAhnF,EAAAC,IAAAC,KAEM,SAAAwD,EACHwrF,EACA4X,GAAuB,OAAA7mG,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SAEhBtD,KAAKqoG,aAAW,wBAAAjjG,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC1B,gBAAAjB,EAAA+6B,EAAAmnB,GAAA,OAAAunC,EAAA7jF,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,YAAAC,MAAA,eAAAinG,EAAA/mG,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAA2iG,EAAAl8E,EAAAyuB,EAAAwtC,EAAA,OAAAjnF,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACEiX,EAAA2I,eAAc,IAAC1hB,EAAAmoG,eAAexoG,KAAKc,KAAK+B,cACzCC,QAAK1C,EAAA2C,OAAM,SAAAkD,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAkB,OAAV6B,EAAA,IAAUA,EAAA,EAAwB,IACrD7E,YAAW,OAAAkD,SAAAhE,KAAA,EACc7B,EAAAgG,aACzBxD,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IACrBC,YAAW,OAFVwpB,SAAItmB,EAAAtC,KAGJq3C,EAAqB,QAAZytD,EAAA3oG,KAAK0oG,eAAO,IAAAC,GAAZA,EAAc1tE,MACvB,CAACj7B,KAAK0oG,QAAQztE,OACdj7B,KAAKa,UAAUyE,IAAI,4BAA8B,IACjDojF,KACFj8D,GACEyuB,EAAOl2C,SAAUk2C,EAAOhsB,KAAK,SAAClsB,GAAC,OAAKypB,EAAKyuB,OAAOt1C,SAAS5C,EAAE,MAG7DhD,KAAKwQ,QAAQK,SAAS,CAAC,kBAC1B1K,EAAA7C,OAAA,WACQolF,GAAY,wBAAAviF,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACxB,gBAAAqoG,IAAA,OAAAE,EAAA5jG,MAAA3E,KAAA4E,UAAA,EApBA,MAdG,IAAA0jF,CAkCH,CAxC2B,GAwC3BmgB,SAxCQ3pG,0CAAmBsJ,EAAA4U,mBAAA1U,EAAA6E,QAAA/E,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAtU,EAAAD,qBAAAL,EAAA4U,mBAAAmrE,EAAA,wDAAnBrpF,EAAmBme,QAAnBne,EAAmBoe,UAAAC,WAFhB,SAEHre,CAAmB,oNCzBhC,IAAA8K,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,OAEA+qG,GADA/qG,EAAA,MACAA,EAAA,QACAuC,EAAAvC,EAAA,MACAiQ,EAAAjQ,EAAA,0JAwCwBuK,EAAAiF,yBAAA,WAGIjF,EAAA4I,qBAAA,uBAAA63F,EAAAzgG,EAAAgJ,wBAAA0Z,GAAAvN,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAA+8E,WAAAD,EAAAx1F,IAAoB,GAE7BjL,EAAAiF,yBAAA,QACIjF,EAAAkB,oBAAA,qBAIJlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,QAAIjF,EAAAmF,iBAAA,GAAsCnF,EAAAkF,yBAEtClF,EADJiF,yBAAA,UACIjF,CADoB,YAUhBA,EAAAmF,iBAAA,GAOZnF,EAFQkF,wBAERlF,8DArBYA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA8a,EAAAjN,SAAAlZ,SAAAijG,EAAAx1F,KAGJjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA00F,EAAApzF,cAAAozF,EAAAt1F,MAIInL,EAAAoF,oBAAA,GAGApF,EAHAiX,sBAAA,qBAAA0M,EAAA8c,gBAAA9c,EAAA8c,eAAAjjC,SAAAijG,EAAAx1F,KAGAjL,CADC,iBAAA2jB,EAAA8c,eAAA,KAAA9c,EAAA8c,eAAAjjC,SAAAijG,EAAAx1F,KAKDjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,UAAAse,EAAA8c,gBAAA9c,EAAA8c,eAAAjjC,SAAAijG,EAAAx1F,IAAA,wFA3CRjL,EAPhBiF,yBAAA,WAOgBjF,CAJf,YAIeA,CAHiB,YAGjBA,CAFgC,OAEhCA,CADA,WACiBA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA+8E,WAAW,KAAI,GACrC1gG,EAAAkB,oBAAA,iFAYJlB,EAAAkF,yBACAlF,EAAAkB,oBAAA,QACAlB,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,mCAGZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,GAAA+2F,EAAA,4CAgCZ3gG,EAFQkF,wBAERlF,qDAlDwBA,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,kBAAA8M,EAAA3V,EAAAwN,sBAAA,IAAAmW,EAAAi9E,QAAA,KAAAjrF,EAAA/Y,UAAA+mB,EAAAjN,SAAA9Z,OAIAoD,CADC,gBAAA2jB,EAAAjN,SAAA9Z,OAAA,WAAAgZ,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAi9E,QAAA,KAAAhrF,EAAAhZ,UAAA+mB,EAAAjN,SAAA9Z,QAULoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA2E,EAAAhK,EAAAwN,sBAAA,KAAAmW,EAAAi9E,QAAA,KAAA52F,EAAApN,OAAA,aAMcoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAmW,EAAAi9E,+BA4ClC5gG,EAAAiF,yBAAA,aAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,kCACPnF,EADmCkF,wBACnClF,IAxFZzI,oCAmG8C,eAAAspG,EAAjCC,EAAiC,WAWtC,OAAAppG,EAHJ,SAAAopG,EACqCviE,EACzB7lC,GAAyBf,EAAAC,KAAAkpG,GADAlpG,KAAA2mC,QACzB3mC,KAAAc,OATKd,KAAAmpG,OAAS,IAAIv/F,EAAAoV,aACvBhf,KAAAsiB,SAAU,EACVtiB,KAAA8e,SAAqB,GACZ9e,KAAAgpG,SAAQJ,EAAA/2E,sBAAqB7xB,KAAKc,KAAK+U,SAASxC,IAChDrT,KAAA4S,KAAe5S,KAAK2mC,MAAM/zB,KACnC5S,KAAA6oC,eAA2B7oC,KAAK2mC,MAAMkC,cAK1C,EAAC,EAAAxnC,IAAA,aAAAC,OAAA8nG,EAAA5nG,EAAAC,IAAAC,KAEG,SAAAC,EAAiB0R,GAAU,IAAA21F,EAAA,OAAAvnG,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,MAAPkR,EAAU,CAAApR,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACUnC,KAAKgpG,MAAMlmG,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAEpDjD,KAAK8e,SADL9e,KAAK8e,SAAS9Z,UADZgkG,EAAK/mG,EAAA4B,MACwBmB,OACfgkG,EAAM1tF,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GACpB,GAAGpR,EAAAE,KAAA,eAGpBnC,KAAK8e,SADL9e,KAAK8e,SAASlZ,SAASyN,GACPrT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,IAAMqQ,CAAE,GACtC,GAAAtP,OAAAqe,EAAOpiB,KAAK8e,UAAQ,CAAEzL,IAAI,wBAAApR,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAEnD,SAAA8oG,EAAAnsF,GAAA,OAAAysF,EAAAzkG,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,iBAAAC,MAAA,eAAA+nG,EAAA7nG,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAA8N,EAAA/R,EAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACHnC,KAAKsiB,SAAU,EAETtP,EADgBhT,KAAK6oC,eACArtB,OAAO,SAACxY,GAAC,OAAM/B,EAAK6d,SAASlZ,SAAS5C,EAAE,GACnEhD,KAAK6oC,eAAiB71B,EACtBhT,KAAKmpG,OAAOhnG,KAAK6Q,GAAM,wBAAA5N,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC1B,gBAAAspG,IAAA,OAAAD,EAAA1kG,MAAA3E,KAAA4E,UAAA,EARA,IAQA,CAAAvD,IAAA,kBAAAC,MAAA,eAAAioG,EAAA/nG,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAAgN,EAAA,OAAAvR,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACHnC,KAAKsiB,SAAU,EAETtP,KAAO1S,EAAAqvC,QADS3vC,KAAK6oC,eACO9kC,OAAO/D,KAAK8e,WAC9C9e,KAAK6oC,eAAiB71B,EACtBhT,KAAKmpG,OAAOhnG,KAAK6Q,GAAM,wBAAA7M,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAC1B,gBAAAwpG,IAAA,OAAAD,EAAA5kG,MAAA3E,KAAA4E,UAAA,EARA,MArBG,IAAAwkG,CA6BH,CAxCyC,GAwCzCH,SAxCQC,0CAAiC9gG,EAAAC,4BAS9ByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAA,kDATlBygG,EAAiCpgG,UAAA,iCAAAsW,QAAA,CAAA+pF,OAAA,UAAAlgG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,4zBAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCA9F9BhB,EAFRiF,yBAAA,QAEQjF,CAFH,aAEGA,CADkD,UAClCA,EAAAmF,iBAAA,GAAqCnF,EAAAkF,yBAEjDlF,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAA4J,qBAAA,EAAAy3F,EAAA,gBAgEIrhG,EAHJiF,yBAAA,aAGIjF,CADH,cACyBA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAigG,iBAAgB,GAC3ClhG,EAAAmF,iBAAA,wBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAsBjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAmgG,kBAAiB,GAC5CphG,EAAAmF,iBAAA,yBAGZnF,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAA03F,EAAA,yBAAAthG,EAAA2c,4EA7EwB3c,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,OAAApE,EAAAuJ,KAAA,2BAOfxK,EAAAoF,oBAAA,GAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAAo+B,iRAuFpB0iE,CAAiC,gLC1G9C,IAAAt/F,EAAA/L,EAAA,MAYAwC,EAAAxC,EAAA,OAEAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,gBAEA8B,mBAII,eAAAgqG,EADSC,EACT,SAAAhpG,GA4BA,SAAAgpG,EACYC,EACAC,GAAoB,IAAA7oG,EAAAlB,SAAAC,KAAA4pG,IAE5B3oG,EAAAC,EAAAlB,KAAA4pG,IAHQC,WACA5oG,EAAA6oG,YA1BI7oG,EAAA8oG,IAAc,GAEd9oG,EAAA+zB,IAAc,GAEd/zB,EAAA8oE,MAAQ,EAER9oE,EAAAuxB,KAAe,GAEfvxB,EAAAypF,KAAe,GAEfzpF,EAAAiiF,MAAgB,IAEPjiF,EAAA+oG,SAAmB,GAE5B/oG,EAAA2yC,OAAgB,KAChB3yC,EAAAknC,QAAkB,EAElBlnC,EAAAgpG,MAAkB,KAEjBhpG,EAAAipG,YAAc,IAAItgG,EAAAoV,aAE3B/d,EAAAkpG,UAAW,EACXlpG,EAAAmpG,WAAuB,KAAKnpG,CAOpC,CAACG,SAAAwoG,EAAAhpG,GAAAd,EAAA8pG,EAAA,EAAAvoG,IAAA,WAAAC,MAEM,WAAQ,IAAA2E,EAAAnB,EAAA9E,KACE,QAAbiG,KAAA5F,EAAAmoG,sBAAa,IAAAviG,GAAbA,EACMnD,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACpB+P,UAAU,SAAC/P,GAAC,OAAK8B,EAAKulG,cAAc,EAC7C,GAAC,CAAAhpG,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAAAl3B,EAAAlG,MACjCo9B,EAAQ2sE,KAAO3sE,EAAQpI,KAAOoI,EAAQ5K,OACtCxyB,KAAKqqG,eAGLjtE,EAAQ6sE,OACRjqG,KAAKoqG,aAAepqG,KAAKiqG,OACX,MAAdjqG,KAAKiqG,QAELjqG,KAAKoqG,WAAapqG,KAAKiqG,MACvBjqG,KAAKi1B,WAELmI,EAAQ4sE,UAAYhqG,KAAKgqG,UACzBhqG,KAAK6S,aACD,WACA7S,KAAK8pG,UAAU53E,OACXlyB,KAAK6pG,SAAS5B,cACdjoG,KAAKgqG,SACL,kBAAM9jG,EAAK+uB,SAAS,GAIpC,GAEA,CAAA5zB,IAAA,eAAAC,MACQ,WAAY,IAAAwF,EAAA9G,MAChB,EACIK,EAAA2nG,cACAhoG,KAAKwyB,MACLxyB,KAAK+pG,KACL/pG,KAAKg1B,MACJh1B,KAAKmqG,UAENnqG,KAAKwD,QACD,OACA,WACI,IACMuuB,GADA6iC,EAASv0D,EAAA2xB,WAAUlrB,EAAKijG,IAAKjjG,EAAKkuB,IAAKluB,EAAKijE,OAC3Bh4C,QAAQjrB,EAAK0rB,MACpC1rB,EAAKqjG,UAAW,EAChBrjG,EAAK+L,aAAa,UAAWkf,EAAQS,QACrC1rB,EAAK+L,aACD,aACAkf,EACKG,SACApvB,QAAK1C,EAAAob,QAAO,SAACxY,GAAC,OAAU,MAALA,CAAS,IAC5B+P,UAAU,SAACzR,GACR0rC,WAAW,WACPlmC,EAAKqjG,UAAW,EAChBrjG,EAAKhD,aAAa,UACdgD,EAAKqhC,SACTrhC,EAAKmjG,MAAQ3oG,EACbwF,EAAKsjG,WAAatjG,EAAKmjG,MACvBnjG,EAAKojG,YAAYhrF,KAAKpY,EAAKmjG,OAC/B,EAAG,GACP,IAERnjG,EAAKtD,QAAQ,QAAS,kBAAOsD,EAAKqjG,UAAW,CAAK,EAAG,IACzD,EACA,GAGZ,GAEA,CAAA9oG,IAAA,UAAAC,MACQ,WAAO,IAAAo+C,EAAA1/C,MACX,EACIK,EAAA2nG,cACAhoG,KAAK0qF,MACL1qF,KAAK+pG,KACL/pG,KAAKg1B,MACJh1B,KAAK4iF,QAAQ3tD,SAEdj1B,KAAKwD,QACD,UACA,WACI,IAAMoxD,KAASv0D,EAAA2xB,WAAU0tB,EAAKqqD,IAAKrqD,EAAK1qB,IAAK0qB,EAAKqqB,OAC9Cn2B,EAAS8L,EAAK9L,OACd8L,EAAKltB,OAAMohB,EAAS8L,EAAK9L,QAAU,CAAC8L,EAAKuqD,QAC7Cr1C,EAAO3/B,QAAQyqB,EAAKgrC,KAAM92C,GAAU,IAAI+hC,KAAK,SAACvuE,GAErCs4C,EAAKltB,OACNktB,EAAKuqD,MAAQ7iG,EACbs4C,EAAK0qD,WAAa1qD,EAAKuqD,MACvBvqD,EAAKwqD,YAAYhrF,KAAKwgC,EAAKuqD,OAEnC,EACJ,EACAjqG,KAAKkjF,MAGjB,IAAC,CAnID,CAAQ5iF,EAAA6H,cAAYwhG,SADXC,0CAAgBxhG,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAD,EAAAkiG,WAAA,kDAAhBV,EAAgB9gG,UAAA,gDAAAqW,OAAA,CAAA4qF,IAAA,MAAA/0E,IAAA,MAAA+0C,MAAA,QAAAv3C,KAAA,OAAAk4D,KAAA,OAAAxH,MAAA,QAAA8mB,SAAA,yBAAAp2D,OAAA,SAAAzL,OAAA,SAAA8hE,MAAA,SAAA7qF,QAAA,CAAA8qF,YAAA,eAAAnhG,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,kCAAhBspE,CACT,sKCpBJ,IAAA1rG,EAAAL,EAAA,UACAA,EAAA,kIAyBgBuK,EAAAiF,yBAAA,wBAGIjF,EAAA4I,qBAAA,uBAAAu5F,EAAAniG,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAArW,YAAA60F,GAAgB,GAEzBniG,EAAAmF,iBAAA,GACJnF,EAAAkF,mDAJIlF,EAAA6I,qBAAA,QAAAs5F,EAAAl3F,IAGAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA88F,EAAA90F,cAAA80F,EAAAh3F,KAAA,MA5BpB5T,0BAmCoC,eAAA6qG,EAAvBC,EAAuB3qG,EAYhC,SAAA2qG,EACuC9jE,EAC3B7lC,GAAyB,IAAAG,EAAAjB,KAAAD,EAAAC,KAAAyqG,GADEzqG,KAAA2mC,QAC3B3mC,KAAAc,OAbId,KAAA8V,UAAY9V,KAAKc,KAAKuuD,iBACtBrvD,KAAA6V,SAAW7V,KAAKc,KAAK2W,gBAErBzX,KAAA0V,YAAc,SAAC4I,GAAK,IAAAonF,EAChCzkG,EAAKH,KAAK+U,SAAWyI,EACrBrd,EAAKH,KAAKuX,aAAaiG,EAAEjL,IACf,QAAVqyF,EAAAzkG,EAAK0lC,aAAK,IAAA++D,GAAVA,EAAYh+F,OAChB,EAEgB1H,KAAA0H,MAAQ,eAAAgjG,EAAA,OAAgB,QAAhBA,EAAMzpG,EAAK0lC,aAAK,IAAA+jE,OAAA,EAAVA,EAAYhjG,OAAO,CAK9C,GAAC8iG,SAfKC,0CAAuBriG,EAAAC,4BAapBnK,EAAAynG,mBAAiBv9F,EAAAC,4BAAAC,EAAAG,qBAAA,kDAbpBgiG,EAAuB3hG,UAAA,sBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAnBuBoiB,UAAAC,MAAAC,EAAA,8fAbnDtnB,EAAAiF,yBAAA,WAEIjF,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GAGZU,EADJiF,yBAAA,UACIjF,CADqC,gBACVA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,+DAKRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,uDAIIjF,EAAA4J,qBAAA,GAAA24F,EAAA,yDAQRviG,EADIkF,wBACJlF,UArBYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAimD,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAAwM,WAAA,KAAA69C,EAAAj+C,gBAAA,OAAAi+C,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAAwM,WAAA,KAAA69C,EAAAngD,MAAA,KAUJnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,iBAAA89C,EAAA3mD,EAAAwN,sBAAA,KAAAvM,EAAAwM,WAAA,KAAAk5C,EAAA17C,IAIoBjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAyM,kIAWvB20F,CAAuB,uICtCpC5sG,EAAA,8BAEA8B,eAGyB,eAAAirG,EAAZC,EAAY,WAC4B,OAAA/qG,EAAjD,SAAA+qG,EAAoB/pG,GAAyBf,EAAAC,KAAA6qG,GAAzB7qG,KAAAc,MAA4B,EAAC,EAAAO,IAAA,YAAAC,MAE1C,SAAU+R,GACb,OAAOrT,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAC9W,GAAG,OAChC/E,aAAcmrB,MAAQnrB,EAAGzN,SAASwS,EAAI/E,IAAM+E,EAAI/E,KAAOA,CAAE,EAEjE,IAAC,CAPoB,GAOpBu3F,SAPQC,0CAAYziG,EAAAC,4BAAAC,EAAAG,oBAAA,kEAAZoiG,EAAY1vE,MAAA,IAAZ0vE,CAAY,kJCLzB,IAAA/8F,EAAAjQ,EAAA,OAEAitG,EAAAjtG,EAAA,sFAeQuK,EAAAkB,oBAAA,iFAGIlB,EAAA6I,qBAAA,YAAA7I,EAAAiM,sBAAA,IAAA8V,EAAA4gF,UAAA,QAAA3iG,EAAA4iG,iDAII5iG,EADJiF,yBAAA,UACIjF,CAD6D,gBAClCA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBAChClF,EAAAiF,yBAAA,WAAkBjF,EAAAmF,iBAAA,kBACtBnF,EADkCkF,wBAClClF,IAlBZzI,0BAuBoC,eAAAsrG,EAAvBC,EAAuB,WAMhC,OAAAprG,EAFA,SAAAorG,EAA6CvkE,GAAyB5mC,EAAAC,KAAAkrG,GAAzBlrG,KAAA2mC,OAA4B,EAEzE,EAAAtlC,IAAA,YAAAiE,IACA,WACI,SAAOwlG,EAAAK,QAAOnrG,KAAK2mC,MAAMokE,WAAa,GAC1C,IAAC,CAT+B,GAS/BE,SATQC,0CAAuB9iG,EAAAC,4BAIZyF,EAAAg5B,iBAAe,kDAJ1BokE,EAAuBpiG,UAAA,sBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,+VAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAnBxBhB,EADJiF,yBAAA,WACIjF,CADI,UACiBA,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAE1BlF,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAMAA,EALA4J,qBAAA,EAAAo5F,EAAA,aAKAhjG,CADC,EAAAijG,EAAA,yBAAAjjG,EAAA2c,yEAFI3c,EAAAoF,oBAAA,GAAiBpF,EAAjB6I,qBAAA,OAAA5H,EAAA0hG,UAAiB3iG,CAAA,WAAAkjG,0FAYjBJ,CAAuB,6KChCpCrtG,EAAA,UACAyC,EAAAzC,EAAA,OAGAuC,GAFAvC,EAAA,OAEAA,EAAA,8JAoCoBuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,iCACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,IAAAtE,EAAAi6F,MAAA,4BAaInjG,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,iBACJnF,EAAAkF,uFAhBRlF,EAAAiF,yBAAA,0CAOIjF,EAAA4I,qBAAA,uBAAAw6F,EAAApjG,EAAAgJ,wBAAA0Z,GAAAvN,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAAm6F,UAAAD,EAAAn4F,KAAA/B,EAAAm6F,UAAAD,EAAAn4F,IAAA,GAGAjL,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAA05F,EAAA,cAMAtjG,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,oCAERnF,EADIkF,wBACJlF,GACAA,EAAAkB,oBAAA,6CAKJlB,EAAAkF,kFApBIlF,EALAiX,sBAAA,OAAAmsF,EAAAttD,UAAA5sC,EAAAmb,KAAApZ,GAKAjL,CAL0C,OAAAojG,EAAAttD,UAAA5sC,EAAAmb,KAAApZ,GAK1CjL,CAJ0C,aAAAojG,EAAAttD,UAAA5sC,EAAAmb,KAAApZ,GAI1CjL,CAHgD,YAAAojG,EAAAttD,UAAA5sC,EAAAmb,KAAApZ,GAGhDjL,CAF+C,iBAAAA,EAAAwN,sBAAA,KAAAtE,EAAAq6F,UAOtCvjG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAu6F,EAAAttD,UAAA5sC,EAAAmb,KAAApZ,IAODjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,KAAA41F,EAAApU,UAAA9lF,EAAA2sB,QAAA,KAMJ71B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,KAAA41F,EAAA/kF,SAAAre,EAAA4iG,oDAyBI5iG,EAAAkB,oBAAA,oHAGIlB,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,IAAAxN,EAAAwN,sBAAA,IAAAtE,EAAAwtF,UAAAr4E,SAAAre,EAAA4iG,wFAxBZ5iG,EADJiF,yBAAA,WACIjF,CADsC,eAGlCA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAAs6F,WAAAt6F,EAAAs6F,UAAA,GAGIxjG,EADJiF,yBAAA,WACIjF,CADsC,iBACXA,EAAAmF,iBAAA,iCAEzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,+DAKRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,aAGIjF,EAAAkB,oBAAA,aAGAlB,EAAA4J,qBAAA,GAAA65F,EAAA,cASZzjG,EAFQkF,wBAERlF,gDAzBuCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA8mE,MAAAhwE,EAAAwN,sBAAA,IAAAtE,EAAAwtF,UAAAgN,WAAA,QAIvB1jG,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,IAAAtE,EAAAwtF,UAAAz1C,SAAAjhD,EAAAwN,sBAAA,IAAAtE,EAAAwtF,UAAAgN,SAAA,KAcC1jG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAs6F,qCASrBxjG,EAAAiF,yBAAA,YAWIjF,EANAkB,oBAAA,WAMAlB,CAJO,WAIPA,CADO,YAIPA,EAAAiF,yBAAA,aAAsBjF,EAAAmF,iBAAA,0BAC1BnF,EAD8CkF,wBAC9ClF,4CAbIA,EAAAkxD,sBAAA,SAAAhoD,EAAApK,OAAA,sEArFAkB,EAPRiF,yBAAA,UAOQjF,CAJP,UAIOA,CADH,UACoBA,EAAAmF,iBAAA,uBAAiBnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,cAAuBjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAAy6F,aAAY,GACxC3jG,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAKQA,EAJRiF,yBAAA,aAIQjF,CAJqD,WAIrDA,CADH,kBAC8BA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAChClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAAoBnF,EAAAkB,oBAAA,SACpBlB,EAAAmF,iBAAA,0CAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAg6F,EAAA,6CAMA5jG,EAAA4J,qBAAA,GAAAi6F,EAAA,8CA6BA7jG,EAAA4J,qBAAA,GAAAk6F,EAAA,8CAgCJ9jG,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAm6F,EAAA,6CAmBI/jG,EAHJiF,yBAAA,YAGIjF,CADH,oBAMOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAA+3C,QAAAl4C,KAAAG,EAAA+3C,QAAAl4C,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAEA/I,EADA4I,qBAAA,2BAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,EAAA86F,cAAa,EAC9BhkG,CAD+B,yBAAAA,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAChBF,EAAA+6F,cAAa,GAC/BjkG,EAAAkF,yBACDlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAA+6F,cAAa,GAEtBjkG,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,WAGtBnF,EAH0BkF,wBAG1BlF,kDA9GgBA,EAAAoF,oBAAA,IAAApF,EAAAqF,6BAAA,OAAA6D,EAAAmb,KAAAlZ,KAAA,MAMHnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,KAAAtE,EAAAi6F,OAMmBnjG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAtE,EAAAg7F,WA2BNlkG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,MAAAtE,EAAAwtF,WAoCjB12F,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,MAAAtE,EAAAq6F,UAoBGvjG,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,SAAAhoD,EAAApK,OAAA,MACAkB,EAAAqV,2BAAA,UAAAnM,EAAA+3C,SAOAjhD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAAK,EAAA+3C,uEAjIZjhD,EADJiF,yBAAA,UACIjF,CADwD,cAKpDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAy6F,aAAY,GAErB3jG,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,GACAA,EAAA4J,qBAAA,EAAAu6F,EAAA,eAiIJnkG,EAAAkF,mEA/HSlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAk7F,OAdjB7sG,gBA8J2B,eAAA8sG,EAAdC,EAAc,SAAA9rG,GAiCvB,SAAA8rG,EACY7rG,EACA8rG,GAAkB,IAAA1rG,EAAAlB,SAAAC,KAAA0sG,IAE1BzrG,EAAAC,EAAAlB,KAAA0sG,IAHQ7rG,YACAI,EAAA0rG,QAlCL1rG,EAAAurG,MAAO,EACPvrG,EAAA2qG,WAAY,EACZ3qG,EAAAooD,QAAU,GAEVpoD,EAAAwqG,UAAqC,GACrCxqG,EAAAg9B,OAAS,EACTh9B,EAAAiG,OAAS,GAEAjG,EAAAm3E,MAAQ,CACpBw0B,sBAAuB,OACvBC,cAAe,WACfC,cAAe,gBAEH7rG,EAAAsqG,KAAOtqG,EAAK0rG,MAAMI,UAClB9rG,EAAAqrG,SAAWrrG,EAAK0rG,MAAML,SACtBrrG,EAAA69F,SAAW79F,EAAK0rG,MAAM7N,SACtB79F,EAAA0qG,QAAU1qG,EAAK0rG,MAAML,SAASxpG,QAC1C1C,EAAAkb,KAAI,SAACtY,GAAC,IAAAiD,EAAA+mG,EAAA,OAAkB,IAAbhqG,EAAEgC,SAA+B,QAAfiB,EAAAjD,EAAEA,EAAEgC,OAAS,UAAE,IAAAiB,OAAA,EAAfA,EAAiBi4C,YAAqB,QAAd8uD,EAAK/rG,EAAKwrB,YAAI,IAAAugF,OAAA,EAATA,EAAW35F,GAAE,IACzEpS,CAmBF,CAACG,SAAAsrG,EAAA9rG,GAAAd,EAAA4sG,EAAA,EAAArrG,IAAA,WAAAiE,IAjBD,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,mBAC9B,GAAC,CAAAjE,IAAA,aAAAC,MAKM,WACHtB,KAAKwsG,MAAQxsG,KAAKwsG,KACbxsG,KAAKwsG,MAAMxsG,KAAK2sG,MAAMjlG,OAC/B,GAAC,CAAArG,IAAA,WAAAC,MASM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,eACAvS,EAAAgG,aAAayM,UAAU,SAAC0Z,GAAI,OAAM3nB,EAAK2nB,KAAOA,CAAI,IAEtDzsB,KAAK6S,aACD,OACA7S,KAAKurG,KAAKx4F,UAAU,kBAAMjO,EAAKmoG,eAAe,IAAI,IAEtDjtG,KAAK6S,aACD,WACA7S,KAAKssG,SAASv5F,UAAU,kBAAMjO,EAAKmoG,gBAAgB,IAEvDjtG,KAAK6S,aACD,WACA7S,KAAK8+F,SAAS/rF,UAAU,SAACqf,GAAC,OACtBA,EAAIttB,EAAKmoG,iBAAoBnoG,EAAK8mG,WAAY,CAAM,IAG5D5rG,KAAK42B,SACD,SACA,kBAAO9xB,EAAKm5B,OAASn5B,EAAKm5B,OAAS,EAAI,CAAC,EACxC,IAER,GAAC,CAAA58B,IAAA,cAAAC,MAEM,WAEHtB,KAAKkH,OAAS8wB,KAAK8F,IADR99B,KAAKktG,UAAUjF,cACAkF,aAAc,GAC5C,GAAC,CAAA9rG,IAAA,cAAAC,MAEM,WAAW,IAAA4E,EAAAlG,KACd,GAAKA,KAAKqpD,QACV,KAAKrpD,KAAK2sG,MAAMS,UACZ,OAAAptG,KAAK2sG,MAAMU,YACJrtG,KAAKwD,QAAQ,OAAQ,kBAAM0C,EAAKmmG,aAAa,EAAE,KAE1DrsG,KAAK2sG,MAAMN,YAAYrsG,KAAKqpD,SAC5BrpD,KAAKqpD,QAAU,GACfrpD,KAAKkH,OAAS,GACd8lC,WAAW,kBAAM9mC,EAAKgnG,UAAUjF,cAAczhF,OAAO,EAAE,IAAG,CAC9D,GAAC,CAAAnlB,IAAA,iBAAAC,MAEM,WAA0B,IAAAwF,EAAA9G,KAC7BA,KAAKwD,QACD,SACA,WAAK,IAAA8pG,EACqB,QAAtBA,EAAIxmG,EAAKymG,qBAAa,IAAAD,GAAlBA,EAAoBrF,gBACpBnhG,EAAKymG,cAActF,cAAcuF,UAC7B1mG,EAAKymG,cAActF,cAAckF,aAE7C,EARmBvoG,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,IAW9B,IAAC,CA9FsB,CAAQtE,EAAA6H,cAAYskG,SAAlCC,0CAAatkG,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAilG,aAAA,kDAAbf,EAAa5jG,UAAA,kBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,kiGA3JlBhB,EAAA4J,qBAAA,EAAA27F,EAAA,kBAA4CvlG,EAAA6I,qBAAA,OAAA5H,EAAAukG,saA2JvClB,CAAc,gNCnK3B,IAAApsG,EAAAzC,EAAA,OAQAwC,GADAxC,EAAA,MACAA,EAAA,QACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MACAgwG,EAAAhwG,EAAA,OAEAstG,EAAAttG,EAAA,sCAYA8B,cAGyB,eAAAmuG,EAAZL,EAAY,SAAA7sG,GAsErB,SAAA6sG,EACY3sG,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAytG,IAElCxsG,EAAAC,EAAAlB,KAAAytG,IAHQ3sG,OACAG,EAAAJ,YAvEJI,EAAA8sG,eAAiB,IAAI30F,EAAAuB,gBAA+B,IACpD1Z,EAAA+sG,kBAAoB,IAAI50F,EAAAuB,gBAAoC,MAC5D1Z,EAAAgtG,aAAehtG,EAAKH,KAAK2W,gBAAgB3U,QAC7C1C,EAAAob,QAAO,SAAC8C,GAAC,QAAOA,CAAC,MACjBle,EAAAkb,KAAI,SAACtY,GAAC,OAAK/B,EAAKH,KAAKixB,QAAQ,YAAY,IAErC9wB,EAAAitG,SAAW,GAEZjtG,EAAA8rG,UAAgC9rG,EAAKgtG,aAAanrG,QACrD1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAwxB,WAAU,SAACve,GACP,IACM0e,GADAiD,EAAM30B,EAAA2xB,WAAU3e,EAAI,OACN0e,QAAQ,aAC5B9wB,SAAK4R,aAAY,wBAA0Bkf,EAAQS,QAC5CT,EAAQG,QACnB,IAAC,EACD9xB,EAAAsyB,aAAY,IAERzxB,EAAAwxD,QAAU,IAAIr5C,EAAAuB,gBAAgB,GAE9B1Z,EAAAktG,cAAa/0F,EAAA2I,eAAc,CAAC9gB,EAAKgtG,aAAchtG,EAAKwxD,UAAU3vD,QAClE1C,EAAAwxB,WAAU,SAAA3rB,GAAS,IAAPoN,EAAO4O,EAAAhc,EAAA,GAAL,GACJxC,EACU,eADVA,EACFpD,EAAAgD,SAAuB,gBAAAU,OACDgkD,sBAAmB1nD,EAAAgD,WAAQ,aAAAU,UAC9B1D,EAAAs8F,WACjBjvF,EAAG,KAAA3J,OAAQ2B,SAASC,OAAOiiC,QAC7B,OACA,IACH,gCAAA7jC,OAA+BgkD,mBAAmB10C,GAAG,KAAAtP,OAAIN,GAAIM,OAC1D9C,EAAKitG,SACC,WAAanmD,mBAAmB9mD,EAAKitG,UACrC,IAEVjtG,SAAKmtG,WAAUP,EAAAQ,WAAe,CAC1B3gG,MACA4gG,WAAY,SAAC7rG,GAAI,MACG,iBAATA,EAAoB2B,KAAKC,UAAU5B,GAAQA,CAAI,EAC1D8rG,aAAc,SAAC9rG,GACX,IAAI+rG,EAAe/rG,EAAKA,KACxB,IAEI+rG,EADYpqG,KAAKo1B,MAAM/2B,EAAKA,KAEhC,OAEA,CACA,OAAO+rG,CACX,IAEJvtG,EAAK4R,aACD,UACA5R,EAAKmtG,QAAQr7F,UACT,SAAC/P,GAAC,OAAK/B,EAAKwtG,WAAWzrG,EAAE,EACzB,SAAC6gB,GAAC,OAAK5iB,EAAKytG,UAAU,EACtB,kBAAMztG,EAAKytG,UAAU,IAGtBztG,EAAKmtG,OAChB,IAAC,EACDhuG,EAAAsyB,aAAY,IAGAzxB,EAAAqrG,SAAWrrG,EAAK8sG,eAAejzF,eAC/B7Z,EAAA69F,SAAW79F,EAAK+sG,kBAAkBlzF,eAAe7Z,CAWjE,CAACG,SAAAqsG,EAAA7sG,GAAAd,EAAA2tG,EAAA,EAAApsG,IAAA,YAAAiE,IATD,WACI,QAAStF,KAAKouG,OAClB,GAAC,CAAA/sG,IAAA,YAAAC,MASM,WAAS,IAAAwD,EAAA9E,KACZ,IAAIA,KAAKouG,QACT,OAAApuG,KAAKyyD,QAAQtwD,KAAK2X,KAAKuX,QAAK,EAC5B/wB,EAAAqC,KAAI,OAAQ,6BACZ3C,KAAK6S,aAAa,OAAQ7S,KAAKmuG,WAAWp7F,aACnC,kBAAMjO,EAAK6pG,SAAS,CAC/B,GAAC,CAAAttG,IAAA,UAAAC,MAEM,WAAO,IAAAstG,GACV,EAAAtuG,EAAAqC,KAAI,OAAQ,6BACA,QAAZisG,EAAA5uG,KAAKouG,eAAO,IAAAQ,GAAZA,EAActO,WACdtgG,KAAK0uG,UACT,GAAC,CAAArtG,IAAA,QAAAC,MAEM,WACHtB,KAAK2uG,UACL3uG,KAAKkuG,SAAW,GAChBluG,KAAK+tG,eAAe5rG,KAAK,GAC7B,GAAC,CAAAd,IAAA,cAAAC,MAEM,SAAY+nD,GAAe,IAAAwlD,EACzBxlD,IACLrpD,KAAKyuG,WAAW,CAAEK,QAAS,GAAIzlD,UAASnL,WAAS59C,EAAAkG,eAAc6M,KACnD,QAAZw7F,EAAA7uG,KAAKouG,eAAO,IAAAS,GAAZA,EAAc1sG,KAAKknD,GACvB,GAAC,CAAAhoD,IAAA,iBAAAC,MAEO,WAAgC,IAAA4E,EAAAlG,KAAjBkjF,EAAKt+E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,KAC3B5E,KAAKwD,QACD,SACA,WACI,IAAMurG,EAAW7oG,EAAK6nG,eAAe51F,WACrC,GACI42F,EAAS/pG,OAAS,GACwB,cAA1C+pG,EAASA,EAAS/pG,OAAS,GAAGk5C,QAE9B,OAAOh4C,EAAK8oG,eAAe9rB,GAE/Bh9E,EAAKyoG,SACT,EACAzrB,EAER,GAAC,CAAA7hF,IAAA,WAAAC,MAEO,WACJtB,KAAKouG,QAAU,KACfpuG,KAAK2xB,UAAU,OACnB,GAAC,CAAAtwB,IAAA,aAAAC,MAEO,SAAWioF,GACXA,EAAIulB,UAAS9uG,KAAKkuG,SAAW3kB,EAAIulB,SACpB,aAAbvlB,EAAI32E,MACJ5S,KAAKguG,kBAAkB7rG,KAAK,CACxBkR,GAAE,OAAAtP,UAASzD,EAAAs/B,cAAa,IACxBkvE,QAASvlB,EAAIulB,QACbzlD,QAASkgC,EAAIlgC,QACb5iC,QAAS0kF,EAAO3xE,MAAM+vD,EAAIlgC,SAC1BnL,QAASqrC,EAAIrrC,SAAW,YACxB4tD,SAAUviB,EAAGuiB,SACb1U,UAAWt9E,KAAKuX,QAEC,kBAAjBk4D,EAAGuiB,UACH9rG,KAAKa,UAAUqrC,KAAK,qBAAsBq9C,EAAI0lB,WAGlDjvG,KAAK+tG,eAAe5rG,KAAI,GAAA4B,OAAAqe,EACjBpiB,KAAK+tG,eAAe51F,YAAU,CACjC,CACI9E,GAAE,OAAAtP,UAASzD,EAAAs/B,cAAa,IACxBkvE,QAASvlB,EAAIulB,QACbzlD,QAASkgC,EAAIlgC,QACb5iC,QAAS0kF,EAAO3xE,MAAM+vD,EAAIlgC,SAC1BnL,QAASqrC,EAAIrrC,SAAW,YACxBk5C,UAAWt9E,KAAKuX,UAGP,aAAbk4D,EAAI32E,MACJ5S,KAAKguG,kBAAkB7rG,KAAK,OAGpCnC,KAAKgvG,gBACT,IAAC,CA7JoB,CAAQ1uG,EAAA6H,cAAY2lG,SAAhCL,0CAAWrlG,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAA,qDAAXklG,EAAWxwF,QAAXwwF,EAAWvwF,UAAAC,WAFR,SAEHswF,CAAY,2IC7BzB5vG,EAAA,UACAyC,EAAAzC,EAAA,OACA0L,EAAA1L,EAAA,OACAiQ,EAAAjQ,EAAA,OACAsQ,EAAAtQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACA8M,EAAA9M,EAAA,OACA8P,EAAA9P,EAAA,OACAgQ,EAAAhQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAqQ,EAAArQ,EAAA,OACAoQ,EAAApQ,EAAA,OACAqxG,EAAArxG,EAAA,OACA4M,EAAA5M,EAAA,OACAsxG,EAAAtxG,EAAA,OACAuxG,EAAAvxG,EAAA,OACAwxG,EAAAxxG,EAAA,MACAyQ,EAAAzQ,EAAA,OACAuQ,EAAAvQ,EAAA,OACA0Q,EAAA1Q,EAAA,OACA8Q,EAAA9Q,EAAA,OACAyxG,EAAAzxG,EAAA,MACA8a,EAAA9a,EAAA,OAEA4L,EAAA5L,EAAA,OAIA0xG,EAAA1xG,EAAA,KAIA2xG,GAFA3xG,EAAA,OACAA,EAAA,OACAA,EAAA,QAEA4xG,GADA5xG,EAAA,OACAA,EAAA,QAGA6xG,GADA7xG,EAAA,OACAA,EAAA,QAQA8xG,GAJA9xG,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACA+xG,EAAA/xG,EAAA,OAEAgyG,GADAhyG,EAAA,OACAA,EAAA,QAGAiyG,GAFAjyG,EAAA,OACAA,EAAA,OACAA,EAAA,QAGA43C,GAFA53C,EAAA,OACAA,EAAA,OACAA,EAAA,QACAkyG,EAAAlyG,EAAA,OAGAmyG,IAFAnyG,EAAA,OACAA,EAAA,OACAA,EAAA,QACAoyG,GAAApyG,EAAA,OAKAqyG,IAJAryG,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QAMAsyG,IALAtyG,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,QAWAuyG,IAVAvyG,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAwyG,GAAAxyG,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,0HAEMyyG,GAAqB,CACvB3iG,EAAAgC,sBACAxB,EAAA2B,cACA/B,EAAAuB,mBACA3E,EAAAkB,gBACApB,EAAAoF,gBACAlC,EAAAgC,sBACAhF,EAAAkB,gBACAiC,EAAAuB,gBACAxB,EAAAuB,oBACApB,EAAAwB,eACA0/F,EAAAqB,gBACAtiG,EAAAwB,yBACAvB,EAAA0B,eACAu/F,EAAAqB,mBACApB,EAAAqB,eACApB,EAAAqB,aACAZ,EAAAa,cACAV,GAAAW,gBACAtiG,EAAA6B,iBACA/B,EAAA2B,kBACAxB,EAAA6B,eACAzB,EAAA0B,gBACAi/F,EAAAuB,qBACAl4F,EAAAQ,uBA+DJxZ,mBAe6B,eAAAmxG,GAAhB5hG,GAAgBpP,EAAA,SAAAoP,KAAAnP,EAAAC,KAAAkP,GAAA,GAAA4hG,UAAhB5hG,6CAAgB,mDAAhBA,2DALE,CACP,CAAE3C,QAASmjG,EAAAvsC,iBAAkB4tC,SAAU,KAAE,EACzCtnG,EAAA0B,sBAAkB1B,EAAA2B,4BACrBC,QAAA,CATG/K,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACAsjG,EAAAnjG,gBAAgB4M,WACbs3F,GA9FP3iG,EAAAgC,sBACAxB,EAAA2B,cACA/B,EAAAuB,mBACA3E,EAAAkB,gBACApB,EAAAoF,gBACAlC,EAAAgC,sBACAhF,EAAAkB,gBACAiC,EAAAuB,gBACAxB,EAAAuB,oBACApB,EAAAwB,eACA0/F,EAAAqB,gBACAtiG,EAAAwB,yBACAvB,EAAA0B,eACAu/F,EAAAqB,mBACApB,EAAAqB,eACApB,EAAAqB,aACAZ,EAAAa,cACAV,GAAAW,gBACAtiG,EAAA6B,iBACA/B,EAAA2B,kBACAxB,EAAA6B,eACAzB,EAAA0B,gBACAi/F,EAAAuB,qBACAl4F,EAAAQ,sBAiEwDo2F,EAAAnjG,mBAa/C8C,EAAgB,qCAvEzBugG,EAAAuB,oBAAmB,kBAAAxoG,GAAAyoG,KAoDnBd,GAAAxI,4BAA2B,oBAxB3BgI,EAAAuB,SAAQ,oCAzBRxB,EAAAyB,wBAAuB,kBAAA3oG,GAAAyoG,KAAAvoG,GAAA0oG,UAAAxoG,GAAAyoG,WALvB7B,EAAA8B,cAMAlB,GAAAmB,qBACAlB,GAAAmB,qBAAoB,oBAAAhpG,GAAAipG,UAAA,oCAYpBh8D,EAAAoC,wBAAuB,kBAAArvC,GAAAyoG,KAAAvoG,GAAA0oG,UAAAhtF,GAAAstF,eAAArtF,GAAAstF,mBAnBvBnC,EAAA8B,cAKA5B,EAAAyB,wBAAuB,uCAevBpB,EAAA6B,uBAAsB,kBAAAppG,GAAAqpG,QAAArpG,GAAAyoG,KAAAvoG,GAAA0oG,UApBtB5B,EAAA8B,cAsDAnB,GAAAxI,4BAA2B,uCAhC3BqI,GAAA8B,sBAAqB,kBAAAtpG,GAAAqpG,QAAArpG,GAAAyoG,KAAAzoG,GAAAupG,SAAAvpG,GAAAwpG,aAAAxpG,GAAAypG,gBAAA1tF,GAAA2tF,qBAAA3tF,GAAA4tF,gBAAA5tF,GAAA6tF,QAAA1pG,GAAA0oG,UAAA3sF,GAAA4tF,0BAAA5tF,GAAA6tF,gBAAA7tF,GAAA8tF,yBAtBrB/C,EAAA8B,cAeAzB,EAAA2C,uBAAsB,oBAAAhqG,GAAAipG,UAAAjpG,GAAAiqG,SAgBtB7C,EAAA8C,aAAY,oCAQZxC,GAAAyC,sBAAqB,kBAAAnqG,GAAAyoG,KAAA1sF,GAAA2tF,qBAAA3tF,GAAA4tF,gBAAA5tF,GAAA6tF,QAAA1pG,GAAA0oG,UAAAxoG,GAAAyoG,WAAAuB,GAAAC,UAAAD,GAAAE,eAvCrBtD,EAAA8B,cAEA7B,EAAAuB,oBAaAnB,EAAA2C,uBAAsB,oBAAAhqG,GAAAipG,UAAAjpG,GAAAiqG,SAAAnqG,GAAAyqG,cAAA,uMCpI1B,IAAAnpG,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OAEAg0C,EAAAh0C,EAAA,iGA+BQuK,EAAAiF,yBAAA,YAKIjF,EADAkB,oBAAA,eACAlB,CADoD,SAMxDA,EAAAkF,iEANclF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAkE,MAINjmB,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAAkZ,EAAA1D,QAAAre,EAAA4iG,wFAOJ5iG,EAJJiF,yBAAA,aAIIjF,CADH,cAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA6oF,YAAW,GAEpB5qG,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,6CAXQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAA4O,YAAA,KASA3wB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAA2O,aAAA,+BAKA1wB,EADJiF,yBAAA,WACIjF,CADU,YAINA,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,GAEXnF,EAFwBkF,wBAExBlF,6CAFWA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAgW,EAAA7H,UA/CV3iB,mBAAmB,CAC5BuH,OAAQ,OACRC,MAAO,OACP4wC,UAAW,oBACXD,SAAU,qBAGdn4C,wBA+CmC,eAAAszG,EAAtB/pB,EAAsB,SAAAl2C,GAuB/B,SAAAk2C,EACYt1B,EACyBjtB,GAAuB,IAAA1lC,EAAAlB,SAAAC,KAAAkpF,IAExDjoF,EAAAC,EAAAlB,KAAAkpF,IAHQt1B,cACyB3yD,EAAA0lC,QArBpB1lC,EAAA6sB,MAAQ,IAAIlkB,EAAAoV,aAEb/d,EAAAE,MAAgBF,EAAK0lC,MAAMxlC,OAAS,UAEpCF,EAAAwlB,QAAkBxlB,EAAK0lC,MAAMlgB,SAAW,gBAExCxlB,EAAA63B,aAAuB73B,EAAK0lC,MAAM7N,cAAgB,SAElD73B,EAAA83B,YAAsB93B,EAAK0lC,MAAM5N,aAAe,SAEhD93B,EAAAotB,KAAwBptB,EAAK0lC,MAAMtY,MAAQ,CACvDkwD,MAAO,iBACP93D,QAAS,QAGGxlB,EAAAiyG,aAAe,kBAAOjyG,EAAK2yD,YAAYs/C,cAAe,CAAI,EAE1DjyG,EAAAkyG,YAAc,kBAAOlyG,EAAK2yD,YAAYs/C,cAAe,CAAK,EAAEjyG,CAO5E,CAACG,SAAA8nF,EAAAl2C,GAAAlzC,EAAAopF,EAAA,EAAA7nF,IAAA,WAAAC,MAEM,WAAQ,IAAAwD,EAAA9E,KACPA,KAAK2mC,MAAM3N,aACXh5B,KAAKwD,QACD,QACA,kBAAMsB,EAAK8uD,YAAYlsD,OAAO,EAC9B1H,KAAK2mC,MAAM3N,YAGvB,GAEA,CAAA33B,IAAA,YAAAC,MACO,WACHtB,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,QAC9B,IAAC,CA3C8B,CAAQujB,EAAA1pC,cAAY8qG,SAA1C/pB,0CAAqB9gF,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAyBlByF,EAAAg5B,iBAAe,kDAzBlBoiD,EAAqBpgF,UAAA,oBAAAsW,QAAA,CAAA0O,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mmBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA3CtBhB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,GACRnF,EADmBkF,wBACnBlF,GA6BAA,EA5BA4J,qBAAA,EAAAohG,EAAA,aA4BAhrG,CAzBC,EAAAirG,EAAA,eAyBDjrG,CAdC,EAAAkrG,EAAA,yBAAAlrG,EAAA2c,yEAhBO3c,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAlI,OAGHiH,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA0/D,GAYhB1/D,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,qGA4BA4mE,CAAsB,oLC3EnC,IAAAt/E,EAAA/L,EAAA,MAWAsxG,EAAAtxG,EAAA,OACAiyG,EAAAjyG,EAAA,OACAuxG,EAAAvxG,EAAA,OACAyC,EAAAzC,EAAA,OACAub,EAAAvb,EAAA,0KAYoBuK,EAAAiF,yBAAA,YAQIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,uHALIlF,EADAkxD,sBAAA,SAAApO,EAAAqoD,YAAAC,IAAA,UACAprG,CAD8C,gBAAA8iD,EAAAqoD,YAAAC,GAAA,QAK9CprG,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAy9C,EAAAuoD,eAAAD,IAAAE,EAAA,4BAeUtrG,EAAAiF,yBAAA,aAOEjF,EAAAmF,iBAAA,WACJnF,EAAAkF,mDAXJlF,EAAAwY,kCAAA,GAEKxY,EAAAmF,iBAAA,GACCnF,EAAA4J,qBAAA,EAAA2hG,EAAA,8IADDvrG,EAAAoF,sBAAApF,EAAA+L,4BAAAy/F,EAAAF,IAEItrG,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA2iG,EAAAF,IAAA,KAAAE,EAAAF,0BAULtrG,EAAA8uD,6BAAA,2BAAA9uD,EAAA4J,qBAAA,EAAA6hG,EAAA,2KAIFzrG,EAHO6I,qBAAA,mBAAAi6C,EAAA/hD,SAAAuqG,GAGPtrG,CAAA,0BAAAA,EAAA0rG,0BAAA,EAAAliG,EAAA,IAAAmiG,MAAA7oD,EAAA8oD,YAAAvxG,KAAAuC,OAAA,GAAA+uG,IAAA7oD,EAAA8oD,YAAAhvG,OAAA,EAAAwuG,EAAAI,EAAAF,GAAAE,EAAAF,EAAAxoD,EAAAuoD,eAAAD,IAAAE,8BArBNtrG,EAAAwY,kCAAA,GAgBIxY,EAbA4J,qBAAA,EAAAiiG,EAAA,sBAaA7rG,CAXK,EAAA8rG,EAAA,0BAAA9rG,EAAA2c,oLADA3c,EAAAoF,sBAAyBpF,EAAzB6I,qBAAA,QAAAi6C,EAAA/hD,SAAAuqG,GAAyBtrG,CAAA,WAAA+rG,6BAkC9B/rG,EAAAiF,yBAAA,YAAgCjF,EAAAmF,iBAAA,GAAanF,EAAAkF,uEAAblF,EAAAoF,sBAAApF,EAAA+L,4BAAA4/F,EAAA,6BA7CxC3rG,EAAAiF,yBAAA,YA4CIjF,EArCA4J,qBAAA,EAAAoiG,EAAA,sBAqCAhsG,CAnCC,EAAAisG,EAAA,yBAAAjsG,EAAA2c,kCAsCL3c,EAAAkF,oJA3CIlF,EADAkxD,sBAAA,SAAApO,EAAAqoD,YAAAC,IAAA,UACAprG,CAD8C,gBAAA8iD,EAAAqoD,YAAAC,GAAA,QAKzCprG,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,kBAAAyiG,EAA2BtrG,CAAA,WAAAksG,6BAnBxClsG,EADJwY,kCAAA,EACIxY,CADwD,KAYpDA,EAVA4J,qBAAA,EAAAuiG,EAAA,aAUAnsG,CAHC,EAAAosG,EAAA,4EARSpsG,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAyiG,yBA8DlBtrG,EAAAkB,oBAAA,oFAIAlB,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,uBAAAyjG,EAAArsG,EAAAgJ,wBAAAulC,GAAAp5B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAwpD,YAAAx1F,KAAAu1F,GAAqB,GAEjCrsG,EAAAkF,mDAEGlF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAy9C,EAAAypD,OAAA,2BAnFpBh1G,uBA2GI,eAAAi1G,EADSC,EACT,SAAAj0G,GA3GJ,SAAAi0G,IAAA,IAAA5zG,EAAAlB,SAAAC,KAAA60G,2BAiHoBC,YAAa,EAEb7zG,EAAA8zG,UAAY,EAQZ9zG,EAAAsyG,YAAwB,GAIxBtyG,EAAAkI,SAA6C,GAI5ClI,EAAAyzG,YAAc,IAAI9qG,EAAAoV,aAEnB/d,EAAA+yG,YAAqC,IAAI5E,EAAA4F,mBACrD,IACF/zG,EA4DLG,SAAAyzG,EAAAj0G,GAAAd,EAAA+0G,EAAA,EAAAxzG,IAAA,kBAAAC,MAvDU,WACHtB,KAAKg0G,YAAYx3F,KAAOxc,KAAKi1G,MAC7Bj1G,KAAKg0G,YAAYkB,UAAYl1G,KAAK80G,WAAa90G,KAAKm1G,WAAa,KACjEn1G,KAAKg0G,YAAYoB,gBAAkB,SAAChjF,EAAQ9J,GACxC,QAAWjnB,KAAO+wB,EAAG,CACjB,GACsB,iBAAXA,EAAE/wB,IACT+wB,EAAE/wB,GAAK2xB,cAAcptB,SAAS0iB,EAAE0K,eAEhC,OAAO,EACJ,GAAIZ,EAAE/wB,KAASinB,EAClB,OAAO,CAEf,CACA,OAAO,CACX,CACJ,GAAC,CAAAjnB,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAiCnCi4E,EAjCmCvwG,EAAA9E,KACjCo9B,EAAQk4E,YAAct1G,KAAKs1G,aACvBt1G,KAAKs1G,sBAAsBl8F,EAAAumF,WAC3B3/F,KAAK6S,aACD,OACA7S,KAAKs1G,WAAWviG,UACZ,SAACtQ,GAAI,OAAMqC,EAAKkvG,YAAYvxG,KAAOA,CAAI,IAI/CzC,KAAKg0G,YAAYvxG,KAAOzC,KAAKs1G,YAGjCl4E,EAAQ03E,aACR90G,KAAKg0G,YAAYkB,UAAYl1G,KAAK80G,WAC5B90G,KAAKm1G,WACL,MAEN/3E,EAAQ5hB,SACRxb,KAAKg0G,YAAYx4F,QAAUxb,KAAKwb,QAAU,IAAI6nC,OAAOrwB,eAErDoK,EAAQw8B,SAAW55D,KAAK45D,UACxB55D,KAAKyzG,eAAiBzzG,KAAK45D,QAAQt+C,IAC/B,SAACtY,EAAGitC,GAAG,OACFnrC,EAAK2uG,gBAAkB,IAAIxjE,IAAQjtC,EAAE2D,MAAM,KAAKkO,KAAK,IAAI,IAGjE7U,KAAKuzG,cACNvzG,KAAKuzG,YAAc,IAGnBn2E,EAAQm4E,YACRv1G,KAAKu1G,aAAen4E,EAAQm4E,WAAWC,gBAExB,QAAfH,EAAAr1G,KAAKm1G,kBAAU,IAAAE,GAAfA,EAAiBI,YAEzB,IAAC,CAvFD,CAAQn1G,EAAA6H,cAAYysG,SADXC,qGAAoBv1E,GAApBu1E,EAAoB,qDAApBA,EAAoB/rG,UAAA,mBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,4BA+BlB+lG,EAAAuG,aAAY,2BACZ5F,EAAA6F,QAAO,wyDAvIdvtG,EAAAiF,yBAAA,iBA8EIjF,EAzEA4J,qBAAA,EAAA4jG,EAAA,qBAyEAxtG,CAzE4D,EAAAytG,EAAA,uBAyE5DztG,CAPC,EAAA0tG,EAAA,gBAOD1tG,CADC,EAAA2tG,EAAA,qBAML3tG,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,qBAMJlB,EAAAkF,gCA1FIlF,EAAA6I,qBAAA,aAAA5H,EAAA2qG,aAIiC5rG,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAuwD,SAiE5BxxD,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAA5H,EAAAuwD,SAMoBxxD,EAAAoF,sBAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAuwD,SAQjBxxD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAyrG,YAEJ1sG,EAAAoF,sBAEApF,EAFA6I,qBAAA,WAAA5H,EAAA0rG,UAEA3sG,CAFsB,kBAEtBA,CADqB,gbAgBxBysG,CACT,gPC5HJh3G,EAAA,WACAwxG,EAAAxxG,EAAA,MACA+L,EAAA/L,EAAA,MAcAyC,EAAAzC,EAAA,gHAoBoBuK,EAAA8uD,6BAAA,4BADJ9uD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAgkG,EAAA,mGACK5tG,EAAAoF,sBAA4BpF,EAA5B6I,qBAAA,oBAAAkZ,EAAA1D,QAA4Bre,CAAA,4BAAA+hB,EAAA8rF,oCAGrC7tG,EAAAwY,kCAAA,GACIxY,EAAAkB,oBAAA,yHAAKlB,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,IAAAuU,EAAA1D,SAAAre,EAAA4iG,gDAGL5iG,EAAA8uD,6BAAA,4BADJ9uD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAkkG,EAAA,mGACK9tG,EAAAoF,sBAA2BpF,EAA3B6I,qBAAA,mBAAAkZ,EAAA1D,QAA2Bre,CAAA,0BAAA+hB,EAAA1nB,gCAXxC2F,EAAAiF,yBAAA,WASIjF,EARA4J,qBAAA,EAAAmkG,EAAA,qBAQA/tG,CAR0C,EAAAguG,EAAA,qBAQ1ChuG,CAHqC,EAAAiuG,EAAA,sBAQzCjuG,EAAAkF,iEAdkDlF,EAAA6I,qBAAA,WAAAkZ,EAAAvX,MAC/BxK,EAAAoF,sBAAApF,EAAA6I,qBAAA,4BAKA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,4BArBlB00F,EAAiB,eAAA2Q,EAAjB3Q,EAAiB7lG,EAG1B,SAAA6lG,EAAY1tF,GAAClY,EAAAC,KAAA2lG,GACT3lG,KAAKyC,KAAOwV,EAAExV,KACdzC,KAAK0H,MAAQuQ,EAAEvQ,OAAU,kBAAM,IAAI,CACvC,GAAC4uG,SANQ3Q,8GAAiB1oF,QAAjB0oF,EAAiBzoF,YAAjByoF,CAAiB,IAD9BhmG,oBAAAgmG,EAUAhmG,yBAyBI,eAAA42G,EADS/D,EACT,SAAA5xG,GAiCA,SAAA4xG,EACY3I,EACA2M,EACAC,GAAmB,IAAAx1G,EAAAlB,SAAAC,KAAAwyG,IAE3BvxG,EAAAC,EAAAlB,KAAAwyG,IAJQ3I,WACA5oG,EAAAu1G,WACAv1G,EAAAw1G,YAxBIx1G,EAAAy1G,UAAW,EAEXz1G,EAAA01G,OAAQ,EAER11G,EAAAiiF,MAAQ,EAEjBjiF,EAAA2R,KAA0C,WAIzC3R,EAAA21G,aAA2B,KAII31G,EAAA41G,QAAU,kBAAM51G,EAAK8T,MAAM,EACxB9T,EAAA61G,QAAU,kBAAM71G,EAAK8T,MAAM,EACzB9T,EAAA81G,QAAU,kBAClD91G,EAAK01G,MAAQ11G,EAAK8T,OAAS,EAAE,EACW9T,EAAA+1G,QAAU,kBAClD/1G,EAAK01G,MAAQ11G,EAAKyG,QAAU,EAAE,EAACzG,CAQnC,CAACG,SAAAoxG,EAAA5xG,GAAAd,EAAA0yG,EAAA,EAAAnxG,IAAA,cAAAC,MAEM,SAAY87B,GACfp9B,KAAKi3G,kBAEDj3G,KAAK42G,eACJx5E,EAAQ85E,OAAS95E,EAAQ+5E,OAAS/5E,EAAQ3W,UAE3CzmB,KAAK+U,MAEb,GAAC,CAAA1T,IAAA,cAAAC,MAEM,WACH81G,EAAAC,EAAA7E,EAAA3O,WAAA,cAAA7jG,MAAAo/C,KAAAp/C,MACAA,KAAK0H,OACT,GAAC,CAAArG,IAAA,OAAAC,MAEM,WAAI,IAAAwD,EAAA9E,KACFA,KAAKymB,SACVzmB,KAAKwD,QACD,OACA,WACQsB,EAAK6xG,OAAS7xG,EAAKo+E,OACnBp+E,EAAKtB,QAAQ,UAAW,kBAAMsB,EAAK4C,OAAO,EAAE5C,EAAKo+E,OAErDp+E,EAAKwyG,cACDxyG,EAAK8xG,cAAc9xG,EAAK4C,QACvB5C,EAAKyyG,UACEzyG,EAAK+kG,SAAS5B,cAAcuP,wBAGxC1yG,EAAK8xG,aAAe9xG,EAAK0xG,SAASiB,OAAO,CACrCC,cAAe5yG,EAAK4xG,WAAa5xG,EAAK6xG,MACtCgB,iBAAkB7yG,EAAK0xG,SAClB7wD,WACAiyD,oBAAoB9yG,EAAK+kG,UACzBgO,cAAc,CACX,CACIC,QAAShzG,EAAKoyG,OATZ,MAUFa,SACoB,QAAfjzG,EAAKqyG,MACA,SACc,UAAdryG,EAAKqyG,MACL,MACAryG,EAAKqyG,QAdb,MAeFa,SAAUlzG,EAAKoyG,OAhBb,MAiBFe,SAAUnzG,EAAKqyG,OAhBb,WAoBlBryG,EAAK8xG,aAAasB,OAAOpzG,EAAKyyG,SAC1BzyG,EAAK4xG,UACL5xG,EAAK+N,aACD,WACA/N,EAAK8xG,aACAuB,gBACAplG,UAAU,kBAAMjO,EAAK4C,OAAO,IAG7C,EACA,GAER,GAAC,CAAArG,IAAA,QAAAC,MAEM,WACHtB,KAAK8D,aAAa,QACd9D,KAAK42G,eACL52G,KAAK42G,aAAawB,UAClBp4G,KAAK42G,aAAe,KAE5B,GAAC,CAAAv1G,IAAA,cAAAC,MAEO,WACJtB,KAAK4S,KACuB,iBAAjB5S,KAAKymB,QACN,OACAzmB,KAAKymB,mBAAmB7c,EAAAyuG,YACxB,WACA,WACd,GAAC,CAAAh3G,IAAA,kBAAAC,MAEO,WAAe,IAAA4E,EAAAlG,KACnBA,KAAKi2G,SAAWrsG,EAAA0uG,SAASb,OAAO,CAC5Bc,UAAW,CACP,CACIhsG,QAASo5F,EACToL,SAAU,CAAEtuG,KAAMzC,KAAKyC,KAAMiF,MAAO,kBAAMxB,EAAKwB,OAAO,KAG9DmoE,OAAQ7vE,KAAKy2G,WAErB,IAAC,CAlID,CAAQn2G,EAAA6H,cAAYouG,SADX/D,0CAAsBpqG,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAC,EAAAkwG,SAAApwG,EAAAC,4BAAAD,EAAAkwG,UAAA,kDAAtB9F,EAAsB1pG,UAAA,0BAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,2BAyBpBimG,EAAAoJ,UAAS,sHAzBXrwG,EAAA4I,qBAAA,0BAAA3H,EAAAwtG,SAAS,EAATzuG,CAAsB,6BAAtBiB,EAAAytG,SAAS,EAAT1uG,CAAsB,+BAAtBiB,EAAA0tG,SAAS,EAAT3uG,CAAsB,+BAAtBiB,EAAA2tG,SAAS,ykBArBd5uG,EAAAg+F,uBAAA,GAEAh+F,EAAA4J,qBAAA,EAAA0mG,EAAA,oLAmBKlG,CACT,uICpDJ,IAAA7hF,EAAA9yB,EAAA,iBAEA8B,eAGyB,eAAAg5G,EAAZC,EAAY,kBAAA94G,EAAA,SAAA84G,IAAA74G,EAAAC,KAAA44G,EAAA,IAAAv3G,IAAA,YAAAC,MACd,SAAUuQ,GACb,IAAMwf,EAAMvX,KAAKuX,MACbsG,KAAOhH,EAAA+H,qBAAoBrH,EAAKxf,GAC9BgnG,EAAYlhF,EAAO,EAEzB,IADAA,EAAOK,KAAK8qB,IAAInrB,IACL,EAEP,OAAOkhF,EAAY,OAAS,MACzB,GAAa,IAATlhF,EAEP,OAAOkhF,EAAY,WAAa,QAC7B,GAAIlhF,EAAO,GAEd,OAAOkhF,EAAS,MAAA90G,OAAS4zB,EAAI,WAAA5zB,OAAY4zB,EAAI,QAC1C,GAAIA,EAAO,KAAS,CAEvB,IAAMiJ,EAAQ5I,KAAK6I,MAAMlJ,EAAO,IAChC,OAAOkhF,EAAS,MAAA90G,OACJ68B,EAAK,SAAA78B,OAAkB,IAAV68B,EAAc,GAAK,MAAG,EACzCjQ,EAAAkI,QAAOhnB,EAAM,OACvB,QAAW8lB,EAAO,OAEDK,KAAK6I,MAAMlJ,EAAQ,OACzBkhF,EACDloF,EAAAkI,QAAOhnB,EADNgnG,EACY,cACA,WACZlhF,EAAO,QAEDK,KAAK6I,MAAMlJ,EAAQ,OACzBkhF,EACDloF,EAAAkI,QAAOhnB,EADNgnG,EACY,cACA,eAEhB,UACX,IAAC,CAnCoB,GAmCpBF,SAnCQC,yCAAY,8DAAZA,EAAYz9E,MAAA,IAAZy9E,CAAY,+PCLzB,IAAAx/F,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAGAg0C,GADAh0C,EAAA,OACAA,EAAA,QAKAi7G,GAJAj7G,EAAA,KAIAA,EAAA,WACAA,EAAA,MACAA,EAAA,kFAgF4BuK,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,2CAKKjF,EAAAmF,iBAAA,GAASnF,EAAAkF,+GAHVlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,IAAAmjG,GAAA3wG,EAAA05C,yBAGC15C,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4kG,6BAGT3wG,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,QAACnF,EAAAiF,yBAAA,aASIjF,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACVlF,EAAAmF,iBAAA,6HALGnF,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAAK,EAAA0nG,aAGA5wG,CAHwB,OAAA2wG,EAGxB3wG,CAFY,WAEZA,CADc,yCAKtBA,EAAAwY,kCAAA,GAA+BxY,EAAAmF,iBAAA,yFAAAnF,EAAAoF,sBAAApF,EAAA+L,4BAAA4kG,6BA5BvC3wG,EAAAiF,yBAAA,YAKIjF,EAAAwY,kCAAA,MAuBIxY,EAtBA4J,qBAAA,EAAAinG,EAAA,sBAsBA7wG,CAtBqC,EAAA8wG,EAAA,sBAsBrC9wG,CAbuC,EAAA+wG,EAAA,2DAiB/C/wG,EAAAkF,+HA3BkBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAAK,EAAAsB,KAAAmmG,IACK3wG,EAAAoF,sBAAApF,EAAA6I,qBAAA,uBASA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,mDAtCvB7I,EAPJiF,yBAAA,WAOIjF,CADH,YAIOA,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,SAOIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,SAOIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAonG,EAAA,cAiCJhxG,EAAAkF,gFArDQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAglG,EAAAjiB,UAAA,uBAGAhvF,EAAAoF,oBAAA,GAAApF,EAAA29F,qBAAA,yBAAAz0F,EAAAy4E,OAAAsvB,EAAAzmG,MAAA,sBAMAxK,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA4rG,EAAAzmG,KAAA,KAGAxK,EAAAoF,sBAAApF,EAAA29F,qBAAA,0BAAAz0F,EAAAy4E,OAAAsvB,EAAAliB,SAAA,uCAMA/uF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA4rG,EAAAliB,QAAA,KAIgB/uF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAooG,EAAA52G,gCArC5B2F,EAAAiF,yBAAA,oCAKIjF,EAAA4J,qBAAA,EAAAsnG,EAAA,6CAgEAlxG,EAAAkB,oBAAA,YACJlB,EAAAkF,kEA9D6ClF,EAAAoF,sBAEnDpF,EAFmD6I,qBAAA,kBAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAioG,eAEnDnxG,CAAA,uBAAAkJ,EAAA8a,qCAiFchkB,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,iCACJnF,EAAAkF,oEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,YAAA2E,EAAAhK,EAAAwN,sBAAA,IAAAtE,EAAAioG,gBAAA,KAAAnnG,EAAApN,SAAA,0EAjGRoD,EAPRiF,yBAAA,UAOQjF,CAJP,UAIOA,CADH,WACoBA,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBACxBlF,EAAAiF,yBAAA,cAAuBjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAk7F,MAAgB,EAAK,GACxCpkG,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAA4J,qBAAA,EAAAwnG,EAAA,mEAuEApxG,EAAAiF,yBAAA,WAMIjF,EAHAkB,oBAAA,YAGAlB,CADO,aAIPA,EAAAiF,yBAAA,gDAIIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAkK,OAAArZ,KAAAgP,GAAmB,GAJxC/I,EAAAkF,yBAQAlF,EAAAiF,yBAAA,aAGIjF,EAAA4J,qBAAA,GAAAynG,EAAA,8CAGArxG,EAAAmF,iBAAA,mCAGZnF,EAFQkF,wBAERlF,kFA/FSA,EAAAoF,oBAAA,GAAuCpF,EAAvC6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAAioG,gBAAA,KAAAv7F,EAAAhZ,OAAuCoD,CAAA,WAAAs9B,GAiFpCt9B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAtE,EAAAkK,SAQyBpT,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAo9C,EAAAjmD,EAAAwN,sBAAA,KAAAtE,EAAAkK,SAAA,KAAA6yC,EAAArpD,QAGzBoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA+yD,EAAAp4D,EAAAwN,sBAAA,MAAAtE,EAAAooG,OAAA,KAAAl5C,EAAAx7D,OAAA,mEAIZoD,EAAAiF,yBAAA,eAOIjF,EAHA4I,qBAAA,uBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAaF,EAAAqoG,UAAS,EAGtBvxG,CAHuB,wBAAAA,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACTF,EAAAqoG,UAAS,EAEvBvxG,CAFwB,qBAAAA,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACbF,EAAAsoG,QAAO,EAClBxxG,CADmB,sBAAAA,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACPF,EAAAsoG,QAAO,GACtBxxG,EAAAkF,mDAKOlF,EAHJiF,yBAAA,WAGIjF,CADH,YAEOA,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2CAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,OAAA6D,EAAAkK,OAAArD,WAAA,yBArJpB,IAAM0hG,EAAY,CACdz3G,QAAS,8BACT03G,QAAS,kCACTC,IAAK,8BAELp3G,IAAG,2BACHN,KAAI,4BACJsxF,KAAI,kCACJ/J,MAAK,gCACL9jF,MAAK,+BAGHk0G,EAAa,CACf,OACA,UACA,QACA,SACA,OACA,MACA,QAGJr6G,wBAsImC,eAAAs6G,EAAtBnI,EAAsB,SAAA9+D,GA4B/B,SAAA8+D,EACYhxG,EACAo5G,EACAC,EACAt5G,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA8xG,IAElC7wG,EAAAC,EAAAlB,KAAA8xG,IALQhxG,OACAG,EAAAi5G,QACAj5G,EAAAk5G,UACAl5G,EAAAJ,YA/BII,EAAAurG,MAAO,EACPvrG,EAAA8oF,OAAS8vB,EACT54G,EAAA+3G,aAAeF,EAAAsB,qBACfn5G,EAAAua,OAAS,IAAIpC,EAAAuB,gBAAwB,IACrC1Z,EAAAy4G,KAAO,IAAItgG,EAAAuB,gBAA+B,IAC1C1Z,EAAAs4G,iBAAgBngG,EAAA2I,eAAc,CAC1C9gB,EAAKua,OACLva,EAAKy4G,OACN52G,QACC1C,EAAAkb,KAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAEqiB,EAACxgB,EAAA,GAAM,OAAAA,EAAA,GACJ0T,OACD,SAACxY,GAAC,OACEA,EAAE4P,KAAKogB,cAAcptB,SAAS0iB,EAAE0K,gBAChChwB,EAAEm0F,QAAQnkE,cAAcptB,SAAS0iB,EAAE0K,gBACnC,GAAAjvB,OAAGf,EAAEP,MAAOuwB,cAAcptB,SAAS0iB,EAAE0K,cAAc,EAC1D,IAIO/xB,EAAA04G,QAAU,kBACtB14G,EAAKuC,QAAQ,OAAQ,kBAAOvC,EAAKurG,MAAO,CAAI,EAAG,IAAK,EACxCvrG,EAAA24G,MAAQ,kBAAM34G,EAAK6C,aAAa,OAAO,EAAC7C,CAaxD,CAACG,SAAA0wG,EAAA9+D,GAAAlzC,EAAAgyG,EAAA,EAAAzwG,IAAA,eAAAiE,IAXD,WACI,QAAStF,KAAKa,UAAUyE,IAAI,oBAChC,GAAC,CAAAjE,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAWM,SAAAC,IAAA,IAAAmD,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DjD,KAAK6S,aACD,UACA7S,KAAKc,KAAK2W,gBAAgB1E,UAAU,WAChC3Q,QAAQO,IAAI,WAAYmC,EAAKhE,KAAKixB,QAAQ,kBAC1CjtB,EAAKo1G,MAAMG,UAAUv1G,EAAKhE,KAAKixB,QAAQ,iBAC3C,IAEJ/xB,KAAK6S,aACD,OACA7S,KAAKk6G,MAAM33G,QAAQwQ,UAAU,SAAC+a,GAC1B,IAAI4rF,EAAO50G,EAAK40G,KAAKvhG,WAEjBuhG,EAAK10G,QACJF,EAAKjE,UAAUyE,IAAI,mBAAqB,MAEzCo0G,EAAKv9D,OAAO,EAAG,GACnBr3C,EAAK40G,KAAKv3G,KAAI,GAAA4B,OAAAqe,EAAKs3F,GAAI,CAAE5rF,IAC7B,IAEJ9tB,KAAK6S,aACD,SACA7S,KAAKm6G,QAAQjoF,OACT,CAAC,UAAW,aACZ,kBAAOptB,EAAK0nG,MAAQ1nG,EAAK0nG,IAAI,IAGrCpqG,QAAQO,IAAI,WAAY3C,KAAKc,KAAKixB,QAAQ,kBAC1C/xB,KAAKk6G,MAAMG,UAAUr6G,KAAKc,KAAKixB,QAAQ,kBAAkB,wBAAA9vB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5D,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,OAAAC,MAEM,SAAKma,GACR,MACoB,iBAATA,GACPu+F,EAAW9qF,KAAK,SAACH,GAAK,OAAKtT,EAAK67E,WAAWvoE,EAAM,GAE1C,OACAtT,aAAgBsN,OAChB,SAEJ,QACX,GAAC,CAAA1nB,IAAA,YAAAC,MAEM,SAAU0B,EAAWyY,GACxB,OAAOA,GAAM27E,SACjB,KAzDC,IAAA71F,CAyDA,CAnF8B,CAAQswC,EAAA1pC,cAAY8xG,SAA1CnI,0CAAqB1pG,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAqtF,sBAAAztF,EAAAC,4BAAAK,EAAAk/E,gBAAAx/E,EAAAC,4BAAAO,EAAAL,iBAAA,kDAArBupG,EAAqBhpG,UAAA,oBAAAqW,OAAA,CAAAqtF,KAAA,QAAAzjG,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,4xEAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAZ1BhB,EAvHA4J,qBAAA,EAAAsoG,EAAA,cAuHAlyG,CApHC,EAAAmyG,EAAA,eAoHDnyG,CADC,EAAAoyG,EAAA,yBAAApyG,EAAA2c,wCApHI3c,EAAA6I,qBAAA,OAAA5H,EAAAmjG,MA8GApkG,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAq/E,kBAmBAopB,CAAsB,uICzKnC,IAAAnhF,EAAA9yB,EAAA,iBAEA8B,eAGyB,eAAA86G,EAAZC,EAAY,kBAAA56G,EAAA,SAAA46G,IAAA36G,EAAAC,KAAA06G,EAAA,IAAAr5G,IAAA,YAAAC,eAOJ0D,GAAwC,IAAxB21G,EAAA/1G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACzBkN,KAAW6e,EAAA+jB,gBAAe,CAAE9T,MAAO5I,KAAK6I,MAAM77B,EAAS,IAAK87B,QAAS97B,EAAS,KAClF,OAAI21G,IACA7oG,EAAWA,EAAS81B,QAAQ,OAAQ,KAAKA,QAAQ,SAAU,KAAKA,QAAQ,MAAO,KAE5E91B,CACX,IAAC,CAboB,GAapB2oG,SAbQC,yCAAY,8DAAZA,EAAYv/E,MAAA,IAAZu/E,CAAY,kJCJzB/6G,YAGsB,eAAAi7G,EAATC,EAAS,kBAAA/6G,EAAA,SAAA+6G,IAAA96G,EAAAC,KAAA66G,EAAA,IAAAx5G,IAAA,YAAAC,eAODA,GACb,OAAOA,EAAMuzD,QADejwD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAEjD,IAAC,CATiB,GASjBg2G,SATQC,yCAAS,6DAATA,EAAS1/E,MAAA,IAAT0/E,CAAS,gJCJtBh9G,EAAA,mHAqBYuK,EAVJiF,yBAAA,UAUIjF,CADH,WACuBA,EAAAmF,iBAAA,GAAqBnF,EAAAkF,yBACzClF,EAAAiF,yBAAA,cAAajF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,QAAO,GACzBU,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+CAPIA,EALAiX,sBAAA,mBAAA/N,EAAAqpF,OAAA/nF,OAAAtB,EAAAqpF,OAAA/nF,KAKAxK,CALwD,6BAAAkJ,EAAAqpF,OAAA/nF,OAAAtB,EAAAqpF,OAAA/nF,KAKxDxK,CAJkE,sBAAAkJ,EAAAqpF,OAAA/nF,KAIlExK,CAH2C,gCAAAkJ,EAAAqpF,OAAA/nF,KAG3CxK,CAFqD,qBAAAkJ,EAAAqpF,OAAA/nF,KAErDxK,CAD0C,+BAAAkJ,EAAAqpF,OAAA/nF,MAItBxK,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA7C,EAAAqpF,OAAA,KAAArpF,EAAAqpF,OAAAl0E,UAbhC9mB,wBA4BkC,eAAAm7G,EAArBC,EAAqB,WAYoB,OAAAj7G,EAAlD,SAAAi7G,EAAoBl6G,GAA0Bd,EAAAC,KAAA+6G,GAA1B/6G,KAAAa,WAA6B,EAAC,EAAAQ,IAAA,aAAAiE,IAXlD,WAAqB,IAAA01G,EACjB,QACgB,QAAZA,EAACh7G,KAAK26F,cAAM,IAAAqgB,GAAXA,EAAav0F,UACd8tC,aAAa3sD,QAAQ,uBAAyB5H,KAAK26F,OAAOtnF,EAElE,GAAC,CAAAhS,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,qBAC9B,GAAC,CAAAjE,IAAA,QAAAC,MAIM,WAAK,IAAA25G,EACR1mD,aAAatwD,QAAQ,qBAAgC,QAAXg3G,EAAAj7G,KAAK26F,cAAM,IAAAsgB,OAAA,EAAXA,EAAa5nG,KAAM,GACjE,IAAC,CAhB6B,GAgB7BynG,SAhBQC,0CAAqB3yG,EAAAC,4BAAAC,EAAAC,iBAAA,kDAArBwyG,EAAqBjyG,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,0PAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAzB1BhB,EAAA4J,qBAAA,EAAAkpG,EAAA,mBAQK9yG,EAAA6I,qBAAA,QAAA5H,EAAA8xG,2LAiBAJ,CAAqB,2NCpClC,IAAA36G,EAAAvC,EAAA,MACAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,UAEAA,EAAA,kFAKQuK,EAAAiF,yBAAA,WAIIjF,EAAAmF,iBAAA,6DACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,WAKIjF,EAAAkB,oBAAA,mBACJlB,EAAAkF,gCADiBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBAdzBtR,yBA8BoC,eAAAy7G,EAAvBC,EAAuB,SAAAz6G,GAOhC,SAAAy6G,EACYv6G,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAq7G,IAElCp6G,EAAAC,EAAAlB,KAAAq7G,IAHQv6G,OACAG,EAAAJ,YAA0BI,CAGtC,CAACG,SAAAi6G,EAAAz6G,GAAAd,EAAAu7G,EAAA,EAAAh6G,IAAA,SAAAiE,IATD,WACI,SAAOjF,EAAAi7G,WACX,GAAC,CAAAj6G,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KASM,SAAAC,IAAA,IAAAmD,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAnC,KAAKsiB,SAAU,EAAKrgB,EAAAE,KAAA,EACdnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EACvDnC,KAAKa,UAAUgC,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClEjD,KAAK42B,SACD,YACA,aACQ,EAACv2B,EAAA2nG,gBAAe,EAAC3nG,EAAAgD,WACrByB,EAAKwd,SAAU,EACfxd,EAAK40B,cAAc,aACvB,EACA,KACF,wBAAAz3B,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACL,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,MAtBA,IAAArD,CAsBA,CA3B+B,CAAQjB,EAAA6H,cAAYizG,SAA3CC,0CAAsBjzG,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAtB8yG,EAAsBvyG,UAAA,qBAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,ieAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GArB3BhB,EANA4J,qBAAA,EAAAupG,EAAA,YAMAnzG,CAHC,EAAAozG,EAAA,mBAFIpzG,EAAA6I,qBAAA,QAAA5H,EAAAoyG,QAMArzG,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAiZ,ulCAoBA+4F,CAAuB,mKCpCpCx9G,EAAA,WACAK,EAAAL,EAAA,sFAuBoBuK,EAVRiF,yBAAA,QAUQjF,CAFP,UAEOA,CADiD,WAI7CA,EAAAkB,oBAAA,gBACJlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAAoBjF,EAAAmF,iBAAA,GAE5BnF,EAF2CkF,wBAE3ClF,6BAVIA,EAAA6I,qBAAA,OAAAyqG,EAAA3gB,KAAA3yF,EAAA05C,yBAMkC15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAyqG,EAAArtF,MAEVjmB,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAunG,EAAAnoG,OA1BxC5T,uBAyCiC,eAAAg8G,EAApBC,EAAoB,WAazB,OAAA97G,EAHJ,SAAA87G,EACuCj1E,EAC3B9lC,GAA0B,IAAAI,EAAAjB,KAAAD,EAAAC,KAAA47G,GADC57G,KAAA2mC,QAC3B3mC,KAAAa,YANIb,KAAA0H,MAAQ,WAAK,IAAAg+F,EACf,QAAVA,EAAAzkG,EAAK0lC,aAAK,IAAA++D,GAAVA,EAAYh+F,OAChB,CAKG,EAAC,EAAArG,IAAA,QAAAiE,eAVA,OAAOtF,KAAKa,UAAUyE,IAAI,aAAe,EAC7C,IAAC,CAJ4B,GAI5Bq2G,SAJQC,0CAAoBxzG,EAAAC,4BAWjBnK,EAAAynG,mBAAiBv9F,EAAAC,4BAAAC,EAAAC,iBAAA,kDAXpBqzG,EAAoB9yG,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBAhCEoiB,UAAAC,MAAAC,EAAA,ywBAN3BtnB,EAAAiF,yBAAA,WAEIjF,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GAGZU,EADJiF,yBAAA,UACIjF,CADkD,gBACvBA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KACJvlB,EADqCkF,wBACrClF,GACAA,EAAA4J,qBAAA,EAAA6pG,EAAA,WAkBJzzG,EAAAkF,gCAfyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAyxF,uRA2BpB8gB,CAAoB,6MCtCrBxzG,EAAAiF,yBAAA,OAIIjF,EAAAmF,iBAAA,GACAnF,EAAAg+F,uBAAA,GACJh+F,EAAAkF,iEAJIlF,EAAA29F,sBAAA,MAAA57E,EAAAkE,KAAA,KAAAlE,EAAAkE,KAAAkwD,QAAAp0D,EAAA+7E,WAEA99F,EAAAoF,sBAAApF,EAAAqF,6BAAA,UAAA0c,EAAAkE,KAAA,KAAAlE,EAAAkE,KAAA5H,QAAA,+BAGJre,EAAAkB,oBAAA,gFAGIlB,EAAA6I,qBAAA,MAAA7I,EAAAiM,sBAAA,IAAA8V,EAAAkE,KAAA6hE,IAAA,YAAA9nF,EAAA05C,0BAdhBniD,gBA0B0B,eAAAm8G,EAAbxK,EAAaxxG,EA1B1B,SAAAwxG,IAAAvxG,EAAAC,KAAAsxG,GA2BoBtxG,KAAAkmG,UAAoB,mBAGvC4V,SAJYxK,yCAAa,kDAAbA,EAAaxoG,UAAA,wBAAAqW,OAAA,CAAA+mF,UAAA,YAAA73E,KAAA,QAAA83E,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,yKAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCAvBlBhB,EAAAiF,yBAAA,WAQIjF,EAPA4J,qBAAA,EAAA+pG,EAAA,UAOA3zG,CAJC,EAAA4zG,EAAA,aASL5zG,EAAAkF,gCAXSlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAglB,MAAA,QAAAhlB,EAAAglB,KAAAzb,MAQAxK,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAglB,MAAA,QAAAhlB,EAAAglB,KAAAzb,gKAaJ0+F,CAAa,uLCjBVlpG,EAAAkB,oBAAA,4DAIIlB,EAAA6I,qBAAA,SAAAgrG,EAAAvuG,KAAAuuG,6BAVR7zG,EAAAiF,yBAAA,WAMIjF,EAAA4J,qBAAA,EAAAkqG,EAAA,aAMJ9zG,EAAAkF,+EARIlF,EAAAkxD,sBAAA,+BAAAhoD,EAAA2sB,OAAA,MAKK71B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAgrG,0BAQL7zG,EAJJiF,yBAAA,UAIIjF,CADH,iBAC8BA,EAAAmF,iBAAA,yBAAmBnF,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,eACPnF,EADgBkF,wBAChBlF,iEACAA,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA2sB,OAAA3sB,EAAA2sB,OAA2B,EAAC,GAE5B71B,EAAAiF,yBAAA,iBAA2BjF,EAAAmF,iBAAA,kBAC/BnF,EAD2CkF,wBAC3ClF,6CAJIA,EAAA6I,qBAAA,eAAAK,EAAA2sB,sEAKJ71B,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAA2sB,OAAA3sB,EAAA2sB,OAA2B,EAAC,GAE5B71B,EAAAiF,yBAAA,iBAA2BjF,EAAAmF,iBAAA,mBAC/BnF,EAD4CkF,wBAC5ClF,6CAJIA,EAAA6I,qBAAA,WAAAK,EAAA2sB,SAAA,MAAA3sB,EAAA8Y,OAAA,KAAA9Y,EAAA8Y,OAAAplB,QAAA,4BASAoD,EAAAkB,oBAAA,iEAEIlB,EAAAiX,sBAAA,eAAA/N,EAAA2sB,SAAA8oE,6BANR3+F,EAAAiF,yBAAA,YAIIjF,EAAA4J,qBAAA,EAAAmqG,EAAA,iBAMJ/zG,EAAAkF,iEAHwBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA8Y,SAjDpCzqB,yBAqEmC,eAAAy8G,EAAtBxK,EAAsB9xG,EArEnC,SAAA8xG,IAAA7xG,EAAAC,KAAA4xG,GAsEoB5xG,KAAAoqB,OAAmB,GAE5BpqB,KAAAi+B,OAAS,IACnBm+E,SAJYxK,yCAAsB,kDAAtBA,EAAsB9oG,UAAA,qBAAAqW,OAAA,CAAAiL,OAAA,UAAAnhB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,grDAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlE3BhB,EAAAiF,yBAAA,WAuCIjF,EAtCA4J,qBAAA,EAAAqqG,EAAA,YAsCAj0G,CAjCC,EAAAk0G,EAAA,YAiCDl0G,CAtBC,EAAAm0G,EAAA,eAsBDn0G,CAZC,EAAAo0G,EAAA,eAYDp0G,CAHC,EAAAq0G,EAAA,aAcLr0G,EAAAkF,gCA9C0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAA+gB,QAYjBhiB,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA5H,EAAA+gB,QAAA/gB,EAAA+gB,OAAAplB,SAOAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAA+gB,OAAA,KAAA/gB,EAAA+gB,OAAAplB,QASAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAA+gB,OAAA,KAAA/gB,EAAA+gB,OAAAplB,QASAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAA+gB,OAAA,KAAA/gB,EAAA+gB,OAAAplB,mNAyBJ4sG,CAAsB,+ICtEnC,IAAA9jG,EAAAjQ,EAAA,kDAEA8B,uBAoBiC,eAAA+8G,EAApBC,EAAoB78G,EAC7B,SAAA68G,EAA4CjvG,GAAW3N,EAAAC,KAAA28G,GAAX38G,KAAA0N,KAAc,GAACgvG,SADlDC,0CAAoBv0G,EAAAC,4BACTyF,EAAAg5B,iBAAe,kDAD1B61E,EAAoB7zG,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,uMAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjBzBhB,EAAAiF,yBAAA,WACIjF,EAAAkB,oBAAA,WAUIlB,EANJiF,yBAAA,aAMIjF,CADH,cACaA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,YAVQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,MAAA5H,EAAAqE,IAAAtF,EAAA05C,yFAcH66D,CAAoB,6PCvBjC9+G,EAAA,UAQAyC,EAAAzC,EAAA,OASAub,GAFAvb,EAAA,OACAA,EAAA,MACAA,EAAA,QACAuC,EAAAvC,EAAA,MACAqqF,EAAArqF,EAAA,uMA6DQuK,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACJlB,EAAAkF,gCADiBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,yCAEjB7I,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,YAMAlB,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,qCAERnF,EADIkF,wBACJlF,2CAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,IAAAtE,EAAAsrG,2BAAA,mEAwDQx0G,EAJJiF,yBAAA,UAIIjF,CADH,eAGOA,EAAA4I,qBAAA,uBAAAwqB,EAAApzB,EAAAgJ,wBAAA0Z,GAAAvN,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAASD,SAAAurG,SAAArhF,GAAcpzB,EAAAoJ,sBAAAF,EAAAwrG,oBAAA,MAGnB10G,EADJiF,yBAAA,WACIjF,CAD8B,SACzBA,EAAAmF,iBAAA,GAA0BnF,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAKhBnF,EAHYkF,wBAGZlF,iCAPiBA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAqnB,EAAAuhF,WAAAxpG,MAEDnL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAkc,EAAAuhF,WAAAC,OAAA,WAAAxhF,EAAAuhF,WAAAE,UAAA,mEA/BxB70G,EAAAwY,kCAAA,GAIQxY,EAHJiF,yBAAA,WAGIjF,CADH,WAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAwrG,oBAAA,MAGA10G,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,WAGIjF,EAAA4J,qBAAA,EAAAkrG,EAAA,2CAiBJ90G,EAAAkF,uGAhCQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,aAAA6D,EAAAwrG,oBAAA93G,QAAA,UAiBiBoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAA+0G,sBAAA,IAAA7rG,EAAAwrG,oBAAA,QAlFzC,SAAS3vB,EAAiBC,GACtB,OAAOA,GAAWp1D,KAAKq1D,GAAK,IAChC,CAEA1tF,sBAgHiC,eAAAy9G,EAApBC,EAAoB,SAAAz8G,GAwD7B,SAAAy8G,EACYC,EACAhkG,EACAxY,GAAyB,IAAAG,EAAAlB,SAAAC,KAAAq9G,IAEjCp8G,EAAAC,EAAAlB,KAAAq9G,IAJQC,eACAr8G,EAAAqY,SACArY,EAAAH,OAjDIG,EAAAs8G,aAAuB,GAQhCt8G,EAAAu8G,iBAAqC,UACrCv8G,EAAA67G,oBAA6B,GAC7B77G,EAAAw8G,qBAA4B,KAG5Bx8G,EAAAy8G,gBAAgD,GAEhDz8G,EAAA08G,cAA+B,KAC/B18G,EAAA28G,eAAgC,KAChC38G,EAAA27G,0BAAoC,GACpC37G,EAAA48G,oBAA8B,GAC9B58G,EAAAuxD,YAAwC,KAE/BvxD,EAAA6U,UAAY7U,EAAKH,KAAK4W,cACtBzW,EAAA4U,SAAW5U,EAAKH,KAAK2W,gBACrBxW,EAAAyU,YAAc,SAAC4I,GAC3Brd,EAAKH,KAAK+U,SAAWyI,EACrBrd,EAAK68G,wBACT,EAEgB78G,EAAA6gB,UAAS1I,EAAA2I,eAAc,CACnC9gB,EAAK4U,SACL5U,EAAKqY,OAAO0I,UACblf,QACC1C,EAAAob,QAAO,SAAAvV,GAAG,QAAHgc,EAAAhc,EAAA,GAAG,EAAS,MACnB7F,EAAAkb,KAAI,SAAA4G,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAK,OACL,CACI7O,GAAIpS,EAAKH,KAAK+U,SAASxC,GACvBE,KAAM,eACTxP,OAAAqe,EACEnhB,EAAKH,KAAKuhB,kBALRF,EAAA,KAK8B,IAGpClhB,EAAA88G,cAA0C,GAAG98G,CAWpD,CAACG,SAAAi8G,EAAAz8G,GAAAd,EAAAu9G,EAAA,EAAAh8G,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAED,SAAAC,IAAA,IAAAq8G,EAAAl5G,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAAnC,KAAKsiB,SAAU,EAAKrgB,EAAAE,KAAA,EACdnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAC/D,OAAAjD,KAAK0V,YAAY1V,KAAKc,KAAK+U,UACvB7V,KAAKi+G,qBAAoBj+G,KAAKwyD,YAAcxyD,KAAKi+G,oBAC/CD,EAAe,SAAfA,IACFl5G,EAAKo5G,mBACL14D,SAAS47C,oBAAoB,QAAS4c,EAC1C,EACAx4D,SAAS8hB,iBAAiB,QAAS02C,GAAc/7G,EAAAE,KAAA,EAC3CnC,KAAKm+G,eAAc,wBAAAl8G,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5B,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,cAAAC,MAAA,eAAA88G,EAAA58G,EAAAC,IAAAC,KAED,SAAAwD,EAAkBikG,GAAqB,IAAAkV,EAAAC,EAAA94B,EAAA,OAAA/jF,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,WAC/BgnG,EAAOtiF,SAAUsiF,EAAOz2C,QAAO,CAAAttD,EAAAjD,KAAA,QAAAiD,SAAAjD,KAAA,EACzBnC,KAAKu+G,oBAAmB,OAAAn5G,SAAAjD,KAAA,EACxBnC,KAAKw+G,aAAY,YAEvBrV,EAAOsV,QAAUz+G,KAAKy+G,QAAUzrB,aAAW,CAAA5tF,EAAAjD,KAAA,SACrCm8G,SAAe,CAAEvyE,EAAG/rC,KAAK0+G,cAAczW,cAAc3mG,OAAO8D,EAAAjD,KAAA,EAE7C,QAF6Ck8G,EAExDrrB,mBAAW,IAAAqrB,OAAA,EAAXA,EAAaM,SAASC,iBAAiBC,aACzCP,GACH,QAHC94B,EAASpgF,EAAAvB,MAIDmB,QAAQhF,KAAK68G,SAASr3B,EAAU,IAAI,QAEtDxlF,KAAK8+G,mBACL9+G,KAAKsiB,SAAU,EAAM,yBAAAld,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACxB,gBAAA++G,EAAApiG,GAAA,OAAAyhG,EAAAz5G,MAAA3E,KAAA4E,UAAA,EAjBA,IAiBA,CAAAvD,IAAA,kBAAAC,MAEM,WAAe,IAAA09G,EAAA94G,EAAAlG,KACD,QAAjBg/G,EAAAh/G,KAAKi/G,oBAAY,IAAAD,GAAjBA,EAAmBE,YAAY,QAAS,SAACx5G,EAAeme,GACpD,IAAMs7F,EAAej5G,EAAKw3G,gBAAgBh4G,EAAS2N,IAC/C8rG,GAAcA,EAAan5F,SAASnC,EAC5C,EACJ,GAAC,CAAAxiB,IAAA,eAAAC,MAEO,WAAY,IAAAwF,EAAA9G,KAChB,GAAKA,KAAKs9G,aAAa8B,UAAc98G,OAAe0wF,YAApD,CAIA,IAAMqsB,EAAoB,CACtBp6D,QAASO,SAASk0C,eAAe,gBACjCnnC,OAAQ,CAAE+sD,IAAKt/G,KAAK29G,cAAe4B,IAAKv/G,KAAK49G,gBAC7Ch3F,KAAM5mB,KAAKu9G,cAAgB,GAC3BiC,QAAS,IAGTx/G,KAAKs9G,aAAamC,cAAgBv3B,EAAA5jE,WAAW+tE,eAC7C/xF,EAAAqC,KAAI,cAAe,yBACnB3C,KAAK0/G,cAAgB,IAAI1sB,YAAY2sB,QAAQC,eACzCP,KAGJA,EAAaQ,YAAc7/G,KAAKs9G,aAAawC,UAC7C19G,QAAQO,IAAI,gBAAiB08G,IAAY,EACzC/+G,EAAAqC,KAAI,cAAe,oBACnB3C,KAAK0/G,cAAgB,IAAI1sB,YAAY2sB,QAAQI,WACzCV,IAGHr/G,KAAK0/G,eASV1/G,KAAKi/G,aAAe,IAAIjsB,YAAYgtB,YAAY,CAC5CL,QAAS3/G,KAAK0/G,gBAElB1/G,KAAKigH,aAAejgH,KAAK0/G,cAAcQ,SACvClgH,KAAKmgH,iBACLngH,KAAKogH,uBACLpgH,KAAK8+G,mBACL9+G,KAAK89G,2BAfD,EAAAx9G,EAAAqC,KACI,cACA,+CACAsC,EACA,OA1BR,MAFIjF,KAAKwD,QAAQ,OAAQ,kBAAMsD,EAAKq3G,cAAc,EAAE,IAwCxD,GAAC,CAAA98G,IAAA,iBAAAC,MAEM,WACH,IAAM++G,EACFrgH,KAAKs9G,aAAamC,cAAgBv3B,EAAA5jE,WAAW+tE,WACvC,IAAIW,YAAYstB,WAAWC,mBAC3B,IAAIvtB,YAAYstB,WAAWE,eACvBxgH,KAAKs9G,aAAawC,WAEhC9/G,KAAKygH,mBAAqB,IAAIztB,YAAY2rB,SAAS+B,kBAC/CL,GAKJrgH,KAAK2gH,oBACD,IAAI3tB,YAAYstB,WAAWM,mBAJG,CAC9BC,YAAa7gH,KAAKi/G,cAM1B,GAAC,CAAA59G,IAAA,mBAAAC,MAAA,eAAAw/G,EAAAt/G,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAA+6G,EAAAC,EAAAC,EAAAprG,EAAAqrG,EAAAC,EAAAC,EAAA,OAAA3/G,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAAAgE,UAAAhE,KAAA,EACqC,QADrC4+G,EACoB/gH,KAAKi/G,oBAAY,IAAA8B,OAAA,EAAjBA,EAAmBM,cAAa,OAAjDxrG,OACAqrG,EACM,OAFNrrG,EAAQ1P,GAAAtC,OAEY,QAAdm9G,EAARnrG,EAAUyrG,oBAAY,IAAAN,GAAQ,QAARA,EAAtBA,EAAwBO,cAAM,IAAAP,GAAc,QAAdA,EAA9BA,EAAgCQ,oBAAY,IAAAR,OAAA,EAA5CA,EAA8C1/G,MAC5C6/G,EAAQD,GAAcv6G,MAAM,OAAO2U,IAAI,SAACmmG,IAAI,OAAKA,GAAK96G,MAAM,IAAI,GACtEvE,QAAQO,IAAI,SAAUw+G,EAAOtrG,GAC7B7V,KAAK+9G,cACDoD,GAAO9hF,OAAO,SAACqiF,GAAO15E,IAAkB,IAAApV,EAAA3Q,EAAA+lB,GAAA,GACpC05E,UADwB9uF,EAAA,IAAOA,EAAA,GAExB8uF,EACX,EAAG,KAAO,GAAGv7G,GAAAhE,KAAA,EACkC,QADlC8+G,EACiBjhH,KAAKi/G,oBAAY,IAAAgC,OAAA,EAAjBA,EAAmBU,WAAU,QAAzDP,EAAWj7G,GAAAtC,OACE7D,KAAK+9G,eAEpB/9G,KAAKsZ,OAAOo2C,SADK1vD,KAAK+9G,cAAcqD,IAEvC,yBAAAj7G,GAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACJ,gBAAA8+G,IAAA,OAAAgC,EAAAn8G,MAAA3E,KAAA4E,UAAA,EAlBA,IAkBA,CAAAvD,IAAA,uBAAAC,MAEM,WAAoB,IAAAsgH,EAAAC,EAAAniE,EAAA1/C,KACjB8hH,EAAuBt8D,SAASC,cAAc,OACpD,IAAIutC,YAAY+uB,cAAcD,EAAsB9hH,KAAKi/G,cACrDj/G,KAAKs9G,aAAamC,cAAgBv3B,EAAA5jE,WAAW+tE,WAC7CryF,KAAKigH,aAAav8F,SACdyvE,OAAOrwE,KAAKk/F,gBAAgBC,WAC9BhpF,KAAK6oF,GAEU9hH,KAAK0/G,cAAcQ,SAC3BgC,WAAW,CAChBC,MAAO,kBAAML,CAAoB,EACjCM,SAAU,WAAO,IAIR,QAAjBR,EAAA5hH,KAAKi/G,oBAAY,IAAA2C,GAAjBA,EAAmB1C,YAAY,mBAAoB,SAACr7F,GAChD,IAAMw+F,EAAiB3iE,EAAK5+C,KAAKgV,UAAUoZ,KAAK,SAACrZ,GAAY,IAAAysG,EACzDzsG,EAAStC,KAAKyf,cACI,QADSsvF,EACvBz+F,EAAEy9F,oBAAY,IAAAgB,GAAdA,EAAgB/uG,KAAKyf,cACzB0sB,EAAKhqC,YAAY2sG,EACrB,EACJ,GACiB,QAAjBR,EAAA7hH,KAAKi/G,oBAAY,IAAA4C,GAAjBA,EAAmB3C,YAAY,gBAAiB,SAACr7F,GACxCA,GAAM67B,EAAKq+D,eAEhBr+D,EAAKpmC,OAAOo2C,SADahQ,EAAKq+D,cAAcl6F,GAEhD,EACJ,GAAC,CAAAxiB,IAAA,WAAAC,MAEM,WAAQ,IAAAihH,EAAAjkC,EAAAt+E,KAEA,QAAXuiH,EAAAvvB,mBAAW,IAAAuvB,GAAXA,EAAa5D,SAASC,iBAAiBC,aADlB,CAAE9yE,EAAG/rC,KAAK0+G,cAAczW,cAAc3mG,QACOq0E,KAC9D,SAAC6P,GACGpjF,QAAQO,IACJ,aACA6iF,EACAlH,EAAK2hC,aAAauC,WAEtBlkC,EAAKw+B,oBAAsBt3B,CAC/B,EAER,GAAC,CAAAnkF,IAAA,mBAAAC,MAAA,eAAAmhH,EAAAjhH,EAAAC,IAAAC,KAEO,SAAAmF,IAAA,IAAA63E,EAAA1+E,KAAA,OAAAyB,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,UACE,gBAAiB8qF,UAAS,CAAAlmF,EAAA5E,KAAA,QAC5B,SAAA7B,EAAAqC,KACI,cACA,yCACAsC,EACA,QACF8B,EAAAzD,OAAA,SACKtD,KAAK89G,0BAAwB,WAEpC99G,KAAKwyD,YAAW,CAAAzrD,EAAA5E,KAAA,SAChBC,eAAQO,IAAI,4BAA6B3C,KAAKwyD,aAC9CxyD,KAAK29G,cAAgB39G,KAAKwyD,YAAYc,SACtCtzD,KAAK49G,eAAiB59G,KAAKwyD,YAAYe,UAAUxsD,EAAAzD,OAAA,kBAGjD2pF,UAAUy1B,YAAYC,cAClB,SAAC3/G,GAAC,OAAK07E,EAAKkkC,mBAAmB5/G,EAAE,EACjC,SAACA,GAAC,OAAK07E,EAAKmkC,wBAAwB7/G,EAAE,GAG1CiqF,UAAUy1B,YAAYI,mBAClB,SAACn9D,GACG,IACK+4B,EAAKqkC,kBAAkB,CACpBp9D,EAASq9D,OAAO1vD,SAChB3N,EAASq9D,OAAOzvD,YAIpB,OAAOmrB,EAAKo/B,yBAEhBp/B,EAAKkkC,mBAAmBj9D,GACxB+4B,EAAKuhC,aAAagD,UAAU,CACxB3D,IAAK35D,EAASq9D,OAAO1vD,SACrBisD,IAAK55D,EAASq9D,OAAOzvD,WAE7B,EACA,kBAAMmrB,EAAKo/B,wBAAwB,EAlBvB,CAAEt6G,QAAS,IAAO0/G,oBAAoB,IAoBpD,yBAAAn8G,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IAET,gBAAAk+G,IAAA,OAAAuE,EAAA99G,MAAA3E,KAAA4E,UAAA,EA5CA,IA4CA,CAAAvD,IAAA,oBAAAC,MAEO,SAAAuxB,GAEc,IAAAsnB,EAAA/mB,EAAAnR,EAAA4Q,EAAA,GADjBswF,EAAK/vF,EAAA,GAAEgwF,EAAMhwF,EAAA,GACdiwF,EAAAz+G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAEjB6jC,GACsB,QAAlB0R,EAAAn6C,KAAKc,KAAK+U,gBAAQ,IAAAskC,OAAA,EAAlBA,EAAoBz0C,SAASiB,MAAM,OAAQ,GAAEotB,EAAA9R,EAAAwmB,EAAA,GAD1C66E,EAAOvvF,EAAA,GAAEwvF,GAAQxvF,EAAA,GAExB,GAAIuvF,GAAWC,GAAU,CACrB,IAEM7e,GAlalB,SAAS/V,EACLC,EACAC,EACAC,EACAC,GAEA,IAEMC,EAAO7B,EAAiB2B,EAAOF,GAC/BK,EAAO9B,EAAiB4B,EAAOF,GAErCD,EAAOzB,EAAiByB,GACxBE,EAAO3B,EAAiB2B,GAExB,IAAM77D,EACF+E,KAAKk3D,IAAIF,EAAO,GAAKh3D,KAAKk3D,IAAIF,EAAO,GACrCh3D,KAAKk3D,IAAID,EAAO,GACZj3D,KAAKk3D,IAAID,EAAO,GAChBj3D,KAAKm3D,IAAIP,GACT52D,KAAKm3D,IAAIL,GAEjB,OADU,EAAI92D,KAAKo3D,MAAMp3D,KAAKiuB,KAAKhzB,GAAI+E,KAAKiuB,KAAK,EAAIhzB,IAdtC,IAgBnB,CA4Y6B07D,CAFLv7B,WAAWkwD,GACVlwD,WAAWmwD,IACsBJ,EAAOC,GACrD,GAAI1e,IAAY2e,EAAQ,OAAO,CACnC,CACA,OAAO,CACX,GAAC,CAAAhiH,IAAA,yBAAAC,MAEO,WAAsB,IAAAkiH,EAAAC,EAAAC,EAAAC,GAC1B,EAAArjH,EAAAqC,KAAI,cAAe,iCAAkC,EAC/B,QAAlB6gH,EAAAxjH,KAAKc,KAAK+U,gBAAQ,IAAA2tG,OAAA,EAAlBA,EAAoB/tG,gBAAkC,QAAtBguG,EAAIzjH,KAAKc,KAAK+U,gBAAQ,IAAA4tG,OAAA,EAAlBA,EAAoBlwG,MACtC,QAD0CmwG,EAC5D1jH,KAAKc,KAAK+U,gBAAQ,IAAA6tG,OAAA,EAAlBA,EAAoBh+G,WAExB,IAAAk+G,EAAsC,QAAtCD,EAAoB3jH,KAAKc,KAAK+U,gBAAQ,IAAA8tG,OAAA,EAAlBA,EAAoBj+G,SAASiB,MAAM,KAAIk9G,EAAA5hG,EAAA2hG,EAAA,GAA/CE,EAAID,EAAA,GACX7jH,KAAKigH,cACVjgH,KAAKigH,aAAagD,UAAU,CACxB3D,IAAKlsD,WAHCywD,EAAA,IAINtE,IAAKnsD,WAAW0wD,IAExB,GAAC,CAAAziH,IAAA,qBAAAC,MAEO,SAAmByiH,GACvB,GAAqB,MAAhBA,KAAkBf,OACvB,IAAA1iH,EAAAqC,KACI,cACA,6BACAohH,EAAiBf,OACjB,QAEJ,IAAAgB,EAAgCD,EAAiBf,OAAzC1vD,EAAQ0wD,EAAR1wD,SAAUC,EAASywD,EAATzwD,WAEdD,IAAatzD,KAAK29G,eAClBpqD,IAAcvzD,KAAK49G,kBAEnB59G,KAAK29G,cAAgBrqD,EACrBtzD,KAAK49G,eAAiBrqD,EACtBvzD,KAAK68G,SAAS78G,KAAKy9G,sBAAoB,CAE/C,GAAC,CAAAp8G,IAAA,0BAAAC,MAEO,SAAwBwE,IAC5B,EAAAxF,EAAAqU,aAAW,uCAAA5Q,OAAwC+B,EAAMujD,QAAO,KACpE,GAAC,CAAAhoD,IAAA,WAAAC,MAAA,eAAA2iH,EAAAziH,EAAAC,IAAAC,KAEM,SAAAi+C,EAAej6C,GAAa,IAAAw+G,EAAAC,EAAAC,EAAA5uF,EAAA6uF,EAAAj9G,GAAA,OAAA3F,IAAAO,KAAA,SAAAg+C,IAAA,cAAAA,GAAA99C,KAAA89C,GAAA79C,MAAA,OACE,GAAhB,QAAjB+hH,EAAAlkH,KAAKi/G,oBAAY,IAAAiF,GAAjBA,EAAmBI,UAAU,IACxBtkH,KAAKygH,oBAAuB/6G,EAAQ,CAAAs6C,GAAA79C,KAAA,eAAA69C,GAAA18C,OAAA,iBAgBI,GAf7ClB,QAAQO,IAAI,sBAAuB3C,KAAKygH,qBAAkB,EAC1DngH,EAAAqC,KAAI,cAAe,6BAA8B,CAC7C+C,EACA1F,KAAK29G,cACL39G,KAAK49G,iBAET59G,KAAKy9G,qBAAuB/3G,EACtB0+G,EAAc,CAChB9E,IAAK55G,EAASq3G,WAAWwH,OAAO/xD,YAAY,GAC5C+sD,IAAK75G,EAASq3G,WAAWwH,OAAO/xD,YAAY,GAC5C3xB,MAAOn7B,EAASq3G,WAAWl8E,QAEzBrL,GAAoBx1B,KAAK+9G,eAAiB,IAC5Cr4G,EAASq3G,WAAWl8E,SAEV7gC,KAAKsZ,OAAOo2C,SAASl6B,GAG9Bx1B,KAAK+iH,kBACF,CAAC/iH,KAAK29G,cAAe39G,KAAK49G,gBAC1B,KACH,CAAA59D,GAAA79C,KAAA,SAED,OAAAnC,KAAKigH,aAAaviD,QAAQ,IAC1B19D,KAAKigH,aAAagD,UAAUmB,GAC5BpkH,KAAKi/G,aAAauF,SAASJ,EAAYvjF,OACvC7gC,KAAKi/G,aAAaqF,UAAU,CAAC5+G,EAAS2N,KAAK2sC,GAAA18C,OAAA,qBAI1CtD,KAAK29G,eAAkB39G,KAAK49G,eAAc,CAAA59D,GAAA79C,KAAA,gBAAA69C,GAAA18C,OAAA,YACpChD,EAAAqU,aAAY,4BAA0B,QAG3ChP,OAKA0+G,EAAkB,CACpB1+G,OANgB,CAChB25G,IAAKt/G,KAAK29G,cACV4B,IAAKv/G,KAAK49G,gBAKVwG,YAAaA,GAGjBhiH,QAAQO,IAAI,oBAAqB0hH,GAAiBrkE,GAAA79C,KAAA,GAE7BnC,KAAKygH,mBACrB5D,SAASwH,GAAgBlgH,MACnB,SAAC0f,IAAK,IAAA4gG,IACT,EAAAnkH,EAAAqC,KACI,cACA,yBACAkhB,GAAEwlC,SAAWxlC,GACb,QAGAA,cAAa6gG,YAAsB,QAAbD,GAAI5gG,GAAEwlC,eAAO,IAAAo7D,QAAA,EAATA,GAAW7+G,SAAS,aAC7C++G,EACLrkH,EAAAqU,aAAY,iDAChB,GAAE,QAbM,GAANvN,GAAM44C,GAAAn8C,KAcD,CAAAm8C,GAAA79C,KAAA,gBAAA69C,GAAA18C,OAAA,kBACXlB,QAAQO,IAAI,SAAUyE,IACE,QAAxB+8G,EAAAnkH,KAAK2gH,2BAAmB,IAAAwD,GAAxBA,EAA0BS,SAASx9G,IAAQ,yBAAA44C,GAAAv7C,OAAA,EAAAk7C,EAAA3/C,KAAA,IAC9C,gBAAA68G,EAAAvjF,GAAA,OAAA2qF,EAAAt/G,MAAA3E,KAAA4E,UAAA,EApEA,IAoEA,CAAAvD,IAAA,oBAAAC,MAAA,eAAAujH,EAAArjH,EAAAC,IAAAC,KAED,SAAAg/C,IAAA,IAAAokE,EAAAzjH,EAAAiwE,EAAAyzC,EAAA,OAAAtjH,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,UACSnC,KAAK6mB,OAAM,CAAAi6B,EAAA3+C,KAAA,eAAA2+C,EAAAx9C,OAAA,iBAEhB,IAAWjC,KADLyjH,EAA4B,GAChB9kH,KAAK6mB,OACbyqD,EAAStxE,KAAK6mB,OAAOxlB,GAAKo9B,KAC5Bp9B,IACM0jH,EAAc1jH,EAAI+sF,UAAU,GAClC02B,EAAS7rF,KAAKj5B,KAAKglH,gBAAgBD,EAAazzC,KAEvDxwB,SAAA3+C,KAAA,EACYwB,QAAQslB,IAAI67F,GAAS,cAAAhkE,EAAAx9C,OAAA,SAAAw9C,EAAAj9C,MAAA,wBAAAi9C,EAAAr8C,OAAA,EAAAi8C,EAAA1gD,KAAA,IACrC,gBAAAu+G,IAAA,OAAAsG,EAAAlgH,MAAA3E,KAAA4E,UAAA,EAbA,IAaA,CAAAvD,IAAA,aAAAC,MAAA,eAAA2jH,EAAAzjH,EAAAC,IAAAC,KAEM,SAAA+8E,IAAA,IAAAymC,EAAA,OAAAzjH,IAAAO,KAAA,SAAA6+C,GAAA,cAAAA,EAAA3+C,KAAA2+C,EAAA1+C,MAAA,cAAA0+C,EAAAv9C,OAAA,SACgB,QADhB4hH,EACIllH,KAAK0yD,eAAO,IAAAwyD,OAAA,EAAZA,EAAc7lF,OAAO,SAAC8lF,EAAaC,GACtCD,SAAYC,EAAa/xG,IAAM+xG,EACxBD,CACX,EAAG,KAAG,wBAAAtkE,EAAAp8C,OAAA,EAAAg6E,EAAAz+E,KAAA,IACT,gBAAAw+G,IAAA,OAAAyG,EAAAtgH,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,kBAAAC,MAEO,SAAgBstC,EAAqB0iC,GAAc,IAAA+zC,EACvD,OAAwB,QAAxBA,EAAOrlH,KAAKi/G,oBAAY,IAAAoG,OAAA,EAAjBA,EAAmBC,eAAe12E,EAAa,CAClD22E,gBAAgB,EAChBC,mBAAoB,GACpBC,gBAAiB,GACjBC,cAAe,GACfC,SAAS,EACTC,iBAAkBt0C,GAE1B,KAnWC,IAAA/vE,CAmWA,CAja4B,CAAQjB,EAAA6H,cAAYi1G,SAAxCC,0CAAmBj1G,EAAAC,4BAAAC,EAAAs7D,mBAAAx7D,EAAAC,4BAAAG,EAAAq9G,qBAAAz9G,EAAAC,4BAAAK,EAAAD,qBAAA,kDAAnB40G,EAAmBv0G,UAAA,kBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,grEA7GxBhB,EAAAkB,oBAAA,WAUAlB,EANA4J,qBAAA,EAAA8zG,EAAA,YAMA19G,CAHC,EAAA29G,EAAA,aAqBO39G,EAJRiF,yBAAA,UAIQjF,CAFP,qBAEOA,CAD0D,eAOtDA,EAAA4I,qBAAA,yBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAenI,EAAA28G,WAAU,GAN7B59G,EAAAkF,yBASIlF,EADJiF,yBAAA,UACIjF,CADiC,cAQ7BA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA28G,WAAU,GAEnB59G,EAAAiF,yBAAA,gBACIjF,EAAAmF,iBAAA,eAIhBnF,EAHYkF,wBAGZlF,OAEAA,EAAA4J,qBAAA,GAAAi0G,EAAA,wBAuCJ79G,EAAAkF,+BAtFKlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAiZ,SAMAla,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAuzG,2BAyCcx0G,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA5H,EAAAyzG,oBAAA,KAAAzzG,EAAAyzG,oBAAA93G,yYAwDdq4G,CAAoB,0MCzLjC,IAAAzzG,EAAA/L,EAAA,MAQAyC,EAAAzC,EAAA,UACAA,EAAA,MAOAA,EAAA,yHAsBQuK,EAAAwY,kCAAA,GAGIxY,EAAAiF,yBAAA,oBAEIjF,EAAAiV,2BAAA,sBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAsV,KAAAzV,KAAAG,EAAAsV,KAAAzV,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAOA/I,EANA4I,qBAAA,sBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAcF,EAAA40G,WAAA/jH,KAAAgP,GAAuB,EAMrC/I,CANsC,mBAAA+I,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAM3BF,EAAA60G,QAAAhkH,KAAAgP,GAAoB,GAE/B/I,EAAAg+F,uBAAA,GACJh+F,EAAAkF,uGAXIlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,MAAAK,EAAA4+E,KACA9nF,EAAAqV,2BAAA,OAAAnM,EAAAsV,MAMAxe,EAJA6I,qBAAA,QAAAK,EAAAyqC,MAIA3zC,CAJe,SAAAkJ,EAAAuV,SAAA,MAAAvV,EAAA+uC,SAAA,KAAA/uC,EAAA+uC,SAAAx5B,QAIfze,CAHqC,WAAAkJ,EAAAvI,WAAA,MAAAuI,EAAA+uC,SAAA,KAAA/uC,EAAA+uC,SAAAt3C,UAGrCX,CAF2C,UAAAkJ,EAAAohD,UAAA,MAAAphD,EAAA+uC,SAAA,KAAA/uC,EAAA+uC,SAAAqS,SAE3CtqD,CADwC,SAAAkJ,EAAA80G,SAAA,MAAA90G,EAAA+uC,SAAA,KAAA/uC,EAAA+uC,SAAA+lE,uEAQ5Ch+G,EAAAiF,yBAAA,oBAEIjF,EAAA4I,qBAAA,sBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAcF,EAAA+0G,cAAAl1G,GAAqB,GACnC/I,EAAAiV,2BAAA,sBAAAlM,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAsV,KAAAzV,KAAAG,EAAAsV,KAAAzV,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,sBAAAG,GAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAcF,EAAA40G,WAAA/jH,KAAAgP,GAAuB,GAMrC/I,EAAAg+F,uBAAA,KACJh+F,EAAAkF,mEAVIlF,EAAA6I,qBAAA,OAAAK,EAAA5L,UAEA0C,EAAAqV,2BAAA,OAAAnM,EAAAsV,MAKAxe,EAHA6I,qBAAA,UAAAK,EAAA0Q,QAGA5Z,CAHmB,QAAAkJ,EAAAyqC,MAGnB3zC,CAFe,QAAAkJ,EAAAkV,MAEfpe,CADe,WAAAkJ,EAAA+uC,wEAWnBj4C,EALJiF,yBAAA,UAKIjF,CADH,cAOOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsV,KAAuB,IAAvBtV,EAAAsV,KAA0B,GAE1Bxe,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,SACdnF,EADiBkF,wBACjBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsV,KAAAtV,EAAAsV,MAAwB,GAAK,IAAE,GAE/Bxe,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAyqC,MAAAzqC,EAAAyqC,MAAyB,EAAC,GAE1B3zC,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,aAElBnF,EAFyBkF,wBAEzBlF,MAtFKzI,mBAAmB,IAAIiK,EAAA08G,eAChC,yBAgBJ3mH,0BAyEqC,eAAA4mH,EAAxBpV,EAAwB,SAAAvwG,GAsBjC,SAAAuwG,EACYqV,EACA1lH,EACA2lH,GAA6B,IAAAxlH,EAAAlB,SAAAC,KAAAmxG,IAErClwG,EAAAC,EAAAlB,KAAAmxG,IAJQqV,cACAvlH,EAAAH,OACAG,EAAAwlH,WAvBIxlH,EAAA2lB,KAAO,EACP3lB,EAAAsxD,OAAc,CAAEjN,EAAG,GAAKC,EAAG,IAC3BtkD,EAAA86C,MAAQ,EACR96C,EAAAo/C,SAAwB,GAKxBp/C,EAAA+gB,QAAsB,GAErB/gB,EAAAilH,WAAa,IAAIt8G,EAAAoV,aACjB/d,EAAAylH,aAAe,IAAI98G,EAAAoV,aACnB/d,EAAAklH,QAAU,IAAIv8G,EAAAoV,aAEf/d,EAAA0lH,iBAAmB1lH,EAAKulH,YAAY3zB,WAAW5xF,CAY/D,CAACG,SAAA+vG,EAAAvwG,GAAAd,EAAAqxG,EAAA,EAAA9vG,IAAA,WAAAiE,IAVD,WAAmB,IAAAR,EAAA9E,KACf,OAAOA,KAAKc,KAAKghB,OAAOoN,KAAK,SAAClsB,GAAC,OAAKA,EAAEwQ,SAAW1O,EAAKorF,GAAG,EAC7D,GAAC,CAAA7uF,IAAA,cAAAC,MAUM,SAAY87B,IAEXA,EAAQs1B,SACRt1B,EAAQgpF,QACRhpF,EAAQvW,QACRuW,EAAQr0B,YAER/I,KAAKqgD,SAAW,CACZqS,QAAS1yD,KAAK0yD,SAAW,GACzB0zD,OAAQpmH,KAAKomH,QAAU,GACvBv/F,OAAQ7mB,KAAK6mB,QAAU,GACvB9d,SAAU/I,KAAK+I,UAAY,IAGvC,GAAC,CAAA1H,IAAA,gBAAAC,MAEM,SAAcsS,IACjB,EAAAtT,EAAAqC,KACI,MACA,oBACAiR,GAAM6B,cAAgB7B,GAAML,MAAQK,GAExC5T,KAAKymH,SAAS/2D,SAAS97C,EAAKP,GAChC,IAAC,CArDgC,CAAQ/S,EAAA6H,cAAYo+G,SAA5CpV,0CAAuB/oG,EAAAC,4BAAAC,EAAAs7D,mBAAAx7D,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAm9G,qBAAA,kDAAvB1U,EAAuBroG,UAAA,sBAAAqW,OAAA,CAAA+wE,IAAA,MAAAtpE,KAAA,OAAA2rC,OAAA,SAAAxW,MAAA,QAAAsE,SAAA,WAAAx5B,OAAA,SAAA9d,SAAA,WAAAq9G,OAAA,SAAA1zD,QAAA,UAAA1wC,QAAA,UAAAwE,MAAA,SAAApH,QAAA,CAAA8mG,WAAA,aAAAQ,aAAA,eAAAP,QAAA,WAAAp9G,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,gCAAA6lE,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,65BAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,mCAtE5BhB,EAAA4J,qBAAA,EAAA40G,EAAA,oDA+BAx+G,EAdA4J,qBAAA,EAAA60G,EAAA,yBAAAz+G,EAAA2c,iCAcA3c,CAdmC,EAAA0+G,EAAA,qDAhBK1+G,EAAnC6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAs9G,kBAAmCv+G,CAAA,WAAA2+G,GAgCnC3+G,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA5H,EAAA2Y,QAAA,KAAA3Y,EAAA2Y,QAAA0B,cAqCAytF,CAAwB,+IC5GrCtzG,EAAA,MACAA,EAAA,OADA,yBAGA8B,uBAwBiC,eAAAqnH,EAApB5M,EAAoB,WAQ5B,OAAAt6G,EAHD,SAAAs6G,EAAwBzzE,GAAwB5mC,EAAAC,KAAAo6G,GAC5Cp6G,KAAKopD,KAAOziB,GAAOlkC,MAAQ,GAC3BzC,KAAKinH,mBACT,EAAC,EAAA5lH,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQgsB,MACRppD,KAAKinH,mBAEb,GAAC,CAAA5lH,IAAA,oBAAAC,MAEO,WACJtB,KAAKknH,eAAiB9iH,KAAKC,UAAUrE,KAAKopD,UAAMnkD,EAAW,EAC/D,IAAC,CAlB4B,GAkB5B+hH,SAlBQ5M,0CAAoBhyG,EAAAC,4BAAAC,EAAAq9F,kBAAA,qDAApByU,EAAoBtxG,UAAA,mBAAAqW,OAAA,CAAAiqC,KAAA,QAAArgD,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mMAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlBrBhB,EAHJiF,yBAAA,UAGIjF,CADH,WAGQA,EAAAmF,iBAAA,GAETnF,EAF6BkF,wBAE7BlF,UAFSA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69G,wPAgBJ9M,CAAoB,kJC1BjCv8G,EAAA,KACAA,EAAA,OADA,IAEAK,EAAAL,EAAA,wHAgBYuK,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,uBAAAm2G,EAAA/+G,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAq7F,UAAAD,EAAA9zG,IAAkB,GAE3BjL,EAAAmF,iBAAA,GACJnF,EAAAkF,mDADIlF,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAA6nG,EAAA5zG,KAAA,MAAA4zG,EAAAE,KAAA,MAnBhB1nH,0BAyBoC,eAAA2nH,EAAvBC,EAAuB,WAgB5B,OAAAznH,EAJJ,SAAAynH,EACuC5gF,EAC3B9lC,EACA2mH,GAA8B,IAAAvmH,EAAAjB,KAAAD,EAAAC,KAAAunH,GAFHvnH,KAAA2mC,QAC3B3mC,KAAAa,YACAb,KAAAwnH,eAdIxnH,KAAAonH,UAAY,SAACtzC,GACzB7yE,EAAKumH,aAAaC,IAAI3zC,GACtBvf,aAAatwD,QAAQ,iBAAkB6vE,EAC3C,EAMgB9zE,KAAA0H,MAAQ,eAAAg+F,EAAA,OAAgB,QAAhBA,EAAMzkG,EAAK0lC,aAAK,IAAA++D,OAAA,EAAVA,EAAYh+F,OAAO,CAM9C,EAAC,EAAArG,IAAA,UAAAiE,IAVJ,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,gBAAkB,EAChD,IAAC,CAR+B,GAQ/BgiH,SARQC,0CAAuBn/G,EAAAC,4BAapBnK,EAAAynG,mBAAiBv9F,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAk/G,kBAAA,kDAbpBH,EAAuBz+G,UAAA,sBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,gYAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtB5BhB,EAAAiF,yBAAA,WAEIjF,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GAGZU,EADJiF,yBAAA,UACIjF,CAD0C,gBACfA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WAAcjF,EAAAmF,iBAAA,qCAClBnF,EADqDkF,wBACrDlF,GACAA,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,qCACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA21G,EAAA,gBAOJv/G,EAAAkF,gCAZsBlF,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAwN,sBAAA,wBAGdxN,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,mCAGiBxN,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAu+G,sEAUpBL,CAAuB,oIC7BpC1pH,EAAA,8BAEA8B,YAGsB,eAAAkoH,EAATC,EAAS,WAC+B,OAAAhoH,EAAjD,SAAAgoH,EAAoBhnH,GAAyBf,EAAAC,KAAA8nH,GAAzB9nH,KAAAc,MAA4B,EAAC,EAAAO,IAAA,YAAAC,MAE1C,SAAU+R,GACb,OAAOrT,KAAKc,KAAKmuB,YAAY5b,aAAcmrB,MAAQnrB,EAAK,CAACA,GAC7D,IAAC,CALiB,GAKjBw0G,SALQC,0CAAS1/G,EAAAC,4BAAAC,EAAAG,oBAAA,+DAATq/G,EAAS3sF,MAAA,IAAT2sF,CAAS,8ICNtBjqH,EAAA,oBAEMkqH,EAAkB,aAAaphH,MAAM,IACrCqhH,EAAmB,cAAcrhH,MAAM,IACvCshH,EAAkB,6BAA6BthH,MAAM,IACrDuhH,EAAuB,uCAAuCvhH,MAAM,IAE1EhH,sBAGgC,eAAAwoH,EAAnBC,EAAmB,WASW,OAAAtoH,EAAvC,SAAAsoH,EAAoBC,GAAetoH,EAAAC,KAAAooH,GAAfpoH,KAAAqoH,MARXroH,KAAAsoH,YAKQ,WACRtoH,KAAAuoH,YAAwB,EAEK,EAAC,EAAAlnH,IAAA,YAAAC,MAEF,SAAUwsB,GAC3C,IAAMjK,EAAmBiK,EACnBzsB,EAAMwiB,EAAExiB,IACd,MAGU,IAFN,CAAC,YAAa,aAAc,MAAO,YAAa,QAAQ2oE,QACpD3oE,IAGO,MAAVwiB,EAAExiB,MAAgBwiB,EAAE2kG,SAAW3kG,EAAE4kG,UAEvB,MAAV5kG,EAAExiB,MAAgBwiB,EAAE2kG,SAAW3kG,EAAE4kG,UAEvB,MAAV5kG,EAAExiB,MAAgBwiB,EAAE2kG,SAAW3kG,EAAE4kG,UAEvB,MAAV5kG,EAAExiB,MAAgBwiB,EAAE2kG,SAAW3kG,EAAE4kG,UAKtC,OAAQzoH,KAAKsoH,aACT,IAAK,WACoC,IAAjCL,EAAgBj+C,QAAQ3oE,IACxBwiB,EAAE0tE,iBAEN,MACJ,IAAK,gBACyC,IAAtC22B,EAAqBl+C,QAAQ3oE,IAC7BwiB,EAAE0tE,iBAEN,MACJ,IAAK,UACqC,IAAlCvxF,KAAKuoH,YAAYv+C,QAAQ3oE,IACzBwiB,EAAE0tE,iBAEN,MACJ,IAAK,YACqC,IAAlCy2B,EAAiBh+C,QAAQ3oE,IACzBwiB,EAAE0tE,iBAEN,MAEJ,SACyC,IAAjCw2B,EAAgB/9C,QAAQ3oE,IACxBwiB,EAAE0tE,iBAIlB,IAAC,CA1D2B,GA0D3B42B,SA1DQC,0CAAmBhgH,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAAnBkgB,EAAmBt/G,UAAA,uBAAA4/G,aAAA,SAAAt/G,EAAAC,GAAA,EAAAD,GAAnBhB,EAAA4I,qBAAA,mBAAAG,GAAA,OAAA9H,EAAAs/G,UAAAx3G,EAAiB,mEAAjBi3G,CAAmB,8KCVhCvqH,EAAA,UACA0L,EAAA1L,EAAA,OAEAuC,GADAvC,EAAA,OACAA,EAAA,sEAaoBuK,EAAAiF,yBAAA,OACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEAFiClF,EAAA29F,qBAAA57E,EAAAy+F,KAAArqC,OAC7Bn2E,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAAy+F,KAAAniG,QAAA,+BAEJre,EAAAkB,oBAAA,iFAEIlB,EAAA6I,qBAAA,MAAA7I,EAAAiM,sBAAA,IAAA8V,EAAAy+F,KAAA14B,IAAA,YAAA9nF,EAAA05C,uFAIJ15C,EAAAwY,kCAAA,GAEQxY,EADJiF,yBAAA,WACIjF,CADuB,cAQnBA,EAAAmF,iBAAA,gBACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,sBACIjF,CADiC,gBAI7BA,EAAA4I,qBAAA,yBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAe2Y,EAAA0+F,aAAY,GAGvCzgH,EANQkF,wBAMRlF,KAEIA,EADJiF,yBAAA,WACIjF,CADuB,cACDA,EAAAmF,iBAAA,cAAQnF,EAAAkF,yBAE1BlF,EADJiF,yBAAA,uBACIjF,CADiC,iBAI7BA,EAAA4I,qBAAA,yBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAe2Y,EAAA2+F,QAAO,GAH1B1gH,EAAAkF,yBAKAlF,EAAAiF,yBAAA,gBACKjF,EAAAmF,iBAAA,mCAGbnF,EAHyCkF,wBAGzClF,gHA3BQA,EAAAoF,oBAAA,GAGApF,EAHAiX,sBAAA,UAAA0pG,GAAA,aAAA5+F,EAAA3D,MAGApe,CADC,wBAAA+hB,EAAA3D,qEAgCbpe,EAJJiF,yBAAA,WAIIjF,CADH,eACyCA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAX,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA2+F,QAAO,GAClD1gH,EAAAmF,iBAAA,aAERnF,EADIkF,wBACJlF,0BAIJA,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,kCACPnF,EADmCkF,wBACnClF,IAtEZzI,iBA4F2B,eAAAqpH,EAAdC,EAAc,WAkB2B,OAAAnpH,EAAlD,SAAAmpH,EAAoBpoH,GAA0Bd,EAAAC,KAAAipH,GAA1BjpH,KAAAa,YAdJb,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACjCs/E,SAAU,IAAI3/G,EAAAsgC,YAAY,GAAI,CAACtgC,EAAAugC,WAAWC,WAC1Co/E,SAAU,IAAI5/G,EAAAsgC,YAAY,GAAI,CAACtgC,EAAAugC,WAAWC,YAYG,EAAC,EAAA1oC,IAAA,OAAAiE,eAH9C,OAAOtF,KAAKa,UAAUyE,IAAI,kBAAoB,CAAEsN,KAAM,OAC1D,GAAC,CAAAvR,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAIM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAnC,KAAKsiB,SAAU,EAAKrgB,EAAAE,KAAA,EACdnC,KAAKa,UAAUgC,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClEjD,KAAKsiB,SAAU,EAAM,wBAAArgB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACxB,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,IAED,CAAAvD,IAAA,aAAAC,MACO,WACCtB,KAAKopH,WAAappH,KAAKopH,UAAUnhB,eACjCjoG,KAAKopH,UAAUnhB,cAAczhF,OAErC,GAEA,CAAAnlB,IAAA,QAAAC,MACO,WACHtB,KAAKsiB,SAAU,EAUftiB,KAAK0Q,KAAK24G,UAAU,CAAEF,SAAU,gCACpC,KA9BC,IAAA5nH,CA8BA,CA9CsB,GA8CtBynH,SA9CQC,0CAAc7gH,EAAAC,4BAAAC,EAAAC,iBAAA,kDAAd0gH,EAAcngH,UAAA,gBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,y9BArFXhB,EAJRiF,yBAAA,UAIQjF,CAJiC,WAIjCA,CADH,WAQOA,EAHA4J,qBAAA,EAAAs3G,EAAA,UAGAlhH,CAHsD,EAAAmhH,EAAA,aAO1DnhH,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAw3G,EAAA,uBAiCJphH,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAy3G,EAAA,cASRrhH,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,EAAA03G,EAAA,yBAAAthH,EAAA2c,yEAvDY3c,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,yBAAAjwD,EAAAu/G,KAAA,KAAAv/G,EAAAu/G,KAAA5tB,YAEI5yF,EAAAoF,sBAAApF,EAAA6I,qBAAA,uBAAA5H,EAAAu/G,KAAA,KAAAv/G,EAAAu/G,KAAAh2G,OAICxK,EAAAoF,sBAAApF,EAAA6I,qBAAA,sBAAA5H,EAAAu/G,KAAA,KAAAv/G,EAAAu/G,KAAAh2G,OAKUxK,EAAAoF,oBAAA,GAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAAuhH,GAoC9BvhH,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,6/BAoCR2mG,CAAc,yOCjG3BprH,EAAA,UAOAub,EAAAvb,EAAA,OACA6xG,EAAA7xG,EAAA,OACAuC,EAAAvC,EAAA,MACAyC,EAAAzC,EAAA,kDAqBA8B,qBAYgC,eAAAiqH,EAAnBC,EAAmB,SAAAjpH,GAa5B,SAAAipH,EAA8CljF,GAAqB,IAAA1lC,EAAAlB,SAAAC,KAAA6pH,IAC/D5oH,EAAAC,EAAAlB,KAAA6pH,IAD0CljF,QAZvC1lC,EAAA2lB,KAAO,EACP3lB,EAAA6oH,MAAQ,EACR7oH,EAAA8oH,UAAY,EACZ9oH,EAAAkG,MAAQ,IAAMlG,CAWrB,CAACG,SAAAyoH,EAAAjpH,GAAAd,EAAA+pH,EAAA,EAAAxoH,IAAA,iBAAAiE,IAND,WACI,QAAStF,KAAKmH,MAAQnH,KAAK8pH,OAAOj1D,QAAQ,EAC9C,GAAC,CAAAxzD,IAAA,WAAAC,MAMM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,WACAuG,EAAA2I,eAAc,CACV/hB,KAAK2mC,MAAMqjF,OACXhqH,KAAK2mC,MAAMsjF,MACXjqH,KAAK2mC,MAAMujF,aACZn3G,UAAU,SAAA9M,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAiB,OAC1BnB,EAAKqlH,iBADWriH,EAAA,GAAMA,EAAA,GAAIA,EAAA,GACY,IAG9C9H,KAAK6S,aACD,WACA7S,KAAK2mC,MAAMyjF,UAAUr3G,UAAU,SAACC,GAAI,OAChClO,EAAKulH,mBAAmBr3G,EAAK,GAGzC,GAAC,CAAA3R,IAAA,mBAAAC,OAAAgpH,EAAA9oH,EAAAC,IAAAC,KAEO,SAAAC,EACJmoH,EACAljG,EACAmjG,GAAiB,IAAAQ,EAAApjH,EAAAD,EAAA88F,EAAA,OAAAviG,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAO4B,GALvCooH,EAAYvqH,KAAK8pH,MACvB9pH,KAAK4mB,KAAOA,EACZ5mB,KAAK8pH,MAAQA,EACb9pH,KAAK+pH,UAAYA,EACX5iH,EAAQnH,KAAKmH,MAAQ,GACrBD,EAAUlH,KAAKmH,MAAQnH,KAAK8pH,MAAS,GAEvCS,IAAcT,EAAK,CAAA7nH,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAEjB0gG,SAAShkG,KAAKwqH,eAAeviB,eAC5B9gG,MAAQA,EACf68F,EAAO98F,OAASA,EAAOjF,EAAAE,KAAA,GAEAnC,KAAK2mC,MAAMyjF,UAAUtnH,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,QACrEjD,KAAKqqH,mBADSpoH,EAAA4B,MACoB,yBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACrC,SAAAmqH,EAAAxtG,EAAA2c,EAAAQ,GAAA,OAAAwwF,EAAA3lH,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,qBAAAC,MAEO,SAAmBmpH,GAAuB,IAAAvkH,EAAAlG,KACxCgkG,EAAShkG,KAAKwqH,eAAeviB,cACvBjE,EAAOF,WAAW,MAC1BG,UAAU,EAAG,EAAGD,EAAO78F,MAAO68F,EAAO98F,QACzCujH,EAAapiG,QAAQ,SAACqiG,GAAI,OAAKxkH,EAAKykH,aAAaD,EAAK,EAC1D,GAAC,CAAArpH,IAAA,eAAAC,MAEO,SAAaspH,GACjB,IAAMC,EAASD,EAAQC,OACvB,GAAW,MAANA,KAAQ7lH,OACb,KAAMg/F,EAAShkG,KAAKwqH,eAAeviB,cAC7B5+F,EAAM26F,EAAOF,WAAW,MACxB38F,EAAQ68F,EAAO78F,MACfD,EAAS88F,EAAO98F,OA6BtB,GA3BAmC,EAAI66F,UAAY0mB,EAAQ1uB,MAAQ,KAChC7yF,EAAIyhH,YACJzhH,EAAI0hH,OAAOF,EAAO,GAAG,GAAK1jH,EAAO0jH,EAAO,GAAG,GAAK3jH,GAChD2jH,EAAOxiG,QAAQ,SAAAnG,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAM,OAAM7Y,EAAI2hH,OAAb7oG,EAAA,GAAwBhb,EAArBgb,EAAA,GAAgCjb,EAAO,GAC5DmC,EAAI4hH,YACJ5hH,EAAIo1B,OAEJp1B,EAAI6hH,eAAc5qH,EAAA+uF,mBAAkBu7B,EAAQ1uB,MAAO,UAAW,IAC9D7yF,EAAI06F,UAAY,EAChB16F,EAAIyhH,YACJzhH,EAAI0hH,OAAOF,EAAO,GAAG,GAAK1jH,EAAO0jH,EAAO,GAAG,GAAK3jH,GAChD2jH,EAAOxiG,QAAQ,SAAA2f,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAM,OAAM3+B,EAAI2hH,OAAbp4F,EAAA,GAAwBzrB,EAArByrB,EAAA,GAAgC1rB,EAAO,GAC5DmC,EAAI4hH,YACJ5hH,EAAI8hH,UAE2B,IAA3BnrH,KAAK2mC,MAAMykF,cACX/hH,EAAI66F,UAAY,OAChB76F,EAAI6hH,YAAcN,EAAQ1uB,MAC1B7yF,EAAI06F,UAAY,EAChB8mB,EAAOxiG,QAAQ,SAAAwK,GAAW,IAAAO,EAAAnR,EAAA4Q,EAAA,GAATyyB,EAAClyB,EAAA,GAAEmyB,EAACnyB,EAAA,GACjB/pB,EAAIyhH,YACJzhH,EAAIgiH,IAAI/lE,EAAIn+C,EAAOo+C,EAAIr+C,EAAQ,EAAG,EAAa,EAAV8wB,KAAKq1D,IAC1ChkF,EAAIo1B,OACJp1B,EAAI8hH,QACR,KAG2B,IAA3BnrH,KAAK2mC,MAAM2kF,YAAuB,CAClC,IAAM/4D,EAASs4D,EAAOxrF,OAClB,SAACksF,EAAG9iF,GAAA,IAAA1U,EAAA9R,EAAAwmB,EAAA,GAAO,MAAM,CAAC8iF,EAAI,GAAdx3F,EAAA,GAAsBw3F,EAAI,GAAvBx3F,EAAA,GAA8B,EACzC,CAAC,EAAG,IAERw+B,EAAO,IAAMs4D,EAAO7lH,OACpButD,EAAO,IAAMs4D,EAAO7lH,OACpBqE,EAAImiH,UAAY,SAChBniH,EAAIoiH,aAAe,SACnBpiH,EAAI66F,UAAY,OAChB76F,EAAIqiH,KAAO,kBACXriH,EAAIsiH,SACAf,EAAQr3G,KACRg/C,EAAO,GAAKprD,EAAQ,EACpBorD,EAAO,GAAKrrD,EAAS,GAEzBmC,EAAI66F,UAAY,OAChB76F,EAAIsiH,SAASf,EAAQr3G,KAAMg/C,EAAO,GAAKprD,EAAOorD,EAAO,GAAKrrD,EAC9D,EACJ,KArFC,IAAAojH,CAqFA,CAvH2B,CAAQhqH,EAAA6H,cAAYyhH,SAAvCC,0CAAkBzhH,EAAAC,4BAaPqnG,EAAAvsC,kBAAgB,kDAb3B0mD,EAAkB/gH,UAAA,uBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,gUATvBhB,EAAAkB,oBAAA,qBAIIlB,EADAkxD,sBAAA,QAAAjwD,EAAAlC,MAAAkC,EAAA0gH,UAAA1gH,EAAAud,KAAA,IACAxe,CAD8C,SAAAiB,EAAAlC,MAAAkC,EAAA0gH,UAAA1gH,EAAAygH,MAAAzgH,EAAAud,KAAA,wBAM7CijG,CAAmB,uLC3ChC,IAAAjgH,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OAGAyC,EAAAzC,EAAA,OAGA63C,GAFA73C,EAAA,OAEAA,EAAA,2GA0BgBuK,EALJiF,yBAAA,UAKIjF,CADH,uBAWOA,EAAAkB,oBAAA,mBACHlB,EAAAkF,yBACDlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2CAfQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,YAAAkZ,EAAA3T,MAAA,KAAA2T,EAAA3T,MAAAhD,OAGApL,CAHqB,cAAA+hB,EAAA1O,KAAA,KAAA0O,EAAA1O,KAAAjI,OAGrBpL,CAFsB,WAAA+hB,EAAAphB,SAEtBX,CADqB,UAAAA,EAAAuJ,0BAAA,EAAAC,IAWrBxJ,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA0c,EAAA3T,MAAA,KAAA2T,EAAA3T,MAAAf,gBAAA,MAAA0U,EAAA3T,MAAA,KAAA2T,EAAA3T,MAAAjD,MAAA,MA9BpB5T,0BAkDqC,eAAAisH,EAAxB/zE,EAAwB,SAAAj3C,GAcjC,SAAAi3C,EACqClR,EACzB7lC,GAAyB,IAAA+qH,EAAA5qH,EAAAlB,SAAAC,KAAA63C,IAEjC52C,EAAAC,EAAAlB,KAAA63C,IAHiClR,QACzB1lC,EAAAH,OAdKG,EAAA6sB,MAAQ,IAAIlkB,EAAAoV,aAEtB/d,EAAAwa,KAAkBxa,EAAK0lC,MAAMlrB,KAI7Bxa,EAAAgjB,UAA0B,GAWT,QAAhB4nG,EAAC5qH,EAAKwa,KAAKjF,aAAK,IAAAq1G,GAAfA,EAAiBx4G,WACXpS,EAAKwa,KAAKjF,MACpBvV,CACL,CAACG,SAAAy2C,EAAAj3C,GAAAd,EAAA+3C,EAAA,EAAAx2C,IAAA,QAAAiE,IAZD,WACI,OAAOtF,KAAKyb,KAAKjF,OAASxW,KAAKc,KAAKmuB,YAAYjvB,KAAKyb,KAAK9H,OAAS,GACvE,GAAC,CAAAtS,IAAA,WAAAC,MAYM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAKwD,QACD,OACA,WACIsB,EAAKif,iBACLjf,EAAKkf,eACT,EACA,IAER,GAAC,CAAA3iB,IAAA,gBAAAC,MAEM,WAAa,IAAAovE,EACV7pD,EAAuB,GAChB,QAAb6pD,EAAI1wE,KAAKyb,YAAI,IAAAi1D,GAATA,EAAWl9D,SACXqT,EAAM,UAAa,CAAEC,QAAS,QAC9BD,EAAM,UAAa,CAAEC,QAAS,SAElC9mB,KAAKikB,UAAY4C,CACrB,GAEA,CAAAxlB,IAAA,iBAAAC,MACO,WACH,IAAKtB,KAAKyb,KAAM,OAAO,KAWvBzb,KAAK+I,SAAW,CAVF,CACVrD,SAAU1F,KAAKyb,KAAKjI,OACpBs4G,SAAQ,aACRrlG,QAASivB,EAAAhvB,gBACTjkB,KAAM,CACF8Q,KAAMvT,KAAKyb,KAAKlI,MAEpBoT,QAAS,GACTC,KAAM,KAGd,IAAC,CA1DgC,CAAQtmB,EAAA6H,cAAYyjH,SAA5C/zE,0CAAuBzvC,EAAAC,4BAepByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAA,kDAflBovC,EAAuB/uC,UAAA,uBAAAsW,QAAA,CAAA0O,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,+nBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA7CpBhB,EAFRiF,yBAAA,UAEQjF,CAFuD,aAEvDA,CADgB,gBACWA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBAChClF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,EAAA+5G,EAAA,aA0BI3jH,EAHJiF,yBAAA,aAGIjF,CADH,cAEOA,EAAAmF,iBAAA,aAGZnF,EAFQkF,wBAERlF,YAjCYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAoS,KAAAhG,cAAApM,EAAAoS,KAAAlI,KAAA,KAMHnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmN,6JAqCJqhC,CAAwB,0ICnErC,IAAA63D,EAAA7xG,EAAA,sEAYQuK,EAAAiF,yBAAA,WAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAAk/B,QAAA,gGAEJjhD,EAAAiF,yBAAA,WAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAApE,SAAQ,GAEjB3d,EAAAiF,yBAAA,OACIjF,EAAAkB,oBAAA,YASRlB,EADIkF,wBACJlF,6CAbIA,EAAAiX,sBAAA,SAAA8K,EAAApE,QAKQ3d,EAAAoF,oBAAA,GACApF,EADAkxD,sBAAA,OAAAnvC,EAAAsU,KACAr2B,CADmB,SAAA+hB,EAAAghG,SAnBvCxrH,kBAqE4B,eAAAqsH,EAAftlG,EAAe,WAa8C,OAAA5mB,EAAtE,SAAA4mB,EAA8CulG,GAAoBlsH,EAAAC,KAAA0mB,GAApB1mB,KAAAisH,WAX9BjsH,KAAAqpD,QAAUrpD,KAAKisH,SAAS5iE,QAExBrpD,KAAAy+B,KAAOz+B,KAAKisH,SAASxtF,MAAQ,UAE7Bz+B,KAAAmrH,OAASnrH,KAAKisH,SAASd,QAAU,OAEjCnrH,KAAA+lB,OAAS/lB,KAAKisH,SAASlmG,QAAU,IAKoB,EAAC,EAAA1kB,IAAA,WAAAC,MAE/D,WAAQ,IAAAL,EAAAjB,KACXgtC,WAAW,kBAAO/rC,EAAKurG,MAAO,CAAI,EAAG,KACrCx/D,WAAW,kBAAO/rC,EAAKirH,cAAe,CAAI,EAAG,IACjD,IAAC,CAlBuB,GAkBvBF,SAlBQtlG,0CAAete,EAAAC,4BAaJqnG,EAAAvsC,kBAAgB,kDAb3Bz8C,EAAe5d,UAAA,oBAAA4V,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,6nBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA3DpBhB,EAPA4J,qBAAA,EAAAm6G,EAAA,YAOA/jH,CAHC,EAAAgkH,EAAA,mBAFIhkH,EAAA6I,qBAAA,OAAA5H,EAAAggD,SAAAhgD,EAAA6iH,cAMA9jH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmjG,ykBA0DA9lF,CAAe,qMC/E5B7oB,EAAA,UACAyC,EAAAzC,EAAA,OAEA6xG,EAAA7xG,EAAA,sCAmBA8B,sBAkEiC,eAAA0sH,EAApBC,EAAoB,SAAA1rH,GAyB7B,SAAA0rH,EACsCL,EAC1BM,GAAuB,IAAAtrH,EAAAlB,SAAAC,KAAAssH,IAE/BrrH,EAAAC,EAAAlB,KAAAssH,IAHkCL,WAC1BhrH,EAAAsrH,OAzBLtrH,EAAAsS,KAAOtS,EAAKgrH,SAAS14G,KAErBtS,EAAAw9B,KAAI,GAAA16B,OAAM9C,EAAKgrH,SAAS/vB,OAAS,UAAS,MAE1Cj7F,EAAAkqH,OAASlqH,EAAKgrH,SAAS/vB,OAAS,UAChCj7F,EAAAurH,QAAU,GACVvrH,EAAAkG,MAAQ,EACRlG,EAAAiG,OAAS,EACAjG,EAAAwrH,UAAY,GAWrBxrH,EAAA4pH,OAAM,SAAA9mH,OAAY9C,EAAKiG,OAAM,KAAAnD,OAAI9C,EAAKkG,MAAK,KAAApD,OAAI9C,EAAKiG,OAAM,KAAAnD,OAAI9C,EAAKkG,MAAK,MAExElG,EAAAyrH,WAAiC,GAAGzrH,CAO3C,CAACG,SAAAkrH,EAAA1rH,GAAAd,EAAAwsH,EAAA,EAAAjrH,IAAA,QAAAiE,IAlBD,WACI,OAAOtF,KAAKisH,SAASlC,WAAa,CACtC,GAAC,CAAA1oH,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKisH,SAASU,YAAc,CACvC,GAAC,CAAAtrH,IAAA,WAAAC,MAcM,WAAQ,IAAAsrH,EAAAC,EAAAC,EAAAhoH,EAAA9E,KACPA,KAAKisH,SAASc,OACd/sH,KAAK6S,aACD,OACA7S,KAAKisH,SAASc,MAAMh6G,UAAU,SAAC/P,GAC3B8B,EAAKyO,KAAOvQ,EAAEuQ,KACdzO,EAAK25B,KAAI,GAAA16B,OAAMf,EAAEk5F,OAAS,UAAS,MACnCp3F,EAAKqmH,OAASnoH,EAAEk5F,OAAS,UACzBp3F,EAAKkoH,cAAchqH,EAAE6nH,OACzB,IAGR7qH,KAAK6S,aACD,QACoB,QADb+5G,EACP5sH,KAAKisH,SAASjC,cAAM,IAAA4C,OAAA,EAApBA,EAAsB75G,UAAU,SAAC/P,GAC7B8B,EAAKmnH,SAASnC,MAAQ9mH,EACtB8B,EAAKkoH,cAAcloH,EAAKmnH,SAASpB,OACrC,IAEJ7qH,KAAK6S,aACD,OACmB,QADbg6G,EACN7sH,KAAKisH,SAAShC,aAAK,IAAA4C,OAAA,EAAnBA,EAAqB95G,UACjB,SAAC/P,GAAC,OAAM8B,EAAKmnH,SAASU,WAAa3pH,CAAC,IAG5ChD,KAAK6S,aACD,YACwB,QADbi6G,EACX9sH,KAAKisH,SAAS/B,kBAAU,IAAA4C,OAAA,EAAxBA,EAA0B/5G,UACtB,SAAC/P,GAAC,OAAM8B,EAAKmnH,SAASlC,UAAY/mH,CAAC,IAG3ChD,KAAKgtH,cAAchtH,KAAKisH,SAASpB,OACrC,GAAC,CAAAxpH,IAAA,gBAAAC,MAEM,SAAcupH,GAA0B,IAAA3kH,EAAAlG,KACrC23B,EAA+BkzF,EAAOxrF,OACxC,SAACgjE,EAACp8F,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAGq/C,EAACx9C,EAAA,GAAEy9C,EAACz9C,EAAA,SAAO,CACZmlH,MAAO3nE,EAAI+8C,EAAE4qB,MAAQ3nE,EAAI+8C,EAAE4qB,MAC3BC,MAAO5nE,EAAI+8C,EAAE6qB,MAAQ5nE,EAAI+8C,EAAE6qB,MAC3BC,MAAO5nE,EAAI88C,EAAE8qB,MAAQ5nE,EAAI88C,EAAE8qB,MAC3BC,MAAO7nE,EAAI88C,EAAE+qB,MAAQ7nE,EAAI88C,EAAE+qB,MAC9B,EACD,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGTC,IACC11F,EAAKu1F,MAAQv1F,EAAKs1F,MADnBI,IAEC11F,EAAKy1F,MAAQz1F,EAAKw1F,MAEjBrD,EAAU9pH,KAAKisH,SAAfnC,MACR9pH,KAAKmH,MAAkB,IAAVkmH,IACbrtH,KAAKkH,OAAmB,IAAVmmH,KAAiBvD,GAAS,GACxC9pH,KAAKmH,MAAQ6wB,KAAK6I,MAAmB,IAAb7gC,KAAKmH,OAC7BnH,KAAKkH,OAAS8wB,KAAK6I,MAAoB,IAAd7gC,KAAKkH,QAC9BlH,KAAK6qH,OAASA,EACTxrF,OACG,SAAC/W,EAACpG,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAGojC,EAACnjC,EAAA,GAAEojC,EAACpjC,EAAA,YAAApe,OACFukB,GAACvkB,OAAGukB,EAAI,IAAM,IAAEvkB,QACZuhD,EAAI3tB,EAAKs1F,OAASI,IAAWnnH,EAAKiB,MAAS,GAClD,KAAApD,QAAOwhD,EAAI5tB,EAAKw1F,OAASE,IAAWnnH,EAAKgB,OAAU,GAAE,EACzD,IAEH0gC,QAAQ,OAAQ,KACrB5nC,KAAK0sH,WAAa7B,EAAOvvG,IAAI,SAAA0sB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAM,MAAM,EAATpV,EAAA,GACrB+E,EAAKs1F,OAASI,IAAWnnH,EAAKiB,MAAS,IADfyrB,EAAA,GAExB+E,EAAKw1F,OAASE,IAAWnnH,EAAKgB,OAAU,GAClD,GACDlH,KAAKusH,KAAKhvB,eACd,IAAC,CAxG4B,CAAQj9F,EAAA6H,cAAYkkH,SAAxCC,0CAAmBlkH,EAAAC,4BA0BhBqnG,EAAAvsC,kBAAgB/6D,EAAAC,4BAAAD,EAAAklH,mBAAA,kDA1BnBhB,EAAmBxjH,UAAA,wBAAAC,SAAA,CAAAX,EAAAY,sCAAA0V,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,GAAAkE,OAAA,kbAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA1DpBhB,EALJiF,yBAAA,UAKIjF,CADH,wCAMOA,EAAAiF,yBAAA,WAUIjF,EAAAkB,oBAAA,aAeZlB,EAFQkF,wBAERlF,mCACAA,EAAAiF,yBAAA,WAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,gCAtCIlF,EAAAkxD,sBAAA,qBAAAjwD,EAAAkkH,MAAAlkH,EAAAud,KAAA,KAIIxe,EAAAoF,sBACApF,EADAkxD,sBAAA,QAAAjwD,EAAAlC,MAAA,IACAiB,CAD2B,SAAAiB,EAAAnC,OAAA,KAIvBkB,EAAAoF,qGAWIpF,EAAAoF,sBACApF,EADAkxD,sBAAA,OAAAjwD,EAAAo1B,KACAr2B,CADmB,SAAAiB,EAAA8hH,mDAkB/B/iH,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAkK,KAAA,8RAuBC+4G,CAAoB,6ICxFjCzuH,EAAA,UACA8yB,EAAA9yB,EAAA,OAEA6xG,EAAA7xG,EAAA,yEA8BgBuK,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,kBAAA6D,EAAAk8G,aAAA,+BARRplH,EAAAiF,yBAAA,WAMIjF,EAAAmF,iBAAA,GACAnF,EAAA4J,qBAAA,EAAAy7G,EAAA,cAGJrlH,EAAAkF,kEAPIlF,EAAAkxD,sBAAA,UAAAhoD,EAAA+xG,OAAA,EAAA/xG,EAAAsV,KAAA,MAGAxe,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA+3C,QAAA,KACOjhD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAo8G,yEAhBftlH,EAAAwY,kCAAA,KAAqCxY,EAAA4I,qBAAA,oBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAq8G,eAAc,KAAAvlH,EAAAwlH,2BAChExlH,EAAAkB,oBAAA,WAQAlB,EAAA4J,qBAAA,EAAA67G,EAAA,2FALIzlH,EAAAoF,sBAGApF,EAHAkxD,sBAAA,eAAAhoD,EAAA65G,OAGA/iH,CAH6B,mBAAAkJ,EAAAmtB,KAAA,KAG7Br2B,CAFsC,QAAAkJ,EAAA+xG,OAAA/xG,EAAAsV,KAAA,KAEtCxe,CADoC,SAAAkJ,EAAA+xG,OAAA/xG,EAAAsV,KAAA,MAInCxe,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA+3C,SAAA/3C,EAAA46G,eAbjBvsH,qBAmD+B,eAAAmuH,EAAlBC,EAAkB,WA2B1B,OAAAjuH,EAPD,SAAAiuH,EACsC9B,EAC1B5D,GAA4B,IAAAwE,EAAA5rH,EAAAjB,KAAAD,EAAAC,KAAA+tH,GADF/tH,KAAAisH,WAC1BjsH,KAAAqoH,MArBLroH,KAAA4mB,KAAO,EAEP5mB,KAAAqjH,OAASrjH,KAAKisH,SAAS5I,QAAU,GAExBrjH,KAAAqpD,QAAUrpD,KAAKisH,SAAS5iE,QAExBrpD,KAAAy+B,KAAOz+B,KAAKisH,SAASxtF,MAAQ,UAE7Bz+B,KAAAmrH,OAASnrH,KAAKisH,SAASd,QAAU,UAEjCnrH,KAAA0tH,UAAoB1tH,KAAKisH,SAASyB,WAAa,EAaxC,QAAnBb,EAAA7sH,KAAKisH,SAAShC,aAAK,IAAA4C,GAAnBA,EAAqB95G,UAAU,SAAC2P,GAAC,OAC7BsV,KAAK8F,IAAI,GAAM78B,EAAK2lB,KAAOlE,GAAK,EAAG,EAE3C,EAAC,EAAArhB,IAAA,eAAAiE,IAdD,WACI,SAAOqrB,EAAAq9F,qBAAqC,IAAjBhuH,KAAK0tH,WAAoB,MACxD,GAAC,CAAArsH,IAAA,WAAAC,MAcM,WAAQ,IAAAwD,EAAA9E,KACXgtC,WAAW,kBAAOloC,EAAK0nG,MAAO,CAAI,EAAG,KACrCx/D,WAAW,kBAAOloC,EAAKonH,cAAe,CAAI,EAAG,IACjD,GAAC,CAAA7qH,IAAA,kBAAAC,MAEM,WACHtB,KAAK2tH,cACT,GAAC,CAAAtsH,IAAA,eAAAC,MAEM,WAAY,IAAA4E,EAAAlG,KACTiuH,EAAMjuH,KAAKqoH,IAAIpgB,cAAcuP,wBACnC,IAAKyW,EAAI9mH,MAAO,OAAO6lC,WAAW,kBAAM9mC,EAAKynH,cAAc,EAAE,KAC7D3tH,KAAKqjH,OAASrrF,KAAK8F,IACf,IACC99B,KAAKisH,SAAS5I,QAAU,KAAO4K,EAAI9mH,OAAS,IAErD,IAAC,CA7C0B,GA6C1B2mH,SA7CQC,0CAAkB3lH,EAAAC,4BAqBfqnG,EAAAvsC,kBAAgB/6D,EAAAC,4BAAAD,EAAA8/F,YAAA,kDArBnB6lB,EAAkBjlH,UAAA,uBAAA4V,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kbAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAhDvBhB,EAAA4J,qBAAA,EAAAk8G,EAAA,2BAAe9lH,EAAA6I,qBAAA,OAAA5H,EAAAmjG,MAAAnjG,EAAAg6G,+ZAgDV0K,CAAkB,4OCjE/B,IAAAnkH,EAAA/L,EAAA,MAmBAyC,EAAAzC,EAAA,OAEAgnD,EAAAhnD,EAAA,OAcAwC,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MACA6xG,EAAA7xG,EAAA,kGAkBYuK,EAAAkB,oBAAA,wBAGIlB,EAAA6I,qBAAA,wCAJR7I,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAm8G,EAAA,iGACK/lH,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAkZ,EAAA+6B,QAAA/6B,EAAA7H,+BAwBWla,EAAA8uD,6BAAA,4BADJ9uD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAo8G,EAAA,2JACKhmH,EAAAoF,sBAGnBpF,EAHmB6I,qBAAA,oBAAAo9G,EAAA5nG,QAGnBre,CAAA,4BAAA+hB,EAAAmkG,UAAAC,8BAGUnmH,EAAAwY,kCAAA,GACIxY,EAAAkB,oBAAA,oIAAKlB,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,IAAAy4G,EAAA5nG,SAAAre,EAAA4iG,gDAGL5iG,EAAA8uD,6BAAA,4BADJ9uD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAw8G,EAAA,8GACKpmH,EAAAoF,sBAGlBpF,EAHkB6I,qBAAA,mBAAAo9G,EAAA5nG,QAGlBre,CAAA,0BAAAimH,EAAA5rH,gCAzBK2F,EADJiF,yBAAA,QACIjF,CADiB,cAqBbA,EAXA4J,qBAAA,EAAAy8G,EAAA,sBAWArmH,CAX0C,EAAAsmH,EAAA,sBAW1CtmH,CAHqC,EAAAumH,EAAA,uBAY7CvmH,EADIkF,wBACJlF,oFAtBQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAAkZ,EAAAvX,KAAAy7G,EAAA5nG,wHAEere,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,4BAQA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,iDAzB3B7I,EAAAwY,kCAAA,GAOIxY,EAAA4J,qBAAA,EAAA48G,EAAA,0EAAMxmH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAo9G,6BARdjmH,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA68G,EAAA,sBAuCJzmH,EAAAkF,iEApCAlF,EAAAoF,sBAENpF,EAFM6I,qBAAA,UAAAkZ,EAAAphB,SAENX,CADI,eAAA+hB,EAAAiC,kCAsCUhkB,EADJiF,yBAAA,WACIjF,CAD2D,YACnCA,EAAAmF,iBAAA,YAC5BnF,EADkCkF,wBAClClF,IA7DZzI,uBAgFI,eAAAmvH,EADSvd,EACT,SAAA3wG,GAqEA,SAAA2wG,EAAoBkF,GAAmB,IAAAx1G,EAAAlB,SAAAC,KAAAuxG,IACnCtwG,EAAAC,EAAAlB,KAAAuxG,IADgBkF,YA7DJx1G,EAAA2lB,KAAO,EAEP3lB,EAAAsxD,OAAgB,CAAEjN,EAAG,GAAKC,EAAG,IAQ7BtkD,EAAA86C,MAAQ,EAMP96C,EAAAilH,WAAa,IAAIt8G,EAAAoV,aAEjB/d,EAAAylH,aAAe,IAAI98G,EAAAoV,aAEnB/d,EAAAklH,QAAU,IAAIv8G,EAAAoV,aAIxB/d,EAAAqtH,UAAwB,GAExBrtH,EAAAob,aAAgC,GAK/Bpb,EAAA8tH,YAAuC,IAAI31G,EAAAuB,gBAAgB,MAE3D1Z,EAAA+tH,YAAc,CAClBhF,OAAQ/oH,EAAK8tH,YAAYjsH,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE8mH,KAAK,IAChDI,WAAYjpH,EAAK8tH,YAAYjsH,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE+mH,SAAS,IACxDE,MAAOhpH,EAAK8tH,YAAYjsH,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAE4jB,IAAI,IAC9C++B,SAAU1kD,EAAK8tH,YAAYjsH,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEuvD,MAAM,KACrDtxD,CAyBF,CAACG,SAAAmwG,EAAA3wG,GAAAd,EAAAyxG,EAAA,EAAAlwG,IAAA,WAAAC,MAlBqC,WAClCtB,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IAC3BvlD,KAAKivH,eACT,GAAC,CAAA5tH,IAAA,OAAAC,MAEM,SACHmlB,GAEA,MAA0B,iBAAZA,EACR,OACAA,aAAmB7c,EAAAyuG,YACnB,WACA,WACV,GAAC,CAAAh3G,IAAA,WAAAC,MAMM,YACH,EAAAujD,EAAAqqE,oBACJ,GAAC,CAAA7tH,IAAA,cAAAC,MAEM,WACCtB,KAAKklD,WACLL,EAAAsB,cAAanmD,KAAKklD,OAE1B,GAAC,CAAA7jD,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAAAt4B,EAAA9E,KACjCo9B,EAAQ8yD,KAAOlwF,KAAKkwF,KACpBlwF,KAAKmvH,aAAYhrH,MAAO,SAAC0f,GAAC,OAAKzhB,QAAQuxF,KAAK9vE,EAAE,GAE9CuZ,EAAQr0B,UACR/I,KAAKovH,kBAELpvH,KAAKklD,SACD9nB,EAAQ5W,OAASxmB,KAAKwmB,MACtBxmB,KAAKqvH,QAAQrvH,KAAKwmB,QAEjB4W,EAAQxW,MACLwW,EAAQxW,KAAK4uF,eAAiBp4E,EAAQxW,KAAKw+F,cAC9ChoF,EAAQm1B,SApLzB,SAAS+8D,EAAYC,EAAWC,GAC5B,OAAOD,EAAGjqE,IAAMkqE,EAAGlqE,GAAKiqE,EAAGhqE,IAAMiqE,EAAGjqE,CACxC,CAmLqB+pE,CACGlyF,EAAQm1B,OAAOijD,cACfp4E,EAAQm1B,OAAO6yD,gBAGvBplH,KAAKivH,iBAGL7xF,EAAQvW,QACRuW,EAAQr0B,UACRq0B,EAAQgpF,QACRhpF,EAAQs1B,UAER1yD,KAAKwD,QAAQ,cAAe,kBAAMsB,EAAK2qH,YAAY,IAIvDryF,EAAQ2e,OACR3e,EAAQ2e,MAAMqpE,eAAiBhoF,EAAQ2e,MAAMy5D,gBAE7Cx1G,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IAC3BvlD,KAAKivH,gBAEb,GAAC,CAAA5tH,IAAA,kBAAAC,MAEM,WACHtB,KAAKmvH,aAAYhrH,MAAO,SAAC0f,GAAC,OAAKzhB,QAAQuxF,KAAK9vE,EAAE,EAClD,GAEA,CAAAxiB,IAAA,aAAAC,MACQ,WAAU,IAAA4E,EAAAlG,KACd,IACI,KAAI,EAAC6kD,EAAAkB,WAAU/lD,KAAKklD,SAAWllD,KAAKsiB,QAChC,OAAOtiB,KAAKwD,QAAQ,cAAe,kBAAM0C,EAAKupH,YAAY,GAE9DzvH,KAAK0vH,qBAAiB,EACtB7qE,EAAA8qE,cAAa3vH,KAAKklD,OAAQ,CACtBr+B,OAAQ7mB,KAAK6mB,OACb9d,SAAU/I,KAAKqc,aACf+pG,OAAQpmH,KAAKomH,OACb1zD,QAAS1yD,KAAK0yD,QACd1wC,QAAShiB,KAAKgiB,SAEtB,OAAa,CACjB,GAEA,CAAA3gB,IAAA,gBAAAC,MACQ,WACJ,KACI,EAAAujD,EAAA8qE,cAAa3vH,KAAKklD,OAAQ,CACtBt+B,KAAM5mB,KAAK4mB,KACXgpG,aAAc5vH,KAAK4mB,KACnB2rC,OAAQvyD,KAAKuyD,OACbs9D,eAAgB7vH,KAAKuyD,OACrBvwC,QAAShiB,KAAKgiB,SAEtB,OAAa,CACjB,GAAC,CAAA3gB,IAAA,aAAAC,OAAAwuH,EAAAtuH,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAAouH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlqH,EAAAnE,EAAAojD,EAAAp+C,EAAA9G,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,aACC9B,EAAA2nG,aAAW,CAAA/lG,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,SACLtD,KAAKwD,QACR,cACA,kBAAMsD,EAAKqoH,aAAYhrH,MAAO,SAAC0f,IAAC,OAAKzhB,QAAQuxF,KAAK9vE,GAAE,EAAC,EACrD,MACH,OAEyC,IAAxCqsG,GAAmB,QAARH,EAAA/vH,KAAKkwF,WAAG,IAAA6/B,OAAA,EAARA,EAAU/8F,gBAAiB,IAC9BptB,SAAS,QAAWsqH,EAAStqH,SAAS,UAAS,CAAA3D,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,qBACzDtD,KAAKkwF,KAAsB,QAAnB8/B,EAAIhwH,KAAKowH,kBAAU,IAAAJ,IAAfA,EAAiB/nB,eAAkBjoG,KAAKsiB,QAAO,CAAArgB,GAAAE,KAAA,SAC3D,OAAAnC,KAAKsiB,SAAU,EACXtiB,KAAKklD,YACLL,EAAA8qE,cAAa3vH,KAAKklD,OAAQ,CACtBr+B,OAAQ7mB,KAAK6mB,OACb9d,SAAU,GACVq9G,OAAQpmH,KAAKomH,OACb1zD,QAAS1yD,KAAK0yD,QACd1wC,QAAShiB,KAAKgiB,WACjB,EACD6iC,EAAAsB,cAAanmD,KAAKklD,SAEtBllD,KAAK0vH,oBACC5tH,KAAMzB,EAAAgD,SACZjB,QAAQO,IAAI,aAAcb,GAC1B0jD,SAASk3C,OAAM,GAAA34F,OACH,cAARjC,EACM,WAAaimD,sBAAmB1nD,EAAAs8F,WAChC,gBAAkB50C,mBAAmBjmD,GAC/C,4DAAAiC,OAC0B,WAAtB2B,SAASwuF,SAAwB,UAAY,IAC9CjyF,GAAAE,KAAA,MACiB0iD,EAAAiB,cAAa,CAC7Bb,QAAwB,QAAjBkrE,EAAEnwH,KAAKowH,kBAAU,IAAAD,OAAA,EAAfA,EAAiBloB,cAC1Bv6F,IAAK1N,KAAKkwF,IACVrpE,OAAQ7mB,KAAK6mB,OACbD,KAAM5mB,KAAK4mB,KACXgpG,aAAc5vH,KAAK4mB,KACnB2rC,OAAQvyD,KAAKuyD,OACbxpD,SAAU/I,KAAKqc,aACf+pG,OAAQpmH,KAAKomH,OACb1zD,QAAS1yD,KAAK0yD,QACd1wC,QAAShiB,KAAKgiB,UAChB,QAXFhiB,KAAKklD,OAAMjjD,GAAA4B,KAYX7D,KAAKsiB,SAAU,EACftiB,KAAK6S,aACD,eACkC,QADpB5M,KACd4+C,EAAAwrE,uBAAsBrwH,KAAKklD,eAAO,IAAAj/C,OAAA,EAAlCA,EAAoC8M,UAAU,SAAC2P,IAEvC5b,EAAKspH,WAAWnoB,cAAcuP,wBAClC1wG,EAAKioH,YAAY5sH,KAAI0sB,EAAA,GAAMnM,KAC3B5b,EAAKo/G,WAAWhnG,KAAKwD,GAAEkE,MACvB9f,EAAK4/G,aAAaxnG,KAAKwD,GAAE6vC,OAC7B,IAEErN,KAASL,EAAAkB,WAAU/lD,KAAKklD,QAC9BllD,KAAKmmH,QAAQjnG,KAAKgmC,EAAOc,UACrBhmD,KAAKwmB,OAAOxmB,KAAKqvH,QAAQrvH,KAAKwmB,OAAOvkB,GAAAE,KAAA,kBAExCnC,KAAKkwF,MAAuB,QAAhB+/B,EAACjwH,KAAKowH,kBAAU,IAAAH,IAAfA,EAAiBhoB,gBAC/BjoG,KAAKsiB,UAELtiB,KAAKwD,QAAQ,cAAe,kBACxBsD,EAAKqoH,aAAYhrH,MAAO,SAAC0f,IAAC,OAAKzhB,QAAQuxF,KAAK9vE,GAAE,EAAC,GAEtD,yBAAA5hB,GAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACJ,SAAAmvH,IAAA,OAAAW,EAAAnrH,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAEO,SAAQ+R,GACZ,GAAKA,GAAOrT,KAAKklD,OACjB,KAAMA,KAAiBL,EAAAkB,WAAU/lD,KAAKklD,QACtC,GAAKA,EACL,KAAMorE,EAAOprE,EAAOc,SAAS3yC,GACxBi9G,IACLtwH,KAAKuyD,OAAS,CACVjN,EAAG,GAAKgrE,EAAKhrE,EAAIgrE,EAAKxgC,EAAI,GAC1BvqC,EAAG,GAAK+qE,EAAK/qE,EAAI+qE,EAAK5jC,EAAI,IAE9B1sF,KAAKivH,gBAAa,EACtB,GAEA,CAAA5tH,IAAA,YAAAC,MACO,SAAUyoE,EAAe5uD,GAC5B,OAAOA,GAAS2wG,QACpB,GAAC,CAAAzqH,IAAA,oBAAAC,MAEO,WAAiB,IAAAo+C,EAAA1/C,KACrBA,KAAKqc,cAAgBrc,KAAK+I,UAAY,IACjCuS,IAAI,SAAC6d,EAAG8W,GAAG,IAAAsgF,EAAA,OAAA1hG,IAAA,GACLsK,GAAC,IACJ1S,QAA0C,QAAnC8pG,EAAE7wE,EAAK8wE,cAAcC,UAAUxgF,UAAI,IAAAsgF,OAAA,EAAjCA,EAAmCtoB,eAAa,GAE5DzsF,OAAO,SAAC2d,GAAC,OAAKA,EAAE1S,OAAO,EAChC,GAAC,CAAAplB,IAAA,kBAAAC,MAEO,WAAe,IAAAg9E,EAAAt+E,KACb0wH,EAAgB1wH,KAAKsuH,WAAa,GACxCtuH,KAAKsuH,WAAatuH,KAAK+I,UAAY,IAAIuS,IACnC,SAAC6d,GAAM,OACHu3F,EAAcxhG,KACV,SAAClsB,GAAC,IAAA2tH,EAAAC,EAAA,OACyB,QAAvBD,EAAA3tH,EAAEsC,IAAIoqG,EAAAvsC,yBAAiB,IAAAwtD,OAAA,EAAvBA,EAAyB7E,YACF,QAAvB8E,EAAA5tH,EAAEsC,IAAIoqG,EAAAvsC,yBAAiB,IAAAytD,OAAA,EAAvBA,EAAyB9E,YAAa3yF,EAAE2yF,QAAQ,IAExDliH,EAAA0uG,SAASb,OAAO,CACZc,UAAW,CACP,CACIhsG,QAASmjG,EAAAvsC,iBACT4tC,SAAQliF,IAAA,CACJi9F,SAAU3yF,EAAE2yF,UACT3yF,EAAE12B,MACF67E,EAAK0wC,eAIpBn/C,OAAQyO,EAAKm4B,WACf,EAEd,KAxHC,IAAAqZ,CAwHA,CAnRD,CAAQxvH,EAAA6H,cAAY2mH,SADXvd,0CAAoBnpG,EAAAC,4BAAAD,EAAAkwG,UAAA,kDAApB/G,EAAoBzoG,UAAA,mBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,oQAApBhB,EAAA4I,qBAAA,2BAAA3H,EAAAwnH,UAAU,KAAAzoH,EAAAwlH,u8BA5EfxlH,EAAAkB,oBAAA,aAuDAlB,EAhDA4J,qBAAA,EAAA8+G,EAAA,qBAgDA1oH,CAhD4C,EAAA2oH,EAAA,YAgD5C3oH,CAzCsC,EAAA4oH,EAAA,yBAAA5oH,EAAA2c,yEATlC3c,EAAAiX,sBAAA,UAAAhW,EAAA6mF,KAEW9nF,EAAAoF,oBAAA,GAAWpF,EAAX6I,qBAAA,OAAA5H,EAAA6mF,IAAW9nF,CAAA,WAAAs9B,GAObt9B,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,EAAAilH,UAAA,KAAAjlH,EAAAilH,UAAAtpH,qXA8DRusG,CACT,iRC7HJ,IAAA3nG,EAAA/L,EAAA,MAYAyC,GAFAzC,EAAA,MAEAA,EAAA,QASAqqF,EAAArqF,EAAA,OACAuC,EAAAvC,EAAA,0HAiCYuK,EAAAkB,oBAAA,gFAXJlB,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2/G,mBAAkB,GAE3B7oH,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAk/G,EAAA,qBACJ9oH,EAAAkF,mEAHQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6/G,mBAAA,8BAEwB/oH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA8/G,qBA3BxC,IAAMC,EAAe,KAUfC,EAAoC,GAE1C3xH,uBAoBkC,eAAA4xH,EAArB/f,EAAqB,SAAA5wG,GAsB9B,SAAA4wG,EACY/tC,EACA3iE,GAAyB,IAAAG,EAAAlB,EAAAC,KAAAwxG,IAEjCvwG,EAAAC,EAAAlB,KAAAwxG,IAHQ/tC,eACAxiE,EAAAH,OAnBIG,EAAA2lB,KAAOyqG,EAENpwH,EAAAilH,WAAa,IAAIt8G,EAAAoV,aACjB/d,EAAAuwH,WAAa,IAAI5nH,EAAAoV,aAG3B/d,EAAAwwH,iBAAkB,EAClBxwH,EAAAkwH,oBAAqB,EACrBlwH,EAAAmwH,oBAAqB,EACrBnwH,EAAAywH,aAAc,EAGbzwH,EAAA0wH,YAAqB,GAwWrB1wH,EAAA2wH,uBAAwB,EA9V5B,IAAMnvH,EACFuB,eAAe4D,QAAQ,kCAAoC,KACzDtG,EAAQ8C,KAAKo1B,MAAM/2B,GACzB,QAAWpB,KAAOC,EACVA,EAAMuwH,eAAexwH,KACrBiwH,EAAajwH,GAAOC,EAAMD,IAEjC,OAAAJ,CACL,CAACG,SAAAowG,EAAA5wG,GAAAd,EAAA0xG,EAAA,EAAAnwG,IAAA,WAAAC,MAEM,WACHtB,KAAKqT,MAAK/S,EAAAs/B,cAAa,GACvB5/B,KAAK+iF,aAAa5gF,MAAK,GACvBnC,KAAK8xH,qBACT,GAAC,CAAAzwH,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAae20F,EAGjCC,EAhBkBltH,EAAA9E,KACrC,IAAKA,KAAKiyH,eACN,OAAOjyH,KAAKwD,QAAQ,aAAc,kBAAMsB,EAAKi6G,YAAY3hF,EAAQ,GAEjEA,EAAQxpB,MAAQ5T,KAAK4T,MACrB5T,KAAKkyH,gBAEL90F,EAAQ5W,OAASxmB,KAAKwmB,OACtBxmB,KAAKmyH,mBAEL/0F,EAAQijB,UACRrgD,KAAKoyH,oBAELh1F,EAAQxW,MAAQ5mB,KAAK4mB,OAAS5mB,KAAK0xH,cACrB,QAAdK,EAAA/xH,KAAKqyH,iBAAS,IAAAN,GAAK,QAALA,EAAdA,EAAgBz2G,WAAG,IAAAy2G,GAAnBA,EAAqBr0D,QAAQ19D,KAAK4mB,OAElCwW,EAAQ2e,QACM,QAAdi2E,EAAAhyH,KAAKqyH,iBAAS,IAAAL,GAAK,QAALA,EAAdA,EAAgB12G,WAAG,IAAA02G,GAAnBA,EAAqBt0D,QAAQ2zD,GAC7BrxH,KAAKkyH,iBAEL90F,EAAQpb,SACRhiB,KAAKsyH,mBAEb,GAAC,CAAAjxH,IAAA,eAAAC,MAEO,SAAa+R,EAAYgf,GAC7Bi/F,EAAaj+G,GAAMgf,EACnBryB,KAAKwD,QAAQ,eAAgB,WACzBQ,eAAeC,QACX,gCACAG,KAAKC,UAAUitH,GAEvB,EACJ,GAAC,CAAAjwH,IAAA,sBAAAC,MAEO,WAAmB,IAAA64C,EAAAj0C,EAAAlG,KACvB,GAAKA,KAAKyjE,aAAa27C,UAAc98G,OAAe0wF,YAApD,CAIA,IAAAu/B,IACsB,QAAlBp4E,EAAAn6C,KAAKc,KAAK+U,gBAAQ,IAAAskC,OAAA,EAAlBA,EAAoBz0C,WAAQ,2BAC9BiB,MAAM,KAAI6rH,EAAAvwG,EAAAswG,EAAA,GAFAzO,EAAI0O,EAAA,GAGVnT,EAAoC,CACtCp6D,QAASjlD,KAAKyyH,WAAWxqB,cACzB11C,OAAQ,CAAE+sD,IAAKlsD,WALTo/D,EAAA,IAK0BjT,IAAKnsD,WAAW0wD,IAChDl9F,KAAMyqG,EACN7R,QAAS,IAETE,EAAgB,KACpB,OAAQ1/G,KAAKyjE,aAAag8C,aACtB,KAAKv3B,EAAA5jE,WAAW+tE,YACZ,EAAA/xF,EAAAqC,KAAI,cAAe,yBACnB+8G,EAAgB,IAAI1sB,YAAY2sB,QAAQC,eACpCP,GAEJ,MACJ,KAAKn3B,EAAA5jE,WAAWguE,OACZ+sB,EAAaQ,YAAc7/G,KAAKyjE,aAAaq8C,aAC7Cx/G,EAAAqC,KAAI,cAAe,oBACnB+8G,EAAgB,IAAI1sB,YAAY2sB,QAAQI,WACpCV,GAIZ,GAAKK,EAAL,CAIA,IAAMW,EACFrgH,KAAKyjE,aAAag8C,cAAgBv3B,EAAA5jE,WAAW+tE,WACvC,IAAIW,YAAYstB,WAAWC,mBAC3B,IAAIvtB,YAAYstB,WAAWE,eACvBxgH,KAAKyjE,aAAaq8C,WAE1B4S,EAAe,IAAI1/B,YAAYgtB,YAAY,CAC7CL,QAASD,IAEb1/G,KAAKqyH,UAAY,CACbr/B,YAAa0/B,EACb9kE,KAAM8xD,EACNpkG,IAAKokG,EAAcQ,SACnBI,WAAY,IAAIttB,YAAY2rB,SAAS+B,kBAAkBL,GACvDM,oBAAqB,IAAI3tB,YAAYstB,WAAWM,mBAAmB,CAC/DC,YAAa6R,KAGrBtwH,QAAQO,IAAI,YAAa3C,KAAKqyH,UAAUr/B,aACxChzF,KAAK+iF,aAAa5gF,MAAK,GACnBnC,KAAK4T,OACL5T,KAAKqyH,UAAU/2G,IAAIoiD,QAAQ2zD,GAC3BrxH,KAAKkyH,iBAETlyH,KAAKsyH,oBAELtyH,KAAKqyH,UAAUr/B,YAAYksB,YAAY,mBAAoB,SAACr7F,GAAC,OACzD3d,EAAKysH,sBAAsB9uG,EAAE,GAEjC7jB,KAAKqyH,UAAUr/B,YAAYksB,YAAY,gBAAiB,SAACr7F,GAAC,OACtD3d,EAAK0sH,mBAAmB/uG,EAAE,GAE9B7jB,KAAKqyH,UAAUr/B,YAAYksB,YAAY,eAAgB,SAACr7F,GAAC,OACrD3d,EAAK2sH,kBAAkBhvG,EAAE,GAE7B7jB,KAAKqyH,UAAUr/B,YAAYksB,YAAY,QAAS,SAACr7F,GAAC,OAC9C3d,EAAK4sH,iBAAiBjvG,EAAE,GAE5B7jB,KAAKwD,QACD,SACA,kBAAMlB,OAAOywH,cAAc,IAAIC,MAAM,UAAU,EAC/C,KAEH1wH,OAAeowH,aAAe1yH,KAAKqyH,UACpCryH,KAAKwD,QAAQ,QAAS,kBAAM0C,EAAKisH,kBAAkB,GACnDnyH,KAAKwD,QAAQ,YAAa,kBAAM0C,EAAK2sH,kBAAkBxB,EAAa,EA9CpE,MAFI,EAAA/wH,EAAA++C,YAAW,iCA3Bf,MAFIr/C,KAAKwD,QAAQ,OAAQ,kBAAM0C,EAAK4rH,qBAAqB,EAAE,IA8E/D,GAAC,CAAAzwH,IAAA,mBAAAC,OAAA2xH,EAAAzxH,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAAguH,EAAA32F,EAAAt2B,EAAA6B,EAAAqrH,EAAAhQ,EAAAnhG,EAAAlb,EAAA9G,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,WACCnC,KAAKmxH,mBAAkB,CAAA/rH,EAAAjD,KAAA,QACvB,OAAAnC,KAAKqyH,UAAU1R,oBAAoBiE,SAAS,MAC5C5kH,KAAKmyH,mBACLnyH,KAAKmxH,oBAAqB,EAAM/rH,EAAA9B,OAAA,oBAG/BtD,KAAKwmB,MAAK,CAAAphB,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,iBAAA8B,SAAAjD,KAAA,EACKnC,KAAKwnC,QAAQxnC,KAAKwmB,OAAM,OAAjC,GACD,OADJ+V,EAAKn3B,EAAAvB,OACN04B,EAAOv3B,OAAM,CAAAI,EAAAjD,KAAA,SACd,SAAA7B,EAAAqU,aAAY,4BAA4BvP,EAAA9B,OAAA,kBAG5CtD,KAAKoxH,oBAAqB,EACLnrH,GACiB,QAAfitH,EADV32F,EAAM,GACSwgF,kBAAU,IAAAmW,GAAQ,QAARA,EAAfA,EAAiB3O,cAAM,IAAA2O,OAAA,EAAvBA,EAAyB1gE,cAAe,CAAC,EAAG,GAAE1qD,EAAAma,EAAAhc,EAAA,GAA9DktH,EAAKrrH,EAAA,GAAEq7G,EAAKr7G,EAAA,GACbka,EAAU,CAAExe,QAAS,IAAO0/G,oBAAoB,GACtDj2B,UAAUy1B,YAAYI,mBAAkB,eAAA5gG,EAAA1gB,EAAAC,IAAAC,KACpC,SAAAC,EAAOgkD,GAA6B,IAAA++C,EAAA2f,EAAAj9G,GAAA,OAAA3F,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAC1BuiG,YAAWpkG,EAAAquF,mBACbw0B,EACAgQ,EACAxtE,EAASq9D,OAAO1vD,SAChB3N,EAASq9D,OAAOzvD,WAEd8wD,EAAkB,CACpB1+G,OAAQ,CACJ25G,IAAK35D,EAASq9D,OAAO1vD,SACrBisD,IAAK55D,EAASq9D,OAAOzvD,WAEzB6wD,YAAa,CAAE9E,IAAK6D,EAAO5D,IAAK4T,GAChCC,WAAY1uB,EAAW,EAAI,UAAY,WAE3CtiG,QAAQO,IAAI,oBAAqB0hH,EAAiB3f,GAAUziG,GAAAE,KAAA,EACvC2E,EAAKurH,UAAU/R,WAC/BzD,SAASwH,GAAgBlgH,MACnB,SAAC0f,IAAK,IAAA4gG,IACT,EAAAnkH,EAAAqC,KACI,cACA,yBACAkhB,GAAEwlC,SAAWxlC,GACb,QAEJ,IAAM8gG,EACF9gG,cAAa6gG,YACJ,QADaD,GACtB5gG,GAAEwlC,eAAO,IAAAo7D,QAAA,EAATA,GAAW7+G,SAAS,WACxBkB,EAAKsqH,oBAAqB,EACrBzM,MACLrkH,EAAAqU,aACI,iDAER,GAAE,OAjBM,GAANvN,GAAMnF,GAAA4B,KAkBD,CAAA5B,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,iBACXlB,QAAQO,IAAI,SAAUyE,IACtBN,EAAKurH,UAAU1R,oBAAoBiE,SAASx9G,IAC5CN,EAAKqqH,oBAAqB,EAC1BrqH,EAAKsqH,oBAAqB,EAAM,yBAAAnvH,GAAAwC,OAAA,EAAA9C,EAAA,IACnC,gBAAAgb,GAAA,OAAAuF,EAAAvd,MAAA3E,KAAA4E,UAAA,EAxCmC,GAyCpC,oBAAMtE,EAAAqU,aAAY,uCAAuC,EACzDqN,GACF,yBAAA5c,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACL,SAAAixH,IAAA,OAAAgC,EAAAtuH,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,oBAAAC,MAEO,SAAkBkV,GAAa,IAAAkpC,EAAA1/C,KACnCA,KAAKwD,QACD,cACA,WACIk8C,EAAKgyE,aAAc,EACnBhyE,EAAK94B,KAAOpQ,EACZkpC,EAAKwmE,WAAWhnG,KAAK1I,GACrBkpC,EAAKl8C,QACD,oBACA,kBAAOk8C,EAAKgyE,aAAc,CAAK,EAC/B,GAER,EACA,IAER,GAAC,CAAArwH,IAAA,wBAAAC,MAEO,SAAsBuU,GAAa,IAAAyoE,EAAAt+E,KACjCqT,EAAKwC,EAASw9G,YAAcx9G,EAASxC,IAC3C,EAAA/S,EAAAqC,KAAI,cAAa,yBAAAoB,OAA2BsP,EAAE,MAC9C,IAAMigH,EAASz9G,EAASy9G,QAAU,GAMlC,GALAtzH,KAAK2xH,YAAc5oG,OAAOC,KAAKsqG,GAAQh4G,IAAI,SAACja,GAAG,OAAAwtB,EAAA,CAC3Ck7C,MAAO1oE,GACJiyH,EAAOjyH,GAAI,IAChB,EACFf,EAAAqC,KAAI,cAAe,cAAe3C,KAAK2xH,aAClC3xH,KAAKqyH,UACV,KAAMj6G,EAAMpY,KAAKc,KAAKgV,UAAUoZ,KAC5B,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOA,GAAMrQ,EAAEwQ,SAAWH,CAAE,GAEzCrT,KAAKwD,QAAQ,YAAa,YACA86E,EAAKi1C,qBACL19G,EAAS29G,cAC3Bl1C,EAAKs0C,mBAAmB/8G,EAAS29G,aAEzC,GACKp7G,IACLpY,KAAKc,KAAK+U,SAAWuC,GACzB,GAAC,CAAA/W,IAAA,qBAAAC,MAAA,eAAAmyH,EAAAjyH,EAAAC,IAAAC,KAEO,SAAAsE,EAAyB+jE,GAAU,IAAAlpC,EAAAxtB,EAAAyO,EAAA4xG,EAAA,OAAAjyH,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAGE,MAFzC7B,EAAAqC,KAAI,cAAa,sBAAAoB,OAAwBgmE,EAAK,MACxClpC,EAAQ7gC,KAAK2xH,YAAYziG,KAAK,SAAClsB,GAAC,OAAKA,EAAE+mE,QAAUA,CAAK,GACtD12D,EAAKwtB,GAAOwyF,YAAcxyF,GAAOxtB,GAClCrT,KAAKqyH,UAAS,CAAAlsH,EAAAhE,KAAA,eAAAgE,EAAA7C,OAAA,iBAAA6C,SAAAhE,KAAA,EACEnC,KAAKc,KAAK07D,cAAc15D,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAA1D,GAAN6e,EAAM3b,EAAAtC,KACD,CAAAsC,EAAAhE,KAAA,gBAAAgE,EAAA7C,OAAA,kBACyD,GAA9DowH,EAAY5xG,EAAOoN,KAAK,SAAClsB,GAAC,OAAKA,EAAEwQ,SAAWH,GAAMrQ,EAAEqQ,KAAOA,CAAE,GACrD,CAAAlN,EAAAhE,KAAA,gBAAAgE,EAAA7C,OAAA,kBACdtD,KAAK4T,KAAO8/G,EACZ1zH,KAAKwxH,WAAWtyG,KAAKw0G,GAAW,yBAAAvtH,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACnC,gBAAA4yH,EAAAt5F,GAAA,OAAAm6F,EAAA9uH,MAAA3E,KAAA4E,UAAA,EAbA,IAaA,CAAAvD,IAAA,mBAAAC,MAEO,SAAiBwsB,GAAU,IAAA6lG,EAAAC,EAAAC,GAC/B,EAAAvzH,EAAAqC,KAAI,cAAa,iBAAoBmrB,GACrC,IAAMza,GACc,QAAhBsgH,EAAA7lG,EAAMivF,kBAAU,IAAA4W,OAAA,EAAhBA,EAAkBN,cACF,QADYO,EAC5B9lG,EAAMivF,kBAAU,IAAA6W,OAAA,EAAhBA,EAAkB5W,SAClBlvF,EAAMza,GACJq/C,GAAuB,QAAbmhE,EAAA7zH,KAAKqgD,gBAAQ,IAAAwzE,OAAA,EAAbA,EAAenhE,UAAW,IAC1C,EAAApyD,EAAAqC,KAAI,cAAa,qBAAwB+vD,GACzC,IAC4Bp7B,EADtBw8F,EAAiB,CAAC,YAAa,aAAc,QAAS,SAASz8F,EAAAa,EAChDw6B,GAAO,IAA5B,IAAAr7B,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA8B,KAAnBrS,EAAMuR,EAAAh2B,MACb,IACKykB,EAAO1S,KAAOA,GAAoB,MAAd0S,EAAO1S,MAC3BygH,EAAeluH,SAASmgB,EAAOA,QAClC,CACEA,EAAOC,SAAS8H,GAChB,KACJ,CACJ,CAAC,OAAAxE,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,GAAC,CAAA93B,IAAA,UAAAC,MAAA,eAAAyyH,EAAAvyH,EAAAC,IAAAC,KAEO,SAAAmF,EAAcwsB,GAAa,IAAAgrF,EAAA,OAAA58G,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,UAC1BnC,KAAKqyH,UAAS,CAAAtrH,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,wBAAAyD,EAAAzD,OAAA,SACD,QADC+6G,EACZrrB,mBAAW,IAAAqrB,OAAA,EAAXA,EAAaM,SAASC,iBAAiBC,aAAa,CACvD9yE,EAAG1Y,KACL,wBAAAtsB,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IACL,gBAAAwnC,EAAA1N,GAAA,OAAAi6F,EAAApvH,MAAA3E,KAAA4E,UAAA,EAPA,IAOA,CAAAvD,IAAA,oBAAAC,MAAA,eAAA0yH,EAAAxyH,EAAAC,IAAAC,KAEO,SAAAi+C,IAAA,IAAAs0E,EAAAptG,EAAA6T,EAAArnB,EAAAqrE,EAAA1+E,KAAA,OAAAyB,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,UACCnC,KAAKqyH,UAAS,CAAAvxE,EAAA3+C,KAAA,eAAA2+C,EAAAx9C,OAAA,iBACbujB,GAAsB,QAAbotG,EAAAj0H,KAAKqgD,gBAAQ,IAAA4zE,OAAA,EAAbA,EAAeptG,SAAU,GAAE6T,EAAAj5B,IAAAC,KAAA,SAAAg5B,IAAA,IAAArI,EAAA6hG,EAAAlhH,EAAA,OAAAvR,IAAAO,KAAA,SAAAg+C,GAAA,cAAAA,EAAA99C,KAAA89C,EAAA79C,MAAA,UAEjC0kB,EAAOxT,GAAIorB,KAAI,CAAAuhB,EAAA79C,KAAA,eAAA69C,EAAA18C,OAAA,mBACW,GAA3B+uB,EAAWi/F,EAAaj+G,GACf,CAAA2sC,EAAA79C,KAAA,SACH+xH,SAAY7gH,EAAGu0B,QAAQ,IAAK,IAAGoY,EAAA79C,KAAA,EAClBu8E,EAAKl3C,QAAQ0sF,GAAU,OAAhC,IAAJlhH,EAAIgtC,EAAAn8C,MACAmB,OAAM,CAAAg7C,EAAA79C,KAAA,gBAAA69C,EAAA18C,OAAA,qBAChB+uB,EAAWrf,EAAKkc,KACZ,SAAClsB,GAAC,IAAAmxH,GAAAC,GAAA,OACc,QAAZD,GAAAnxH,EAAE+5G,kBAAU,IAAAoX,QAAA,EAAZA,GAAcd,cAAea,IACjB,QAAZE,GAAApxH,EAAE+5G,kBAAU,IAAAqX,QAAA,EAAZA,GAAcpX,UAAWkX,GACzBlxH,EAAEqQ,KAAO6gH,CAAS,KAEZx1C,EAAK21C,aAAahhH,EAAIgf,GAAU,WAE7CA,EAAQ,CAAA2tB,EAAA79C,KAAA,gBAAA69C,EAAA18C,OAAA,oBAObo7E,EAAK2zC,UAAUr/B,YAAYsyB,eAAejzF,EAAShf,GANrC,CACVihH,gBAAiB,EACjBC,kBAAkB,EAClBhP,gBAAgB,EAChBK,iBAAkB/+F,EAAOxT,GAAIorB,OAE6B,yBAAAuhB,EAAAv7C,OAAA,EAAAi2B,EAAA,GAAAomB,EAAA58C,GAAAzC,IAAAunB,KAtBjDnC,GAAM,WAAAi6B,EAAAznB,GAAAynB,EAAA58C,MAAAk0B,KAAA,CAAA0oB,EAAA3+C,KAAA,SAAZkR,SAAEytC,EAAAznB,GAAA/3B,MAAAw/C,EAAAE,cAAAtmB,IAAA,sBAAAomB,EAAA5B,GAAA,CAAA4B,EAAA3+C,KAAA,gBAAA2+C,EAAAx9C,OAAA,sBAAAw9C,EAAA3+C,KAAA,iCAAA2+C,EAAAr8C,OAAA,EAAAk7C,EAAA3/C,KAAA,IAwBhB,gBAAAoyH,IAAA,OAAA4B,EAAArvH,MAAA3E,KAAA4E,UAAA,EA7BA,IA6BA,CAAAvD,IAAA,mBAAAC,MAAA,eAAAkzH,EAAAhzH,EAAAC,IAAAC,KAEO,SAAAg/C,IAAA,IAAA+zE,EAAAC,EAAAn4F,EAAA9gB,EAAA0G,EAAA6lB,EAAAu3E,EAAAD,EAAAvgC,EAAA/+E,KAAA,OAAAyB,IAAAO,KAAA,SAAA6+C,GAAA,cAAAA,EAAA3+C,KAAA2+C,EAAA1+C,MAAA,UACCnC,KAAKwmB,MAAK,CAAAq6B,EAAA1+C,KAAA,eAAA0+C,EAAAv9C,OAAA,iBAAAu9C,SAAA1+C,KAAA,EACKnC,KAAKwnC,QAAQxnC,KAAKwmB,OAAM,OAAjC,GACD,OADJ+V,EAAKskB,EAAAh9C,OACN04B,EAAOv3B,OAAM,CAAA67C,EAAA1+C,KAAA,QACd,SAAA7B,EAAAqU,aAAY,4BAA4BksC,EAAAv9C,OAAA,iBAGtCmY,EACF8gB,EAAMrN,KAAK,SAAClsB,GAAC,IAAA2xH,EAAA,OAAiB,QAAZA,EAAA3xH,EAAE+5G,kBAAU,IAAA4X,OAAA,EAAZA,EAActB,cAAet0C,EAAKv4D,KAAK,IACzD+V,EAAM,GAAEpa,GACsB,QAAfsyG,EAAAh5G,EAAKshG,kBAAU,IAAA0X,GAAQ,QAARA,EAAfA,EAAiBlQ,cAAM,IAAAkQ,OAAA,EAAvBA,EAAyBjiE,cAAe,CAAC,EAAG,GAAExqB,EAAA/lB,EAAAE,EAAA,GAA1Do9F,EAAGv3E,EAAA,GAAEs3E,EAAGt3E,EAAA,GACfhoC,KAAKqyH,UAAU/2G,IAAIoiD,QAAQ2zD,GAC3BrxH,KAAKqyH,UAAU/2G,IAAI2nG,UAAU,CAAE3D,MAAKC,QACpCv/G,KAAKqyH,UAAUr/B,YAAYwxB,SAAwB,QAAhBkQ,EAACj5G,EAAKshG,kBAAU,IAAA2X,OAAA,EAAfA,EAAiB7zF,OACrD7gC,KAAKqyH,UAAUr/B,YAAYsxB,UAAU,CAAC7oG,EAAKpI,KAAK,yBAAAwtC,EAAAp8C,OAAA,EAAAi8C,EAAA1gD,KAAA,IACnD,gBAAAmyH,IAAA,OAAAqC,EAAA7vH,MAAA3E,KAAA4E,UAAA,EAjBA,IAiBA,CAAAvD,IAAA,gBAAAC,MAEO,WAAa,IAAAszH,EAAA50H,MACZA,KAAKqyH,YAAcryH,KAAK4T,MAC7B5T,KAAKwD,QAAQ,aAAc,WACvB,IAAM4U,EAAMw8G,EAAK9zH,KAAKgV,UAAUoZ,KAC5B,SAAC9W,GAAG,OAAKA,EAAI/E,KAAOuhH,EAAKhhH,KAAKC,SAAS,GAE3C,GAAKuE,EACL,KAAAy8G,EAAoBz8G,GAAK1S,SAASiB,MAAM,KAAImuH,EAAA7yG,EAAA4yG,EAAA,GAAhC/Q,EAAIgR,EAAA,GAChBF,EAAKvC,UAAU/2G,IAAI2nG,UAAU,CACzB3D,IAAKlsD,WAFC0hE,EAAA,IAGNvV,IAAKnsD,WAAW0wD,KAEpB8Q,EAAKrB,mBAAiB,CAC1B,EACJ,GAAC,CAAAlyH,IAAA,oBAAAC,MAEO,WACJ,IAAKtB,KAAK4T,KAAKJ,SAAWxT,KAAKqyH,UAAW,OAAO,EACjD,IAAM7+G,EAASxT,KAAK4T,KAAKJ,OACnBqtB,EAAQ7gC,KAAK2xH,YAAYziG,KAC3B,SAAClsB,GAAC,OACEA,EAAE+mE,QAAUv2D,GAAUxQ,EAAEqwH,aAAe7/G,GAAUxQ,EAAEqQ,KAAOG,CAAM,GAExE,QAAKqtB,IACL7gC,KAAKqyH,UAAUr/B,YAAYwxB,SAAS3jF,EAAMkpC,QACnC,EACX,GAAC,CAAA1oE,IAAA,oBAAAC,MAIO,WAAiB,IAAAgpE,EACrB,GAAiB,QAAbA,EAACtqE,KAAKgiB,eAAO,IAAAsoD,GAAZA,EAAc5mD,WAAY1jB,KAAK4xH,sBACpC,KAAM3sE,EAAUO,SAASC,cAAc,OACvC,IAAIutC,YAAY+uB,cAAc98D,EAASjlD,KAAKqyH,UAAUr/B,aAClDhzF,KAAKyjE,aAAag8C,cAAgBv3B,EAAA5jE,WAAW+tE,WAC7CryF,KAAKqyH,UAAU/2G,IAAIoI,SACfyvE,OAAOrwE,KAAKk/F,gBAAgBC,WAC9BhpF,KAAKgsB,GAEPjlD,KAAKqyH,UAAU/2G,IAAI4mG,WAAW,CAC1BC,MAAO,kBAAMl9D,CAAO,EACpBm9D,SAAU,WAAO,IAGzBpiH,KAAK4xH,uBAAwB,EACjC,KA5OC,IAAAqB,CA4OA,CA1Y6B,CAAQ3yH,EAAA6H,cAAYopH,SAAzC/f,0CAAoBppG,EAAAC,4BAAAC,EAAAs7D,mBAAAx7D,EAAAC,4BAAAG,EAAAC,qBAAA,kDAApB+oG,EAAoB1oG,UAAA,mBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,gzBAjBzBhB,EAAAkB,oBAAA,aACAlB,EAAA4J,qBAAA,EAAA+iH,EAAA,uBACK3sH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmd,QAAAnd,EAAAooH,kBAAA,MAAApoH,EAAA2Y,QAAA,KAAA3Y,EAAA2Y,QAAA0B,sFAeA8tF,CAAqB,sKC1DlC,SAAgBwjB,EAAU1zH,GAEtB,QAF8C0D,EAAAJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAC3Do9E,EAAG,GAAAj+E,OAAMzC,GACN0gF,EAAIh9E,OAASA,GAAQg9E,EAAG,IAAAj+E,OAAOi+E,GACtC,OAAOA,CACX,CAJAriF,YAAAq1H,EAMAr1H,oBAG8B,eAAAs1H,EAAjBC,EAAiB,kBAAAp1H,EAAA,SAAAo1H,IAAAn1H,EAAAC,KAAAk1H,EAAA,IAAA7zH,IAAA,YAAAC,MACnB,SAAU0D,GACb,IAAIg9E,EAAG,GAAAj+E,OAAMixH,EAAUh9F,KAAK6I,MAAM77B,EAAS,IAAM,IAAG,KAAAjB,OAAIixH,EACpDhwH,EAAS,KAEP47B,EAAQ5I,KAAK6I,MAAM77B,EAAS,GAAK,IACvC,OAAI47B,EAAQ,IACRohD,EAAG,GAAAj+E,OAAMixH,EAAUp0F,GAAM,KAAA78B,OAAIi+E,IAE1BA,CACX,IAAC,CAVyB,GAUzBizC,SAVQC,yCAAiB,mEAAjBA,EAAiB/5F,MAAA,IAAjB+5F,CAAiB,uLCT9Bv1H,yBAyCmC,eAAAw1H,EAAtBC,EAAsBt1H,EAAA,SAAAs1H,IAAAr1H,EAAAC,KAAAo1H,EAAA,GAAAD,SAAtBC,yCAAsB,kDAAtBA,EAAsBtsH,UAAA,wBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBAlCsBoiB,UAAAC,MAAAC,EAAA,6HAGGF,UAAAG,MAAAD,EAAA,uLAIlBF,UAAAI,MAAAF,EAAA,4UAP9BtnB,EAJJiF,yBAAA,UAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAGAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,sVAwBKgtH,CAAsB,mLC3CnC,IAAAxrH,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,+GAUQuK,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,uBAAAyiE,EAAArrE,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAASwa,SAAAhG,OAAA7G,KAAAu0D,EAAApgE,IAAoBjL,EAAAoJ,sBAAAua,EAAAygF,MAAS,EAAK,GAE3CpkG,EAAAkB,oBAAA,gBACJlB,EAAAkF,2FAJIlF,EAAAkxD,sBAAA,MAAAvtC,EAAAygF,MAAA,IAAA+hB,EAAA,WAGUnmH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAwiE,IAXtB9zE,sBAoDiC,eAAA01H,EAApBC,EAAoB,SAAA10H,GApDjC,SAAA00H,IAAA,IAAAr0H,EAAAlB,SAAAC,KAAAs1H,2BAsDoB5iE,QAA0B,GAEzBzxD,EAAA8kB,OAAS,IAAInc,EAAAoV,aAAuB/d,EAOxDG,SAAAk0H,EAAA10H,GAAAd,EAAAw1H,EAAA,EAAAj0H,IAAA,QAAAC,MAHU,WAAK,IAAAwD,EAAA9E,KACRA,KAAKwD,QAAQ,QAAS,kBAAOsB,EAAK0nG,MAAO,CAAK,EAClD,IAAC,CAV4B,CAAQlsG,EAAA6H,cAAYktH,SAAxCC,qGAAmBh2F,GAAnBg2F,EAAmB,qDAAnBA,EAAmBxsH,UAAA,oBAAAqW,OAAA,CAAAuzC,QAAA,WAAAtzC,QAAA,CAAA2G,OAAA,UAAAhd,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,wQAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjDxBhB,EAAA4J,qBAAA,EAAAujH,EAAA,gBAUAntH,EAAAiF,yBAAA,cAMIjF,EADA4I,qBAAA,0BAAA3H,EAAAmjG,MAAAnjG,EAAAmjG,IAAA,EACApkG,CADsB,0BAAAiB,EAAAmjG,KACCnjG,EAAA3B,QAAU,EAAE,KAAAU,EAAAwlH,2BAEnCxlH,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GACdnF,EAD8CkF,wBAC9ClF,UAfqBA,EAAA6I,qBAAA,UAAA5H,EAAAqpD,SAUjBtqD,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAmjG,MAIUpkG,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAmjG,KAAA,8fA+BT8oB,CAAoB,wNC5DjCz3H,EAAA,WACAwxG,EAAAxxG,EAAA,MAQAg0C,GAPAh0C,EAAA,MAOAA,EAAA,sGAQYuK,EAAAkB,oBAAA,oFAGIlB,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,IAAAuU,EAAA1D,SAAAre,EAAA4iG,2BAThBrrG,qBAeI,eAAA61H,EADSC,EACT,SAAAziF,GAQA,SAAAyiF,EAAoBjf,EAA2Bkf,GAAsB,IAAAz0H,EAAAlB,SAAAC,KAAAy1H,IACjEx0H,EAAAC,EAAAlB,KAAAy1H,IADgBjf,WAA2Bv1G,EAAAy0H,QALxCz0H,EAAAwlB,QAAkB,GACjBxlB,EAAA21G,aAA2B,KAAK31G,CAMxC,CAACG,SAAAq0H,EAAAziF,GAAAlzC,EAAA21H,EAAA,EAAAp0H,IAAA,WAAAC,MAEM,WACHtB,KAAK+U,MACT,GAAC,CAAA1T,IAAA,kBAAAC,MAEM,WACHtB,KAAKymB,QAAUzmB,KAAK01H,MAAMztB,cAAc0tB,SAC5C,GAAC,CAAAt0H,IAAA,cAAAC,MAEM,WACH81G,EAAAC,EAAAoe,EAAA5xB,WAAA,cAAA7jG,MAAAo/C,KAAAp/C,MACAA,KAAK0H,OACT,GAAC,CAAArG,IAAA,OAAAC,MAEM,WAAI,IAAAwD,EAAA9E,KACPA,KAAKwD,QACD,OACA,WACQsB,EAAK8xG,cAAc9xG,EAAK4C,QACvB5C,EAAKyyG,UAGVzyG,EAAK8xG,aAAe9xG,EAAK0xG,SAASiB,OAAO,CACrCC,aAAa,EACbC,iBAAkB7yG,EAAK0xG,SAClB7wD,WACAiyD,oBAAoBpyD,SAASzU,MAC7B8mE,cAAc,CACX,CACIC,QATE,MAUFC,QATE,MAUFC,SAXE,MAYFC,SAXE,WAelBnzG,EAAK8xG,aAAasB,OAAOpzG,EAAKyyG,SAClC,EACA,GAER,GAAC,CAAAl2G,IAAA,QAAAC,MAEM,WACHtB,KAAK8D,aAAa,QACd9D,KAAK42G,eACL52G,KAAK42G,aAAawB,UAClBp4G,KAAK42G,aAAe,KAE5B,IAAC,CA3DD,CAAQ/kE,EAAA1pC,cAAYqtH,SADXC,0CAAkBrtH,EAAAC,4BAAAC,EAAAkwG,SAAApwG,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAAlButB,EAAkB3sH,UAAA,sBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,2BAOhBimG,EAAAoJ,UAAS,4YAlBhBrwG,EAAAg+F,uBAAA,GAEAh+F,EAAA4J,qBAAA,EAAA4jH,EAAA,iGASKH,CACT,iLCzBJ53H,EAAA,WACAuC,EAAAvC,EAAA,SAEAA,EAAA,OACAA,EAAA,iDAEA8B,oBAK8B,eAAAk2H,EAAjBC,EAAiB,WACoF,OAAAh2H,EAA9G,SAAAg2H,EAAoBj1H,EAAoCC,EAAmC0P,GAAezQ,EAAAC,KAAA81H,GAAtF91H,KAAAa,YAAoCb,KAAAc,OAAmCd,KAAAwQ,SAAkB,EAAC,EAAAnP,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAEvG,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKa,UAAUgC,YAAYC,QAAK1C,EAAA2C,OAAM,SAAAC,GAAC,OAAIA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EAC1DnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAAAC,GAAC,OAAIA,CAAC,IAAGC,YAAW,UACtDjD,KAAKa,UAAUyE,IAAI,qBAAoB,CAAArD,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAC5CtD,KAAKwQ,QAAQK,SAAS7Q,KAAKa,UAAUyE,IAAI,qBAAqBqB,MAAM,MAAM,wBAAA1E,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC7E,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,MAP6G,IAAArD,CAO7G,CARyB,GAQzBs0H,SARQC,0CAAiB1tH,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAyE,QAAA,kDAAjB2oH,EAAiBhtH,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAAjBysH,CAAiB,yMCX9B,IAAA53H,EAAAL,EAAA,UACAA,EAAA,kIAsBgBuK,EAAAiF,yBAAA,wBAGIjF,EAAA4I,qBAAA,uBAAAyiE,EAAArrE,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAwiC,UAAAklB,GAAe,GAExBrrE,EAAAmF,iBAAA,GACJnF,EAAAkF,mDAJIlF,EAAA6I,qBAAA,QAAAwiE,EAAApgE,IAGAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAgmE,EAAAh+D,cAAAg+D,EAAAlgE,KAAA,MAzBpB5T,wBAgCkC,eAAAo2H,EAArBC,EAAqBl2H,EAY9B,SAAAk2H,EACuCrvF,EAC3B7lC,GAAyB,IAAAG,EAAAjB,KAAAD,EAAAC,KAAAg2H,GADEh2H,KAAA2mC,QAC3B3mC,KAAAc,OAbId,KAAAm3C,QAAUn3C,KAAKc,KAAKwuD,YACpBtvD,KAAAk3C,OAASl3C,KAAKc,KAAKyuD,cAEnBvvD,KAAAuuD,UAAS,eAAAtoD,EAAAzE,EAAAC,IAAAC,KAAG,SAAAC,EAAOywB,GAAC,IAAAszE,EAAA,OAAAjkG,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC1BlB,EAAKH,KAAKytD,UAAUn8B,GAAE,OAC5BnxB,EAAKH,KAAKuX,aAAapX,EAAKH,KAAK+U,SAASxC,IAChC,QAAVqyF,EAAAzkG,EAAK0lC,aAAK,IAAA++D,GAAVA,EAAYh+F,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA,IACvB,gBAAAgb,GAAA,OAAA1W,EAAAtB,MAAA3E,KAAA4E,UAAA,EAJwB,GAMT5E,KAAA0H,MAAQ,eAAAgjG,EAAA,OAAgB,QAAhBA,EAAMzpG,EAAK0lC,aAAK,IAAA+jE,OAAA,EAAVA,EAAYhjG,OAAO,CAK9C,GAACquH,SAfKC,0CAAqB5tH,EAAAC,4BAalBnK,EAAAynG,mBAAiBv9F,EAAAC,4BAAAC,EAAAG,qBAAA,kDAbpButH,EAAqBltH,UAAA,oBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAjByBoiB,UAAAC,MAAAC,EAAA,ifAZnDtnB,EAAAiF,yBAAA,WAEIjF,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GAGZU,EADJiF,yBAAA,UACIjF,CADqC,gBACVA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,+DAIRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA8DvlB,EAAAkF,yBAC9DlF,EAAAiF,yBAAA,uDAIIjF,EAAA4J,qBAAA,GAAAikH,EAAA,yDAQR7tH,EADIkF,wBACJlF,UAlBYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAimD,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAA6tC,SAAA,KAAAwc,EAAAj+C,gBAAA,OAAAi+C,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAA6tC,SAAA,KAAAwc,EAAAngD,MAAA,KAOJnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,iBAAA89C,EAAA3mD,EAAAwN,sBAAA,KAAAvM,EAAA6tC,SAAA,KAAA6X,EAAA17C,IAIqBjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAA8tC,gIAWxB6+E,CAAqB,mICnClCn4H,EAAA,gCAEA8B,WAGqB,eAAAu2H,EAARhlB,EAAQ,WAGjB,OAAApxG,EAFA,SAAAoxG,EAAoBilB,GAAuBp2H,EAAAC,KAAAkxG,GAAvBlxG,KAAAm2H,WAA0B,EAE9C,EAAA90H,IAAA,YAAAC,MAKO,SACHA,GAGA,OAFAsD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyD,QAGrD,IAAK,WACD,OAAO5E,KAAKm2H,UAAUC,+BAA+B90H,GACzD,IAAK,MACD,OAAOtB,KAAKm2H,UAAUE,uBAAuB/0H,GACjD,IAAK,SACD,OAAOtB,KAAKm2H,UAAUG,0BAA0Bh1H,GACpD,IAAK,QACD,OAAOtB,KAAKm2H,UAAUI,yBAAyBj1H,GACnD,QACI,OAAOtB,KAAKm2H,UAAUK,wBAAwBl1H,GAE1D,IAAC,CAxBgB,GAwBhB40H,SAxBQhlB,0CAAQ9oG,EAAAC,4BAAAC,EAAAmuH,aAAA,8DAARvlB,EAAQ/1E,MAAA,IAAR+1E,CAAQ,uICLrBrzG,EAAA,gCAEK64H,EAAL,SAAKA,GACDA,WAAAC,KAAA,UACAD,IAAAE,KAAA,UACAF,IAAAG,MAAA,WACAH,IAAAI,OAAA,YACAJ,IAAA75B,IAAA,SACA65B,IAAAK,aAAA,kBANCL,CAOL,CAPA,CAAKA,GAAe,IASpB/2H,eAGyB,eAAAq3H,EAAZtkB,EAAY,WAC0B,OAAA5yG,EAA/C,SAAA4yG,EAAoByjB,GAAuBp2H,EAAAC,KAAA0yG,GAAvB1yG,KAAAm2H,WAA0B,EAAC,EAAA90H,IAAA,YAAAC,MAE/C,SACIA,GAGA,OAFAsD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyD,QAGrD,IAAK,WACD,OAAO5E,KAAKm2H,UAAUc,SAASP,EAAgBK,aAAcz1H,GACjE,IAAK,MACD,OAAOtB,KAAKm2H,UAAUc,SAASP,EAAgB75B,IAAKv7F,GACxD,IAAK,SACD,OAAOtB,KAAKm2H,UAAUc,SAASP,EAAgBI,OAAQx1H,GAC3D,IAAK,QACD,OAAOtB,KAAKm2H,UAAUc,SAASP,EAAgBG,MAAOv1H,GAC1D,QACI,OAAOtB,KAAKm2H,UAAUc,SAASP,EAAgBE,KAAMt1H,GAEjE,IAAC,CAnBoB,GAmBpB01H,SAnBQtkB,0CAAYtqG,EAAAC,4BAAAC,EAAAmuH,aAAA,kEAAZ/jB,EAAYv3E,MAAA,IAAZu3E,CAAY,8PCfzB,IAAA9oG,EAAA/L,EAAA,MAQAyC,EAAAzC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,uQA8BgBuK,EANJiF,yBAAA,UAMIjF,CADH,gFAOOA,EAAA4I,qBAAA,kBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAUF,EAAA4lH,UAAA/lH,EAAAgmH,SAAyB,GAE3C/uH,EADKkF,wBACLlF,iDAVIA,EAAAkxD,sBAAA,uBAGIlxD,EAAAoF,sBACApF,EADA6I,qBAAA,UAAAK,EAAAwN,SAAA9Z,UAAA,OAAA+Y,EAAA3V,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAAr5G,EAAA/Y,QACAoD,CAD4D,gBAAAkJ,EAAAwN,SAAA9Z,OAAA,GAAAsM,EAAAwN,SAAA9Z,QAAA,OAAAgZ,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAAp5G,EAAAhZ,mCA8BhEoD,EAAAiF,yBAAA,iBAIIjF,EAAAmF,iBAAA,GAKJnF,EAAAkF,yGALIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA6D,EAAAkL,KAAA,KAAAlL,EAAAkL,KAAAnb,OAAAg2H,EAAAh2H,KAAA,MAAAiQ,EAAAkL,MAAAlL,EAAAkL,KAAAyvE,QAAA,mGA1BR7jF,EAAAiF,yBAAA,cAgBIjF,EAAA4I,qBAAA,uBAAAqmH,EAAAjvH,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAgmH,QAAAD,EAAAh2H,KAAmB,GAK5B+G,EAAAiF,yBAAA,WAAyBjF,EAAAmF,iBAAA,GAA+BnF,EAAAkF,yBACxDlF,EAAA4J,qBAAA,EAAAulH,EAAA,mBAUJnvH,EAAAkF,2FA1BIlF,EAAAkxD,sBAAA,gBAAAytC,GAAAz1F,EAAAkmH,WAAA,cAAAzwB,GAAAz1F,EAAAkmH,WAAA,OAaApvH,EANAiX,sBAAA,uBAAA/N,EAAAmmH,WAAA,IAAAJ,EAAAI,SAMArvH,CAJC,gBAAAkJ,EAAAkL,KAAA,KAAAlL,EAAAkL,KAAAnb,OAAAg2H,EAAAh2H,IAID+G,CAFyC,WAAA2+F,IAAAz1F,EAAAomH,eAAA1yH,OAAA,EAEzCoD,CADkD,QAAAivH,EAAA99D,MAdlDnxD,EAAA6I,qBAAA,eAAAomH,EAAAh2H,KAiByB+G,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAkjH,EAAA9jH,MAAA8jH,EAAAh2H,KAGpB+G,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAmmH,WAAA,IAAAJ,EAAAI,wEAmBLrvH,EAAAiF,yBAAA,0CAOIjF,EADA4I,qBAAA,wBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAAwhH,EAAAvvH,EAAAmJ,0BAAAw4D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsmH,WAAAD,EAAA,EACAvvH,CAD6B,wBAAAA,EAAAgJ,wBAAA+E,GAAA,IAAAwhH,EAAAvvH,EAAAmJ,0BAAAw4D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsmH,WAAAD,EAAA,GAG7BvvH,EAAAiF,yBAAA,qBAEIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,EAAAgJ,wBAAA+E,GAAA,IAAAwhH,EAAAvvH,EAAAmJ,0BAAAw4D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAUF,EAAA6nE,OAAAw+C,EAAAxmH,EAAAgmH,SAAyB,GAE3C/uH,EADKkF,wBACLlF,mFATIA,EAAAkxD,sBAAA,uBACAlxD,EAAAiX,sBAAA,WAAAs4G,KAAA,OAAAh3G,EAAAvY,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAAz2G,EAAA3b,QAAA,GAKIoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAAwN,SAAAlZ,SAAA+xH,8BAuBIvvH,EAAAiF,yBAAA,aAOIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,4EADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAoqH,EAAAljB,OAAA,qCATRvsG,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GACAnF,EAAA4J,qBAAA,EAAA8lH,EAAA,eASJ1vH,EAAAkF,mHAVIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA2/D,EAAAyqD,EAAAx2H,KAAA,KAEK+G,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAm8D,EAAAyqD,EAAAx2H,MAAA,KAAA+rE,EAAAyqD,EAAAx2H,4BAUL+G,EAAA8uD,6BAAA,4BADJ9uD,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA+lH,EAAA,+PACK3vH,EAAAoF,sBAGPpF,EAHO6I,qBAAA,mBAAA4mH,EAAApxG,QAGPre,CAAA,0BAAAA,EAAA0rG,0BAAA,EAAAliG,EAAA,IAAA+lH,OAAA,OAAAK,EAAA5vH,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAAY,EAAAhzH,QAAA,GAAA2yH,KAAA,OAAAK,EAAA5vH,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAAY,EAAAhzH,QAAA,EAAA2yH,EAAAvqD,EAAAyqD,EAAAx2H,KAAA+rE,EAAAyqD,EAAAx2H,IAAAw2H,EAAAtkH,MAAAskH,EAAAx2H,oEAlCV+G,EAAAiF,yBAAA,0CAcIjF,EADA4I,qBAAA,wBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA65D,EAAAvvH,EAAAmJ,0BAAAw4D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsmH,WAAAD,EAAA,EACAvvH,CAD6B,wBAAAA,EAAAgJ,wBAAA0sD,GAAA,IAAA65D,EAAAvvH,EAAAmJ,0BAAAw4D,MAAAz4D,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAsmH,WAAAD,EAAA,GAG7BvvH,EAAAwY,kCAAA,MAaIxY,EAZA4J,qBAAA,EAAAimH,EAAA,aAYA7vH,CAZkC,EAAA8vH,EAAA,4DAmC1C9vH,EAAAkF,iIAjDIlF,EAAAkxD,sBAAA,gBAAA6+D,GAAA7mH,EAAAkmH,WAAA,cAAAW,GAAA7mH,EAAAkmH,WAAA,OASApvH,EAFAiX,sBAAA,WAAAs4G,KAAA,OAAAn3D,EAAAp4D,EAAAwN,sBAAA,KAAAtE,EAAA8lH,aAAA,KAAA52D,EAAAx7D,QAAA,EAEAoD,CAFyD,WAAA+vH,IAAA7mH,EAAAomH,eAAA1yH,OAAA,EAEzDoD,CADkD,QAAAyvH,EAAAt+D,MAKpCnxD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAAAK,EAAA8mH,WAAAP,IAaKzvH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,iDA8BnB7I,EAAA8uD,6BAAA,4BANJ9uD,EAAAiF,yBAAA,YAMIjF,EAAA4J,qBAAA,EAAAqmH,EAAA,mFAaJjwH,EAAAkF,yHAhBIlF,EAAAkxD,sBAAA,sBAAAhoD,EAAAomH,eAAA1yH,QAIKoD,EAAAoF,sBAGPpF,EAHO6I,qBAAA,mBAAAK,EAAAgnH,eAGPlwH,CAAA,0BAAAA,EAAAmwH,0BAAA,EAAAjiH,EAAA,IAAAqhH,OAAA,OAAAtpE,EAAAjmD,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAA/oE,EAAArpD,QAAA,GAAA2yH,KAAA,OAAAtpE,EAAAjmD,EAAAwN,sBAAA,IAAAtE,EAAA8lH,aAAA,KAAA/oE,EAAArpD,QAAA,EAAA2yH,EAAAvqD,8BAvFNhlE,EAAAwY,kCAAA,GA6EIxY,EAnEA4J,qBAAA,EAAAwmH,EAAA,aAmEApwH,CA3DC,EAAAqwH,EAAA,cA2DDrwH,CAtCC,EAAAswH,EAAA,yGA5BItwH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAkmH,YAckBpvH,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAAomH,gBAsDlBtvH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA47D,cAAAE,EAAA/5D,KAAA/B,EAAAgnH,0CAmBTlwH,EAAAiF,yBAAA,YAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEAJIlF,EAAAkxD,sBAAA,4BAAAhoD,EAAAomH,eAAA1yH,QAGAoD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAAqnH,cAAA,mEAQJvwH,EAJJiF,yBAAA,WAIIjF,CADH,YAEOA,EAAAmF,iBAAA,GAOJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAmwD,GAAA,IAAAjwD,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsnH,QAAAtnH,EAAAg/E,KAAe,GAAE,GAE1BloF,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,kBACdnF,EAD0BkF,wBAC1BlF,GACAA,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAmwD,GAAA,IAAAjwD,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsnH,QAAAtnH,EAAAg/E,KAAe,GAAE,GAE1BloF,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,mBACdnF,EAD2BkF,wBAC3BlF,GACAA,EAAAiF,yBAAA,eAA+CjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAmwD,GAAA,IAAAjwD,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsnH,QAAQ,GAAE,GAC9DxwH,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,iBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,gBAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAmwD,GAAA,IAAAjwD,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsnH,QAAAtnH,EAAAunH,YAAsB,GAAE,GAEjCzwH,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,gBAElBnF,EAF2BkF,wBAE3BlF,+CAnCQA,EAAAoF,oBAAA,GAAApF,EAAAgM,6BAAA,IAAA9C,EAAAg/E,MAAAh/E,EAAAyjG,WAAA,oBAAAzjG,EAAAg/E,KAAA,IAAAh/E,EAAAyjG,WAAA,MAAAzjG,EAAAwnH,YAAAxnH,EAAAwnH,aAAAxnH,EAAAg/E,KAAA,IAAAh/E,EAAAyjG,WAAA,aAAAzjG,EAAAwnH,YAAA,KAWA1wH,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAK,EAAAg/E,MAQAloF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAAAK,EAAAg/E,OAAAh/E,EAAAunH,YAAA,GAKmBzwH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAAK,EAAAg/E,MAMnBloF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAAAK,EAAAg/E,OAAAh/E,EAAAunH,YAAA,IAzMhBl5H,uBAsOsD,eAAAo5H,EAAzCC,EAAyC,SAAAp4H,GAtOtD,SAAAo4H,IAAA,IAAA/3H,EAAAlB,SAAAC,KAAAg5H,2BAwOoBp/D,QAAyB,GACzB34D,EAAAu2H,YAAa,EACbv2H,EAAAua,OAAiB,GACjBva,EAAAw2H,UAAW,EACXx2H,EAAA6d,SAAqB,GACrB7d,EAAA8zG,UAAY,EACZ9zG,EAAA03H,cAAgB,kBAChB13H,EAAAq3H,eAAmC,KACnCr3H,EAAAisE,cAAyC,GACxCjsE,EAAA8d,eAAiB,IAAInV,EAAAoV,aACrB/d,EAAAg4H,WAAa,IAAIrvH,EAAAoV,aAE3B/d,EAAAqvF,KAAO,EACPrvF,EAAA63H,YAAc,EACd73H,EAAA43H,YAAc,EACd53H,EAAA22H,YAAa,EACb32H,EAAAy2H,eAAiB,GAEhBz2H,EAAAi4H,OAAS,IAAI9/G,EAAAuB,gBAAqB,IAClC1Z,EAAAk4H,SAAW,IAAI//G,EAAAuB,gBAAwB,IACvC1Z,EAAAm4H,OAAS,IAAIhgH,EAAAuB,gBACjB,MAGG1Z,EAAAm2H,WAA+B,KAAKn2H,EAkH9CG,SAAA43H,EAAAp4H,GAAAd,EAAAk5H,EAAA,EAAA33H,IAAA,OAAAiE,IAhHG,WACI,OAAOtF,KAAKo5H,OAAOjhH,UACvB,GAAC,CAAA9W,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAKyC,gBAAgB+7B,MAAQx+B,KAAKk5H,OAASl5H,KAAKyC,IAC3D,GAAC,CAAApB,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAK03H,eAAe1yH,QAAUhF,KAAKw3H,WAAa,EAAI,EAC/D,GAAC,CAAAn2H,IAAA,kBAAAiE,IAED,WACI,IAAM6D,EAAWnJ,KAAK03H,eACjBp8G,IAAI,SAACtY,GAAC,OAAKA,EAAEu2D,MAAQ,MAAM,GAC3B1kD,KAAK,KACV,OAAO7U,KAAKw3H,WAAU,UAAAzzH,OAAaoF,GAAaA,CACpD,GAAC,CAAA9H,IAAA,cAAAC,MAEM,SAAY87B,GAAsB,IAAAt4B,EAAA9E,KACjCo9B,EAAQ5hB,QACRxb,KAAKm5H,SAASh3H,KAAKnC,KAAKwb,QAExB4hB,EAAQw8B,UACR55D,KAAK03H,eAAiB13H,KAAK45D,QAAQp+C,OAAO,SAACxY,GAAC,OAAgB,IAAXA,EAAEwpG,IAAc,IAEjEpvE,EAAQ36B,OACRzC,KAAKo3H,cAAah+G,EAAA2I,eAAc,CAC5B/hB,KAAK+sH,MACL/sH,KAAKm5H,SACLn5H,KAAKo5H,SACNt2H,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAArV,GAAyB,IAAA6B,EAAAma,EAAAhc,EAAA,GAAvBxD,EAAIqF,EAAA,GAAE0T,EAAM1T,EAAA,GAAE0U,EAAI1U,EAAA,GA+BpBhD,OA9BArC,EAAI2f,EAAO3f,GACP+Y,IACA/Y,EAAOA,EAAK+Y,OAAO,SAACxY,GAAC,OACjB+lB,OAAOxC,OAAOvjB,GAAGmoC,KAAK,SAAC/Y,GAAC,IAAAinG,EAAA,OACH,QADGA,EACpBj1H,KAAKC,UAAU+tB,UAAE,IAAAinG,OAAA,EAAjBA,EACMrmG,cACDptB,UAAU4V,GAAU,IAAIwX,cAAc,EAC9C,IAGLxW,GAAQ/Z,EAAKuC,SAGTvC,EAAOA,EAAK+Z,KADH,iBADO/Z,EAAK,GAAG+Z,EAAKnb,KAEZ,SAAC4xB,EAAG3U,GACjB,IAAMlX,EAAS6rB,EAAEzW,EAAKnb,KAAOid,EAAE9B,EAAKnb,KACpC,OAAOmb,EAAKyvE,SAAW7kF,EAASA,CACpC,EAEiB,SAAC6rB,EAAG3U,GACjB,IAAMg7G,EAAUl1H,KAAKC,UACjB4uB,EAAEzW,EAAKnb,MAAQ,IAEbk4H,GAAUn1H,KAAKC,UACjBia,EAAE9B,EAAKnb,MAAQ,IAEb+F,GAASkyH,EAAQhxF,cAAcixF,IACrC,OAAO/8G,EAAKyvE,SAAW7kF,GAASA,EACpC,IAGRtC,EAAKga,SAAW,GAChBha,EAAKwrF,KAAO,EACRxrF,EAAKiwG,YACLjwG,EAAKg0H,YAAcr2H,EAAKuC,OACxBF,EAAK+zH,YAAc7gG,KAAK+wD,KACpBjkF,EAAKg0H,YAAch0H,EAAKiwG,YAGzBtyG,CACX,IAAC,EACDrC,EAAAsyB,aAAY,IAGxB,GAAC,CAAArxB,IAAA,aAAAC,MAEM,SAAWk4H,GACd,OAAOA,EAAO/yG,mBAAmB7c,EAAAyuG,YAAc,WAAa,KAChE,GAAC,CAAAh3G,IAAA,aAAAC,MAEM,SAAWorE,EAAa8sD,GAC3B,SAAAz1H,OAAU2oE,EAAG,OAAA3oE,OAAMy1H,EAAM,OAAAz1H,OAAM2oE,EAAM,EAAC,OAAA3oE,OAAMy1H,EAAS,EACzD,GAAC,CAAAn4H,IAAA,SAAAC,MAEM,SAAOyoE,EAAexsC,GACrBA,EAAOv9B,KAAK8e,SAASma,KAAK8wC,GACzB/pE,KAAK8e,SAAW9e,KAAK8e,SAAStD,OAAO,SAAC4W,GAAC,OAAKA,IAAM23C,CAAK,EAChE,GAAC,CAAA1oE,IAAA,YAAAC,OAAAm4H,EAAAj4H,EAAAC,IAAAC,KAEM,SAAAC,EAAgB47B,GAAc,IAAAvqB,EAAA,OAAAvR,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACdnC,KAAKo3H,WAAWt0H,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAtD+P,EAAI/Q,EAAA4B,KACC7D,KAAK8e,SAAZye,EAAuBvqB,EAAKsI,IAAI,SAACtY,EAAGovB,GAAC,OAAKA,CAAC,GAC1B,GAAG,wBAAAnwB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC3B,SAAAk3H,EAAAv6G,GAAA,OAAA88G,EAAA90H,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,UAAAC,MAEM,SAAQD,GACX,IAAMmb,EAAOxc,KAAKo5H,OAAOjhH,WAMrBnY,KAAKo5H,OAAOj3H,KALXqa,GAAQA,EAAKnb,MAAQA,EAEdmb,EAAKyvE,QAGI,KAFA,CAAE5qF,MAAK4qF,SAAS,GAFhB,CAAE5qF,MAAK4qF,SAAS,GAMzC,GAAC,CAAA5qF,IAAA,UAAAC,MAEM,SAAQgvF,GAAY,IAAApqF,EAAAlG,KACvBA,KAAKwD,QAAQ,WAAY,kBAAO0C,EAAKoqF,KAAOA,CAAI,EAAG,IACvD,KArBC,IAAAmpC,CAqBA,CA3IiD,CAAQn5H,EAAA6H,cAAY4wH,SAA7DC,qGAAoB15F,GAApB05F,EAAoB,qDAApBA,EAAoBlwH,UAAA,mBAAAqW,OAAA,CAAA1c,KAAA,OAAAm3D,QAAA,UAAA49D,WAAA,aAAAh8G,OAAA,SAAAi8G,SAAA,WAAA34G,SAAA,WAAAi2F,UAAA,YAAA4jB,cAAA,gBAAAL,eAAA,iBAAAprD,cAAA,iBAAA9tD,QAAA,CAAAL,eAAA,iBAAAk6G,WAAA,cAAAlwH,SAAA,CAAAX,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,GAAAkE,OAAA,q1EAAAjE,SAAA,SAAAC,EAAAC,SAAA,EAAAD,IAnOzBhB,EAAAiF,yBAAA,WAMIjF,EAFA4I,qBAAA,0BAAA3H,EAAAuuH,YAAuB,EAAIvuH,EAAA4vH,WAAA/5G,KAAA7V,EAAAuuH,YAA8B,IAAI,EAE7DxvH,CAF8D,6BAAAiB,EAAAuuH,YAAA,CACnC,EAC3BxvH,CAD4B,+BAAAiB,EAAAuuH,YAAA,CACC,GAkD7BxvH,EAhDA4J,qBAAA,EAAA0nH,EAAA,YAgDAtxH,CA3CC,EAAAuxH,EAAA,gBA2CDvxH,CAbC,EAAAwxH,EAAA,kFA+GDxxH,EAAA4J,qBAAA,EAAA6nH,EAAA,2CAQJzxH,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA8nH,EAAA,qBAhKI1xH,EAAAkxD,sBAAA,wBAAAjwD,EAAA0wH,iBAMK3xH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmuH,YAiBkBpvH,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAquH,gBAiC5BtvH,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAA+0G,sBAAA,IAAA/0G,EAAAwN,sBAAA,IAAAvM,EAAA+tH,YAAA/tH,EAAAinF,MAAAjnF,EAAA0rG,WAAA,OAAA1rG,EAAAinF,KAAA,IAAAjnF,EAAA0rG,WAAA,QAgGU3sG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,gBAAAmB,EAAAhK,EAAAwN,sBAAA,KAAAvM,EAAA+tH,cAAAhlH,EAAApN,SASJoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA0rG,ipBA+DAikB,CAAyC,kQC1OlC5wH,EAAAwY,kCAAA,GACIxY,EAAAg+F,uBAAA,iEAIJh+F,EAAAiF,yBAAA,SAOIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,aAAA7I,EAAAoqC,0BAAA,EAAAl8B,EAAA0jH,EAAAtpC,QAEAtoF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAusH,EAAAzmH,KAAA,+BArBZnL,EAAAwY,kCAAA,GAMQxY,EALJiF,yBAAA,UAKIjF,CADH,cACaA,EAAAmF,iBAAA,GACdnF,EAD4CkF,wBAC5ClF,GACAA,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAioH,EAAA,sBAGJ7xH,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAkoH,EAAA,WASJ9xH,EAAAkF,kIApBIlF,EAAAoF,sBACApF,EADAiX,sBAAA,gBAAA/N,EAAAxL,MACAsC,CAD6B,aAAAkJ,EAAAxL,OAGnBsC,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAxL,MAAA,gBAGKsC,EAAAoF,oBAAA,GAAcpF,EAAd6I,qBAAA,QAAAK,EAAAxL,MAAcsC,CAAA,WAAA+xH,GASR/xH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA8oH,iCAS5BhyH,EAAAiF,yBAAA,SAASjF,EAAAmF,iBAAA,GAAWnF,EAAAkF,iEAAXlF,EAAAoF,sBAAApF,EAAA+L,4BAAA7C,EAAAxL,iCAGVsC,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAuCjF,EAAAmF,iBAAA,GAAanF,EAAAkF,iEADvClF,EAAA6I,qBAAA,eAC0B7I,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAgR,UAtCnD3iB,yBA2CmC,eAAA06H,EAAtBC,EAAsBx6H,EA3CnC,SAAAw6H,IAAAv6H,EAAAC,KAAAs6H,GA6CoBt6H,KAAAsiB,QAAkB,GAElBtiB,KAAA8F,MAAgB,GAEhB9F,KAAAo6H,MAA2B,KAC9CC,SAPYC,yCAAsB,kDAAtBA,EAAsBxxH,UAAA,qBAAAqW,OAAA,CAAAmD,QAAA,UAAAxc,MAAA,QAAAs0H,MAAA,SAAAj0B,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kgBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,kCAxC3BhB,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAuoH,EAAA,sBAyBJnyH,EAAAkF,yBAIAlF,EAHA4J,qBAAA,EAAAwoH,EAAA,yBAAApyH,EAAA2c,iCAGA3c,CAFK,EAAAqyH,EAAA,yBAAAryH,EAAA2c,yEA3Bc3c,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAAsyH,wFAoC9BJ,CAAsB,gNCrBflyH,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,+EAEJnF,EAAAwY,kCAAA,GAAsCxY,EAAAmF,iBAAA,uEACtCnF,EAAAwY,kCAAA,GAAwCxY,EAAAmF,iBAAA,sEACxCnF,EAAAwY,kCAAA,GAAqCxY,EAAAmF,iBAAA,qEACrCnF,EAAAwY,kCAAA,GAA+BxY,EAAAmF,iBAAA,kDA3BnD5N,sBAwCgC,eAAAg7H,EAAnBC,EAAmB96H,EAAA,SAAA86H,IAAA76H,EAAAC,KAAA46H,EAAA,GAAAD,SAAnBC,yCAAmB,kDAAnBA,EAAmB9xH,UAAA,kBAAAqW,OAAA,CAAAuiB,OAAA,UAAAykE,mBAAAv0F,EAAA3I,MAAA,GAAAC,KAAA,GAAAkE,OAAA,sQAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCApBhBhB,EAjBRiF,yBAAA,UAiBQjF,CAVP,UAUOA,CADH,gBAQOA,EANA4J,qBAAA,EAAA6oH,EAAA,qBAMAzyH,CANwC,EAAA0yH,EAAA,qBAMxC1yH,CAHsC,EAAA2yH,EAAA,qBAGtC3yH,CAFwC,EAAA4yH,EAAA,qBAExC5yH,CADqC,EAAA6yH,EAAA,sBAG7C7yH,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,SAIIjF,EAAAg+F,uBAAA,GAERh+F,EADIkF,wBACJlF,UA3BIA,EAJAiX,sBAAA,+BAAAhW,EAAAq4B,OAIAt5B,CAJ+C,+BAAAiB,EAAAq4B,OAI/Ct5B,CAH+C,2BAAAiB,EAAAq4B,OAG/Ct5B,CAF2C,yBAAAiB,EAAAq4B,OAE3Ct5B,CADyC,0BAAAiB,EAAAq4B,QAKrCt5B,EAAAoF,sBAKApF,EALAiX,sBAAA,2BAAAhW,EAAAq4B,OAKAt5B,CAL2C,2BAAAiB,EAAAq4B,OAK3Ct5B,CAJ2C,uBAAAiB,EAAAq4B,OAI3Ct5B,CAHuC,qBAAAiB,EAAAq4B,OAGvCt5B,CAFqC,gCAAAiB,EAAAq4B,OAErCt5B,CADgD,yBAAAiB,EAAAq4B,QAGrBt5B,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAA5H,EAAAq4B,QACRt5B,EAAAoF,sBAAApF,EAAA6I,qBAAA,0BAGA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,wBACA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,0BACA7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,uBAKnB7I,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,yBAAAhW,EAAAq4B,OACAt5B,CADyC,gCAAAiB,EAAAq4B,uFAS5Ck5F,CAAmB,sJC1ChCj7H,gBAG0B,eAAAu7H,EAAbC,EAAa,WAYzB,OAAAr7H,EAfD,SAAAq7H,IAAAp7H,EAAAC,KAAAm7H,GAIYn7H,KAAAo7H,iBAA2C,IAWtD,EAAA/5H,IAAA,YAAAC,MATU,SAAUoM,GAAW,IAAAzM,EAAAjB,KACxB,OAAK0N,GACA1N,KAAKo7H,iBAAiB1tH,IAWnC,SAAS2tH,EAAqB3tH,GAC1B,OAAK4tH,EAAW5tH,KACZ4tH,EAAW5tH,GAAO,IAAI/J,QAAgB,SAACC,GACnC,IAAI23H,EAAQ/1E,SAASC,cAAc,SACnC81E,EAAMC,YAAc,YACpBD,EAAMrrC,IAAMxiF,EACZ,IAAIs2F,EAASx+C,SAASC,cAAc,UAChCnhD,EAAU0/F,EAAOF,WAAW,MAChCy3B,EAAMj0D,iBAAiB,iBAAkB,WACrC08B,EAAO78F,MAAQo0H,EAAME,WACrBz3B,EAAO98F,OAASq0H,EAAMG,YACtBH,EAAMI,YAAc,CACxB,GAEAJ,EAAMj0D,iBAAiB,SAAU,WAC7BhjE,EAAQs3H,UAAUL,EAAO,EAAG,EAAGv3B,EAAO78F,MAAO68F,EAAO98F,QACpD,IAAI20H,EAAY73B,EAAOS,UAAU,aACjC7gG,EAAQi4H,EACZ,GACAN,EAAMx2B,MACV,IAEGu2B,EAAW5tH,EACtB,CAjCY2tH,CAAqB3tH,GAChBioE,KAAK,SAAC3yE,GAAC,OAAM/B,EAAKm6H,iBAAiB1tH,GAAO1K,CAAC,GAAEmB,MACtCm3H,EAAW5tH,GAAO,MAE3B1N,KAAKo7H,iBAAiB1tH,IAAQ,IANpB,IAOrB,IAAC,CAXqB,GAWrBwtH,SAXQC,yCAAa,+DAAbA,EAAahgG,MAAA,IAAbggG,CAAa,IAc1B,IAAMG,EAAa,qLCjBnB37H,wBAwCkC,eAAAm8H,EAArBn9H,EAAqBmB,EAAA,SAAAnB,IAAAoB,EAAAC,KAAArB,EAAA,GAAAm9H,SAArBn9H,yCAAqB,kDAArBA,EAAqBmK,UAAA,uBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBAjCIoiB,UAAAC,MAAAC,EAAA,kGACLF,UAAAG,MAAAD,EAAA,0KAIbF,UAAAI,MAAAF,EAAA,oVANRtnB,EAHJiF,yBAAA,UAGIjF,CADH,UACwBA,EAAAmF,iBAAA,SAAGnF,EAAAkF,yBACxBlF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KAA2CvlB,EAAAkF,yBAC3ClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAGAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,KAIJvlB,EADIkF,wBACJlF,6VAwBKzJ,CAAqB,0JCzClC,IAAAmP,EAAAjQ,EAAA,6OA4BgBuK,EADJiF,yBAAA,UACIjF,CADoD,WAC7CA,EAAAmF,iBAAA,iBAAWnF,EAAAkF,yBAEdlF,EADJiF,yBAAA,qBACIjF,CADiC,kBACrBA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA4tF,YAAA/tF,KAAAG,EAAA4tF,YAAA/tF,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACR/I,EAAAiF,yBAAA,mBAAyBjF,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAC7BlF,EAAAiF,yBAAA,mBAA4BjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBACnClF,EAAAiF,yBAAA,mBAA0BjF,EAAAmF,iBAAA,YAGtCnF,EAH2CkF,wBAG3ClF,iDANoBA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAA4tF,cA3BhCv/F,kCAkD4C,eAAAo8H,EAA/Bh9B,EAA+B,WAavC,OAAAj/F,EALD,SAAAi/F,EACYnrC,EACyBjtB,GAAqB5mC,EAAAC,KAAA++F,GAD9C/+F,KAAA4zD,cACyB5zD,KAAA2mC,QARrB3mC,KAAAmnE,KAAannE,KAAK2mC,MAAMwgC,KAEjCnnE,KAAAi/F,WAAqB,EAErBj/F,KAAAk/F,YAAiC,OAMpCl/F,KAAKmnE,KAAOnnE,KAAK2mC,MAAMwgC,IAC3B,EAAC,EAAA9lE,IAAA,QAAAC,MAEM,WACHtB,KAAK4zD,YAAYlsD,OACrB,IAAC,CAjBuC,GAiBvCq0H,SAjBQh9B,0CAA+B32F,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAU5ByF,EAAAg5B,iBAAe,kDAVlBi4D,EAA+Bj2F,UAAA,+BAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,mhBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9ChChB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,iBAAWnF,EAAAkF,yBAEXlF,EADJiF,yBAAA,aACIjF,CAD8B,cACpBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAGQA,EAFRiF,yBAAA,WAEQjF,CAFwB,UAExBA,CADiC,WAC1BA,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAORlB,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,WACIjF,CADc,qBACAA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA41F,UAAA9tF,KAAA9H,EAAA41F,UAAA9tF,IAAA,GAAwB/I,EAAAmF,iBAAA,aAC1CnF,EADgDkF,wBAChDlF,GACAA,EAAA4J,qBAAA,GAAAgqH,EAAA,cAUJ5zH,EAAAkF,yBAIIlF,EAHJiF,yBAAA,cAGIjF,CADH,eACqDA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACxDlF,EAAAiF,yBAAA,gBAKIjF,EAAAmF,iBAAA,eAERnF,EADIkF,wBACJlF,UA/BgBA,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA5H,EAAA89D,KAAA5zD,MAOMnL,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA41F,WAEoB72F,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA41F,WAkBlC72F,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA7I,EAAAiO,0BAAA,EAAAzE,EAAAvI,EAAA89D,KAAA99D,EAAA41F,UAAA51F,EAAA61F,4LAQHH,CAA+B,8ICrD5ClhG,EAAA,8CAUYuK,EAAAiF,yBAAA,WAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAA8xG,SAAA,+BAVR7zH,EAAAiF,yBAAA,WAKIjF,EAAA4J,qBAAA,EAAAkqH,EAAA,aAOJ9zH,EAAAkF,2IAJSlF,EAAAoF,sBAAmBpF,EAAnB6I,qBAAA,QAAAkZ,EAAAsC,KAAA0vG,MAAmB/zH,CAAA,WAAAg0H,6BAMxBh0H,EAAAkB,oBAAA,gFAGIlB,EAAA6I,qBAAA,SAAA7I,EAAAiM,sBAAA,IAAA8V,EAAAsC,KAAA0vG,MAAA,cApBhBx8H,sBAwCgC,eAAA08H,EAAnBrrB,EAAmB,kBAAAlxG,EAAA,SAAAkxG,IAAAjxG,EAAAC,KAAAgxG,EAAA,IAAA3vG,IAAA,WAAAiE,IAI5B,WACI,IAAKtF,KAAKysB,KAAM,MAAO,KACvB,IAAMlZ,EAAOvT,KAAKysB,KAAKlZ,MAAQ,GACzBgxE,EAAQhxE,EAAKq0B,QAAQ,oBAAqB,IAAIjhC,MAAM,KAC1D,OAAO49E,EAAMv/E,OAAS,EAAC,GAAAjB,OACdwgF,EAAM,GAAG,IAAExgF,OAAGwgF,EAAMA,EAAMv/E,OAAS,GAAG,IACzCuO,EAAKq1E,MAAM,EAAG,EACxB,IAAC,CAX2B,GAW3ByzC,SAXQrrB,yCAAmB,kDAAnBA,EAAmBloG,UAAA,oBAAAqW,OAAA,CAAAsN,KAAA,QAAAxjB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,6XAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAxBxBhB,EAbA4J,qBAAA,EAAAsqH,EAAA,YAaAl0H,CATC,EAAAm0H,EAAA,yBAAAn0H,EAAA2c,uCAFI3c,EAAA6I,qBAAA,OAAA5H,EAAAojB,sRAmCAukF,CAAmB,2NC1ChCnzG,EAAA,WACAyC,EAAAzC,EAAA,OAMAK,EAAAL,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,QACA2+H,EAAA3+H,EAAA,OACA4+H,EAAA5+H,EAAA,MACA6+H,EAAA7+H,EAAA,OACA8+H,EAAA9+H,EAAA,OACA++H,EAAA/+H,EAAA,OACAg/H,EAAAh/H,EAAA,OACAi/H,EAAAj/H,EAAA,OACAuC,EAAAvC,EAAA,yEAkC4BuK,EAXhBiF,yBAAA,WAWgBjF,CANf,cAMeA,CALoD,WAKpDA,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,+DAIJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBACIjF,EAAAmF,iBAAA,sBAIhBnF,EAHYkF,wBAGZlF,iDArBIA,EAAA6I,qBAAA,UAAAK,EAAAyrH,eAWY30H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAuQ,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAA4lC,SAAA,KAAAl5B,EAAAvI,gBAAA,OAAAuI,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAA4lC,SAAA,KAAAl5B,EAAAzK,MAAA,+BAsBAnL,EAXhBiF,yBAAA,WAWgBjF,CANf,cAMeA,CALoD,WAKpDA,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,cACdnF,EADsBkF,wBACtBlF,GACAA,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,+DAIJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBACIjF,EAAAmF,iBAAA,sBAIhBnF,EAHYkF,wBAGZlF,iDAtBIA,EAAA6I,qBAAA,UAAAK,EAAA0rH,iBAYY50H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAAuQ,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAAuE,WAAA,KAAAmI,EAAAvI,gBAAA,OAAAuI,EAAA5V,EAAAwN,sBAAA,IAAAtE,EAAAuE,WAAA,KAAAmI,EAAAzK,MAAA,+BAqBAnL,EAVhBiF,yBAAA,WAUgBjF,CANf,cAMeA,CALoD,WAKpDA,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAAuCvlB,EAAAkF,yBACvClF,EAAAiF,yBAAA,iBACKjF,EAAAmF,iBAAA,mBAIjBnF,EAJ8BkF,wBAI9BlF,+CAhBIA,EAAA6I,qBAAA,UAAAK,EAAA2rH,4EAkBA70H,EADJiF,yBAAA,QACIjF,CADkC,eAK9BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA4rH,eAAc,GAMf90H,EAJRiF,yBAAA,WAIQjF,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,oBACdnF,EAD4BkF,wBAC5BlF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAA+CvlB,EAAAkF,yBAC/ClF,EAAAiF,yBAAA,iBACKjF,EAAAmF,iBAAA,mBAIjBnF,EAJ8BkF,wBAI9BlF,iCA+BgBA,EAXhBiF,yBAAA,WAWgBjF,CANf,cAMeA,CALoD,WAKpDA,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAAsCvlB,EAAAkF,yBACtClF,EAAAiF,yBAAA,iBACKjF,EAAAmF,iBAAA,mBAIjBnF,EAJ8BkF,wBAI9BlF,6EAhBIA,EAAAiX,sBAAA,oBAAA/N,EAAAs2G,SAAAt2G,EAAAs2G,QAAA5iH,SADAoD,EAAA6I,qBAAA,UAAAksH,iEAoBI/0H,EADJiF,yBAAA,WACIjF,CADsD,YACtDA,EAAAulB,iBAAA,KAAqCvlB,EAAAkF,yBACrClF,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD4B,WACrBA,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBAUblF,EATRiF,yBAAA,WASQjF,CATiC,kBASjCA,CADH,eAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAA8rH,oBAAAjsH,KAAAG,EAAA8rH,oBAAAjsH,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,EAAA+rH,YACV,sBAAqBlsH,GAGrC,GAC0B/I,EAVIkF,wBAUJlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YAAOjF,EAAAmF,iBAAA,sBAAenF,EAAAkF,yBAUdlF,EATRiF,yBAAA,YASQjF,CATuC,mBASvCA,CADH,eAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAgsH,qBAAAnsH,KAAAG,EAAAgsH,qBAAAnsH,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,EAAA+rH,YACX,uBAAsBlsH,GAGrC,GAC0B/I,EAVIkF,wBAUJlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,iDA3CgBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAK,EAAA0jD,aAII5sD,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAA8rH,qBAUJh1H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA8rH,oBAAAvoE,QAAA,UAWAzsD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAK,EAAA0jD,aAII5sD,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAgsH,sBAUJl1H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAgsH,qBAAAzoE,QAAA,oCAiBJzsD,EAXhBiF,yBAAA,WAWgBjF,CANf,cAMeA,CALoD,WAKpDA,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,yEAGAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBACKjF,EAAAmF,iBAAA,oBAIjBnF,EAJ8BkF,wBAI9BlF,+CApBIA,EAAA6I,qBAAA,UAAAK,EAAAisH,kBAYYn1H,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,6BAAAxN,CAEJA,EAAAwN,sBAAA,iHAOZxN,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAksH,mBAAkB,GAMnBp1H,EAJRiF,yBAAA,WAIQjF,CAJwC,WAIxCA,CADH,cACaA,EAAAmF,iBAAA,mBACdnF,EAD2BkF,wBAC3BlF,GACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,MAERvlB,EAFuDkF,wBAEvDlF,mEAYQA,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAy9C,GAAA,IAAAv9C,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAmsH,aAAY,GAErBr1H,EAAAmF,iBAAA,mBACJnF,EAAAkF,0BApQpB3N,wBAwRkC,eAAA+9H,EAArB/qB,EAAqB,WAsD1B,OAAA7yG,EAJJ,SAAA6yG,EACY9xG,EACAC,EACA0W,GAAkBzX,EAAAC,KAAA2yG,GAFlB3yG,KAAAa,YACAb,KAAAc,OACAd,KAAAwX,UApDIxX,KAAA6V,SAAW7V,KAAKc,KAAK2W,gBACrBzX,KAAAk3C,OAASl3C,KAAKc,KAAKyuD,cACnBvvD,KAAAm3C,QAAUn3C,KAAKc,KAAKwuD,YAEpBtvD,KAAA+8H,cAAgBF,EAAA7G,sBAChBh2H,KAAAg9H,gBAAkBN,EAAAjyB,wBAClBzqG,KAAAi9H,aAAeN,EAAA/gB,qBACf57G,KAAA29H,sBAAwBlB,EAAAh3B,8BACxBzlG,KAAAu9H,iBAAmBX,EAAArV,wBAE5BvnH,KAAAs9H,qBAAuB,IACvBt9H,KAAAo9H,oBAAsB,EA0C1B,EAAC,EAAA/7H,IAAA,OAAAiE,IAxCJ,WACI,SAAOhF,EAAAkG,cACX,GAAC,CAAAnF,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKysB,KAAKyuB,OAAOrmC,KAAK,KACjC,GAAC,CAAAxT,IAAA,UAAAiE,IAED,WACI,OAAOhF,EAAA2nF,OACX,GAAC,CAAA5mF,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iBAAmB,EACjD,GAAC,CAAAjE,IAAA,UAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,gBAAkB,EAChD,GAAC,CAAAjE,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,2BAC9B,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iBAC9B,GAAC,CAAAjE,IAAA,0BAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,8BAC9B,GAAC,CAAAjE,IAAA,kBAAAiE,IAED,WACI,SAAOhF,EAAAkiF,gBACX,GAAC,CAAAnhF,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAQM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAC7DjD,KAAKo9H,oBACDp9H,KAAKa,UAAUyE,IAAI,wBAA0B,GACjDtF,KAAKs9H,qBACDt9H,KAAKa,UAAUyE,IAAI,yBAA2B,IAAI,wBAAArD,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACzD,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,SAAAC,MAEM,YACH,EAAAjB,EAAAu9H,SACJ,GAAC,CAAAv8H,IAAA,aAAAC,MAEM,WACHoE,SAASwC,QACb,GAAC,CAAA7G,IAAA,mBAAAC,MAEM,WACCtB,KAAKa,UAAUyE,IAAI,4BACnBhD,OAAOyS,KACH/U,KAAKa,UAAUyE,IAAI,4BACnB,UAGJtF,KAAKwX,QAAQzC,KAAK+nH,EAAAe,4BAE1B,GAAC,CAAAx8H,IAAA,eAAAC,MAEM,WACHtB,KAAKwX,QAAQzC,KAAKynH,EAAAsB,0BACtB,GAAC,CAAAz8H,IAAA,gBAAAC,MAAA,eAAAy8H,EAAAv8H,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAAAiD,UAAAjD,KAAA,EAEOy6F,MACF,kFACH,OAAAx3F,UAAAjD,KAAA,EAAAiD,GAAAvB,KACH8iF,OAAI,OACN3mF,KAAKwX,QAAQzC,KAAK7W,EAAAgtG,wBAAyB,CAAEzoG,KAAM,CAAEsoG,UALtC3lG,GAAAvB,QAKqD,wBAAAuB,GAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACvE,gBAAAg+H,IAAA,OAAAD,EAAAp5H,MAAA3E,KAAA4E,UAAA,EATA,IASA,CAAAvD,IAAA,cAAAC,MAEM,SAAYiS,EAAcjS,GAC7Bc,QAAQO,IAAI,eAAgB4Q,EAAMjS,GAClCtB,KAAKa,UAAUm/B,gBAAgBzsB,EAAMjS,EACzC,GAAC,CAAAD,IAAA,cAAAC,MAEM,SAAYA,GACf,SAAAyC,OAAUzC,EAAMuzD,QAAQ,GAAE,KAC9B,KAvDC,IAAAtzD,CAuDA,CAvG6B,GAuG7Bm8H,SAvGQ/qB,0CAAqBvqG,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAA4P,WAAA,kDAArBq6F,EAAqB7pG,UAAA,oBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,6CApKeoiB,UAAAC,MAAAC,EAAA,wGAsI5BF,UAAAG,MAAAD,EAAA,2FAakBF,UAAAI,MAAAF,EAAA,0FA1LUF,UAAAM,MAAAJ,EAAA,+FAoBAF,UAAAO,MAAAL,EAAA,uGAuCAF,UAAAyoB,MAAAvoB,EAAA,8FASHF,UAAAugC,MAAArgC,EAAA,4FACgBF,UAAAwgC,MAAAtgC,EAAA,+HAsEbF,UAAAygC,MAAAvgC,EAAA,0HACrB,gBACA,iBAqBiBF,UAAA0gC,MAAAxgC,EAAA,khEAzOjCtnB,EAHJiF,yBAAA,WAGIjF,CADH,YAEOA,EAAAkB,oBAAA,sBAKAlB,EAAAiF,yBAAA,YAAcjF,EAAAmF,iBAAA,GAAgBnF,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,YAAyCjF,EAAAmF,iBAAA,GAC7CnF,EAD8DkF,wBAC9DlF,GACAA,EAAA4J,qBAAA,EAAAisH,EAAA,6CAqEA71H,EA5CA4J,qBAAA,EAAAksH,EAAA,cA4CA91H,CAvCC,GAAA+1H,EAAA,cAuCD/1H,CAfC,GAAAg2H,EAAA,eA6Ceh2H,EAVhBiF,yBAAA,YAUgBjF,CANf,eAMeA,CALoD,YAKpDA,CAJwC,YAIxCA,CADH,eACaA,EAAAmF,iBAAA,iBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAAgDvlB,EAAAkF,yBAChDlF,EAAAiF,yBAAA,kBACKjF,EAAAmF,iBAAA,oBAIjBnF,EAJ8BkF,wBAI9BlF,OAwGAA,EAvGA4J,qBAAA,GAAAqsH,EAAA,cAuGAj2H,CAlGC,GAAAk2H,EAAA,0BAAAl2H,EAAA2c,iCAkGD3c,CAnFkC,GAAAm2H,EAAA,cAmFlCn2H,CAlBC,GAAAo2H,EAAA,iBAoCOp2H,EAFRiF,yBAAA,YAEQjF,CAFoC,YAEpCA,CADyD,gBAMrDA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAu0H,SAAQ,GALrBx1H,EAAAulB,iBAAA,MAQAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAysH,EAAA,iBAQJr2H,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAAwY,kCAAA,IAAAxY,EAAAulB,iBAAA,0CACAvlB,EAAAiF,yBAAA,gBAEIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA20H,gBAAe,GAExB51H,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,gEAIZnF,EAFQkF,wBAERlF,WA3QYA,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,OAAA5H,EAAAojB,KACArkB,CADa,aAAAiB,EAAA6xC,QAGH9yC,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA9K,EAAAojB,KAAA,KAAApjB,EAAAojB,KAAAlZ,MAC2BnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA9K,EAAAojB,KAAA,KAAApjB,EAAAojB,KAAA/lB,OAIxC0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,KAAAvM,EAAA8tC,SAAAnyC,QA2BAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAq1H,0BAAAr1H,EAAA42C,YAwBA73C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAN,SAAAnD,SAAA,SAgBCwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAN,SAAAnD,SAAA,QAuBFwC,EAAAoF,sBAAApF,EAAAiX,sBAAA,oBAAAhW,EAAAu+G,SAAAv+G,EAAAu+G,QAAA5iH,QAAAqE,EAAAs1H,cADAv2H,EAAA6I,qBAAA,UAAA5H,EAAAs0H,uBAqBCv1H,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,OAAA5H,EAAAs1H,aA+EAv2H,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA5H,EAAAu+G,QAAA,KAAAv+G,EAAAu+G,QAAA5iH,QAwBAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAN,SAAAnD,SAAA,mBA0BQwC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAu1H,iBAYDx2H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAw7F,QAAAvM,KAAA,KAIJlwF,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,MAAAhL,EAAAw7F,QAAAjtE,KAAA,iBAAAxvB,EAAAiM,sBAAA,MAAAhL,EAAAw7F,QAAAjtE,KAAA,uBAQP+6E,CAAqB,8NClTlC90G,EAAA,WACAwxG,EAAAxxG,EAAA,MAUAyC,GATAzC,EAAA,MASAA,EAAA,oGA2C4BuK,EAAAkB,oBAAA,mDAIIlB,EAAAiX,sBAAA,uBAAA/N,EAAAisB,qEAvBZn1B,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,WAOIjF,EADA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAAutH,aAAY,EACrBz2H,CADsB,uBAAA02H,EAAA12H,EAAAgJ,wBAAAW,GAAAwL,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBACbF,EAAAytH,eAAAD,GAAmB,GAE5B12H,EAAAmF,iBAAA,GASAnF,EAAA4J,qBAAA,EAAAgtH,EAAA,aAMJ52H,EAAAkF,uFApBIlF,EAAAoF,sBACApF,EADAiX,sBAAA,gBAAAy/G,EAAA,IAAAA,EAAA95H,OAAA,EACAoD,CADkD,oBAAA02H,oCAKlD12H,EAAAoF,sBAAApF,EAAAqF,6BAAA,gBAAAqxH,EAAA,mBAAAA,EAAA,4BAAAA,EAAA,YAAAA,EAAA,KAUK12H,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAA6tH,6BAzBjB12H,EAAAiF,yBAAA,WAKIjF,EAAA4J,qBAAA,EAAAitH,EAAA,sBA2BJ72H,EAAAkF,iDA3BkClF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAiuH,6BATtC92H,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAmtH,EAAA,aAiCJ/2H,EAAAkF,iEA9BwBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA8tH,SApBpC,IAAMC,EAAe,CACjB,aAAa14H,MAAM,IACnB,aAAaA,MAAM,IACnB,YAAYA,MAAM,IAClB,UAAUA,MAAM,IAChB,CAAC,SAAU,UAAW,gBAG1BhH,2BA6EI,eAAA2/H,EADSC,EACT,SAAA3+H,GAsBA,SAAA2+H,EACY11B,EACA2M,GAAiB,IAAAv1G,EAAAlB,SAAAC,KAAAu/H,IAEzBt+H,EAAAC,EAAAlB,KAAAu/H,IAHQ11B,WACA5oG,EAAAu1G,WAlBIv1G,EAAAm+H,OAASC,EAElBp+H,EAAAs8B,MAAqC,SAEpCt8B,EAAA21G,aAA2B,KAIL31G,EAAAu+H,QAAU,WAC/BD,EAAyBzyH,UAC9B7L,EAAK8T,OACL9T,EAAK6C,aAAa,QACtB,EAC6B7C,EAAAw+H,OAAS,kBAClCx+H,EAAKuC,QAAQ,OAAQ,kBAAMvC,EAAKyG,OAAO,EAAC,EAACzG,CAO7C,CAACG,SAAAm+H,EAAA3+H,GAAAd,EAAAy/H,EAAA,EAAAl+H,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQgiG,SACHp/H,KAAKo/H,SAAQp/H,KAAKo/H,OAASC,GAExC,GAAC,CAAAh+H,IAAA,cAAAC,MAEM,WACH81G,EAAAC,EAAAkoB,EAAA17B,WAAA,cAAA7jG,MAAAo/C,KAAAp/C,MACAA,KAAK0H,OACT,GAAC,CAAArG,IAAA,aAAAC,MAEM,WAAU,IAAAo+H,EAAAC,EACA,QAAbD,EAAA1/H,KAAK6pG,gBAAQ,IAAA61B,GAAe,QAAfA,EAAbA,EAAez3B,qBAAa,IAAAy3B,GAA5BA,EAA8BE,OACjB,QAAbD,EAAA3/H,KAAK6pG,gBAAQ,IAAA81B,GAAe,QAAfA,EAAbA,EAAe13B,qBAAa,IAAA03B,GAA5BA,EAA8Bn5G,OAClC,GAAC,CAAAnlB,IAAA,OAAAC,MAEM,WACCtB,KAAK42G,cACJ52G,KAAKu3G,UACVv3G,KAAK42G,aAAe52G,KAAKw2G,SAASiB,OAAO,CACrCE,iBAAkB33G,KAAKw2G,SAClB7wD,WACAk6E,SACAC,SACAC,uBAET//H,KAAK42G,aAAasB,OAAOl4G,KAAKu3G,SAClC,GAAC,CAAAl2G,IAAA,QAAAC,MAEM,WACCtB,KAAK42G,eACL52G,KAAK42G,aAAawB,UAClBp4G,KAAK42G,aAAe,KAE5B,GAAC,CAAAv1G,IAAA,iBAAAC,MAEM,SAAeD,GAAW,IAAAyD,EAAA9E,KACzBggI,EAAahgI,KAAK6pG,SAAS5B,cAAcg4B,eACvCj+C,EAAMhiF,KAAK6pG,SAAS5B,cAAc3mG,OAAS,GACjD,OAAQD,EAAI2xB,eACR,IAAK,SACL,IAAK,UACDhzB,KAAKu9B,MAAQ,QACb,MACJ,IAAK,cACDv9B,KAAK6pG,SAAS5B,cAAc3mG,MAAK,GAAAyC,OAAMi+E,EAAIk+C,OACvC,EACAF,EAAa,IAChBj8H,OAAGi+E,EAAIk+C,OAAOF,EAAYh+C,EAAIh9E,SAC/Bg7H,EAAahoG,KAAK8F,IAAI,EAAGkiG,EAAa,GACtC,MACJ,IAAK,UACDhgI,KAAK6pG,SAAS5B,cAAc3mG,MAAK,GAAAyC,OAAMi+E,EAAIk+C,OACvC,EACAF,GACA,KAAGj8H,OAAGi+E,EAAIk+C,OAAOF,EAAYh+C,EAAIh9E,SACrCg7H,GAAc,EACd,MACJ,QACuB,UAAfhgI,KAAKu9B,QAAmBv9B,KAAKu9B,MAAQ,UACzCv9B,KAAK6pG,SAAS5B,cAAc3mG,MAAK,GAAAyC,OAAMi+E,EAAIk+C,OACvC,EACAF,IACHj8H,OAAG1C,GAAG0C,OAAGi+E,EAAIk+C,OAAOF,EAAYh+C,EAAIh9E,SACrCg7H,GAAc,EAEtBhgI,KAAK6pG,SAAS5B,cAAc8qB,cAAc,IAAIoN,WAAW,UACzDngI,KAAKogI,iBACLpgI,KAAKwD,QACD,QACA,WACIsB,EAAK+5H,aACL/5H,EAAK+kG,SAAS5B,cAAcg4B,eAAiBD,EAC7Cl7H,EAAK+kG,SAAS5B,cAAco4B,aAAeL,CAC/C,EACA,GAER,GAAC,CAAA3+H,IAAA,iBAAAC,MAEM,WAAc,IAAA4E,EAAAlG,KACjBA,KAAKo/H,OAASp/H,KAAKo/H,OAAO9jH,IAAI,SAACtY,GAAC,OAC5BA,EAAEsY,IAAI,SAACqoE,GAAC,OACJA,EAAE3+E,OAAS,EACL2+E,EACAA,EACmB,WAAfz9E,EAAKq3B,MACC,cACA,gBACP,EACZ,EAET,IAAC,CAxHD,CAAQj9B,EAAA6H,cAAYm3H,SADXC,0CAAwBn3H,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAC,EAAAkwG,SAAA,kDAAxB+mB,EAAwBz2H,UAAA,qDAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,2BAatBimG,EAAAoJ,UAAS,sHAbXrwG,EAAA4I,qBAAA,0BAAA3H,EAAAm2H,SAAS,EAATp3H,CAAwB,yBAAxBiB,EAAAo2H,QAAQ,k0BAzEbr3H,EAAAg+F,uBAAA,GACAh+F,EAAA4J,qBAAA,EAAAsuH,EAAA,+iBAwEKf,CACT,sFClGJtlG,EAAAC,aAAAr8B,EAAA,IAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,mKCNA,IAAAiK,EAAA/L,EAAA,6EAUgBuK,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAErB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,yBAWAA,EAAAkB,oBAAA,iCAWQlB,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,YACJnF,EAAAkF,mDAbRlF,EAAAiF,yBAAA,YAKIjF,EAAAkB,oBAAA,sBAEIlB,EADJiF,yBAAA,WACIjF,CADsB,YACAA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACrClF,EAAA4J,qBAAA,EAAAuuH,EAAA,cAMJn4H,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,YAWRlB,EADIkF,wBACJlF,yDAtBmBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAyc,GAEWtlB,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAuZ,EAAAna,MAGjBnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAmD,OAAAiZ,EAAAhnB,OAQD0B,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,aAAAqO,EAAA6K,WACAnwB,CADoC,cAAAslB,EAAA6K,YAEpCnwB,EAAA6I,qBAAA,aAAAyc,EAAA6K,WAAA,gCAjD5B54B,wBA8DkC,eAAA6gI,EAArBC,EAAqB3gI,EA9DlC,SAAA2gI,IAAA1gI,EAAAC,KAAAygI,GA+DoBzgI,KAAAyU,KAAe,GACfzU,KAAAgT,KAAe,GACfhT,KAAA0gI,YAAa,EACb1gI,KAAA2gI,aAAe,GACd3gI,KAAA0H,MAAQ,IAAIkC,EAAAoV,eAChCwhH,SANYC,yCAAqB,kDAArBA,EAAqB33H,UAAA,oBAAAqW,OAAA,CAAA1K,KAAA,OAAAzB,KAAA,OAAA0tH,WAAA,aAAAC,aAAA,gBAAAvhH,QAAA,CAAA1X,MAAA,SAAAuB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBA9C+BoiB,UAAAC,MAAAC,EAAA,yHAC7C,gBACA,qvBAdRtnB,EADJiF,yBAAA,UACIjF,CADiE,WAI7DA,EAAA4J,qBAAA,EAAA4uH,EAAA,gBASAx4H,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KASAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA6uH,EAAA,aACJz4H,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA8uH,EAAA,aA6BR14H,EADIkF,wBACJlF,UA/CaA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAq3H,YAMDt4H,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAA2J,KAAAhO,OAAAoD,CAQJiB,EAAAs3H,aAAAt3H,EAAAs3H,aAAA,IAAAt3H,EAAA2J,KAAAhO,OAAA,mDACmBoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAq3H,YAMEt4H,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2J,UA8BxBytH,CAAqB,uNCjElC,IAAA72H,EAAA/L,EAAA,MASA8yB,GAFA9yB,EAAA,OACAA,EAAA,OACAA,EAAA,QACAyC,EAAAzC,EAAA,OAGAkjI,GADAljI,EAAA,MACAA,EAAA,QAEA2M,GADA3M,EAAA,OACAA,EAAA,4JAMYuK,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,GAAgBnF,EAAAkF,kEAAhBlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,GAAA0c,EAAAwa,IAAA,mCAD/Bv8B,EAAAiF,yBAAA,UACIjF,EAAA4J,qBAAA,EAAAgvH,EAAA,cACA54H,EAAAmF,iBAAA,gCACAnF,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,gCAC/BnF,EAD8DkF,wBAC9DlF,2CAHWA,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA6nB,UACP5pC,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,UAAA8V,EAAA2D,MAAA,KAAA3D,EAAA2D,MAAAjc,KAAAsY,EAAAwE,aAAA,KAC2BvmB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,UAAA8V,EAAA2D,MAAA,KAAA3D,EAAA2D,MAAAjc,KAAA,iCAuCfzJ,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,YAAkBjF,EAAAmF,iBAAA,aACtBnF,EAD6BkF,wBAC7BlF,6BAsBAA,EAAAiF,yBAAA,YASIjF,EAAAkB,oBAAA,sBACJlB,EAAAkF,iDADmBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAyc,6BAGftlB,EADJiF,yBAAA,WACIjF,CADuD,YAInDA,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,4CAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAA0c,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,QAAA,iCAnBZoD,EAAAiF,yBAAA,YAIIjF,EAAA4J,qBAAA,EAAAivH,EAAA,4CAWA74H,EAAA4J,qBAAA,EAAAkvH,EAAA,cAOJ94H,EAAAkF,kEAdPlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAA+0G,sBAAA,UAAAhzF,EAAA2D,MAAA,KAAA3D,EAAA2D,MAAA5X,UAAA,aAAAiU,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,QAAA,MAOkCoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAAkZ,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,QAAA,iEAxEnCoD,EAAAiF,yBAAA,SAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA+nB,cAAa,GAMlB9pC,EAHJiF,yBAAA,UAGIjF,CADH,UAC4BA,EAAAmF,iBAAA,GAAkBnF,EAAAkF,yBAEvClF,EADJiF,yBAAA,UACIjF,CADwB,oBACOA,EAAAmF,iBAAA,GACnCnF,EAD+CkF,wBAC/ClF,GAKQA,EAJRiF,yBAAA,WAIQjF,CAFP,WAEOA,CADgC,cACtBA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBACtBlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADgC,eACtBA,EAAAmF,iBAAA,qBAAcnF,EAAAkF,yBACxBlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAKRnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAmvH,EAAA,cAQI/4H,EADJiF,yBAAA,YACIjF,CADgC,eACtBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAQZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,kBAGIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAovH,EAAA,cAwBRh5H,EADIkF,wBACJlF,+CA7EIA,EADA6I,qBAAA,aAAA7I,EAAAuJ,0BAAA,GAAAC,GACAxJ,CADqB,cAAAA,EAAAoqC,0BAAA,GAAAl8B,EAAA,MAAA6T,EAAA2D,MAAA,KAAA3D,EAAA2D,MAAAza,KAQQjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAAgW,EAAA2D,MAAA,KAAA3D,EAAA2D,MAAA3sB,OAERiH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAAkZ,EAAAuX,QAAkBt5B,EAAAoF,sBAAApF,EAAA+L,4BAAAgW,EAAAsoB,QAQvBrqC,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAAzkB,SAAA,KAMA0C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA0c,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA/V,UAAA,KAAAoS,EAAA2D,MAAA/V,UAAAxE,QAAA,MAAA4W,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA/V,UAAA,KAAAoS,EAAA2D,MAAA/V,UAAArR,OAAA,KAQH0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAkZ,EAAA2D,OAAA,OAAAkqG,EAAA7tG,EAAA2D,MAAA6d,IAAA,kBAAAqsF,EAAAhzH,QAQGoD,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,UAAA6K,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,OAAA,eAAAmlB,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,QAAA,uBAgBPoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAAkZ,EAAA2D,OAAA,MAAA3D,EAAA2D,MAAA5X,UAAA,KAAAiU,EAAA2D,MAAA5X,UAAAlR,SAnErBrF,qBAqGgC,eAAA0hI,EAAnBC,EAAmB,SAAA1gI,GAoB5B,SAAA0gI,EACY9pH,EACAy7B,EACAnyC,EACAonB,EACArnB,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAshI,IAElCrgI,EAAAC,EAAAlB,KAAAshI,IANQ9pH,UACAvW,EAAAgyC,SACAhyC,EAAAH,OACAG,EAAAinB,cACAjnB,EAAAJ,YAvBII,EAAA+wC,UAAoB,EACnB/wC,EAAAiyC,KAAO,IAAItpC,EAAAoV,aACX/d,EAAAkyC,OAAS,IAAIvpC,EAAAoV,aAEvB/d,EAAAyE,SAAW,GAAGzE,CAsBrB,CAACG,SAAAkgI,EAAA1gI,GAAAd,EAAAwhI,EAAA,EAAAjgI,IAAA,cAAAiE,IApBD,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,SAAAiE,IAED,WAAiB,IAAA47B,EAAAqgG,EAAAC,EAAAC,EACb,MAA0B,UAAZ,QAAVvgG,EAAAlhC,KAAK8tB,aAAK,IAAAoT,OAAA,EAAVA,EAAY3D,OAAyB,UACd,cAAb,QAAVgkG,EAAAvhI,KAAK8tB,aAAK,IAAAyzG,OAAA,EAAVA,EAAY7/F,QAA8B,UACnB,eAAb,QAAV8/F,EAAAxhI,KAAK8tB,aAAK,IAAA0zG,OAAA,EAAVA,EAAY9/F,QAA+B,UACpB,cAAb,QAAV+/F,EAAAzhI,KAAK8tB,aAAK,IAAA2zG,OAAA,EAAVA,EAAY//F,QAA8B,QACvC,SACX,GAAC,CAAArgC,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAYM,SAAAC,IAAA,IAAAmD,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAnC,KAAK6S,aACD,cACA7S,KAAKizC,OAAOU,cAAc5gC,UAAU,SAAC6gC,GAAM,IAAA8tF,EAAA,OACvC9tF,EAAO/G,IAAI,WAAsB,QAAV60F,EAAA58H,EAAKgpB,aAAK,IAAA4zG,OAAA,EAAVA,EAAYruH,MAAOugC,EAAOtuC,IAAI,SAC/CR,EAAKotC,cACL,EAAE,IAEdjwC,EAAAE,KAAA,EACoBnC,KAAK2hI,oBAAmB,OAA9C3hI,KAAK0F,SAAQzD,EAAA4B,KAAA,wBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAChB,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,cAAAC,MAAA,eAAA88G,EAAA58G,EAAAC,IAAAC,KAEM,SAAAwD,EAAkBk4B,GAAsB,OAAA37B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,WACvCi7B,EAAQtP,QAAS9tB,KAAK8tB,MAAK,CAAA1oB,EAAAjD,KAAA,QAAAiD,SAAAjD,KAAA,EACLnC,KAAK2hI,oBAAmB,OAA9C3hI,KAAK0F,SAAQN,EAAAvB,KAAA,wBAAAuB,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAEpB,gBAAA++G,EAAApiG,GAAA,OAAAyhG,EAAAz5G,MAAA3E,KAAA4E,UAAA,EANA,IAMA,CAAAvD,IAAA,MAAAiE,IAED,WAAc,IAAAs8H,EACJ/vH,GAAiB,QAAV+vH,EAAA5hI,KAAK8tB,aAAK,IAAA8zG,OAAA,EAAVA,EAAY/vH,OAAQiI,KAAKuX,MAChC8iB,KAAWxjB,EAAAoC,WAAUjZ,KAAKuX,MAAOxf,GACvC,SAAA9N,OAAUowC,EAAW,WAAUxjB,EAAAkI,QAAOhnB,EAAM,QAChD,GAAC,CAAAxQ,IAAA,oBAAAC,MAAA,eAAAugI,EAAArgI,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAA87H,EAAAC,EAAAC,EAAAtpH,EAAAyD,EAAA8lH,EAAAruH,EAAA,OAAAnS,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACGuW,UACQ,QAAVopH,EAAA9hI,KAAK8tB,aAAK,IAAAg0G,OAAA,EAAVA,EAAYvrH,UAAU,MACZ,QADcwrH,EACxB/hI,KAAK8tB,aAAK,IAAAi0G,OAAA,EAAVA,EAAYrpH,UACF,QADQspH,EAClBhiI,KAAK8tB,aAAK,IAAAk0G,OAAA,EAAVA,EAAY7lH,QACX,GAAUhW,EAAAhE,KAAA,EACKnC,KAAKkoB,YAAYgB,UACjCxQ,EAAOrF,IAAMqF,EAAOhS,OACvB,OAFKyV,SAAKhW,EAAAtC,KAIL+P,EACF5T,KAAKc,KAAKmuB,YAFRgzG,EAAY9lH,GAAOxI,OAAS,KAG9B3T,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,OAAKi/H,EAAUr8H,SAAS5C,EAAEqQ,GAAG,GAAClN,EAAA7C,OAAA,YAAAS,OACnD6P,GAAQA,EAAK6B,cAAgB7B,EAAKL,MAAQ,KAAO,GAAE,KAAAxP,OACzDoY,GAAO1G,cAAgB0G,GAAO5I,OAClC,wBAAApN,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IACH,gBAAA2hI,IAAA,OAAAE,EAAAl9H,MAAA3E,KAAA4E,UAAA,EAlBA,IAkBA,CAAAvD,IAAA,SAAAiE,IAED,WAAiB,IAAA48H,EAAAC,EAAAC,EAAAC,EACb,GAAc,QAAdH,EAAIliI,KAAK8tB,aAAK,IAAAo0G,GAAVA,EAAY1xG,QAAS,MAAO,UAChC,IAAMzB,GAAkB,QAAVozG,EAAAniI,KAAK8tB,aAAK,IAAAq0G,OAAA,EAAVA,EAAYtwH,OAAQiI,KAAKuX,MACjCvf,GAAqB,QAAVswH,EAAApiI,KAAK8tB,aAAK,IAAAs0G,OAAA,EAAVA,EAAYtwH,WAAY,GACnC8R,KAAM+M,EAAA2H,YAAWvJ,EAAOjd,GACxBye,GAAwB,QAAV8xG,EAAAriI,KAAK8tB,aAAK,IAAAu0G,OAAA,EAAVA,EAAYvwH,UAAW,KACrC2iC,KAAM9jB,EAAA+jB,gBAAe,CACvB9T,MAAO5I,KAAK6I,MAAM/uB,EAAW,IAC7BgvB,QAAShvB,EAAW,KAEnB81B,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA7jC,UAAU4sB,EAAAkI,QACN9J,GACCwB,EAAW,UAAe,IAAMvwB,KAAK2uB,aACzC,OAAA5qB,UAAM4sB,EAAAkI,QACHjV,GACC2M,EAAW,UAAe,IAAMvwB,KAAK2uB,aACzC,KAAA5qB,OAAI+N,EAAW,KAAU,IAAM2iC,EAAM,IAAM,GAChD,GAAC,CAAApzC,IAAA,cAAAC,MAEM,WAAW,IAAA4E,EAAAlG,KACTA,KAAK8tB,OACV9tB,KAAKwD,QAAQ,OAAQ,WACjB,IAAMoU,EAAM1R,EAAKsR,QAAQzC,KAAKgsH,EAAAuB,2BAA4B,CACtD7/H,KAAMyD,EAAK4nB,QAEf5nB,EAAK2M,aACD,OACA+E,EAAIM,kBAAkBg7B,KAAKngC,UAAU,kBAAM7M,EAAKgtC,KAAKh0B,MAAM,IAE/DhZ,EAAK2M,aACD,SACA+E,EAAIM,kBAAkBi7B,OAAOpgC,UAAU,SAAC/P,GAAC,OACrCkD,EAAKitC,OAAOj0B,KAAKlc,EAAE,GAG/B,EACJ,KA5FC,IAAAzB,CA4FA,CA9G2B,CAAQjB,EAAA6H,cAAYk5H,SAAvCC,0CAAkBl5H,EAAAC,4BAAAC,EAAAgQ,WAAAlQ,EAAAC,4BAAAG,EAAA6sC,gBAAAjtC,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAsC,WAAA9C,EAAAC,4BAAA+b,EAAA7b,iBAAA,kDAAlB+4H,EAAkBx4H,UAAA,iBAAAqW,OAAA,CAAA2O,MAAA,QAAAkkB,SAAA,YAAA5yB,QAAA,CAAA8zB,KAAA,OAAAC,OAAA,UAAApqC,SAAA,CAAAX,EAAAknB,6BAFhB,CAAC9kB,EAAAU,YAAU9C,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,6wCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA3FlBhB,EALA4J,qBAAA,EAAAuwH,EAAA,WAKAn6H,CALsD,EAAAo6H,EAAA,mBAAlBp6H,EAAA6I,qBAAA,OAAA5H,EAAAykB,OAW/B1lB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAykB,8IAuFAwzG,CAAmB,6PCtHhC,IAAA13H,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OACA8yB,EAAA9yB,EAAA,OAEA2C,EAAA3C,EAAA,MACA63C,EAAA73C,EAAA,OAEA2M,GADA3M,EAAA,OACAA,EAAA,QACA4kI,EAAA5kI,EAAA,OACA6kI,EAAA7kI,EAAA,OACAyC,EAAAzC,EAAA,OAMA8nE,EAAA9nE,EAAA,OACAwC,EAAAxC,EAAA,OACA43C,EAAA53C,EAAA,OAEA8+E,EAAA9+E,EAAA,oJAoBgBuK,EAAAkB,oBAAA,wCAIAlB,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,uBAIJlB,EAAAkF,mEAHQlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAK,GAAAwc,OAAA,MAAAxc,GAAAwc,MAAApV,OAAA,KAAApH,GAAAwc,MAAApV,OAAA0R,0EAsBAhiB,EAAAiF,yBAAA,eAcIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,IAAA,IAAAC,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,GAAAqxH,UAAS,GAKdv6H,EAHJiF,yBAAA,WAGIjF,CADH,cACaA,EAAAmF,iBAAA,GAIRnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAQRvlB,EAFQkF,wBAERlF,kDArBIA,EAFAiX,sBAAA,yBAAA/N,GAAAsxH,YAEAx6H,CAF8C,0BAAAkJ,GAAAsxH,YAE9Cx6H,CAD+C,kCAAAkJ,GAAAsxH,aASjCx6H,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,YAAA7C,GAAAsxH,YAAA,qBAMNx6H,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAA,YAAAvc,GAAAsxH,YAAA,iFAeRx6H,EAPJiF,yBAAA,cAOIjF,CADH,cACaA,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,0EALIA,EAAA6I,qBAAA,oBAAA4xH,iCAzCRz6H,EAAAiF,yBAAA,YAsCIjF,EAjCA4J,qBAAA,EAAA8wH,EAAA,gBAiCA16H,CAlBC,EAAA26H,EAAA,iBA2BL36H,EAAAkF,mEAtCSlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,GAAAsxH,cAAA,MAAAtxH,GAAAwc,MAAA,KAAAxc,GAAAwc,MAAAk1G,eAAA,SAAA1xH,GAAAsxH,aAkCAx6H,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,GAAA2xH,yCAyBD76H,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,iFAAAnF,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA6D,GAAAkF,MAAA,KAAAlF,GAAAkF,MAAAf,gBAAA,MAAAnE,GAAAkF,MAAA,KAAAlF,GAAAkF,MAAAjD,MAAA,mCAaRnL,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGRnF,EADIkF,wBACJlF,6CAHQA,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,WAAAhO,GAAAuE,SAAA,KAAAvE,GAAAuE,SAAAJ,gBAAA,MAAAnE,GAAAuE,SAAA,KAAAvE,GAAAuE,SAAAtC,MAAA,WAAAjC,GAAAuE,SAAA,KAAAvE,GAAAuE,SAAAsZ,QAAA,kCAiIgB/mB,EAAAiF,yBAAA,aAKIjF,EAAAmF,iBAAA,GAKJnF,EAAAkF,6GAPIlF,EAAA6I,qBAAA,aAAAK,GAAA85D,WAAA83D,KAEA96H,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAAy1H,GAAA7zG,YAAA,KAAA6zG,GAAA7zG,YAAArqB,SAAA,iDARJoD,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADkC,aACZA,EAAAmF,iBAAA,GAEpBnF,EAAAkF,yBACFlF,EAAA4J,qBAAA,EAAAmxH,EAAA,eAWJ/6H,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,oCAORnF,EADIkF,wBACJlF,8DA9B8BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+uH,GAAA3vH,MAAA,QAKjBnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAiyH,GAAA7zG,YAAA,KAAA6zG,GAAA7zG,YAAArqB,QAaLoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,KAAAy1H,GAAAvnG,SAAA,KAKAvzB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA6uH,GAAAx4D,wBAAA,IAAAp5D,GAAAk6D,eAAA,2EAzEJpjE,EAPZiF,yBAAA,WAOYjF,CAHX,WAGWA,CAFqC,WAErCA,CADgB,YAEZA,EAAAmF,iBAAA,gCAOJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oCAMRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,eAQIjF,EAAA4I,qBAAA,uBAAAoyH,GAAAh7H,EAAAgJ,wBAAA2E,IAAAwH,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,GAAAu6D,WAAAu3D,GAAA/vH,KAAA/B,GAAAu6D,WAAAu3D,GAAA/vH,IAAA,GAKAjL,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,aAMIjF,EAAA4J,qBAAA,GAAAqxH,GAAA,eAqCRj7H,EADIkF,wBACJlF,gEAjFgBA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,aAAArF,EAAAiM,sBAAA,IAAA+uH,GAAAjnG,WAAA,UAAA7qB,GAAAqd,aAAA,KASAvmB,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAA8jH,GAAA3jG,WAAA,gBAAAr3B,EAAAiM,sBAAA,KAAA+uH,GAAAz4D,WAAA,IAAAr5D,GAAAk6D,eAAA,KAUJpjE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAAK,GAAAu6D,WAAAu3D,GAAA/vH,IAAA,uCAWIjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,GAAAu6D,WAAAu3D,GAAA/vH,IAAA,iCAURjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,GAAAu6D,WAAAu3D,GAAA/vH,IAAA,eAMqBjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAmyH,GAAA7mG,qCA9DzCn0B,EAAAwY,kCAAA,GAIQxY,EAHJiF,yBAAA,WAGIjF,CADH,WACGA,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAsxH,GAAA,gBA2FRl7H,EADIkF,wBACJlF,iFAzF8BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,GAAAwc,MAAAgvD,8CAgG9B10E,EAAAwY,kCAAA,GACIxY,EAAAkB,oBAAA,sGAEIlB,EAAAoF,sBAEApF,EAFA6I,qBAAA,YAAAK,GAAAkF,MAAA,KAAAlF,GAAAkF,MAAAhD,OAEApL,CAFqB,WAAAkJ,GAAAvI,SAErBX,CADqB,UAAAA,EAAAuJ,0BAAA,EAAAC,kCAkB7BxJ,EAAAkB,oBAAA,wFAIIlB,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAy/B,OAAA,oCAAA3oC,EAAA4iG,uDAVJ5iG,EAJJiF,yBAAA,WAIIjF,CADH,WACGA,EAAAulB,iBAAA,MAKAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAuxH,GAAA,cASJn7H,EAAAkF,mEANSlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,GAAAy/B,mCAqGmB3oC,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADkC,aACZA,EAAAmF,iBAAA,GAG1BnF,EADMkF,wBACNlF,GACAA,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,8BAT8BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+hD,GAAA3iD,MAAA,QAOtBnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,KAAAyoD,GAAAv6B,SAAA,wEAxFZvzB,EALJiF,yBAAA,WAKIjF,CADH,eAIOA,EAAA4I,qBAAA,uBAAAwyH,GAAAp7H,EAAAgJ,wBAAA0sD,IAAAvgD,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,GAAA2qB,aAAAunG,GAAAnwH,KAAA/B,GAAA2qB,aAAAunG,GAAAnwH,IAAA,GAMIjL,EADJiF,yBAAA,WACIjF,CAD0B,YAEtBA,EAAAmF,iBAAA,gCAQRnF,EADIkF,wBACJlF,GA2BIA,EA1BJiF,yBAAA,WA0BIjF,CADH,cAEOA,EAAAmF,iBAAA,GASRnF,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,WAGIjF,CADH,kBAEOA,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,aAQIjF,EAAA4J,qBAAA,GAAAyxH,EAAA,cAgBRr7H,EADIkF,wBACJlF,gEAlFgBA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,kBAAArF,EAAAiM,sBAAA,KAAAmvH,GAAArnG,WAAA,UAAA7qB,GAAAqd,aAAA,KAWJvmB,EAAAoF,oBAAA,GAiBApF,EAjBAiX,sBAAA,0BAAAmkH,GAAAjmG,MAiBAn1B,CAfC,oCAAAo7H,GAAAjmG,MAeDn1B,CAZC,0BAAAo7H,GAAAjmG,OAAA,aAAAimG,GAAAjmG,MAYDn1B,CARC,oCAAAo7H,GAAAjmG,OAAA,aAAAimG,GAAAjmG,MAQDn1B,CAJC,wBAAAo7H,GAAAjmG,MAIDn1B,CADC,kCAAAo7H,GAAAjmG,OAIDn1B,EAAA6I,qBAAA,aAAAuyH,GAAAjmG,OAAA,aAKIn1B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,iBAAA+1H,GAAAjmG,MAAA,oBAAAimG,GAAAjmG,MAAA,wBAcAn1B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,GAAA2qB,aAAAunG,GAAAnwH,IAAA,iCAURjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,GAAA2qB,aAAAunG,GAAAnwH,IAAA,eAQqBjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAuyH,GAAAjnG,qCA3FzCn0B,EAAAwY,kCAAA,GAIQxY,EAHJiF,yBAAA,WAGIjF,CADH,WACGA,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAA0xH,GAAA,gBAmGRt7H,EADIkF,wBACJlF,iFAtGQA,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,MAAAvc,GAAAwc,MAAA4oB,aAAA,KAAAplC,GAAAwc,MAAA4oB,aAAA1xC,SAAA,8BAKwBoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,GAAAwc,MAAA4oB,iFA4GhCtuC,EADJiF,yBAAA,WACIjF,CADsD,sBAIlDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAylC,IAAA,IAAAvlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,GAAAqyH,gBAA0B,EAAK,GAEvCv7H,EADKkF,wBACLlF,+CAJQA,EAAAoF,sBACApF,EADA6I,qBAAA,OAAAK,GAAAwc,MAAA5X,UACA9N,CADwB,OAAAkJ,GAAAwc,MAAArZ,yEAOhCrM,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0lC,IAAA,IAAAxlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA4hC,KAAAh0B,KAAA5N,GAAA6K,OAAgB,GAMrB/T,EADJiF,yBAAA,WACIjF,CAD+C,cACrCA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,MAERvlB,EAF4BkF,wBAE5BlF,iDAPIA,EADA6I,qBAAA,aAAAK,GAAAunC,SAAA,GAAAvnC,GAAAsyH,gBACAx7H,CAD+C,YAAAkJ,GAAAunC,6EAenDzwC,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAmwD,IAAA,IAAAjwD,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA6hC,OAAAj0B,MAAY,GAAK,GAGtB9W,EADJiF,yBAAA,WACIjF,CAD+C,cACrCA,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,MAERvlB,EAF+BkF,wBAE/BlF,wEACAA,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,uBAAA6yH,GAAAz7H,EAAAgJ,wBAAA0yH,IAAAvmH,UAAAjM,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAAyU,OAAA7G,KAAA2kH,GAAAxwH,IAAmB,GAGxBjL,EADJiF,yBAAA,WACIjF,CAD+C,cACrCA,EAAAmF,iBAAA,GAAcnF,EAAAkF,yBACxBlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,MAERvlB,EAFgCkF,wBAEhClF,kCAHkBA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA0vH,GAAAx1G,MACAjmB,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAg2G,GAAAtwH,kCAzelC,IAAMwwH,GAAgB,GAEtBpkI,6BAifuC,eAAAqkI,GAA1B1B,GAA0B,WAwFlC,OAAAxiI,EARD,SAAAwiI,GACqC/gF,GACzBzgD,GACAonB,GACArnB,GACA2W,IAAkB,IAAA0pB,GAAAqgG,GAAAC,GAAAzhI,EAAAC,KAAAsiI,IAJOtiI,KAAAuhD,UACzBvhD,KAAAc,QACAd,KAAAkoB,eACAloB,KAAAa,aACAb,KAAAwX,WApFKxX,KAAA+lB,OAAS,IAAInc,EAAAoV,aACbhf,KAAAkzC,KAAO,IAAItpC,EAAAoV,aACXhf,KAAAmzC,OAAS,IAAIvpC,EAAAoV,aAEvBhf,KAAA6rE,WAAa,GACb7rE,KAAAi8B,aAAe,GACfj8B,KAAA4iI,YAAc,GACd5iI,KAAAg3C,UAAW,EACXh3C,KAAAikI,WAAY,EACZjkI,KAAA2jI,gBAA0B,EACjB3jI,KAAA8tB,MAAQ9tB,KAAKuhD,OACbvhD,KAAA4jI,gBACZ,uDACG5jI,KAAA+I,SAAW,CACd,CACIrD,SAAoB,QAAZw7B,GAAElhC,KAAK8tB,aAAK,IAAAoT,IAAQ,QAARA,GAAVA,GAAYxoB,cAAM,IAAAwoB,QAAA,EAAlBA,GAAoB1tB,OAC9BiT,QAASivB,EAAAhvB,kBAID1mB,KAAAyW,cAAyB,QAAV8qH,GAAAvhI,KAAK8tB,aAAK,IAAAyzG,IAAiB,QAAjBA,GAAVA,GAAY51F,IAAI,mBAAW,IAAA41F,QAAA,EAA3BA,GAA6Bv8H,QAAS,EACrDhF,KAAAi3C,aAAyB,QAAXuqF,GAACxhI,KAAK8tB,aAAK,IAAA0zG,IAAiB,QAAjBA,GAAVA,GAAYtuG,uBAAe,IAAAsuG,KAA3BA,GAA6BtyG,KACxD,SAAClsB,IAAC,MAAwB,kBAAnBA,GAAE0Q,YAAgC,IAWtC1T,KAAAwW,MAAuB,IAAIksH,EAAAwB,cAC3BlkI,KAAA6V,SAAqB,IAAI4sH,EAAA0B,SACzBnkI,KAAAmc,MAAe,IAAIwpD,EAAAI,MAEnB/lE,KAAAokI,aAAepkI,KAAKuhD,OAAOrrC,UAAUmpB,OACxC,SAACuF,GAAOnY,IAAI,OAAMmY,IAAkC,aAAzBnY,GAAK43G,gBAAiC,EAAI,EAAC,EACtE,GAEGrkI,KAAAskI,eAAiBtkI,KAAKuhD,OAAOrrC,UAAUmpB,OAC1C,SAACuF,GAAOnY,IAAI,OAAMmY,IAAkC,aAAzBnY,GAAK43G,gBAAiC,EAAI,EAAC,EACtE,GAEGrkI,KAAAukI,cAAgBvkI,KAAKuhD,OAAOrrC,UAAUmpB,OACzC,SAACuF,GAAOnY,IAAI,OACPmY,IAC4B,cAAzBnY,GAAK43G,iBACoB,gBAAzB53G,GAAK43G,gBACC,EACA,EAAC,EACf,GAkCArkI,KAAKglG,QAAQrvB,MACjB,EAAC,EAAAt0E,IAAA,WAAAiE,IA9DD,WACI,OAAO,CAKX,GAAC,CAAAjE,IAAA,OAAAiE,IAwBD,WACI,OAAOtF,KAAK8tB,MAAMijB,KAAKnJ,QAAQ,qBAAsB,GACzD,GAAC,CAAAvmC,IAAA,aAAAiE,IAED,WACI,OAAQtF,KAAKa,UAAUyE,IAAI,iCAC/B,GAAC,CAAAjE,IAAA,iBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,8BAAgCy+H,EAC9D,GAAC,CAAA1iI,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,eAAAiE,IAED,WAAuB,IAAAm8H,GAAAG,GAAAE,GAAAC,GACnB,MAA0B,UAAZ,QAAVN,GAAAzhI,KAAK8tB,aAAK,IAAA2zG,QAAA,EAAVA,GAAYlkG,OAAyB,UACd,cAAb,QAAVqkG,GAAA5hI,KAAK8tB,aAAK,IAAA8zG,QAAA,EAAVA,GAAYlgG,QAA8B,UACnB,eAAb,QAAVogG,GAAA9hI,KAAK8tB,aAAK,IAAAg0G,QAAA,EAAVA,GAAYpgG,QAA+B,UACpB,cAAb,QAAVqgG,GAAA/hI,KAAK8tB,aAAK,IAAAi0G,QAAA,EAAVA,GAAYrgG,QAA8B,QACvC,SACX,GAAC,CAAArgC,IAAA,SAAAiE,IAYD,WAAiB,IAAA08H,GAAAE,GAAAC,GAAAC,GACb,GAAc,QAAdJ,GAAIhiI,KAAK8tB,aAAK,IAAAk0G,IAAVA,GAAYxxG,QAAS,MAAO,UAChC,IAAMzB,IAAkB,QAAVmzG,GAAAliI,KAAK8tB,aAAK,IAAAo0G,QAAA,EAAVA,GAAYrwH,OAAQiI,KAAKuX,MACjCvf,IAAqB,QAAVqwH,GAAAniI,KAAK8tB,aAAK,IAAAq0G,QAAA,EAAVA,GAAYrwH,WAAY,GACnC8R,MAAM+M,EAAA2H,YAAWvJ,GAAOjd,IACxBye,IAAwB,QAAV6xG,GAAApiI,KAAK8tB,aAAK,IAAAs0G,QAAA,EAAVA,GAAYtwH,UAAW,KACrC2iC,MAAM9jB,EAAA+jB,gBAAe,CACvB9T,MAAO5I,KAAK6I,MAAM/uB,GAAW,IAC7BgvB,QAAShvB,GAAW,KAEnB81B,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA7jC,UAAU4sB,EAAAkI,QACN9J,IACCwB,GAAW,UAAe,IAAMvwB,KAAK2uB,aACzC,OAAA5qB,UAAM4sB,EAAAkI,QACHjV,IACC2M,GAAW,UAAe,IAAMvwB,KAAK2uB,aACzC,KAAA5qB,OAAI+N,GAAW,KAAU,IAAM2iC,GAAM,IAAM,GAChD,GAAC,CAAApzC,IAAA,aAAAC,MAEM,SAAWma,IAAkB,IAAA2T,GAChC,OAAuB,QAAvBA,GAAO3T,GAAK4T,mBAAW,IAAAD,QAAA,EAAhBA,GAAkB9T,IAAI,SAACtY,IAAC,OAAKA,GAAEuQ,IAAI,GAAEsB,KAAK,KACrD,GAAC,CAAAxT,IAAA,UAAAC,OAAAkjI,GAAAhjI,EAAAC,IAAAC,KAEM,SAAAC,KAAA,IAAAw9D,GAAAnqC,GAAA,OAAAvzB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAC8C,GAA3C6yB,MAAM30B,EAAA2xB,WAAoB,QAAXmtC,GAACn/D,KAAKmc,aAAK,IAAAgjD,QAAA,EAAVA,GAAY9rD,GAAI,YAC9B,CAAApR,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,iBAAArB,UAAAE,KAAA,EACF6yB,GACDC,QAAQ,UAAW,IAACtE,EAAA4C,aAAYvzB,KAAK8tB,MAAMjc,QAAO1N,MAC5C,SAAC0f,IAAC,SAAKvjB,EAAAqU,aAAW,8BAAA5Q,OAA+B8f,IAAI,GAAC,OACjE7jB,KAAK4iI,YAAc,OAAO,wBAAA3gI,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IAC7B,SAAA2iI,KAAA,OAAA6B,GAAA7/H,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,QAAAC,MAAA,eAAAmjI,GAAAjjI,EAAAC,IAAAC,KAEO,SAAAwD,KAAA,IAAAw/H,GAAAC,GAAAC,GAAAC,GAAAxkF,GAAAp/C,GAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAAAiD,UAAAjD,KAAA,EACenC,KAAKkoB,YAAYgB,WACd,QAAlBw7G,GAAA1kI,KAAKuhD,OAAO7oC,cAAM,IAAAgsH,QAAA,EAAlBA,GAAoBrxH,MAAwB,QAAtBsxH,GAAI3kI,KAAKuhD,OAAO7oC,cAAM,IAAAisH,QAAA,EAAlBA,GAAoBj+H,QACjD,OAUC,GAZF1G,KAAKmc,MAAK/W,GAAAvB,KAGV7D,KAAKwW,MAAQxW,KAAKc,KAAKmuB,YAAYjvB,KAAKmc,MAAMxI,OAC9C3T,KAAK6V,SAAW7V,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAC9W,IAAG,OACzCnX,GAAKkb,MAAMxI,MAAM/N,SAASwS,GAAI/E,GAAG,GAErCrT,KAAK+I,SAAW,CACZ,CACIrD,SAAU1F,KAAKmc,MAAM3I,OACrBiT,QAASivB,EAAAhvB,oBAIqB,QAAlCk+G,GAAA5kI,KAAK8tB,MAAM8H,eAAexf,gBAAQ,IAAAwuH,IAAlCA,GAAoC5/H,QACJ,QADU6/H,GAC1C7kI,KAAK8tB,MAAM8H,eAAe5e,cAAM,IAAA6tH,IAAhCA,GAAkC7/H,QAAM,CAAAI,GAAAjD,KAAA,eAAAiD,GAAA9B,OAAA,iBAAA8B,UAAAjD,KAAA,MAIrBw6E,EAAAmoD,kBACnB9kI,KAAKuhD,OAAOluC,GACZrT,KAAKmc,MAAM9I,IACbpQ,YAAW,SAHPo9C,GAAQj7C,GAAAvB,QAKV7D,KAAKuhD,OAAS,IAAI/gD,EAAAssB,cAAa+B,IAAA,GACxB7uB,KAAKuhD,QAAM,IACd3rB,eAAc/G,IAAA,GACP7uB,KAAKuhD,OAAO3rB,gBACZyqB,QAGd,yBAAAj7C,GAAAX,OAAA,EAAAS,GAAAlF,KAAA,IACJ,gBAAAglG,KAAA,OAAAy/B,GAAA9/H,MAAA3E,KAAA4E,UAAA,EAnCA,IAmCA,CAAAvD,IAAA,SAAAC,MAEM,SAAO+R,IACV,IAAMqkB,GAAU13B,KAAK8tB,MAAMoF,gBAAgBhE,KACvC,SAAClsB,IAAC,OAAKA,GAAEkO,WAAamC,EAAE,GAE5B,OAAIqkB,GAAQgK,OAAehK,GAAQgK,OAC5BhK,GACDA,GAAQgY,SACJ,WACAhY,GAAQc,SACR,WACA,UACJ,SACV,GAAC,CAAAn3B,IAAA,eAAAC,MAEM,WAAY,IAAAwD,GAAA9E,KACfA,KAAKg3C,UAAW,EACJh3C,KAAKwX,QAAQzC,KAAK0gC,EAAAoC,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXt1C,KAAM,CAAEgZ,KAAMzb,KAAKmc,SAEnBnE,cAAcjF,UAAU,WACxBjO,GAAKkyC,UAAW,CACpB,EACJ,KAtEC,IAAAwtF,EAsEA,CAvLkC,GAuLlCR,UAvLQ1B,8CAA0Bl6H,EAAAC,4BAiFvByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAA0C,WAAA9C,EAAAC,4BAAAK,EAAAH,iBAAAH,EAAAC,4BAAAO,EAAA0P,WAAA,mDAjFlBgqH,GAA0Bx5H,UAAA,0BAAAsW,QAAA,CAAA2G,OAAA,SAAAmtB,KAAA,OAAAC,OAAA,UAAApqC,SAAA,CAAAX,EAAAknB,6BAFxB,CAAC9kB,EAAAU,aAAUjC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,qCA/Y8CoiB,UAAAC,MAAAC,EAAA,0FAyCXF,UAAAG,MAAAD,EAAA,0FAOpCF,UAAAI,MAAAF,EAAA,0FASuCF,UAAAM,MAAAJ,EAAA,oFAMAF,UAAAO,MAAAL,EAAA,mFAMAF,UAAAyoB,MAAAvoB,EAAA,wFAM3CF,UAAAugC,MAAArgC,EAAA,uFAwSaF,UAAAwgC,MAAAtgC,EAAA,6FA5YqBF,UAAAygC,MAAAvgC,EAAA,oGACnB,iBAuHmCF,UAAA0gC,MAAAxgC,EAAA,2FAyHlDF,UAAA2gC,MAAAzgC,EAAA,wFAiBkDF,UAAA4gC,MAAA1gC,EAAA,6GACnC,iBAmIFF,UAAA6gC,MAAA3gC,EAAA,2FAgBAF,UAAAkpC,MAAAhpC,EAAA,8FAUAF,UAAAmpC,MAAAjpC,EAAA,wvKA9dlBtnB,EANRiF,yBAAA,WAMQjF,CAJP,WAIOA,CADH,UAGOA,EAAAiV,2BAAA,uBAAAlM,IAAA/I,SAAAgJ,wBAAAW,IAAA3J,EAAAoV,6BAAAnU,GAAAu5H,YAAAzxH,MAAA9H,GAAAu5H,YAAAzxH,IAAA/I,EAAAoJ,sBAAAL,GAAA,GAIH/I,EAAAkF,yBAKDlF,EAJA4J,qBAAA,EAAA+yH,EAAA,aAIA38H,CADC,EAAA48H,EAAA,cAUD58H,EAAAiF,yBAAA,WAKIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAGQlF,EAFRiF,yBAAA,WAEQjF,CAFiD,WAEjDA,CADkB,oBAEdA,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAizH,EAAA,cAiDR78H,EADIkF,wBACJlF,GAKQA,EAJRiF,yBAAA,YAIQjF,CAJgC,YAIhCA,CADH,YACGA,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,kCACTnF,EADmDkF,wBACnDlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAClBlF,EAAAiF,yBAAA,UAAKjF,EAAAmF,iBAAA,IACTnF,EADqBkF,wBACrBlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD0C,eAChCA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACblF,EAAAiF,yBAAA,UACIjF,EAAA4J,qBAAA,GAAAkzH,EAAA,uBAGA98H,EAAAmF,iBAAA,IAMRnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAmzH,EAAA,cAUJ/8H,EAAAkF,yBAOQlF,EANRiF,yBAAA,YAMQjF,CAJP,YAIOA,CADH,YACGA,EAAAulB,iBAAA,MAA8CvlB,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,gBAIIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAAAnI,GAAAs6H,gBAA0B,EAAI,GAJlCv7H,EAAAulB,iBAAA,MASJvlB,EADIkF,wBACJlF,GAKQA,EAJRiF,yBAAA,YAIQjF,CAJ2B,YAI3BA,CADH,aACwBA,EAAAmF,iBAAA,IAAuBnF,EAAAkF,yBAC5ClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MACJvlB,EAD2CkF,wBAC3ClF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,aACwBA,EAAAmF,iBAAA,IAAyBnF,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MACJvlB,EAD0CkF,wBAC1ClF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,aACwBA,EAAAmF,iBAAA,IAAwBnF,EAAAkF,yBAC7ClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFmDkF,wBAEnDlF,KACAA,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,MAKAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAAkB,oBAAA,uBAEIlB,EADJiF,yBAAA,YACIjF,CAD6B,UACxBA,EAAAmF,iBAAA,IAA2BnF,EAAAkF,yBAChClF,EAAAiF,yBAAA,aAIIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,OACAA,EAAA4J,qBAAA,GAAAozH,GAAA,uBAqGAh9H,EAAAiF,yBAAA,gBAGIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAASnI,GAAAivC,eAAc,GAEvBlwC,EAAA4J,qBAAA,GAAAqzH,GAAA,uBAWJj9H,EAAAkF,yBAqBAlF,EApBA4J,qBAAA,GAAAszH,EAAA,aAoBAl9H,CAjBC,GAAAm9H,GAAA,uBAoIGn9H,EANJiF,yBAAA,eAMIjF,CADH,eACaA,EAAAmF,iBAAA,YACdnF,EADmBkF,wBACnBlF,GACAA,EAAA4J,qBAAA,GAAAwzH,GAAA,cAOJp9H,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAA4J,qBAAA,GAAAyzH,GAAA,iBAaAr9H,EAAAiF,yBAAA,gBAAsBjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,IAAA3J,EAAAoJ,sBAASnI,GAAA8pC,OAAAj0B,OAAa,GAEpC9W,EADJiF,yBAAA,YACIjF,CAD+C,eACrCA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,MAERvlB,EAF8BkF,wBAE9BlF,KAWAA,EAVA4J,qBAAA,GAAA0zH,GAAA,gBAUAt9H,CANC,GAAAu9H,GAAA,iBAiBTv9H,EADIkF,wBACJlF,UAheYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,QAAApU,GAAAu5H,aACAx6H,EAAA6I,qBAAA,YAAA5H,GAAA8S,MAAA,KAAA9S,GAAA8S,MAAA9I,IAMCjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA5H,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAApV,QAAA,MAAArP,GAAAykB,MAAApV,OAAA0R,QAAA/gB,GAAAykB,MAAApV,OAAA0R,OAAAplB,SAIAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAA5H,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAApV,QAAA,MAAArP,GAAAykB,MAAApV,OAAA0R,OAAA,KAAA/gB,GAAAykB,MAAApV,OAAA0R,OAAAplB,QAUDoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,eAAAhW,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAApV,QAAA,MAAArP,GAAAykB,MAAApV,OAAA0R,QAAA/gB,GAAAykB,MAAApV,OAAA0R,OAAAplB,SAEAoD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,GAAAykB,MAAA3sB,MAAA,KAIiBiH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,SAAA5H,GAAAu8H,cACTx9H,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,GAAAopC,OAAA,KAMHrqC,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBAAA5H,GAAAykB,MAAAyP,OAwDIn1B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,MAAAhL,GAAAykB,MAAAjc,KAAA,oBAIAzJ,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,GAAAopC,QAKcrqC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAAmN,OAGfpO,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAApE,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAApV,OAAA,KAAArP,GAAAykB,MAAApV,OAAAjD,gBAAA,MAAApM,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAApV,OAAA,KAAArP,GAAAykB,MAAApV,OAAAnF,QAAA,MAAAlK,GAAAykB,MAAA,KAAAzkB,GAAAykB,MAAApoB,UAAA,KASH0C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAAwM,UA8BwBzN,EAAAoF,oBAAA,IAAApF,EAAA+L,4BAAA9K,GAAA+6H,cAAA,GAMAh8H,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,GAAAi7H,gBAAA,GAMAl8H,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,GAAAk7H,eAAA,GAWVn8H,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAAykB,MAAA/V,WAEN3P,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAA9K,GAAAykB,MAAA/V,UAAA,KAAA1O,GAAAykB,MAAA/V,UAAAxE,MAGDnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,GAAAykB,MAAArZ,MAEArM,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAApE,GAAAykB,MAAArZ,KAAA,KAKDrM,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAAoN,cA0GIrO,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAA2tC,UAcd5uC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAA0nC,MAkBU3oC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAA4tC,YAqHqB7uC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAAs6H,gBAe/Bv7H,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAA46H,WAeA77H,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAAykB,MAAA+3G,oBAUez9H,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,GAAAy8H,kCAYpB,CAACxlI,EAAAkY,mCAGJ8pH,EAA0B,gSCxgBvC,IAAA1kI,EAAAC,EAAA,OAEAwC,GADAxC,EAAA,OACAA,EAAA,QACAub,EAAAvb,EAAA,OASAuC,EAAAvC,EAAA,MAYA8yB,EAAA9yB,EAAA,OACAyC,EAAAzC,EAAA,OAcAspC,GAJAtpC,EAAA,OAEAA,EAAA,OAEAA,EAAA,QAKA2C,EAAA3C,EAAA,MACA8+E,EAAA9+E,EAAA,OACA21E,EAAA31E,EAAA,OACAo7C,EAAAp7C,EAAA,OAEAkoI,GADAloI,EAAA,OACAA,EAAA,QACA+qG,EAAA/qG,EAAA,OACAmoI,EAAAnoI,EAAA,OACA2M,EAAA3M,EAAA,OACAu8B,EAAAv8B,EAAA,OACA8pD,EAAA9pD,EAAA,OAEAooI,GADApoI,EAAA,OACAA,EAAA,QACAw9B,EAAAx9B,EAAA,mFAEMqoI,EAAe,CACjB,aACA,cACA,eACA,gBACA,kBACA,YAyBJvmI,mBAG8B,eAAAwmI,EAAjB9wH,EAAiB,SAAAzU,GAuQ1B,SAAAyU,EACYvU,EACA0P,EACA+oC,GACA14C,GACA24C,GACAhiC,IAAkB,IAAAvW,GAAAlB,EAAAC,KAAAqV,IAE1BpU,GAAAC,EAAAlB,KAAAqV,IAPQvU,OACAG,GAAAuP,UACAvP,GAAAs4C,aACAt4C,GAAAJ,aACAI,GAAAu4C,WACAv4C,GAAAuW,WA5QJvW,GAAAw4C,MAAQ,IAAIrgC,EAAAuB,gBAA+B,QAC3C1Z,GAAAsmC,SAAW,IAAInuB,EAAAuB,gBAAkC,CACrDu3C,SAAU,GACVnpD,SAAU,KAEN9H,GAAA0gE,SAAQ6R,EAAA4yD,wBAAkBnhI,EAAWhE,GAAKJ,WAC1CI,GAAAmwB,MAAQ,IAAIhY,EAAAuB,gBAAgBb,KAAKuX,OACjCpwB,GAAAsgD,OAAS,IAAInoC,EAAAuB,gBAA+B,MAC5C1Z,GAAAgwB,SAAW,IAAI7X,EAAAuB,gBAAwB,IACvC1Z,GAAA49B,SAAW,IAAIzlB,EAAAuB,gBAAwB,GAGxC1Z,GAAAgT,aAA8B,IAAIzT,EAAAssB,cACrC1oB,KAAKo1B,MAAMx1B,eAAe4D,QAAQ,8BAAgC,OAEtD3G,GAAAqhB,QAAUrhB,GAAKgwB,SAASnW,eACxB7Z,GAAA+gB,QAAU/gB,GAAKsmC,SAASzsB,eAUxB7Z,GAAA44C,cAEZ54C,GAAKH,KAAK4W,cAAc5U,QACxB1C,EAAAwxB,WAAU,SAAC5e,GAAI,OACXrP,QAAQslB,IACJjW,EAAKsI,IAAI,SAAClD,IAAG,SACT/X,EAAAuoC,cAAaxwB,GAAI/E,GAAI,iBAAiBpQ,WAAW,GAExD,MAEL7C,EAAAkb,KAAI,SAACw+B,GACD,IACkCxiB,GAD5ByiB,GAAU,GAAG1iB,GAAAa,EACC4hB,GAAc,IAAlC,IAAAziB,GAAA/O,MAAAgP,GAAAD,GAAAc,KAAAC,MAAoC,KAAzBsP,GAAKpQ,GAAAh2B,MACZy4C,GAAQrS,GAAMr0B,IACVq0B,GAAMhxB,mBAAmB8nB,MAAQkJ,GAAMhxB,QAAU,EACzD,CAAC,OAAA4S,IAAA+N,GAAAxT,EAAAyF,GAAA,SAAA+N,GAAA8B,GAAA,CACD,OAAO4gB,EACX,IAAC,EACD35C,EAAAsyB,aAAY,IAGAzxB,GAAAib,UAA8B9C,EAAA2I,eAAc,CACxD9gB,GAAKsmC,SAASzkC,QAAK1C,EAAAsxB,yBAAwB,aAC3CzwB,GAAKH,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAsxB,yBAAwB,SAE7B5uB,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,GAAK0wB,UAAU,QAAQ,MAClCvxB,EAAAwxB,WAAU,SAAA3rB,GAAmB,IAAAogI,GAAfn0E,GAAejwC,EAAAhc,EAAA,GAAP,GAARisD,SACVjxD,GAAKgwB,SAAS9uB,KAAK,sCACnB,IACuBg4C,GAAAqpE,GAAAC,GADjBxjE,GAAah/C,GAAKJ,UAAUyE,IAAI,kBAQtC,OAPa,QAAT+gI,GAACn0E,UAAQ,IAAAm0E,IAARA,GAAUrhI,SACXktD,GAAW,EACNjS,GACuB,QADb9F,GACLl5C,GAAKH,KAAK+U,gBAAQ,IAAAskC,QAAA,EAAlBA,GAAoBtmC,UACF,QADW2vG,GAC7BviH,GAAKH,KAAK+U,gBAAQ,IAAA2tG,QAAA,EAAlBA,GAAoBnwG,MAAyB,QAAvBowG,GAAKxiH,GAAKH,KAAK+U,gBAAQ,IAAA4tG,QAAA,EAAlBA,GAAoBpwG,OAG7D,EAAO+F,EAAA0zB,UACHolB,GAAS52C,IAAI,SAACjI,IAAE,SACZu1F,EAAA/2E,sBAAqBxe,IAAIvQ,QAAK1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,GAAE,GAGnE,IAAC,EACDxZ,EAAAkb,KAAI,SAACq0C,GAAC,SAAKrvD,EAAAmyB,SAAQk9B,EAAE,MACrBvvD,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,GAAKgwB,SAAS9uB,KAAK,GAAG,MACjC/B,EAAAsyB,aAAY,IAGAzxB,GAAA8H,SAAW9H,GAAKib,OAAOpZ,QACnC1C,EAAAkb,KAAI,SAACq0C,GAAC,SAAKrvD,EAAAqvC,WAAOrvC,EAAAmyB,SAAQk9B,EAAEr0C,IAAI,SAACtY,IAAC,OAAKA,GAAE+F,QAAQ,IAAG,IAGxC9H,GAAAwgB,mBAAkBrI,EAAA2I,eAAc,CAC5C9gB,GAAKib,OACLjb,GAAK+gB,UACNlf,QACC1C,EAAAkb,KAAI,SAAA4G,GAAA,IAAAC,GAAAF,EAAAC,EAAA,GAAEhG,GAAMiG,GAAA,GAAAmkH,GAAAnkH,GAAA,GAAIqrC,GAAQ84E,GAAR94E,SAAUzkD,GAAQu9H,GAARv9H,SAAUwW,GAAQ+mH,GAAR/mH,SAAQ,OACxCrD,GACKV,OAAO,SAAC8M,IAAY,IAAA0f,GACXosD,KAAuB,QAAbpsD,MAAA1nC,EAAAkG,sBAAa,IAAAwhC,QAAA,EAAbA,GAAethC,QAAS,KAAKC,MAAM,KAAK,GAClDiN,IAAQ3S,GAAKJ,UAAUyE,IACzB,+BACC,IAAI8uF,IACHmyC,GACFtlI,GAAKJ,UAAUyE,IAAI,4BAA8B,GAC/CkhI,GAAgBz9G,OAAOC,KAAKu9G,IAC5BE,GAAan+G,GAAE3U,MAAMub,KAAK,SAAClsB,IAAC,OAC9BwjI,GAAc5gI,SAAS5C,GAAE,GAE7B,OACIslB,GAAE8yB,YACAxnC,IAAQ0U,GAAE3U,MAAM/N,SAASgO,QACzB6yH,IAAcF,GAAUE,MAAgBryC,OACxC5mC,IAAYvsD,GAAKylI,gBAAgB9gI,SAAS0iB,GAAEjV,MAC9CtK,GAAS8nC,MAAM,SAAC1X,IAAC,OAAK7Q,GAAEvf,SAASnD,SAASuzB,GAAE,IAC5C7Q,GAAE/I,UAAYyY,KAAK8F,IAAI,EAAGve,IAAY,EAE9C,GACCqpE,MAAM,EAAG5wD,KAAKC,IAAI,IAAK/b,GAAOlX,QAAQ,MAE/C5E,EAAAsyB,aAAY,IAGRzxB,GAAAwwB,mBAAkBrY,EAAA2I,eAAc,CACpC9gB,GAAKib,OACLjb,GAAKwgB,kBACN3e,QACC1C,EAAA0xB,sBAAqB,SAAAc,EAAAC,IAAU,OAAV5Q,EAAA2Q,EAAA,GAAI,KAAA3Q,EAAA4Q,GAAA,GAAM,EAAe,MAC9CzyB,EAAAwxB,WAAU,SAAAmC,GAAc,IAAA0b,GAAAxtB,EAAA8R,EAAA,GACpB,SAAO3a,EAAA2I,gBADQ0tB,GAAA,IAEF,IAAIn0B,IAAI,SAACtY,IACd,IAAM+uB,MAAU1xB,EAAA2xB,WAAUhvB,GAAEqQ,GAAI,YAAY0e,QACxC,YAEEE,GAAMF,GACPG,SACApvB,QACG1C,EAAAkb,KAAI,SAACtY,IAAC,OACDA,IAAK,IAAIsY,IAAI,SAAC8W,IAAC,OAAK,IAAI5xB,EAAAssB,cAAcsF,GAAE,EAAC,IAGtD,OAAKnxB,GAAKsxB,gBAAe,QAAAxuB,OAASf,GAAEqQ,MAChCpS,GAAK4R,aAAY,QAAA9O,OAASf,GAAEqQ,IAAM0e,GAAQS,QAEvCP,EACX,GAER,IAAC,EACD7xB,EAAAsyB,aAAY,IAGAzxB,GAAA0lI,4BAA2BvtH,EAAA2I,eAAc,CACrD9gB,GAAKwgB,gBACLxgB,GAAKwwB,gBACLxwB,GAAK44C,iBACLzgC,EAAA6gC,OAAMh5C,GAAKyP,KAAKoC,gBAAcsG,EAAA8gC,OAAM,MACpCj5C,GAAK49B,WACN/7B,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAA2Y,GAAoC,IAAAyvF,GAAA/6E,GAAA1mB,EAAAgS,EAAA,GAAlCjhB,GAAI21B,GAAA,GAAE9S,GAAQ8S,GAAA,GAAEkR,GAAalR,GAAA,GAC/B1nC,GAAKgwB,SAAS9uB,KAAK,gCACnB,IAAAykI,GACI3lI,GAAK0gE,MAAM3yC,cADTyf,GAAQm4F,GAARn4F,SAAU58B,GAAI+0H,GAAJ/0H,KAAMC,GAAQ80H,GAAR90H,SAAU0e,GAAOo2G,GAAPp2G,QAEhCxd,cAAO1S,EAAAmlF,0BACHzyE,GACA,CAAEnB,QAAMC,YAAUugB,SAAU,KAAM5d,QAAMnU,EAAAkG,gBACxCqzC,GAAgC,QAAnB6pE,GAACziH,GAAKH,KAAK+U,gBAAQ,IAAA6tG,QAAA,EAAlBA,GAAoBrwG,KAAO,MAE7B,IACXmI,OAAO,SAACxY,GAAGitC,IAAO,IAAA42F,GACT93G,GAAQyB,MAAUG,EAAA6C,YAAW3hB,IAAM6jB,UAAY7jB,GAC/C+R,GACFmL,GA3LR,KA4LSyB,GAAUwH,KAAK8F,IAAI,KAAShsB,IAAYA,IAEzCi9B,GAAelZ,GAASoa,KAAQ,GACpC,OAAqB,QAAjB42F,GAAA5lI,GAAKgT,oBAAY,IAAA4yH,IAAQ,QAARA,GAAjBA,GAAmBnuH,cAAM,IAAAmuH,QAAA,EAAzBA,GAA2BxzH,MAAOrQ,GAAEqQ,KACpC07B,GAAY,GAAAhrC,OAAAqe,EAAO2sB,IAAY,CAAE9tC,GAAKgT,iBAAY,EAE/C+xH,EAAAc,sBACH/3G,GACAnL,GACAmrB,GAAavzB,OAAO,SAACxY,IAAC,OAAKA,GAAEyrC,WAAaA,EAAQ,GAE1D,GACCjyB,KAAK,SAACyW,GAAG3U,IAAC,OAAK2U,GAAE1T,SAAWjB,GAAEiB,QAAQ,EAC/C,IAAC,EACDnf,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,GAAKgwB,SAAS9uB,KAAK,GAAG,MACjC/B,EAAAsyB,aAAY,IAGAzxB,GAAA8lI,2BACZ3tH,EAAA2I,eAAc,CACV9gB,GAAKwgB,gBACLxgB,GAAK44C,cACL54C,GAAKyP,KAAKoC,aAAahQ,QAAK1C,EAAAmxB,cAAa,MAAG,EAAGnxB,EAAAy2B,WAAU,OAC1D/zB,QACC1C,EAAAob,QAAO,kBAAOva,GAAKgwB,SAAS9Y,UAAU,MACtC/X,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAAwC,GAA4B,IAAAuvF,GAAA7+G,GAAAo8B,GAAAqgG,GAAAC,GAAAC,GAAA7xF,GAAA3tB,EAAAmS,EAAA,GAA1BlY,GAAM0zB,GAAA,GAAEiK,GAAajK,GAAA,GAC7B,IAAK1zB,GAAOlX,OAAQ,SAAOoU,EAAAQ,IAAG,IAC9B3Y,GAAKgwB,SAAS9uB,KAAK,kCACnB,IAAA6kI,GAAkC/lI,GAAK0gE,MAAM3yC,cAAvCnd,GAAIm1H,GAAJn1H,KAAMC,GAAQk1H,GAARl1H,SAAU0e,GAAOw2G,GAAPx2G,QAItBtU,OAH4Bjb,GAAKgmI,aAC3BtqD,EAAAuqD,uBACA//F,EAAAoiB,4BACNrtC,MAAS5b,EAAAmlF,0BACLvpE,GACA,CAAErK,QAAMC,YAAUugB,SAAU,KAAM5d,QAAMnU,EAAAkG,gBACxCqzC,GAAgC,QAAnB8pE,GAAC1iH,GAAKH,KAAK+U,gBAAQ,IAAA8tG,QAAA,EAAlBA,GAAoBtwG,KAAO,KAGlCiI,IAAI,SAAAiZ,IAAK,OAAAA,GAAFlhB,EAAW,GACzBmd,MAAUG,EAAA6C,YAAW3hB,IAAM6jB,UAAY7jB,GACvC2e,GAAUwH,KAAK8F,IAAI,KAAShsB,IAAYA,IACxC,QAAAhN,GAAA7D,UAAA,IAAA6D,IAAW,QAAXA,MAAMgpB,aAAK,IAAAhpB,IAAc,QAAdA,GAAXA,GAAayR,UAAU,UAAE,IAAAzR,QAAA,EAAzBA,GAA2BuO,MACb,QADe6tB,GACzBjgC,GAAK6sB,aAAK,IAAAoT,IAAQ,QAARA,GAAVA,GAAYxoB,cAAM,IAAAwoB,QAAA,EAAlBA,GAAoB7tB,MACV,QADYkuH,GACtBtgI,GAAK6sB,aAAK,IAAAyzG,QAAA,EAAVA,GAAYluH,UACZpO,OACJA,EACA,CAAW,QAAXu8H,GAACvgI,GAAK6sB,aAAK,IAAA0zG,QAAA,EAAVA,GAAY3vH,KAAgB,QAAZ4vH,GAAExgI,GAAK6sB,aAAK,IAAA2zG,QAAA,EAAVA,GAAY3vH,WACjChP,QACE1C,EAAAkb,KAAI,SAAC0qD,IAAgB,IAAAmhE,GACbn0H,GAAOkJ,GAAOV,OAAO,SAACxY,GAAGovB,IAAC,OAAK4zC,GAAa5zC,GAAE,GAClDpf,SAAO1S,EAAAmlF,0BACHzyE,GACA,CACInB,QACAC,YACAugB,SAAU,KACV5d,QAAMnU,EAAAkG,gBAEVqzC,GAAgC,QAAnBstF,GAAClmI,GAAKH,KAAK+U,gBAAQ,IAAAsxH,QAAA,EAAlBA,GAAoB9zH,KAAO,GAGjD,IAAC,EACDjT,EAAAkyB,YAAW,SAACtvB,IAAC,MAAK,EAAE,GAE5B,IAAC,EACD5C,EAAAyiB,KAAI,SAAC7f,GAAC,OAAK/B,GAAKgwB,SAAS9uB,KAAK,GAAG,MACjC/B,EAAAsyB,aAAY,IAGJzxB,GAAAwZ,iBAAmBxZ,GAAKmwB,MAAMtuB,QAC1C1C,EAAAwxB,WAAU,SAAC3Z,GAIP,OAHa+f,KAAK8qB,OAAInyB,EAAAy2G,kBAAiBnvH,EAAG6B,KAAKuX,SAE3CpwB,GAAKJ,UAAUyE,IAAI,sCAAwC,IAEzDrE,GAAK0lI,yBACL1lI,GAAK8lI,uBACf,IAAC,EACD3mI,EAAAsyB,aAAY,IAiMAzxB,GAAAutB,eAAiB,kBAAMvtB,GAAKgiF,MAAM,kBAAkB,EAnKhEhiF,GAAKinB,YAAc,IAAI1d,EAAAU,UAAUjK,GAAKH,MACtCG,GAAK4R,aACD,gBACA5R,GAAKuP,QAAQsjB,OAAO/gB,UAAU,SAAC+a,GAEvBA,aAAiBlwB,EAAAk+C,gBAChBoqF,EAAa/6F,KAAK,SAACnoC,IAAC,OAAK8qB,EAAMpgB,IAAI9H,SAAS5C,GAAE,IAE/C/B,GAAKwP,WAEb,IAEJ,IAAM42H,EAAW,GACjBpmI,UAAK4R,aACD,cACA5R,GAAK0gE,MAAM7uD,aAAaC,UAAU,SAAA88B,GAA+B,IAA5Bh+B,GAAIg+B,EAAJh+B,KAAMC,GAAQ+9B,EAAR/9B,UAElCD,IAAQA,KAASw1H,EAASx1H,MAC1BC,IAAYA,KAAau1H,EAASv1H,YAEnC7Q,GAAKu4C,QAAQ7mC,WAAW,CACpBd,KAAM5Q,GAAKyP,KAAKpP,MAAMuQ,KACtBC,SAAU7Q,GAAKyP,KAAKpP,MAAMwQ,WAE9Bu1H,EAASx1H,KAAUA,GACnBw1H,EAASv1H,SAAcA,IAEvBD,IAAQA,KAAS5Q,GAAKmwB,MAAMjZ,YAC5BlX,GAAKmwB,MAAMjvB,KAAK0P,IAEpB5Q,GAAK2mB,WACT,IACF3mB,EACN,CAACG,SAAAiU,EAAAzU,GAAAd,EAAAuV,EAAA,EAAAhU,IAAA,gBAAAiE,IA9RD,WACI,OAAOtF,KAAKunC,SAASpvB,UACzB,GAAC,CAAA9W,IAAA,cAAAiE,IAED,WAAsB,IAAAgiI,EAClB,OAA6B,QAAtBA,EAAAtnI,KAAKuhD,OAAOppC,kBAAU,IAAAmvH,OAAA,EAAtBA,EAAwBx1H,UAAW,IAC9C,GAAC,CAAAzQ,IAAA,OAAAiE,IA4ND,WACI,OAAOtF,KAAKy5C,MAAMthC,UACtB,GAAC,CAAA9W,IAAA,OAAAiE,IACD,WACI,OAAOtF,KAAK2hE,KAChB,GAAC,CAAAtgE,IAAA,QAAAiE,IACD,WACI,OAAOtF,KAAKuhD,OAAOppC,UACvB,GAAC,CAAA9W,IAAA,kBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuB,EAC/D,GAAC,CAAAjE,IAAA,eAAAiE,IAED,WACI,OAAyD,IAAlDtF,KAAKa,UAAUyE,IAAI,0BAC9B,GAAC,CAAAjE,IAAA,yBAAAC,MA8CM,WACHtB,KAAK6S,aAAa,eAAgB7S,KAAKya,iBAAiB1H,YAC5D,GAAC,CAAA1R,IAAA,UAAAC,MAEM,SAAQA,GAAoB,IAAA4E,GAAAlG,KAC/BA,KAAKwD,QAAQ,WAAY,kBAAM0C,GAAKuzC,MAAMt3C,KAAKb,EAAM,EAAE,GAC3D,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWA,GACdtB,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASpvB,YAAe7W,GACzD,GAAC,CAAAD,IAAA,UAAAC,OAAAimI,EAAA/lI,EAEM,eAAAsF,GAAA9G,KACH8tB,GAAAlpB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,IAAIpE,EAAAssB,cAAc,CACrC0D,QAASxwB,KAAKa,UAAUyE,IAAI,gCAC9B,OAAA7D,IAAAC,KAAA,SAAAC,GAAA6lI,IAAA,IAAAC,GAAAx3F,EAAA9zB,EAAA,OAAA1a,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAEsB,GAAxB2E,GAAKy6C,OAAOp/C,KAAK2rB,KACbA,GAAM+3G,mBAAkB,CAAA5jI,GAAAE,KAAA,QAAAF,UAAAE,KAAA,KACHw6E,EAAA+qD,WAAU55G,GAAM+3G,oBAChC5iI,YAAWkB,MACL,SAACnB,IAAC,OAAK,IAAI,GAAC,QAFjBykI,GAAMxlI,GAAA4B,QAIPiD,GAAKy6C,OAAOppC,WAAmB2W,WAAUD,IAAA,GACnC44G,GAAO34G,YAAU,IACpB64G,SAAUF,GAAO34G,WAAWwB,WAEnC,OAELxpB,GAAK0yC,QAAQ7mC,WAAW,CACpBw1B,UAAQ7nC,EAAAmyB,UACiB,QAArB+0G,GAAA15G,GAAMoF,uBAAe,IAAAs0G,QAAA,EAArBA,GAAuBlsH,IACnB,SAACtY,IAAC,OAAKA,GAAEu+B,WAAa,CAACv+B,GAAEkO,SAAS,KACjC,MAEVjP,GAAAiC,GAAAzC,IAAAunB,KACe8E,GAAMvX,WAAS,WAAAtU,GAAAo3B,GAAAp3B,GAAAiC,MAAAk0B,KAAA,CAAAn2B,GAAAE,KAAA,SAAtB8tC,OACD9zB,EAAQ2R,GAAMvX,UADb05B,EAAGhuC,GAAAo3B,GAAA/3B,OACwBW,GAAAE,KAAA,GACL2E,GAAKohB,YAAYgB,UAC1C/M,EAAM9I,IAAM8I,EAAMzV,OACrB,QAFDonB,GAAMvX,UAAU05B,GAAIhuC,GAAA4B,KAAA5B,GAAAE,KAAA,gBAIxB2E,GAAKsqB,MAAMjvB,KAAK2rB,GAAMjc,MACtB/K,GAAKtD,QACD,kBACA,WACIsD,GAAK66D,MAAMlwD,WAAW,CAClBI,KAAMic,GAAMjc,MAAQ/K,GAAK66D,MAAMrgE,MAAMuQ,MAE7C,EACA,KAEJ/K,GAAK8gI,YAAY,yBAAA3lI,GAAAwC,OAAA,EAAA9C,GAAA,EArCfF,EAqCe,GACpB,SAAAgmB,IAAA,OAAA8/G,EAAA5iI,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,YAAAC,MAEM,WAAS,IAAAumI,EAAAC,GACZ9nI,KAAK2hE,MAAM5lB,QACX,IAAMjuB,GACF9tB,KAAKuhD,OAAOppC,YACX,CAAEyd,eAAgB,IAEvB51B,KAAKw5C,QAAQ7mC,WAAW,CACpBw1B,UAAQ7nC,EAAAmyB,UACiB,QAArBo1G,EAAA/5G,GAAMoF,uBAAe,IAAA20G,OAAA,EAArBA,EAAuBvsH,IACnB,SAACtY,IAAC,OAAKA,GAAEu+B,WAAa,CAACv+B,GAAEkO,SAAS,KACjC,MAGb,IAAMuF,KAAiBqX,GAAM8H,eAAexf,SAAS,GACrDpW,KAAK2hE,MAAMlwD,WAAUod,MAAA,GACdf,GAAM8H,gBACN9H,IAAK,IACRhc,SAAUgc,GAAMhc,UAAY,IAAU,GAAKgc,GAAMhc,SACjDiG,UACI+V,IAAO/V,cACPzX,EAAAkG,gBACA,IAAImhD,EAAA6Q,KAAK,CAAE9xD,MAAOonB,IAAOrZ,OAC7BszH,sBACoC,QAAhCD,GAAAh6G,GAAM8H,eAAexf,SAAS,UAAE,IAAA0xH,QAAA,EAAhCA,GAAkCprD,eACjC5uD,GAAMza,IAAMoD,GAAe,IAAM,IACtCO,QAAS8W,GAAM8H,eAAe5e,QAAU,IAAIsE,IACxC,SAACtY,IAAC,OAAK,IAAIq4B,EAAAgC,aAAYxO,IAAA,GAAM7rB,IAAC,IAAE8qB,WAAQ,MAGhD9tB,KAAK2hE,MAAMlwD,WAAW,CAClBI,KAAMic,GAAMjc,MAAQ7R,KAAK2hE,MAAMrgE,MAAMuQ,KACrC4e,SAAU3C,GAAM2C,UAAYzwB,KAAK2hE,MAAMrgE,MAAMmvB,WAEjDzwB,KAAKunC,SAASplC,KAAK,CAAE4G,SAAU,KAC/B/I,KAAK4nB,WACT,GAAC,CAAAvmB,IAAA,YAAAC,MAEM,WACH0C,eAAes4C,WAAW,sBAC1Bt8C,KAAK2xB,UAAU,WACf3xB,KAAK2xB,UAAU,SACf3xB,KAAKynB,SACT,GAAC,CAAApmB,IAAA,YAAAC,MAEM,WACH0C,eAAeC,QACX,qBACAG,KAAKC,UAAUrE,KAAK2hE,MAAM3yC,eAAiB,IAEnD,GAAC,CAAA3tB,IAAA,WAAAC,MAEM,WAAQ,IAAA0mI,EAAAtoF,GAAA1/C,KACX,IAAKgE,eAAe4D,QAAQ,sBACxB,OAAO5H,KAAKynB,UAEhB,IAAMwgH,GAAY7jI,KAAKo1B,MACnBx1B,eAAe4D,QAAQ,uBAAyB,MAEhDqgI,GAAU50H,IAAM40H,GAAU50H,MAA6B,QAA3B20H,EAAKhoI,KAAKuhD,OAAOppC,kBAAU,IAAA6vH,OAAA,EAAtBA,EAAwB30H,QACzDspE,EAAA+qD,WAAUO,GAAU50H,IAAIN,UAAU,SAAC+a,IAAS,IAAAo6G,GACxCxoF,GAAK6B,OAAOp/C,KAAK2rB,IACjB4xB,GAAKlG,QAAQ7mC,WAAW,CACpBw1B,UAAQ7nC,EAAAmyB,UACiB,QAArBy1G,GAAAp6G,GAAMoF,uBAAe,IAAAg1G,QAAA,EAArBA,GAAuB5sH,IACnB,SAACtY,IAAC,OAAKA,GAAEu+B,WAAa,CAACv+B,GAAEkO,SAAS,KACjC,KAGjB,GAEJlR,KAAK2hE,MAAMlwD,WAAUod,EAAA,GAAMo5G,IAC/B,GAAC,CAAA5mI,IAAA,qBAAAC,MAIM,WAAyC,IAAAg9E,EAAAt+E,KAAtBw8C,GAAA53C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAChB8L,GAAO1Q,KAAK2hE,MAElB,GADAjxD,GAAKiX,mBACAjX,GAAKgE,OAAU8nC,GACpB,KAAM1uB,GAAQ,IAAIttB,EAAAssB,cAAa+B,IAAA,GAAMne,GAAKse,eAAa,IAAEhY,OAAQ,MACrDhX,KAAKwX,QAAQzC,KAAKgxH,EAAAoC,wBAAyB,CAAE1lI,KAAMqrB,KAC3D9V,cAAcjF,UAAU,SAACkF,IAAC,OAC1BA,GAAIqmE,EAAK9tE,QAAQK,SAAS,CAAC,MAAQ,EAAE,GAE7C,GAAC,CAAAxP,IAAA,WAAAC,MAEM,WAG0B,IAAAo9E,EAAA1+E,KAF7Bw8C,GAAA53C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACAwjI,GAAAxjI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,GAC/ByjI,GAAAzjI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAEA,OAAO,IAAIjB,QAAO,eAAA+wB,GAAAlzB,EAAAC,IAAAC,KAAgB,SAAAsE,GAAOpC,EAASmnF,GAAM,IAAAu9C,GAAAvhF,GAAAC,GAAAuhF,GAAAx4F,GAAAlb,GAAA2zG,GAAAC,GAAAC,GAAAC,GAAAC,GAAA9zG,GAAA+zG,GAAAC,GAAA3zG,GAAA4zG,GAAAr4H,GAAAod,GAAA2gB,GAAAntC,GAAA0nI,GAAA31H,GAAAoB,GAAA5C,GAAAC,GAAAoY,GAAAsG,GAAAxZ,GAAA8X,GAAA5S,GAAA9F,GAAA6yH,GAAAC,GAAAC,GAAAjzH,GAAA2sD,GAAAxvC,GAAAkqB,GAAAtlC,GAAAuf,GAAAC,GAAA+F,GAAAs3D,GAAAs0C,GAAAlqG,GAAAP,GAAA0qG,GAAAC,GAAAliI,GAAAgtF,GAAApgE,GAAAu1G,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA97F,GAAA,OAAAvsC,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAIL,GAH/Cu8E,EAAKztD,SAAS9uB,KAAK,sBACbuO,GAAOguE,EAAK/c,OACbh6C,mBACCmG,GAAQ4wD,EAAK5wD,OAAS,IAAIttB,EAAAssB,cAC3Bpc,GAAKgE,OAAU8nC,GAAK,CAAAr2C,GAAAhE,KAAA,QACrBu8E,SAAKztD,SAAS9uB,KAAK,IAAIgE,GAAA7C,OAAA,SAChBynF,EAAM,kCAAAhnF,UACyBzD,EAAAsU,kBAC9BlE,IACFmE,KAAK,MAAK,OACf,OA8BJ,GA5BK45B,GAAqB,QAAb65F,GAAG5pD,EAAK5wD,aAAK,IAAAw6G,QAAA,EAAVA,GAAY75F,SACzBntC,GAAQo9E,EAAK/c,MAAM3yC,cAEnB3b,IAFgC21H,GAUhC1nI,IARA+R,GACAoB,GAAIu0H,GAAJv0H,KACA5C,GAAIm3H,GAAJn3H,KACAC,GAAQk3H,GAARl3H,SACAoY,GAAO8+G,GAAP9+G,QACAsG,GAAOw4G,GAAPx4G,QACAxZ,GAAMgyH,GAANhyH,OACA8X,GAAUk6G,GAAVl6G,WAEA5S,IAA8B,QAArB6qC,GAAAr2C,GAAKpL,IAAI,oBAAY,IAAAyhD,QAAA,EAArBA,GAAuBzlD,QAAS,GACzC8mI,GAAmBpjI,SACnBkX,GAASA,GAAOV,OACZ,SAACxY,IAAC,OACGolI,GAAmBxiI,SAAS5C,GAAE0D,SAC9B0hI,GAAmBxiI,SAAS5C,GAAEqQ,GAAG,IAG1C+C,IAA+B,QAApB4wC,GAAAt2C,GAAKpL,IAAI,mBAAW,IAAA0hD,QAAA,EAApBA,GAAsB1lD,QAAS,GAChC,MAAVwtB,OAAY64G,UAAqC,SAAzB74G,IAAY64G,WACpCjpD,EAAKhuE,KAAKe,WAAW,CAAEs4H,WAAW,IAClCzoI,GAAQo9E,EAAK/c,MAAM3yC,eAEnBi6G,IAAgB,EAChBC,GAAiBhtH,GAAOivB,KACxB,SAAC7iB,IAAC,IAAAm+D,GAAA,QAAqB,QAAhBA,GAAC34D,GAAMvX,iBAAS,IAAAkwE,IAAfA,GAAiBv3D,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOiV,GAAEjV,EAAE,GAAC,GAGjDA,IAAMxB,KAASic,GAAMjc,MAAQC,KAAagc,GAAMhc,WAClDoK,GAAOlX,OAAM,CAAAmB,GAAAhE,KAAA,SAEb8mI,WAAgB,EAAK9iI,GAAAhE,KAAA,GACfu8E,EAAKsrD,gCACP9tH,GACAsU,MAAUG,EAAA6C,YAAW3hB,IAAM6jB,UAAY7jB,GACvC2e,GAAUwH,KAAK8F,IAAI,KAAShsB,IAAYA,GACxC28B,IAAYp7B,IAAM,IACrBlP,MAAO,SAACnB,IACL07E,QAAKztD,SAAS9uB,KAAK,IACnB4oF,EAAO/nF,IACDA,EACV,GAAE,QAK8B,GAHpCkZ,IAA8B,QAArBqsH,GAAA73H,GAAKpL,IAAI,oBAAY,IAAAijI,QAAA,EAArBA,GAAuBjnI,QAAS,GACnC6nI,GACF10H,MAAsB,QAAlBs7B,MAAKzvC,EAAAkG,sBAAa,IAAAupC,QAAA,EAAbA,GAAerpC,QACxBwjB,MAAyB,QAAlB2K,MAAKv0B,EAAAkG,sBAAa,IAAAquB,QAAA,EAAbA,GAAenuB,OAE1BwV,GAAOlX,SACR05E,EAAK79E,UAAUyE,IAAI,gCAA+B,CAAAa,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,GAE9Bu8E,EAAKx2D,YAAYgB,UACjCw1D,EAAK79E,UAAUyE,IAAI,iCACtB,QACD4W,GAAO+c,KAHI9yB,GAAAtC,MAGQ,QAKtB,GAHKqS,MAAY5V,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAChB9gB,GAAM4U,WAAS,CAAE5U,GAAMyW,cAAazX,EAAAkG,iBACxC,SAEC0V,GAAOlX,SAAUkR,GAAUgZ,KAAK,SAAClsB,IAAC,OAAKA,GAAEinI,WAAW,GAAC,CAAA9jI,GAAAhE,KAAA,SACtDu8E,QAAKztD,SAAS9uB,KAAK,IAGnB4oF,EADI,qGAES,QAW+C,GAT1DloB,GAAoB,QAAZ2lE,GAAGtsH,GAAO,UAAE,IAAAssH,QAAA,EAATA,GAAWn1H,GACtBggB,GAAahgB,GACb,CACI0hB,WACc,QAAV0zG,GAAA/pD,EAAK5wD,aAAK,IAAA26G,IAAc,QAAdA,GAAVA,GAAYlyH,UAAU,UAAE,IAAAkyH,QAAA,EAAxBA,GAA0Bp1H,MAChB,QADkBq1H,GAC5BhqD,EAAK5wD,aAAK,IAAA46G,IAAQ,QAARA,GAAVA,GAAYhwH,cAAM,IAAAgwH,QAAA,EAAlBA,GAAoBr1H,KACpBwvD,IAER,GACFsmE,KAAad,KAAch1G,GAAM62G,SAAWz1H,IAAQyV,KACpDw0D,EAAKnlC,UAAUmE,iBAAkBxhC,GAAOlX,OAAM,CAAAmB,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,GACxBu8E,EAAKnlC,UAAUoE,YAAY,CAC7C/qC,KAAM,QACNgrC,cAAe1hC,GAAO,GAAGzG,cAAgByG,GAAO,GAAG3I,KACnD1B,QACAC,YACA0e,aACF,QANW,GAOD,OAPN+sB,GAAOp3C,GAAAtC,OAOR05C,GAASM,QAAO,CAAA13C,GAAAhE,KAAA,gBAAAgE,GAAA7C,OAAA,SAASo7E,EAAKztD,SAAS9uB,KAAK,KAAG,QACnDb,GAAcs0B,eAAiB,CAC5BkoB,QAASP,GACTQ,WAAYR,GAAQQ,YACtB,QAEA9lC,GAAI3W,GAAMuQ,KAAI2lB,GAAAU,EACA9hB,IAAQ,IAA5B,IAAAohB,GAAAlP,MAAAmP,GAAAD,GAAAW,KAAAC,OAAWoF,GAAK/F,GAAAn2B,OACNugC,MAAQvgC,GAAM6oI,eACpB3sG,GAAMk/C,YAAcp7E,GAAMymI,oBAC7B,OAAAz+G,IAAAkO,GAAA3T,EAAAyF,GAAA,SAAAkO,GAAA2B,GAAA,CACD,GAAIjd,GAAOlX,OAAQ,CACV8vF,GAAqB,EAAds0C,GAAiB,EAAClqG,GAAAhH,EACVhc,IAAM,IAA1B,IAAAgjB,GAAA5W,MAAAqW,GAAAO,GAAA/G,KAAAC,MAIgB,OAHNixG,GAAW3qD,EAAK79E,UAAUyE,IAAG,uBAAAvB,OADvB46B,GAAAr9B,MAEqB+R,OAE7Bg2H,GAAUv0C,QAAOA,GAAQu0C,GAASv0C,OAC1B,MAARu0C,OAAUD,YAAWA,GAAYC,GAASD,UACjD,OAAA9/G,IAAA4V,GAAArb,EAAAyF,GAAA,SAAA4V,GAAA/F,GAAA,CACA73B,GAAcwzF,MAAQxzF,GAAM8oI,YAAct1C,GAC1CxzF,GAAc8nI,UAAY9nI,GAAM+oI,gBAAkBjB,EACvD,CACME,WAAoBtyH,IAAU,IAAIsE,IAAI,SAACtY,IAAC,OAC1C,IAAIq4B,EAAAgC,aAAar6B,IAAGsnI,QAAQ,GAC/BnkI,GAAAhE,KAAA,GACoBu8E,EAAK/tE,aACtB,IAAInQ,EAAAssB,cAAa+B,IAAA,GACVvtB,IAAK,IACRipI,WAAsB,QAAZ5B,GAAEjqD,EAAK5wD,aAAK,IAAA66G,QAAA,EAAVA,GAAYjwH,OACxBjE,KACIiqE,EAAK79E,UAAUyE,IAAI,2BAClBo5E,EAAK79E,UAAUyE,IAAI,2BACdhE,GAAMiV,UAAU,GAAG7P,MACnB,KACNpF,GAAMmT,KACVtT,MAAOG,GAAMH,OAAS,gBACtB+U,UAAWA,GAAUoF,IAAI,SAACtY,IACtB,IAAM0f,GAACmM,EAAA,GAAQ7rB,IACf,cAAO0f,GAAE8nH,eACF9nH,EACX,GACA7Q,KAAMoG,GACN7B,YACAY,OAAQsyH,GACR1zG,eACI8oD,EAAK79E,UAAUyE,IAAI,0BACnBo5E,EAAK79E,UAAUyE,IAAI,2BACb,CACImlI,cAAenpI,GAAMmT,KACrB2pC,YACmB,QAAfwqF,GAAAtnI,GAAMyW,iBAAS,IAAA6wH,QAAA,EAAfA,GAAiBxqF,cACJ,QADctpB,MAC3Bx0B,EAAAkG,sBAAa,IAAAsuB,QAAA,EAAbA,GAAespB,aAEvB,CACIA,YACmB,QAAfyqF,GAAAvnI,GAAMyW,iBAAS,IAAA8wH,QAAA,EAAfA,GAAiBzqF,cACJ,QADc0qF,MAC3BxoI,EAAAkG,sBAAa,IAAAsiI,QAAA,EAAbA,GAAe1qF,gBAGrC/qB,IACHlvB,MAAO,SAAC0f,IACLknE,QAAOlnE,IACP66D,EAAKztD,SAAS9uB,KAAK,IACb0hB,EACV,GAAE,QAUY,GAjDRzc,GAAMjB,GAAAtC,KAwCNuwF,KAAuB,QAAbj/D,MAAA70B,EAAAkG,sBAAa,IAAA2uB,QAAA,EAAbA,GAAezuB,QAAS,KAAKC,MAAM,KAAK,GAClDqtB,GAAW9d,GAAUsF,OACvB,SAACiR,IAAI,OACDA,GAAKw9G,aACLx9G,GAAK/lB,QAAUonB,GAAMrZ,OACpBgY,GAAK/lB,MAAMd,SAASwuF,KACrB3nE,GAAK+9G,cAAc,GAEvBjB,IAAkB,EAChBC,GAAQ,eAAAp0G,GAAA5zB,EAAAC,IAAAC,KAAG,SAAAwD,GAAO2e,IAAC,IAAAiS,GAAA,OAAAr0B,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,UAChBu8E,EAAKhuE,KAAKpP,MAAM+R,GAAE,CAAAjO,GAAAjD,KAAA,QAAAiD,UAAAjD,KAAA,KACb8jI,EAAAyE,aACFtjI,GAAOiM,GACP6I,GAAOlX,OACD,CACIklI,SACIxrD,EAAKhuE,KAAKpP,MAAMmT,OACH,QADOqhB,MACpBx1B,EAAAkG,sBAAa,IAAAsvB,QAAA,EAAbA,GAAepvB,OACnBquB,UAAW7Y,GAAO,GAAG7I,IAEzB,IACRpQ,YAAW,OACbb,QAAQuxF,KAAK,iCAAkC9vE,KAC7B,EACdvjB,EAAAqU,aADc,MAAdkP,IAAG6d,OAEC,uDAEW,uCAAuCt8B,GAAAjD,KAAA,oBACnDonI,GAAe,CAAAnkI,GAAAjD,KAAA,SACtB,SAAA7B,EAAAqU,aAAW,mDAAA5Q,OAC4C8f,KACrDze,GAAA9B,OAAA,kBAGNo7E,QAAKztD,SAAS9uB,KAAK,IACb0hB,GAAC,yBAAAze,GAAAX,OAAA,EAAAS,GAAA,IACV,gBA3Ba40B,IAAA,OAAA1E,GAAAzwB,MAAA3E,KAAA4E,UAAA,MA4BVovB,GAAShvB,OAAM,CAAAmB,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,MACTglC,EAAAsiB,wBACFriD,GACA,UACA4sB,IACH7vB,MAAOqlI,IAAS,aAGX,MAANxyH,OAAQhS,QAAqC,QAA/B+jI,GAAIj7G,GAAM8H,eAAe5e,cAAM,IAAA+xH,IAA3BA,GAA6B/jI,QAAM,CAAAmB,GAAAhE,KAAA,SACrDonI,WAAkB,EAAKpjI,GAAAhE,KAAA,MACAi4B,EAAAsX,kCACnBtqC,GACA,CACIyK,QACAC,YACA2C,QACA+b,WACAme,eACa,QAAT86F,GAAAvtH,GAAO,UAAE,IAAAutH,QAAA,EAATA,GAAWh0H,gBAAyB,QAAbi0H,GAAIxtH,GAAO,UAAE,IAAAwtH,QAAA,EAATA,GAAWn2H,OAAQ,GAClDq7B,aAAsB,QAAT+6F,GAAAztH,GAAO,UAAE,IAAAytH,QAAA,EAATA,GAAWt2H,KAAM,GAC9BM,MAAgB,QAATi2H,GAAA1tH,GAAO,UAAE,IAAA0tH,IAAO,QAAPA,GAATA,GAAWpzH,aAAK,IAAAozH,IAAhBA,GAAkB/1H,UACnB,CAAU,QAAVg2H,GAAC3tH,GAAO,UAAE,IAAA2tH,IAAO,QAAPA,GAATA,GAAWrzH,aAAK,IAAAqzH,QAAA,EAAhBA,GAAkBh2H,WACnB,CAAmB,QAAnBi2H,GAACprD,EAAK59E,KAAK+U,gBAAQ,IAAAi0H,QAAA,EAAlBA,GAAoBz2H,IAC3Bw7B,YAAao6F,IAEjBjyH,GACAkyH,IAAkBD,IACrB9kI,MAAOqlI,IAAS,QAjBH,GAARx7F,GAAQ7nC,GAAAtC,KAkBD,CAAAsC,GAAAhE,KAAA,cAAQ,oCAAmC,QAAAgE,UAAAhE,KAAA,GAClD6rC,KAAU,QAChBu7F,IAAkB,EAAM,QAE5B7qD,EAAKjuE,YACLiuE,EAAKzqE,aAAe7M,GACpBpD,eAAeC,QACX,4BACAG,KAAKC,UAAU+C,KAEnBs3E,EAAKtpE,QAAQ,WACbspE,EAAKl7E,QAAQ,eAAgB,kBAAMk7E,EAAK7/C,SAAS18B,KAAK2X,KAAKuX,MAAM,GACjEztB,EAAQwD,IACRs3E,EAAKztD,SAAS9uB,KAAK,IAAI,yBAAAgE,GAAA1B,OAAA,EAAAuB,GAAA,IAC1B,gBAAA2W,GAAA2c,GAAA,OAAA5E,GAAA/vB,MAAA3E,KAAA4E,UAAA,EArPiB,GAsPtB,GAAC,CAAAvD,IAAA,eAAAC,MAAA,eAAAqpI,EAAAnpI,EAAAC,IAAAC,KAEO,SAAAmF,GACJinB,GACAuF,IAA0B,OAAA5xB,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,OAE1B,OAAAnC,KAAK4qI,mBAAmB98G,GAAM5X,WAAWnP,GAAAzD,OAAA,UAEpCtD,KAAKinI,gBASAtqD,EAAAkuD,WAAU/8G,GAAOuF,KAAK,EARtB8T,EAAA6W,gBACI/E,EAAAsO,6BAA2B14B,IAAA,GACpBf,GAAMw8G,UAAQ,IACjB5oG,OAAQ1hC,KAAKa,UAAUyE,IAAI,4BACrB,WACA,gBAEZxC,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,SAAKwwE,EAAA5/C,6BAA4B5wB,EAAE,KAExDC,aAAW,wBAAA8D,GAAAtC,OAAA,EAAAoC,GAAA7G,KAAA,IAChB,gBAAA2Q,EAAAswC,GAAAC,IAAA,OAAAypF,EAAAhmI,MAAA3E,KAAA4E,UAAA,EAnBA,IAmBA,CAAAvD,IAAA,kCAAAC,MAAA,eAAAwpI,EAAAtpI,EAAAC,IAAAC,KAEO,SAAAi+C,GACJzjC,GACArK,GACAC,GACAq2B,IAAe,IAAAy5F,EAAAE,EAAAC,GAAAC,GAAAE,GAAA,OAAAzgI,IAAAO,KAAA,SAAAg+C,IAAA,cAAAA,GAAA99C,KAAA89C,GAAA79C,MAAA,UAEJ,MAAN+Z,OAAQlX,OAAM,CAAAg7C,GAAA79C,KAAA,eAAA69C,GAAA18C,OAAA,UAAS,GAAI,WAC5BtD,KAAKinI,aAAY,CAAAjnF,GAAA79C,KAAA,SAAA69C,UAAA79C,KAAA,KACMw6E,EAAAuqD,wBACnBhrH,GAAOZ,IAAI,SAAAya,IAAK,OAAAA,GAAF1iB,EAAW,GACzBxB,GACAC,IACA9R,YAAW,QAAP4hI,EAAJ5hI,KAAM8tB,aAAK,IAAA8zG,GAAc,QAAdA,EAAXA,EAAarrH,UAAU,UAAE,IAAAqrH,OAAA,EAAzBA,EAA2BvuH,MACb,QADeyuH,EACzB9hI,KAAK8tB,aAAK,IAAAg0G,GAAQ,QAARA,EAAVA,EAAYppH,cAAM,IAAAopH,OAAA,EAAlBA,EAAoBzuH,MACV,QADY0uH,GACtB/hI,KAAK8tB,aAAK,IAAAi0G,QAAA,EAAVA,GAAY1uH,UACZpO,OACJA,EACA,CAAW,QAAX+8H,GAAChiI,KAAK8tB,aAAK,IAAAk0G,QAAA,EAAVA,GAAYnwH,KAAgB,QAAZqwH,GAAEliI,KAAK8tB,aAAK,IAAAo0G,QAAA,EAAVA,GAAYpwH,WACjC7O,YAAW,OAVC,GAAA+8C,GAAAn8C,KAWAgtC,MAAM,SAAC7tC,IAAC,OAAKA,EAAC,GAAC,CAAAg9C,GAAA79C,KAAA,gBAAA4B,OAErBmY,GAAOlX,OAAS,EACV,qBACA,8BACV,iDAAAg7C,GAAA79C,KAAA,iBAAA69C,UAAA79C,KAAA,MAGuBglC,EAAAoiB,2BACvBrtC,GAAOZ,IAAI,SAACtY,IAAC,OAAKA,GAAEqQ,EAAE,GACtBxB,GACAC,GACAq2B,IACFllC,YAAW,QALK,GAAA+8C,GAAAn8C,KAMAgtC,MAAM,SAAC7tC,IAAC,OAAKA,EAAC,GAAC,CAAAg9C,GAAA79C,KAAA,iBAAA4B,OAEzBmY,GAAOlX,OAAS,EACV,qBACA,8BACV,0DAAAg7C,GAAA18C,OAAA,UAED,GAAI,yBAAA08C,GAAAv7C,OAAA,EAAAk7C,GAAA3/C,KAAA,IACd,gBAAAgqI,EAAA7oF,GAAAw9B,GAAAqB,GAAAI,IAAA,OAAA0qD,EAAAnmI,MAAA3E,KAAA4E,UAAA,EA3CA,IA2CA,CAAAvD,IAAA,qBAAAC,MAEO,SAAmB4U,GACvB,IAAM8d,GAAW9d,EAAUsF,OAAO,SAACiR,IAAI,OAAKA,GAAKw9G,WAAW,GAC5D,GAAa,MAARj2G,OAAUhvB,OACf,KAAMmzD,GAAen4D,KAAKa,UAAUyE,IAAI,qBAAuB,GAC/DtF,KAAKa,UAAUm/B,gBACX,sBACA1/B,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EACC+1C,GAAa38C,OAAO,SAACxY,IAAC,OAAMA,GAAE4C,SAAS5C,GAAE0D,MAAM,IAAC0b,EAChD4R,GAAS1Y,IACR,SAACtY,IAAC,SAAAe,OAAQf,GAAE0D,MAAK,KAAA3C,OAAIf,GAAEuQ,KAAI,KAAAxP,OAAIf,GAAEu3C,aAAY,MAEnD,CAEV,KA3cC,IAAAgtF,CA2cA,CAxwByB,CAAQjnI,EAAA6H,cAAYg+H,SAArC9wH,0CAAgBjN,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAA2E,QAAA/E,EAAA4U,mBAAAtU,EAAA04C,iBAAAh5C,EAAA4U,mBAAApU,EAAAL,iBAAAH,EAAA4U,mBAAAoH,EAAA6b,mBAAA73B,EAAA4U,mBAAAqH,EAAA/L,WAAA,qDAAhBjD,EAAgB4H,QAAhB5H,EAAgB6H,UAAAC,WAFb,SAEH9H,CAAiB,8KC7F9B,IAAAvH,EAAAjQ,EAAA,OAEAwjD,EAAAxjD,EAAA,OAMAyC,GADAzC,EAAA,MACAA,EAAA,iFAEA8B,0BA8DoC,eAAAorI,EAAvB5C,EAAuB,WAc5B,OAAAroI,EAHJ,SAAAqoI,EACqC5mF,EACzB/pC,GAA8CzX,EAAAC,KAAAmoI,GADrBnoI,KAAAuhD,SACzBvhD,KAAAwX,UAZIxX,KAAAwhD,gBAAeH,EAAAI,+BAC3BzhD,KAAKuhD,QAEOvhD,KAAA0hD,eAAcL,EAAAM,4BAC1B3hD,KAAKuhD,QAEOvhD,KAAA4hD,aAAYP,EAAAQ,0BAAyB7hD,KAAKuhD,QAEnDvhD,KAAAgrI,cAAe,CAKnB,EAAC,EAAA3pI,IAAA,QAAAC,MAEG,WACH,IAAKtB,KAAKgrI,aACN,SAAO1qI,EAAAqU,aACH,wEAGR3U,KAAKwX,QAAQ9P,OAAM,EACvB,IAAC,CAvB+B,GAuB/BqjI,SAvBQ5C,0CAAuB//H,EAAAC,4BAYpByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAurD,cAAA,kDAZlBs0E,EAAuBr/H,UAAA,uBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBA3DMoiB,UAAAC,MAAAC,EAAA,2GAYfF,UAAAG,MAAAD,EAAA,kGAYAF,UAAAI,MAAAF,EAAA,0GAYAF,UAAAM,MAAAJ,EAAA,mGAE2CF,UAAAO,MAAAL,EAAA,olBAtC9DtnB,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA4DvlB,EAAAkF,yBAExDlF,EADJiF,yBAAA,UACIjF,CAD2D,0CAQvDA,EAAA4I,qBAAA,0BAAA3H,EAAA2hI,cAAwB,CAAI,GAE5B5iI,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KACJvlB,EADgCkF,wBAChClF,GACAA,EAAAiF,yBAAA,0CAOIjF,EAAA4I,qBAAA,0BAAA3H,EAAA2hI,cAAwB,CAAI,GAE5B5iI,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MACJvlB,EADwCkF,wBACxClF,GACAA,EAAAiF,yBAAA,wCAOIjF,EAAA4I,qBAAA,0BAAA3H,EAAA2hI,cAAwB,CAAI,GAE5B5iI,EAAAiF,yBAAA,kBAA0BjF,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MACJvlB,EADiCkF,wBACjClF,GACAA,EAAAiF,yBAAA,gBAAmCjF,EAAA4I,qBAAA,0BAAS3H,EAAA3B,OAAO,GAAnDU,EAAAulB,iBAAA,MAGJvlB,EADIkF,wBACJlF,GAOIA,EANJiF,yBAAA,eAMIjF,CADH,eACaA,EAAAmF,iBAAA,YACdnF,EADmBkF,wBACnBlF,UA3CQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,IAAAhL,EAAAm4C,aAAA,OAAAp5C,EAAA05C,yBAYA15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,IAAAhL,EAAAq4C,YAAA,OAAAt5C,EAAA05C,yBAYA15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAiM,sBAAA,MAAAhL,EAAAu4C,UAAA,OAAAx5C,EAAA05C,yBAeJ15C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAA2hI,yOAcC7C,CAAuB,iMCzEpC,IAAA7nI,EAAAzC,EAAA,OAOA8yB,EAAA9yB,EAAA,OAaAktE,EAAAltE,EAAA,OACA8nE,EAAA9nE,EAAA,OACA8pD,EAAA9pD,EAAA,OAMAmoI,EAAAnoI,EAAA,OACAw9B,EAAAx9B,EAAA,OAEIotI,EAA0B,CAAE53H,GAAI,UAAWE,KAAM,gBAErD5T,oBAAA,SAAgB4G,EAAkBkmB,GAC1BA,IAAMw+G,EAAgBx+G,EAC9B,EAEA,IAAMy+G,EAAe,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAMJvrI,gBAA0B,WAkPtB,OAAAG,EArJA,SAAAgtB,IAAqD,IAAA7mB,EAAAklI,EAAAC,EAAAjsE,EAAAC,EAAAn+D,EAAAjB,KAAzCyC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuC,GAAE7E,EAAAC,KAAA8sB,GAuK7C9sB,KAAAqrI,mBAAqB,GACrBrrI,KAAAsrI,oBAAsB,EAvK1BtrI,KAAKqT,GAAK5Q,EAAK6+B,UAAY7+B,EAAK4Q,IAAM,GACtCrT,KAAKurI,YACD9oI,EAAK8oI,gBACL56G,EAAA4C,aACI9wB,EAAKoP,SACD8e,EAAAiyB,0BAAsBjyB,EAAA2H,YAAW,IAAIxe,KAAQ,GAAI,CAC7C+oC,UAAW,KAG3B7iD,KAAKwrI,UACD/oI,EAAK+oI,cACL76G,EAAA4C,gBACI5C,EAAA2H,YAA8B,IAAnBt4B,KAAKurI,YAAoB9oI,EAAKqP,UAAY,KAE7D9R,KAAKkqI,SAAWznI,EAAKynI,UAAY,GACjClqI,KAAKkqB,SACmC,QAApCjkB,EAACxD,EAAKynB,SAAW+gH,EAAcvkI,aAAK,IAAAT,OAAA,EAApCA,EAAuC+sB,gBAAiB,GAC5DhzB,KAAKyU,MACDhS,EAAKgS,MACLzU,KAAKkqB,SACL+gH,EAAcvkI,OACd,IACFssB,cACF,IAAM9c,EAAYzT,EAAKyT,WAAa,GACpClW,KAAKkW,UAAYA,EACZsF,OAAO,SAACiR,GAAS,OAAMA,EAAK4F,QAAQ,GACpC/W,IAAI,SAACgnF,GAAC,OAAK,IAAI36C,EAAA6Q,KAAK8pC,EAAE,GAC3BtiG,KAAKuW,aACDjW,EAAAqvC,QACIltC,EAAK8T,WACDL,EACKsF,OAAO,SAACiR,GAAI,OAAMA,EAAa4F,QAAQ,GACvC/W,IAAI,SAACgN,GAAC,OAAK,IAAIq9C,EAAAI,MAAMz9C,EAAS,GACvC,UACC,GACTtoB,KAAKmB,MAAQsB,EAAKtB,MAClBnB,KAAK+wC,KAAOtuC,EAAKsuC,MAAQ,GACzB/wC,KAAIyrI,UAAahpI,EAAIgpI,QACrBzrI,KAAKwwB,UAAY/tB,EAAK+tB,QACtBxwB,KAAK6R,KAA0B,IAAnB7R,KAAKurI,aAAsBvrI,KAAK6R,KAC5C7R,KAAKywB,SAA4B,IAAjBzwB,KAAKwrI,WAAoBxrI,KAAKywB,SAC9CzwB,KAAK8R,YAAW6e,EAAA+H,qBAAoB14B,KAAKywB,SAAUzwB,KAAK6R,MACpD7R,KAAKwwB,UACJxwB,KAAa6R,QAAO8e,EAAA6C,YAAWxzB,KAAK6R,MAAM+mB,UAC1C54B,KAAa8R,SAAWkmB,KAAK8F,IAAI,KAAa99B,KAAK8R,SAAW,GAC9D9R,KAAaywB,YAAWE,EAAA+C,aACrB/C,EAAA2H,YAAWt4B,KAAK6R,KAAM7R,KAAK8R,UAAU4jB,UAAY,GACnDkD,WAEN,IAoBoB8yG,EApBdtgG,EAAUprC,KAAK+wC,KAAKxC,MAAM,oBAC1Bo9F,EAAgBvgG,EAAUA,EAAQ,GAAK,KAC7CprC,KAAK+iD,SACDtgD,EAAKsgD,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7DnjD,KAAKqmF,YAAc5jF,EAAK4jF,aAAe5jF,EAAKmpI,oBAAsB,GAClE5rI,KAAKo2B,WACDu1G,GAAiBlpI,EAAK2zB,YAAc3zB,EAAKopI,mBAAqB,GAClE7rI,KAAK8rI,iBACDrpI,EAAKqpI,kBAAoBrpI,EAAKspI,yBAA2B,GAC7D/rI,KAAK+pI,YAActnI,EAAKsnI,UACxB/pI,KAAK6lI,mBAAqBpjI,EAAKojI,oBAAsB,GACrD7lI,KAAK+X,UAAY/X,KAAKkW,UAAUgZ,KAC5B,SAACzC,GAAI,OAAKA,EAAK/lB,QAAUzF,EAAKwT,IAAI,GAEtCzU,KAAKgsI,cAAkC,QAArBb,EAAG1oI,EAAKupI,qBAAa,IAAAb,KACvCnrI,KAAKynI,OAAShlI,EAAKglI,OAAS,IAAI36G,EAAcrqB,EAAKglI,QAAU,KAC7DznI,KAAKisI,QAAUxpI,EAAKwpI,SAAW,GAC/BjsI,KAAKyuC,SAAWhsC,EAAKgsC,SACrBzuC,KAAKkzB,gBAAkBzwB,EAAKywB,iBAAmB,GAC/ClzB,KAAKksI,cAAkC,QAArBd,EAAG3oI,EAAKypI,qBAAa,IAAAd,KAEnCprI,KAAK8uB,WADLrsB,EAAKsnI,UACa,CACdh7G,MACuB,IAAnB/uB,KAAKurI,aACL,IAAIzxH,KACuC,IAAtCrX,EAAKqsB,WAAmBq9G,aAC3Bz2G,UACN9R,IACInhB,EAAKqsB,WAAWlL,KAChB,IAAI9J,KACqC,IAApCrX,EAAKqsB,WAAmBs9G,WAC3B12G,UACNkB,SAAUn0B,EAAKqsB,WAAW8H,SAC1BtG,QAAS7tB,EAAKqsB,WAAWwB,QACzB+7G,YAAa5pI,EAAKqsB,WAAWu9G,YAC7BC,cACgC,QAA5BZ,EAAAjpI,EAAKqsB,WAAWw9G,oBAAY,IAAAZ,OAAA,EAA5BA,EAA8BpwH,IAAI,SAACtY,GAAC,MACnB,iBAANA,EAAiBA,EAAIkoI,EAAalhE,QAAQhnE,EAAE,KAClD,IAGK,GAEtB,IAAM0V,EAASjW,EAAKiW,OA0BpB,QAAWrX,KAxBD,MAANqX,KAAQhS,QACP1G,KAAKuW,UAAU2Y,KAAK,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUgS,EAAOhS,KAAK,IAEpD1G,KAAKuW,UAAU0iB,KAAK,IAAI0sC,EAAAI,MAAMrtD,IAElC1Y,KAAK0Y,OAASA,GAAW1Y,KAAKuW,UAAU,IAAc,MACjDmC,GAAUjW,EAAKsyB,YAChB/0B,KAAK0Y,OAAS,CAAErF,GAAI5Q,EAAKsyB,YAE7B/0B,KAAKuqI,WAAa9nI,EAAK8nI,YAAc9nI,EAAKiW,OAC1C1Y,KAAKusI,gBAAkBvsI,KAAK+wC,KAAKnrC,SAAS,iBAC1C5F,KAAKwsI,YAAc/pI,EAAK+pI,aAAe,GACvCxsI,KAAK41B,eAAiBnzB,EAAKmzB,gBAAkB,GAC7C51B,KAAK0hC,UAASskG,EAAAyG,aAAW59G,IAAA,GAAMpsB,GAASzC,QAAW,OACnDA,KAAK0F,SACDjD,EAAKiD,WAAsB,QAAdy5D,EAAIn/D,KAAKmc,aAAK,IAAAgjD,OAAA,EAAVA,EAAY1pD,gBAA0B,QAAd2pD,EAAIp/D,KAAKmc,aAAK,IAAAijD,OAAA,EAAVA,EAAY7rD,OAAQ,GACrEvT,KAAKoqI,WAAa3nI,EAAK2nI,YAAc,EACrCpqI,KAAKqqI,eAAiB5nI,EAAK4nI,gBAAkB,EAC7CrqI,KAAK4S,KACe,aAAhB5S,KAAK0hC,OACC,YACA1hC,KAAKkW,UAAUgZ,KAAK,SAAClsB,GAAC,OAAKA,EAAEinI,WAAW,GACxC,WACA,WACQxnI,EACRpB,KAAOrB,OACTA,KAAK41B,eAAev0B,GAChBoB,EAAKpB,IAAQrB,KAAK41B,eAAev0B,IAG7C,IAAMqrI,EAAe,CACjB76H,KAAM7R,KAAK6R,KACXC,SAAU9R,KAAK8R,SACf2e,SAAUzwB,KAAKywB,SACfD,QAASxwB,KAAKwwB,QACdrU,MAAOnc,KAAKmc,MACZpE,UAAW/X,KAAK+X,WAEpB/X,KAAK41B,eAAexf,UAAYpW,KAAK41B,eAAexf,UAAY,IAAIkF,IAChE,SAAC8W,GAAC,OAAK,IAAI24C,EAAAmB,cAAar9C,IAAA,GAAMuD,GAAC,IAAEtE,MAAO4+G,IAAsB,GAElE,IAAMC,EAAgB3sI,KAAKkzB,gBACtB1X,OAAO,SAACxY,GAAC,MAAwB,kBAAnBA,EAAE0Q,YAAgC,GAChD4H,IAAI,SAACtY,GAAC,IAAA4pI,EAAA,OAAqB,QAArBA,EAAK5pI,EAAE4yB,sBAAc,IAAAg3G,OAAA,EAAhBA,EAAkBzvG,OAAO,GACpC3hB,OAAO,SAACxY,GAAC,QAAOA,CAAC,GAKtBhD,KAAK41B,eAAe5e,SAHf21H,EAAc3nI,OACT2nI,EACA3sI,KAAK41B,eAAe5e,SAAW,IACGsE,IACxC,SAAC8W,GAAC,OAAK,IAAIiJ,EAAAgC,aAAYxO,IAAA,GAAMuD,GAAC,IAAEtE,MAAO4+G,IAAsB,EAErE,EAEA,EAAArrI,IAAA,aAAAiE,IAlKA,WACI,OAAOtF,KAAKwwB,SAAWxwB,KAAK8R,UAAY,GAC5C,GAAC,CAAAzQ,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAK41B,eAAei3G,aAAe,SAC9C,GAEA,CAAAxrI,IAAA,MAAAC,MACO,SAAwCD,GAC3C,OAAOrB,KAAK41B,eAAev0B,EAC/B,GAAC,CAAAA,IAAA,SAAAiE,IAwJD,WACI,OAAOtF,KAAKkW,UAAUsF,OAAO,SAAC2d,GAAC,QAAOA,EAAE8wG,WAAW,EACvD,GACA,CAAA5oI,IAAA,QAAAiE,IACA,WACI,OAAOtF,KAAKuW,UAAU,IAAM,IAChC,GAAC,CAAAlV,IAAA,WAAAiE,IACD,WACI,SAAOqrB,EAAAoC,WAAU/yB,KAAK6R,KAAMiI,KAAKuX,MACrC,GAAC,CAAAhwB,IAAA,iBAAAiE,IAED,WAAyB,IAAAR,EAAA9E,KACrB,OAAQA,KAAK2rC,IAAI,aAAe,IAAInwB,OAChC,SAACgiB,GAAK,OAAKA,EAAMrB,WAAar3B,EAAK2rB,QAAQ,EAEnD,GAAC,CAAApvB,IAAA,eAAAiE,IAKD,WAAuB,IAAAY,EAAAlG,KACnB,GACIA,KAAKsrI,oBAAsBxxH,KAAKuX,OAChCrxB,KAAKqrI,mBAAmBrmI,OAExB,OAAOhF,KAAKqrI,mBAEhB,IAAMr4H,EAAOhT,KAAKkzB,gBAClB,OAAAlzB,KAAKqrI,oBAAsBrrI,KAAK2rC,IAAI,WAAa,IAC5CrwB,IAAI,SAAC6hB,GAAO,OAAK,IAAI9B,EAAAgC,aAAYxO,IAAA,GAAMsO,GAAO,IAAErP,MAAO5nB,IAAO,GAC9DsV,OAAO,SAAC2hB,GAAO,OAAKA,EAAQhB,WAAaj2B,EAAKuqB,QAAQ,GACtDnV,IAAI,SAAC6hB,GACF,IAAMzF,EAAU1kB,EAAKkc,KACjB,SAAClsB,GAAM,OAAKA,EAAE4yB,eAAe+L,aAAexE,EAAQ9pB,EAAE,GAE1D,OAAIqkB,IACCyF,EAAgBI,MAAQ7F,EAAQgY,SAC3B,WACAhY,EAAQc,SACR,WACA,WAEH2E,CACX,GACJn9B,KAAKsrI,uBAAsB36G,EAAA2H,YAAWxe,KAAKuX,MAAO,GAAGqE,UAC9C11B,KAAKqrI,kBAChB,GAEA,CAAAhqI,IAAA,SAAAC,MAGO,WAAM,IAAAwrI,EAAAC,EACH7+C,EAAGr/D,EAAA,GAA6B7uB,MAChC6R,EAAO7R,KAAKwwB,WAAUG,EAAA6C,YAAWxzB,KAAK6R,MAAQ7R,KAAK6R,KACnD+R,EAAM5jB,KAAKwwB,WACXG,EAAA+C,UAAS1zB,KAAKywB,UAAUiF,UAAY,EACpC11B,KAAKywB,SACXy9D,EAAIq9C,eAAc56G,EAAA4C,aAAY1hB,GAC9Bq8E,EAAIs9C,aAAY76G,EAAA4C,aAAY3P,GAC5B,IAAM1N,EAAYlW,KAAKkW,UACtBlW,KAAa+pI,WACK,QAAf+C,EAAA9sI,KAAK8uB,kBAAU,IAAAg+G,OAAA,EAAfA,EAAiBx8G,UAAwC,SAA7BtwB,KAAK8uB,WAAW64G,SAC5C3nI,KAAK+pI,YACL77C,EAAIp/D,cAAak3G,EAAAgH,iBAAen+G,IAAA,GACzB7uB,KAAK8uB,YAAU,IAClBC,MAAO/uB,KAAK6R,eAETq8E,EAAIp/D,WAAWC,aACfm/D,EAAIp/D,WAAWlL,KAE1BsqE,EAAIp/D,WAAao/D,EAAIp/D,YACf/F,OAAOC,KAAKklE,EAAIp/D,YAAY9pB,OACxBkpF,EAAIp/D,WAER,KACNo/D,EAAIh4E,aAAY5V,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAEXlM,GAASkM,EACTpiB,KAAKuW,UAAU+E,IAAI,SAACtY,GAAC,OAAA6rB,IAAA,GAAW7rB,GAAC,IAAEqvB,UAAU,GAAI,KAExD,SAEAryB,KAAKwwB,UACL09D,EAAIk8C,WAAa,EACjBl8C,EAAIm8C,eAAiB,EACrBn8C,EAAIt4D,eAAeq3G,gBAAet8G,EAAAkI,QAAOhnB,EAAM,eAEnDq8E,EAAIt4D,eAAexf,SAAW83E,EAAIt4D,eAAexf,SAASkF,IACtD,SAAC8W,GAAC,OAAK,IAAI24C,EAAAmB,cAAar9C,IAAA,GAAMuD,GAAC,IAAEtE,MAAO,OAAO,GAEnDogE,EAAIt4D,eAAe5e,OAASk3E,EAAIt4D,eAAe5e,OAAOsE,IAClD,SAAC8W,GAAC,OAAK,IAAIiJ,EAAAgC,aAAYxO,IAAA,GAAMuD,GAAC,IAAEtE,MAAO,OAAO,GAElDogE,EAAIn5D,UAAuB,QAAdg4G,EAAG/sI,KAAK0Y,cAAM,IAAAq0H,OAAA,EAAXA,EAAa15H,GAC7B,QAAAijF,EAAA,EAAA42C,EAAkB,CACd,WACA,OACA,WACA,WACA,SACA,kBACA,qBACA,sBACA,QACH52C,EAAA42C,EAAAloI,OAAAsxF,IAAE,CAVE,IAAMj1F,EAAG6rI,EAAA52C,GAWNj1F,KAAO6sF,UAAYA,EAAI7sF,EAC/B,CACA,OAAK6sF,EAAIg+C,sBAAsBh+C,EAAI23C,sBACnCvlI,EAAAkkD,mBAAkB0pC,GACXA,CACX,GAEA,CAAA7sF,IAAA,QAAAiE,IACA,WAMI,IAAM+rB,EAAM,IAAIvX,KACVjI,EAAO7R,KAAK6R,KAClB,SAAI8e,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,SAAS,MAAgB,YACnDnQ,EAAA2a,UAASja,EAAKxf,GAAc,cAC5B8e,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,QAAS,MAAe,aAClDnQ,EAAA2a,UAASja,KAAKV,EAAAg0B,KAAI9yC,EAAM,CAAEivB,QAAS9gC,KAAK8R,YACjC,cACJ,MACX,GAAC,CAAAzQ,IAAA,eAAAiE,IAED,WACI,IAAM+rB,EAAM,IAAIvX,KAChB,OACI9Z,KAAKm0C,aACJxjB,EAAA6a,SAAQna,KAAKV,EAAA2H,YAAWt4B,KAAK6R,MAAM,MAAG,EACnC8e,EAAA2a,UAASja,KAAKV,EAAA2H,YAAWt4B,KAAK6R,KAAM7R,KAAK8R,UAErD,IAAC,CA3XqB,2hBClD1B,IAAAzR,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEA+tC,EAAA/tC,EAAA,OACA8pD,EAAA9pD,EAAA,OAEA2C,EAAA3C,EAAA,MACA8yB,EAAA9yB,EAAA,OACAsvI,EAAAtvI,EAAA,KAgCMuvI,EAAe,uBAMrB,SAAgBv5G,EACZkY,GAEA,IAAM1Y,KAAQuY,EAAAI,eAAcD,GAC5B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OAAIqpI,GAAerpI,OAAGsvB,EAAQ,IAAMA,EAAQ,KAAMvwB,QACxD1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACuI,GAAC,OAAK,IAAIrjB,EAAAssB,cAAcjJ,EAAE,EAAC,MACnDzjB,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAEhC,CA2CA,SAAgByzH,EAAY5qI,GACxB,SAAOpC,EAAA6rC,MAAI,GAAAnoC,OAAIqpI,GAAmB,IAAI5sI,EAAAssB,cAAcrqB,GAAM6nI,UAAUxnI,QAChE1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAE7C,CASA,SAAgB6xH,EACZj6H,EACA5Q,GAEiC,IAAjC8qI,EAAA3oI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,QAEpByuB,KAAQuY,EAAAI,eAHdpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAI7B,OAAmB,UAAX2oI,EAAqBltI,EAAAynD,MAAQznD,EAAAgsC,KAAG,GAAAtoC,OACjCqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,IAAGtP,OACxCsvB,EAAQ,IAAMA,EAAQ,IAE1B,IAAI7yB,EAAAssB,cAAcrqB,GAAM6nI,UAC1BxnI,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAChD,CA7EA9b,cAAAk0B,EAUAl0B,iBAAA,SAAgB6tI,EACZzhG,GAEA,SAAO1rC,EAAAgzB,OAAqB,CACxB+0B,aAAcrc,EACdjP,GAAI,SAACrhB,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,EACrC4sC,SAAU+kF,EACV3uI,KAAM,KACPqE,QACC1C,EAAAwxB,WAAS,eAAA3rB,EAAAzE,EAAC,SAAAsG,GAAA,IAASrF,EAAIqF,EAAJrF,KAAMN,EAAI2F,EAAJ3F,KAAI,OAAAV,IAAAC,KAAA,SAAAC,IAAA,IAAAqR,EAAAu1C,EAAA,OAAA9mD,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB6Q,EAAIoP,EAAO3f,GAAI,WACZN,EAAI,CAAAF,EAAAE,KAAA,SAAAF,SAAAE,KAAA,EACYA,IAAOc,YAAW,OACrCR,GADM8lD,EAAItmD,EAAA4B,MACEpB,KACZN,EAAOomD,EAAKpmD,KACZ6Q,EAAI,GAAAjP,OAAAqe,EAAOpP,GAAIoP,EAAK3f,IAAMR,EAAAE,KAAA,uBAAAF,EAAAqB,OAAA,SAEvB0P,GAAI,yBAAA/Q,EAAAwC,OAAA,EAAA9C,EAAA,EARcF,EAQd,GACd,gBAAAkb,GAAA,OAAA1W,EAAAtB,MAAA3E,KAAA4E,UAAA,EATQ,KASR,EACDxE,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GAEhC,EAOAja,YAAA,SAAgB+nI,EAAUr0H,GAA2C,IAC3DggB,KAAQuY,EAAAI,eADoBpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAE/D,SAAOvE,EAAAiF,KAAG,GAAAvB,OACHqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,IAAGtP,OACxCsvB,EAAQ,IAAMA,EAAQ,KAE5BvwB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAChD,EAMA9b,cAAA0tI,EAaA1tI,cAAA2tI,EAoBa3tI,YAAY,SACrB8C,EACAspC,GAEA,IAAM14B,EAAK5Q,EAAKypI,eACVzpI,EAAKojI,oBAAsBpjI,EAAK4Q,GAE9B5Q,OAAY,MAAZA,YAAci/B,OACfruB,EAAKi6H,EAAYj6H,EAAEwb,IAAA,GAAOpsB,GAAI,IAAE4Q,OAAM04B,GAAKshG,EAAY5qI,EAClE,EAOA9C,cAAA,SAAgB+qI,EAAYr3H,GAA2C,IAC7DggB,KAAQuY,EAAAI,eADsBpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAEjE,SAAOvE,EAAAqsC,KAAG,GAAA3oC,OACHqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,IAAGtP,OACxCsvB,EAAQ,IAAMA,EAAQ,IAE1B,CACI20B,cAAe,QAG3B,EAOAroD,eAAA,SAAgB8tI,EAAap6H,EAAY0hB,GACrC,SAAO10B,EAAA6rC,MAAI,GAAAnoC,OACJqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,uBAAAtP,OAAsBgkD,mBAAmBhzB,IAC1C,IACFjyB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAChD,EAOA9b,cAAA,SAAgB+tI,EAAYr6H,EAAY0hB,GACpC,SAAO10B,EAAA6rC,MAAI,GAAAnoC,OACJqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,sBAAAtP,OAAqBgkD,mBAAmBhzB,IACzC,IACFjyB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAChD,EAOA9b,eAAA,SAAgBguI,EAAat6H,GAA+C,IAClE04B,KAAIH,EAAAI,eAD2BpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,IAEtE,SAAOvE,EAAA6rC,MAAI,GAAAnoC,OACJqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,GAAG,YAAAtP,OACxCgoC,EAAI,IAAMA,EAAI,IAElB,IACFjpC,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,GAChD,EAOA9b,mBAAA,SAAgBiuI,EACZv6H,GAC+B,IAEzBggB,KAAQuY,EAAAI,eAFdpnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAG7B,SAAOvE,EAAAiF,KAAG,GAAAvB,OACHqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,GAAG,WAAAtP,OACxCsvB,EAAQ,IAAMA,EAAQ,KAE5BvwB,QAAK1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,EAAC,GAChE,EASA9b,oBAAA,SAAgBkuI,EACZx6H,EACA21C,EACAzrB,GAC+B,IAEzBlK,KAAQuY,EAAAI,eAAand,IAAA,GAF3BjqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAEK,IAAE24B,WACpC,SAAOl9B,EAAA6rC,MAAI,GAAAnoC,OACJqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,YAAAtP,OAAWilD,EAAQ,YAAAjlD,OAAWsvB,EAAQ,IAAMA,EAAQ,IACrD,IACFvwB,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,gBAAA,SAAgBmuI,EAAcz6H,EAAY61C,GACtC,SAAO7oD,EAAA6rC,MAAI,GAAAnoC,OACJqpI,EAAe,KAAArpI,OAAIgkD,mBAAmB10C,GAAG,aAC5C61C,GACFpmD,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAOA9b,mBAAA,SAAgBouI,EAAiB16H,EAAY61C,GACzC,SAAO7oD,EAAAqsC,KAAG,GAAA3oC,OACHqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,cAAAtP,OAAagkD,mBAAmBmB,EAAMxiD,SACzC5D,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAC5C,EAQA9b,mBAAA,SAAgBmlI,EACZzxH,EACA0hB,GACiC,IAE3BgX,KAAIH,EAAAI,eAAand,EAAA,GAFvBjqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,KAG/B,SAAOvE,EAAAiF,KAAG,GAAAvB,OACHqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,cAAAtP,OAAagkD,mBAAmBhzB,IAAUhxB,OAAGgoC,EAAI,IAAMA,EAAI,KAC9DjpC,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAKA,CAA0B,GACnD,EASA9b,sBAAA,SAAgBw9E,EACZ9pE,EACA0hB,EACAsrB,GACiC,IAE3BtU,KAAIH,EAAAI,eAAand,EAAA,GAFvBjqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,KAG/B,SAAOvE,EAAAynD,OAAK,GAAA/jD,OACLqpI,EAAe,KAAArpI,OAAIgkD,mBAClB10C,GACH,cAAAtP,OAAagkD,mBAAmBhzB,IAAUhxB,OAAGgoC,EAAI,IAAMA,EAAI,IAC5DsU,GACFv9C,QAAK1C,EAAAkb,KAAI,SAACG,GAAI,OAAKA,CAA0B,GACnD,EASA9b,mBAAA,SAAgBquI,EACZ36H,EACA0b,EACAjd,EACAq2B,GAEA,OAAOtU,EAAY,CACfo6G,WAAY56H,EACZigB,gBAAc3C,EAAA4C,aAAYxE,GAC1B0E,cAAY9C,EAAA4C,gBAAY5C,EAAA2H,YAAWvJ,EAAOjd,MAC3ChP,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAiD,IAA5CA,EAAEwY,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO80B,CAAM,GAAEnjC,MAAY,GACpE,EASArF,yBAAA,SAAgBunI,EACZp+G,EACAiG,EACAjd,EACAq2B,EACAv1B,GACwC,IAAxCs7H,EAAAtpI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkC,CAAC,EAAG,GAEhCgf,KAAM+M,EAAA2H,YAAWvJ,EAAOjd,GAAU4jB,UACxC,SAAOtc,EAAA2I,eAAc,IACjBorH,EAAA9mE,2BAA0B,CACtB4nE,WAAYnlH,EAAQjU,OACpBye,gBAAc3C,EAAA4C,aAAYxE,GAC1B0E,cAAY9C,EAAA4C,aAAY3P,KACzB9gB,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,IAChCuuB,GAAUrf,EAAQljB,SAASuiC,IAAM,EAC3BglG,EAAAvmE,oBAAmB,CACftzC,gBAAc3C,EAAA4C,aAAYxE,GAC1B0E,cAAY9C,EAAA4C,aAAY3P,GACxBqqH,WAAY9lG,KACf,EACD/uB,EAAAQ,IAAG,MACV9W,QACC1C,EAAAkb,KAAI,SAAA4G,GAA2B,IAAAC,EAAAF,EAAAC,EAAA,GAAzBhG,EAAMiG,EAAA,GAAE06B,EAAY16B,EAAA,GAChBgsH,EAAarlH,EAAQxN,IACvB,SAACjI,GAAE,QACG6I,EAAOgT,KACL,SAAC5G,GAAC,IAAA8lH,EAAA,OAAK9lH,EAAEjV,KAAOA,IAAyB,QAAlB+6H,EAAA9lH,EAAU+J,gBAAQ,IAAA+7G,OAAA,EAAlBA,EAAoB/6H,MAAOA,CAAE,EACvD,GAET,OACIwpC,EAAa73C,QACb63C,EAAa,GAAGxpC,KAAO80B,GACvBrf,EAAQljB,SAASuiC,IACjB0U,EAAa,GAAGwxF,QACZH,EAAc,IAAMn/G,EACpBm/G,EAAc,IAAMp8H,KAGxBq8H,EAAWrlH,EAAQkhD,QAAQ7hC,KAAW,GAEnCgmG,CACX,GAER,0IC1XA,IAAA7tI,EAAAzC,EAAA,OAEA0L,EAAA1L,EAAA,OAEA+P,EAAA/P,EAAA,OACA+L,EAAA/L,EAAA,OACAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACA0Q,EAAA1Q,EAAA,OAEA8rD,EAAA9rD,EAAA,OACA6rD,EAAA7rD,EAAA,OACAgsD,EAAAhsD,EAAA,OAEAywI,EAAAzwI,EAAA,OACA0wI,EAAA1wI,EAAA,OACAkjI,EAAAljI,EAAA,OAGA2wI,GAFA3wI,EAAA,OACAA,EAAA,OACAA,EAAA,QACAi0C,EAAAj0C,EAAA,2KAYA8B,qBAqB+B,eAAA8uI,EAAlBx/H,EAAkBnP,EAAA,SAAAmP,IAAAlP,EAAAC,KAAAiP,EAAA,GAAAw/H,SAAlBx/H,yCAAkB,iDAAlBA,wDAHE,CAAC1F,EAAA0C,qBAAoBZ,QAAA,CAf5B/K,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACAsC,EAAA6B,eACApC,EAAAwB,eACAzB,EAAAuB,mBACAzB,EAAAuB,oBACAxB,EAAAuB,gBACArB,EAAAuB,gBACApB,EAAAwB,yBACAk6C,EAAA39C,iBACA09C,EAAAx6C,iBACAtF,EAAAiG,gBACAg6C,EAAAG,sBAKK/6C,CAAkB,oCA9B3B8xH,EAAAuB,2BAA0B,CAAAh6H,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAAkpG,eAAAhpG,EAAA4oG,cAAA1oG,EAAAooG,oBAAA5sF,EAAA+sF,wBAAA9sF,EAAAutF,uBAAArtF,EAAAq2G,oBAAAn2G,EAAAmlF,iBAAAgJ,EAAA87B,QAAA97B,EAAA+7B,YAAA/7B,EAAAg8B,eAAAC,EAAAz9B,UAAA09B,EAAAz9B,WAC1Bi9B,EAAA7N,uBAAqB,CAAAn4H,EAAAymI,aAAAzmI,EAAAmqG,SAAAu8B,EAAAt8B,+CAArB47B,EAAA7N,sBAAqB,CAAAn4H,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA4oG,cAAA1oG,EAAAooG,oBAAA69B,EAAAz9B,UAAA09B,EAAAz9B,YAAA,oCACrBk9B,EAAAjN,mBAAkB,CAAAh5H,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA4oG,cAAA1oG,EAAAooG,oBAAAzsF,EAAAq2G,qBAAA,CAAAtyH,EAAA2mI,UAAA3mI,EAAAmqG,2CAGlB3gE,EAAAoD,gCAA+B,CAAA5sC,EAAA2oG,KAAAzoG,EAAAkpG,eAAAhpG,EAAA4oG,cAAAltF,EAAA+sF,wBAAA+9B,EAAAvnC,4BAAAiL,EAAA87B,QAAA97B,EAAA+7B,YAAA/7B,EAAAg8B,eAAAC,EAAAz9B,UAJ/Bk9B,EAAA7N,uBAAqB,CAAAn4H,EAAAmpG,UAAAnpG,EAAAmqG,SAAAu8B,EAAAt8B,aAAAy8B,EAAAjkI,4CAKrBsjI,EAAAY,wBAAuB,CAAA9mI,EAAA2oG,KAAAvoG,EAAA4oG,cAAA49B,EAAAvnC,4BAAAknC,EAAAz9B,WAAA,CAAA9oG,EAAAmqG,0FChC3Bx4E,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,sLCLA9B,EAAA,OACAA,EAAA,OADA,IAGAi0C,EAAAj0C,EAAA,OAEA2M,EAAA3M,EAAA,UACAA,EAAA,OACAA,EAAA,wEAcgBuK,EAAAkB,oBAAA,oDAGIlB,EAAA6I,qBAAA,SAAAK,EAAAwc,MAAA1D,OAAA,2BAmBAhiB,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,mDAIAlF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6K,MAAA1G,cAAAnE,EAAA6K,MAAA5I,MAAA,+BAEJnL,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,4BACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oBACJnF,EAAAkF,uFA7CZlF,EAAAiF,yBAAA,cAEIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA4gC,cAAa,GAItB9pC,EAAAiF,yBAAA,WAGIjF,EAAA4J,qBAAA,EAAAq9H,EAAA,aAMJjnI,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADiC,WAE7BA,EAAAmF,iBAAA,6DAEJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,UAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAIIlF,EAHJiF,yBAAA,WAGIjF,CADH,UAC2BA,EAAAmF,iBAAA,IAAqBnF,EAAAkF,yBAC7ClF,EAAA4J,qBAAA,GAAAs9H,EAAA,YAGJlnI,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAOjClF,EANA4J,qBAAA,GAAAu9H,EAAA,aAMAnnI,CANoC,GAAAonI,EAAA,aAMpCpnI,CAHwD,GAAAqnI,EAAA,cAM5DrnI,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,iDA5CaA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAAK,EAAAwc,MAAA1D,OAAA,KAAA9Y,EAAAwc,MAAA1D,OAAAplB,QAQDoD,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,KAAA/C,EAAAwc,MAAAjc,KAAA,kBAAAzJ,EAAAiM,sBAAA,KAAA/C,EAAAwc,MAAAjc,KAAAP,EAAAqd,aAAA,KAKAvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,EAAAwc,MAAA3sB,OAEAiH,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAAwc,MAAA3sB,MAAA,KAKwBiH,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAqhC,iBACpBvqC,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAqhC,gBAAA0Q,QAMEj7C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAo+H,WAAAp+H,EAAAq+H,WAGAvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAo+H,YAAAp+H,EAAAq+H,WAGmBvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAo+H,WAOrBtnI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAwc,MAAA5X,UAAA,KAAA5E,EAAAwc,MAAA5X,UAAAlR,SAAA,4CAcJoD,EAAAkB,oBAAA,oDAGIlB,EAAA6I,qBAAA,SAAAK,EAAAwc,MAAA1D,OAAA,2BA6BIhiB,EAAAiF,yBAAA,UAIIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,mDAIAlF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6K,MAAA1G,cAAAnE,EAAA6K,MAAA5I,MAAA,+BAEJnL,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,4BACJnF,EAAAkF,gDACAlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oBACJnF,EAAAkF,uFA5DhBlF,EAAAiF,yBAAA,eAEIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA4gC,cAAa,GAGtB9pC,EAAAiF,yBAAA,YAGIjF,EAAA4J,qBAAA,EAAA49H,EAAA,aAMJxnI,EAAAkF,yBAIIlF,EAHJiF,yBAAA,WAGIjF,CADH,iBAC+BA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAChClF,EAAAiF,yBAAA,YAAuBjF,EAAAmF,iBAAA,cAC3BnF,EADmCkF,wBACnClF,GAGQA,EAFRiF,yBAAA,WAEQjF,CAFsC,WAEtCA,CADoC,aAEhCA,EAAAmF,iBAAA,kCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAqBjF,EAAAmF,iBAAA,kCACzBnF,EADqDkF,wBACrDlF,GAEIA,EADJiF,yBAAA,YACIjF,CADiC,YACXA,EAAAmF,iBAAA,IAAiBnF,EAAAkF,yBACvClF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,8FAMJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CADwC,WAChBA,EAAAmF,iBAAA,IAAqBnF,EAAAkF,yBAC7ClF,EAAA4J,qBAAA,GAAA69H,EAAA,YAMJznI,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAUjClF,EATA4J,qBAAA,GAAA89H,EAAA,aASA1nI,CAToC,GAAA2nI,EAAA,aASpC3nI,CAHC,GAAA4nI,EAAA,cAML5nI,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,aAGIjF,EAAAmF,iBAAA,qBAERnF,EADIkF,wBACJlF,6CAlEaA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAAK,EAAAwc,MAAA1D,OAAA,KAAA9Y,EAAAwc,MAAA1D,OAAAplB,QAeGoD,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,MAAA/C,EAAAwc,MAAAjc,KAAA,YAEiBzJ,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,MAAA/C,EAAAwc,MAAAjc,KAAA,MAGCzJ,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAwc,MAAA3sB,OAElBiH,EAAAoF,oBAAA,GAAApF,EAAAgM,6BAAA,IAAAhM,EAAAiM,sBAAA,MAAA/C,EAAAwc,MAAAjc,KAAA,YAAAzJ,EAAAiM,sBAAA,MAAA/C,EAAAwc,MAAAjc,KAAAP,EAAAqd,aAAA,MAAAvmB,EAAAiM,sBAAA,MAAA/C,EAAAwc,MAAAjc,KAAA,GAAAP,EAAAwc,MAAAhc,SAAA,IAAAR,EAAAqd,aAAA,KAQwBvmB,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAqhC,iBAEnBvqC,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAqhC,gBAAA0Q,QAQCj7C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAo+H,WAAAp+H,EAAAq+H,WAIDvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAo+H,YAAAp+H,EAAAq+H,WAKoBvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAo+H,WAOrBtnI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAwc,MAAA5X,UAAA,KAAA5E,EAAAwc,MAAA5X,UAAAlR,SAAA,oBA5HhCrF,0BAiJoC,eAAAswI,EAAvBb,EAAuB,WAiC5B,OAAAtvI,EAJJ,SAAAsvI,EACYvuI,EACA2W,EACA1W,GAAyBf,EAAAC,KAAAovI,GAFzBpvI,KAAAa,YACAb,KAAAwX,UACAxX,KAAAc,OA5BLd,KAAA2yC,gBAAkB,EA6BtB,EAAC,EAAAtxC,IAAA,cAAAiE,IA3BJ,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,YAAAiE,IAED,WAAoB,IAAA47B,EAChB,MAAsD,YAArC,QAAVA,EAAAlhC,KAAK8tB,aAAK,IAAAoT,OAAA,EAAVA,EAAYtL,eAAeixB,gBACtC,GAAC,CAAAxlD,IAAA,YAAAiE,IAED,WAAoB,IAAA65D,EAChB,QAAmB,QAAXA,EAACn/D,KAAKmc,aAAK,IAAAgjD,IAAVA,EAAY9rD,GACzB,GAAC,CAAAhS,IAAA,YAAAiE,IAED,WAAoB,IAAAi8H,EAChB,OACKvhI,KAAK0vI,WACyC,SAArC,QAAVnO,EAAAvhI,KAAK8tB,aAAK,IAAAyzG,OAAA,EAAVA,EAAY3rG,eAAeixB,gBAEnC,GAAC,CAAAxlD,IAAA,uBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAC9B,GAAC,CAAAjE,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAQM,SAAAC,IAAA,IAAAuuI,EAAA79G,EAAApxB,EAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG+tI,SAAa,IAAI1lI,EAAAU,UAAUlL,KAAKc,MAChCuxB,EAAWryB,KAAK8tB,MAAMvX,UAAU2Y,KAClC,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUzF,EAAKkvI,oBAAoB,GAC/CluI,EAAAE,KAAA,EACkB+tI,EAAWhnH,UAC1BmJ,GAAUhf,IAAMgf,GAAU3rB,OAC7B,OAFD1G,KAAKmc,MAAKla,EAAA4B,KAGV7D,KAAK2yC,gBAAkB3yC,KAAK+zC,eAAe/zC,KAAK8tB,MAAMijB,MAAM,wBAAA9uC,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC/D,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,iBAAAC,MAEM,SAAeqzC,GAElB,OADY,IAAIC,WAAYC,gBAAgBF,EAAM,aACvC5D,KAAK+D,aAAe,EACnC,GAAC,CAAAzzC,IAAA,cAAAC,MAEM,WACHtB,KAAKwX,QAAQzC,KAAK+8B,EAAAoD,gCAAiC,CAC/CzyC,KAAM,CAAEqrB,MAAO9tB,KAAK8tB,MAAOsnB,WAAW,IAE9C,KA5BC,IAAA7zC,CA4BA,CAvD+B,GAuD/B0uI,SAvDQb,0CAAuBhnI,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA8P,WAAAlQ,EAAAC,4BAAAK,EAAAD,qBAAA,kDAAvB2mI,EAAuBtmI,UAAA,uBAAAqW,OAAA,CAAA2O,MAAA,QAAA64B,SAAA,YAAA19C,MAAA,EAAAC,KAAA,EAAAkE,OAAA,whEAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,GAvF5BhB,EAvDA4J,qBAAA,EAAAo+H,EAAA,iBAuDAhoI,CAlDC,EAAAioI,EAAA,2BAAAjoI,EAAA2c,wEAFqB3c,EAAjB6I,qBAAA,QAAA5H,EAAAs9C,SAAiBv+C,CAAA,WAAAkoI,qKA2IjBlB,CAAuB,qOC3JpC,IAAAxlI,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OAKAyC,EAAAzC,EAAA,OAMAK,EAAAL,EAAA,OAQA2M,GAPA3M,EAAA,MAOAA,EAAA,QAEA8+E,EAAA9+E,EAAA,yEAegBuK,EAAAkB,oBAAA,mDAGIlB,EAAA6I,qBAAA,eAAAK,EAAAwc,MAAA8H,eAAA,KAAAtkB,EAAAwc,MAAA8H,eAAAxL,OAAA,2BASJhiB,EAJJiF,yBAAA,WAIIjF,CADH,iBAC+BA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBAChClF,EAAAiF,yBAAA,YAAuBjF,EAAAmF,iBAAA,cAC3BnF,EADmCkF,wBACnClF,6BAgBQA,EAAAwY,kCAAA,GAWQxY,EAVJiF,yBAAA,WAUIjF,CADH,cACaA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,GAWIA,EAVJiF,yBAAA,WAUIjF,CADH,cACaA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACdlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,+EA1BIA,EAAAoF,sBAKApF,EALAiX,sBAAA,eAAA/N,EAAAi/H,cAKAnoI,CALoC,qBAAAkJ,EAAAi/H,cAKpCnoI,CAJ0C,cAAAkJ,EAAAi/H,cAI1CnoI,CAHmC,aAAAkJ,EAAAi/H,cAGnCnoI,CAFkC,uBAAAkJ,EAAAi/H,cAElCnoI,CAD4C,cAAAkJ,EAAAi/H,eAKxCnoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAi/H,cAAA,yBAMJnoI,EAAAoF,sBAKApF,EALAiX,sBAAA,eAAA/N,EAAAk/H,SAKApoI,CAL+B,qBAAAkJ,EAAAk/H,SAK/BpoI,CAJqC,cAAAkJ,EAAAk/H,SAIrCpoI,CAH8B,aAAAkJ,EAAAk/H,SAG9BpoI,CAF6B,uBAAAkJ,EAAAk/H,SAE7BpoI,CADuC,cAAAkJ,EAAAk/H,UAKnCpoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAk/H,SAAA,8CAwHJpoI,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,+DACJnF,EAAAkF,mEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAAuQ,EAAA5V,EAAAwN,sBAAA,IAAAxN,EAAAwN,sBAAA,IAAAtE,EAAAyjB,aAAA,KAAA/W,EAAAvI,aAAA,4BAEJrN,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,4BACJnF,EAAAkF,mDACAlF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAKJnF,EAAAkF,iEALIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAAo+H,UAAA,oEA2BRtnI,EAAAiF,yBAAA,aAIIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,kDAWQlF,EAAAkB,oBAAA,gEAIIlB,EAFA6I,qBAAA,YAAAK,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAhD,OAEApL,CAFqB,WAAAkJ,EAAAvI,SAErBX,CADqB,SAAAkJ,EAAAuV,+BAUrBze,EAAAiF,yBAAA,aAOIjF,EAAAmF,iBAAA,oBACJnF,EAAAkF,mDAGAlF,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GAKJnF,EAAAkF,kEALIlF,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAhO,EAAAuE,SAAAJ,cAAAnE,EAAAuE,SAAAtC,KAAA,YAAAjC,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAf,gBAAA,MAAAnE,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAjD,MAAA,4BAMJnL,EAAAiF,yBAAA,aAIIjF,EAAAmF,iBAAA,sCACJnF,EAAAkF,uFAzCRlF,EAFRiF,yBAAA,WAEQjF,CAFkC,WAElCA,CADuC,eAInCA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAgnC,eAAc,GAEvBlwC,EAAA4J,qBAAA,EAAAy+H,EAAA,0BAMJroI,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADwB,SAEpBA,EAAAmF,iBAAA,+DAIAnF,EAAA4J,qBAAA,EAAA0+H,EAAA,6EASJtoI,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAQIjF,EAPA4J,qBAAA,GAAA2+H,EAAA,cAOAvoI,CAPgC,GAAAwoI,EAAA,eAgBhDxoI,EAHYkF,wBAGZlF,qDAvCiBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,EAAAu/H,aAQDzoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA2E,EAAAhK,EAAAwN,sBAAA,IAAAxN,EAAAwN,sBAAA,IAAAtE,EAAAyjB,aAAA,KAAA3iB,EAAAqD,aAAA,KAKKrN,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,gBAAA0P,EAAAvY,EAAAwN,sBAAA,MAAAxN,EAAAwN,sBAAA,KAAAtE,EAAAyjB,cAAApU,EAAAlL,eAUErN,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAuE,UAAAvE,EAAAkF,OAQFpO,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAAuE,WAAAvE,EAAAkF,qEAa7BpO,EADJiF,yBAAA,WACIjF,CADsD,eAGlDA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAqyH,gBAA0B,EAAK,GAClCv7H,EAAAkF,yBAIGlF,EAHJiF,yBAAA,WAGIjF,CADH,sBAIOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAF,EAAAqyH,gBAA0B,EAAK,GAG3Cv7H,EAFSkF,wBAETlF,+CALYA,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,OAAAK,EAAAwc,MAAA5X,UACA9N,CADwB,OAAAkJ,EAAAwc,MAAAuiB,aArS5C1wC,kCA8S4C,eAAAmxI,EAA/B57F,EAA+B,WA0EpC,OAAAp1C,EAPJ,SAAAo1C,EAEYvO,EACA7lC,EACAD,EACA2W,EACAo8C,GAA0D7zD,EAAAC,KAAAk1C,GAJ1Dl1C,KAAA2mC,QACA3mC,KAAAc,OACAd,KAAAa,YACAb,KAAAwX,UACAxX,KAAA4zD,cAxEK5zD,KAAAkzC,KAAO,IAAItpC,EAAAoV,aACXhf,KAAAmzC,OAAS,IAAIvpC,EAAAoV,aAEvBhf,KAAA8tB,MAAuB9tB,KAAK2mC,MAAM7Y,MAClC9tB,KAAAo1C,UAAYp1C,KAAK2mC,MAAMyO,UAGvBp1C,KAAA+I,SAA4B,GAC5B/I,KAAAy+G,OAAS,GACTz+G,KAAA6wI,aAAc,EACd7wI,KAAA2jI,gBAA0B,EAC1B3jI,KAAA6mB,OAAS,GACT7mB,KAAA2yC,gBAAkB,EA6DtB,EAAC,EAAAtxC,IAAA,cAAAiE,IA3DJ,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAiE,IAED,WAAmB,IAAAs/H,EACf,OACK5kI,KAAK8tB,MAAc64B,WAAqC,QAA7Bi+E,EAAI5kI,KAAK8tB,MAAM8H,sBAAc,IAAAgvG,OAAA,EAAzBA,EAA2Bj+E,SAEnE,GAAC,CAAAtlD,IAAA,YAAAiE,IAED,WACI,MAAqD,WAA9CtF,KAAK8tB,MAAM8H,eAAeixB,eACrC,GAAC,CAAAxlD,IAAA,YAAAiE,IAED,WAAoB,IAAA65D,EAChB,QAAmB,QAAXA,EAACn/D,KAAKmc,aAAK,IAAAgjD,IAAVA,EAAY9rD,GACzB,GAAC,CAAAhS,IAAA,YAAAiE,IAED,WACI,OACKtF,KAAK0vI,WACwC,QAA9C1vI,KAAK8tB,MAAM8H,eAAeixB,eAElC,GAAC,CAAAxlD,IAAA,aAAAiE,IAED,WAAqB,IAAAyrI,EACjB,OACwB,QAApBA,EAAA/wI,KAAK8tB,MAAM5X,iBAAS,IAAA66H,GAAkC,QAAlCA,EAApBA,EAAsBv1H,OAAO,SAACxY,GAAM,OAAKA,EAAEu1B,UAAU,UAAC,IAAAw4G,OAAA,EAAtDA,EAAwD/rI,SAAU,CAE1E,GAAC,CAAA3D,IAAA,gBAAAiE,IAED,WACI,QAAStF,KAAKgxI,aAClB,GAAC,CAAA3vI,IAAA,WAAAiE,IAED,WAAmB,IAAA2rI,EACf,OAAyB,QAAzBA,EAAOjxI,KAAKgxI,qBAAa,IAAAC,OAAA,EAAlBA,EAAoB14G,UAC/B,GAAC,CAAAl3B,IAAA,YAAAiE,IAED,WAAoB,IAAA85D,EAChB,OAAiB,QAAjBA,EAAOp/D,KAAKmc,aAAK,IAAAijD,OAAA,EAAVA,EAAY/rD,EACvB,GAAC,CAAAhS,IAAA,gBAAAiE,IAED,WAAwB,IAAA4rI,EACdzkH,KAAOnsB,EAAAkG,eACb,OAA2B,QAA3B0qI,EAAOlxI,KAAK8tB,MAAM5X,iBAAS,IAAAg7H,OAAA,EAApBA,EAAsBhiH,KAAK,SAAClsB,GAAC,OAAKA,EAAE0D,QAAU+lB,EAAK/lB,KAAK,EACnE,GAAC,CAAArF,IAAA,uBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAC9B,GAAC,CAAAjE,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAWM,SAAAC,IAAA,IAAAkjI,EAAAxlE,EAAAC,EAAA4wE,EAAA79G,EAAA7e,EAAAH,EAAAM,EAAA1S,EAAAjB,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG+tI,SAAa,IAAI1lI,EAAAU,UAAUlL,KAAKc,MAChCuxB,EAAWryB,KAAK8tB,MAAMvX,UAAU2Y,KAClC,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUzF,EAAKkvI,oBAAoB,GAC/CluI,EAAAE,KAAA,EACkB+tI,EAAWhnH,UAC1BmJ,GAAUhf,IAAMgf,GAAU3rB,OAC7B,OAFD1G,KAAKmc,MAAKla,EAAA4B,KAGJ2P,EAA2C,QAArCqxH,EAAI7kI,KAAK8tB,MAAM8H,sBAAsB,IAAAivG,OAAA,EAAjCA,EAAmCrxH,QAC7CH,GAAe,QAAVgsD,EAAAr/D,KAAKmc,aAAK,IAAAkjD,OAAA,EAAVA,EAAY7rD,SAAUA,KAE7BxT,KAAK6mB,OAAM,IAAA9iB,OAAKsP,IAAQ,CAAEorB,KAAM,SAChCz+B,KAAK+I,SAAW,CACZ,CACIrD,SAAU2N,EACVoT,QAASvoB,EAAAwoB,gBACTjkB,KAAM,MAIZkR,GAAmB,QAAV2rD,EAAAt/D,KAAKmc,aAAK,IAAAmjD,OAAA,EAAVA,EAAY3rD,QAAiB,GAC5C3T,KAAKwW,MAAQxW,KAAKc,KAAKmuB,YAAYtb,GACnC3T,KAAK6V,SACD7V,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,OAAK2Q,EAAM/N,SAAS5C,EAAEqQ,GAAG,IACpDrT,KAAKc,KAAK+U,SACd7V,KAAKy+G,OAASjrG,GAAU,GACxBxT,KAAK2yC,gBAAkB3yC,KAAK+zC,eAAe/zC,KAAK8tB,MAAMijB,MAAM,yBAAA9uC,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC/D,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,iBAAAC,MAEM,SAAeqzC,GAElB,OADY,IAAIC,WAAYC,gBAAgBF,EAAM,aACvC5D,KAAK+D,aAAe,EACnC,GAAC,CAAAzzC,IAAA,eAAAC,MACM,WAAY,IAAAk+D,EAAA16D,EAAA9E,KACf,GAAe,QAAXw/D,EAACx/D,KAAKmc,aAAK,IAAAqjD,IAAVA,EAAYhsD,OACb,SAAOlT,EAAAiiF,YAAW,kCAEtBviF,KAAK6wI,aAAc,EACP7wI,KAAKwX,QAAQzC,KAAK7W,EAAA25C,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXt1C,KAAM,CAAEgZ,KAAMzb,KAAKmc,SAEnBnE,cAAcjF,UAAU,WACxBjO,EAAK+rI,aAAc,CACvB,EACJ,GAAC,CAAAxvI,IAAA,iBAAAC,MAAA,eAAA6vI,EAAA3vI,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAAunB,EAAA,OAAAhrB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAE4C,GAD3CsqB,EAAOzsB,KAAKgxI,cAChB5uI,QAAQO,IAAI,QAAS8pB,EAAMzsB,KAAKuwI,gBAC5BvwI,KAAKuwI,gBAAiB9jH,EAAI,CAAArnB,EAAAjD,KAAA,QAAAiD,SAAAjD,KAAA,KACpBw6E,EAAAoxD,kBACF/tI,KAAK8tB,MAAMza,MACX/S,EAAAkG,gBACFvD,YAAW,OACZjD,KAAK8tB,MAAc5X,WAAalW,KAAK8tB,MAAM5X,WAAa,IAAIsF,OACzD,SAACxY,GAAM,OAAKA,EAAE0D,QAAU+lB,EAAK/lB,KAAK,GACpCtB,EAAAjD,KAAA,gBAAAiD,SAAAjD,KAAA,MAEWw6E,EAAAmxD,eACT9tI,KAAK8tB,MAAMza,MACX/S,EAAAkG,gBACFvD,YAAW,QAHbwpB,EAAIrnB,EAAAvB,KAIH7D,KAAK8tB,MAAc5X,aAAY5V,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAC7BpiB,KAAK8tB,MAAM5X,WAAa,IAAE,CAAGuW,IAClC,SACF,yBAAArnB,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAET,gBAAAoxI,IAAA,OAAAD,EAAAxsI,MAAA3E,KAAA4E,UAAA,EAvBA,IAuBA,CAAAvD,IAAA,mBAAAC,MAAA,eAAA+vI,EAAA7vI,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAAymB,EAAAy8B,EAAA,OAAAznD,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAC0B,GAAzBsqB,EAAOzsB,KAAKgxI,cACP,CAAA7qI,EAAAhE,KAAA,QAAAgE,SAAAhE,KAAA,KACQw6E,EAAAmxD,eACT9tI,KAAK8tB,MAAMza,MACX/S,EAAAkG,gBACFvD,YAAW,OAHbwpB,EAAItmB,EAAAtC,KAIH7D,KAAK8tB,MAAc5X,aAAY5V,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAC7BpiB,KAAK8tB,MAAM5X,WAAa,IAAE,CAAGuW,IAClC,SACF,OAEuC,IAA7CA,EAAIoC,IAAA,MAAQvuB,EAAAkG,gBAAmBimB,GAAQ,KAC7B/lB,MAAK,CAAAP,EAAAhE,KAAA,eAAAgE,EAAA7C,OAAA,iBAAA6C,SAAAhE,KAAA,MACTw6E,EAAAkxD,mBACF7tI,KAAK8tB,MAAMza,GACXoZ,EAAK/lB,OACJ1G,KAAKwwI,UACRvtI,YAAW,QACyD,GAAhEimD,EAAQlpD,KAAK8tB,MAAM5X,UAAUgZ,KAAK,SAAClsB,GAAC,OAAKA,EAAE0D,QAAU+lB,EAAK/lB,KAAK,GAC3D,CAAAP,EAAAhE,KAAA,gBAAAgE,EAAA7C,OAAA,kBACT4lD,EAAc3wB,YAAcv4B,KAAKwwI,SAAS,yBAAArqI,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAC9C,gBAAAsxI,IAAA,OAAAD,EAAA1sI,MAAA3E,KAAA4E,UAAA,EAxBA,MAhFA,IAAArD,CAwGA,CAzKuC,GAyKvCuvI,SAzKQ57F,0CAA+B9sC,EAAAC,4BAoE5ByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAA4P,WAAAlQ,EAAAC,4BAAAK,EAAAmrD,cAAA,kDApElB3e,EAA+BpsC,UAAA,gCAAAsW,QAAA,CAAA8zB,KAAA,OAAAC,OAAA,UAAAlqC,MAAA,IAAAC,KAAA,GAAAkE,OAAA,woFAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCAxShChB,EAHJiF,yBAAA,UAGIjF,CADH,WAIOA,EAAA4J,qBAAA,EAAAu/H,EAAA,aAMJnpI,EAAAkF,yBAEAlF,EAAA4J,qBAAA,EAAAw/H,EAAA,aAOAppI,EAAAiF,yBAAA,cAKIjF,EAAAkB,oBAAA,WACAlB,EAAAiF,yBAAA,gBAAuBjF,EAAAmF,iBAAA,WAC3BnF,EADgCkF,wBAChClF,GAIIA,EAHJiF,yBAAA,UAGIjF,CADH,WAEOA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAAy/H,EAAA,yBAuCIrpI,EAPJiF,yBAAA,eAOIjF,CADH,kBAC8BA,EAAAmF,iBAAA,iBAC/BnF,EADyCkF,wBACzClF,GAIYA,EAHZiF,yBAAA,qBAGYjF,CAHwB,eAGxBA,CAFgC,YAEhCA,CADqC,kBAEjCA,EAAAmF,iBAAA,4BACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAkBjF,EAAAmF,iBAAA,oBAE1BnF,EAFuCkF,wBAEvClF,KACAA,EAAAiF,yBAAA,gBAEIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA6pC,KAAAh0B,OAAW,GAIhB9W,EADJiF,yBAAA,YACIjF,CADqC,kBACVA,EAAAmF,iBAAA,WAAInF,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,aAAkBjF,EAAAmF,iBAAA,iBAE1BnF,EAFoCkF,wBAEpClF,KAGQA,EAFRiF,yBAAA,eAEQjF,CAFgC,YAEhCA,CADqC,kBAEhCA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBAEjBlF,EAAAiF,yBAAA,aAAkBjF,EAAAmF,iBAAA,eAE1BnF,EAFkCkF,wBAElClF,KACAA,EAAAiF,yBAAA,gBAAsBjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA8pC,OAAAj0B,OAAa,GAEpC9W,EADJiF,yBAAA,YACIjF,CADqC,kBAEjCA,EAAAmF,iBAAA,eACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAkBjF,EAAAmF,iBAAA,mBAG9BnF,EAH0CkF,wBAG1ClF,OAEIA,EADJiF,yBAAA,qBACIjF,CADsB,gBAIlBA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA+nI,iBAAgB,GAGrBhpI,EADJiF,yBAAA,YACIjF,CADqC,eAEjCA,EAAAmF,iBAAA,aACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAIZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,gBAAsBjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAioI,mBAAkB,GAEzClpI,EADJiF,yBAAA,YACIjF,CADqC,eAEjCA,EAAAmF,iBAAA,aACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAOxBnF,EALoBkF,wBAKpBlF,WASgBA,EARhBiF,yBAAA,YAQgBjF,CANf,YAMeA,CALsC,YAKtCA,CAJiC,YAIjCA,CADH,eACaA,EAAAmF,iBAAA,aACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,IAGRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YAA6BjF,EAAAmF,iBAAA,qBAAcnF,EAAAkF,yBAKnClF,EAJRiF,yBAAA,YAIQjF,CAJiC,YAIjCA,CADH,eACaA,EAAAmF,iBAAA,qBACdnF,EAD4BkF,wBAC5BlF,GAEIA,EADJiF,yBAAA,YACIjF,CADuB,aACFA,EAAAmF,iBAAA,oBAAanF,EAAAkF,yBAClClF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,8FAQZnF,EAFQkF,wBAERlF,KAKQA,EAJRiF,yBAAA,YAIQjF,CAJiC,YAIjCA,CADH,eACaA,EAAAmF,iBAAA,YACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,aAUIjF,EATA4J,qBAAA,GAAA0/H,EAAA,aASAtpI,CAToC,GAAAupI,EAAA,aASpCvpI,CAHC,GAAAwpI,EAAA,cAWTxpI,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAEIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAs6H,gBAA0B,EAAI,GAM1Bv7H,EAHJiF,yBAAA,YAGIjF,CADH,eACaA,EAAAmF,iBAAA,aACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,IAIRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YAA6BjF,EAAAmF,iBAAA,uBAAgBnF,EAAAkF,yBAC7ClF,EAAAiF,yBAAA,aACIjF,EAAAkB,oBAAA,gDACAlB,EAAA4J,qBAAA,GAAA6/H,EAAA,eAORzpI,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,UACIjF,EAAA4J,qBAAA,GAAA8/H,EAAA,gBAkDZ1pI,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,IAAA+/H,EAAA,sFAlRa3pI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA5H,EAAAykB,MAAA8H,gBAAA,MAAAvsB,EAAAykB,MAAA8H,eAAAxL,OAAA,KAAA/gB,EAAAykB,MAAA8H,eAAAxL,OAAAplB,QASJoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAs9C,UAiBGv+C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAykB,MAAA3sB,MAAA,KAGeiH,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA+rC,WAoCXhtC,EAAAoF,sBACApF,EADA6I,qBAAA,oBAAA5H,EAAAykB,MAAAyP,MACAn1B,CADmC,oBAAAiB,EAAA+rC,UAAA48F,EAAAC,GAMb7pI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAkBA7I,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,eAwBJ7I,EAAAoF,oBAAA,IAAApF,EAAAiX,sBAAA,aAAAhW,EAAAknI,eAINnoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAknI,cAAA,kCAOMnoI,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,aAAAhW,EAAAmnI,UAINpoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAmnI,SAAA,+BAmBRpoI,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,oBAAApE,EAAAykB,MAAA/V,UAAA,KAAA1O,EAAAykB,MAAA/V,UAAAxE,OAAAlK,EAAAykB,MAAArZ,KAAA,KAcIrM,EAAAoF,oBAAA,IAAApF,EAAAgM,6BAAA,IAAAhM,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,4BAAAzJ,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAAxI,EAAAslB,aAAA,MAAAvmB,EAAAiM,sBAAA,MAAAhL,EAAAykB,MAAAjc,KAAA,GAAAxI,EAAAykB,MAAAhc,SAAA,IAAAzI,EAAAslB,aAAA,KAgBEvmB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAqmI,WAAArmI,EAAAsmI,WAIDvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAqmI,YAAArmI,EAAAsmI,WAKCvnI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA6oI,WAoBN9pI,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAjW,EAAA8oI,WAAA,iBAAA9oI,EAAAykB,MAAA5X,UAAA,KAAA7M,EAAAykB,MAAA5X,UAAAlR,OAAA,gBAOEoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAykB,MAAAijB,MAAA3oC,EAAA4iG,0BAED5iG,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAspC,gBAAA0Q,QAQoBj7C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmN,OAmDLpO,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAs6H,oBAkB/BzuF,CAA+B,wNCzU5C,IAAAvkB,EAAA9yB,EAAA,OAmBMqtI,EAAe,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YA0IJ,SAAgBkH,EACZp/H,GACqB,IAArBq/H,EAAAztI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,GAEfmqB,EAAQ,IAAIjV,KAAK,GACfw4H,EAAqB,GAC3Bt/H,EAAKwJ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEphB,KAAOyM,EAAEzM,IAAI,GAAE,IACXylB,EADWD,EAAAa,EACfllB,GAAI,IAA1B,IAAAqkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA4B,KAAAilB,EAAAgJ,EAAjB3uB,EAAOJ,EAAAh2B,MACRixI,EAAY,IAAIz4H,QAClB6W,EAAA2H,YAAWZ,EAAQ7lB,OAA6B,QAAvBwrC,EAAC3lB,EAAQ9B,sBAAc,IAAAynB,OAAA,EAAtBA,EAAwB+sF,aAAc,IAE9DoI,KAAU7hH,EAAA2H,YACZZ,EAAQ7lB,KACR6lB,EAAQ5lB,WAAkC,QAAtBu0C,EAAA3uB,EAAQ9B,sBAAc,IAAAywB,OAAA,EAAtBA,EAAwBgkF,iBAAkB,KAElE,EAAI15G,EAAA6a,SAAQ9T,EAAQ7lB,KAAMkd,IACTiJ,KAAK8qB,OAAInyB,EAAA+H,qBAAoB65G,EAAWxjH,KACzCsjH,GACRC,EAAMr5G,KAAK,CACPlK,MAAOA,EAAM2G,UACb9R,IAAK8T,EAAQ7lB,OAGrBkd,EAAQyjH,IACL,EAAI7hH,EAAA8hH,cAAa1jH,EAAO2I,EAAQ7lB,QACnCkd,EAAQyjH,EAEhB,CAAC,OAAAlpH,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,IAAM7Q,EAAIyG,EAAM2G,UAChB48G,SAAMr5G,KAAK,CACPlK,MAAOzG,EACP1E,IAA4B,IAAtB0E,GAAQxO,KAAKuX,SAEhBihH,CACX,CAzKA3yI,cAAA,SAAgB8sI,EACZ/1H,GAAgB,IAAAg8H,EAEhB,MAAuB,cAAnBh8H,EAAQgrB,OAA+B,WACtB,QAArBgxG,EAAIh8H,EAAQH,iBAAS,IAAAm8H,GAAjBA,EAAmB1tI,OAEf0R,EAAQH,UAAUs6B,MACd,SAACze,GAAC,MAA2B,aAAtBA,EAAEiyG,iBAAkC3tH,EAAQg5B,QAAQ,GAGxD,WAEPh5B,EAAQH,UAAU40B,KACd,SAAC/Y,GAAC,MACwB,cAAtBA,EAAEiyG,iBACoB,gBAAtBjyG,EAAEiyG,eAAiC,GAGpC,YAEJ,WAEJ,UACX,EAEA1kI,kBAAA,SAAgBqtI,EAAgBvqI,GAAuB,IAAAkwI,EAC/C5jH,EAAQtsB,EAAKssB,OAAqC,IAA3BtsB,EAAa0pI,YACpCvoH,EAAMnhB,EAAKmhB,KAAQnhB,EAAa2pI,UACpC,GAAI3pI,EAAK4pI,YAAc,EACnB,OAAQ5pI,EAAK6tB,SACT,IAAK,QACD1M,KAAM+M,EAAAoQ,SACFhS,GAASjV,KAAKuX,OACb5uB,EAAK4pI,YAAc,GAAK5pI,EAAKm0B,UAChClB,UACF,MACJ,IAAK,SACD9R,KAAM+M,EAAAiiH,UACF7jH,GAASjV,KAAKuX,OACb5uB,EAAK4pI,YAAc,GAAK5pI,EAAKm0B,UAChClB,UACF,MACJ,IAAK,YACL,IAAK,UACD9R,KAAM+M,EAAAkiH,WACF9jH,GAASjV,KAAKuX,OACb5uB,EAAK4pI,YAAc,GAAK5pI,EAAKm0B,UAChClB,UACF9R,KAAM+M,EAAAoQ,SAAQnd,EAAK,GAAG8R,UACtB,MACJ,IAAK,SACD9R,KAAM+M,EAAAmiH,UACF/jH,GAASjV,KAAKuX,OACb5uB,EAAK4pI,YAAc,GAAK5pI,EAAKm0B,UAChClB,UAId,MAAO,CACHy2G,eAAax7G,EAAA4C,gBAAY5C,EAAA6C,YAAWzE,IACpCq9G,aAAWz7G,EAAA4C,gBAAY5C,EAAA+C,UAAS9P,IAChCgT,SAAUn0B,EAAKm0B,SACftG,QAAS7tB,EAAK6tB,QACdg8G,cACqB,QAAjBqG,EAAAlwI,EAAK6pI,oBAAY,IAAAqG,OAAA,EAAjBA,EAAmBr3H,IAAI,SAACtY,GAAC,MACR,iBAANA,EAAiBkoI,EAAaloI,GAAKA,CAAC,KAC1C,GAEjB,EAEArD,mBAAA,SAAgBivB,EAAgB3oB,GAMZ,IALhB2wB,EAAQ3wB,EAAR2wB,SAEA7H,EAAK9oB,EAAL8oB,MACAnL,EAAG3d,EAAH2d,IACAyoH,EAAWpmI,EAAXomI,YAEI31H,EAAU,GAEd,GAAIkgB,EAAU,CACV,OARG3wB,EAAPqqB,SASQ,IAAK,QACD5Z,EAAUA,EAAQ3S,OACd6yB,EAAW,EAAC,SAAA7yB,OAAY6yB,EAAQ,SAAU,SAE1Cy1G,EAAc,IACdzoH,KAAM+M,EAAAoQ,SACFhS,GAASjV,KAAKuX,OACbg7G,EAAc,GAAKz1G,GACtBlB,WACN,MACJ,IAAK,SACDhf,EAAUA,EAAQ3S,OACd6yB,EAAW,EAAC,SAAA7yB,OAAY6yB,EAAQ,UAAW,UAE3Cy1G,EAAc,IACdzoH,KAAM+M,EAAAiiH,UACF7jH,GAASjV,KAAKuX,OACbg7G,EAAc,GAAKz1G,GACtBlB,WACN,MACJ,IAAK,YACL,IAAK,UACDhf,EAAUA,EAAQ3S,OACd6yB,EAAW,EAAC,SAAA7yB,OAAY6yB,EAAQ,WAAY,WAE5Cy1G,EAAc,IACdzoH,KAAM+M,EAAAkiH,WACF9jH,GAASjV,KAAKuX,OACbg7G,EAAc,GAAKz1G,GACtBlB,WACN,MACJ,IAAK,SACDhf,EAAUA,EAAQ3S,OACd6yB,EAAW,EAAC,SAAA7yB,OAAY6yB,EAAQ,UAAW,UAE3Cy1G,EAAc,IACdzoH,KAAM+M,EAAAmiH,UACF/jH,GAASjV,KAAKuX,OACbg7G,EAAc,GAAKz1G,GACtBlB,WAGV22G,GAAe,IACf31H,EAAUA,EAAQ3S,OAAM,WAAAA,UAAY4sB,EAAAkI,QAAOjV,EAAK,kBAExD,CACA,OAAOlN,CACX,EAOA/W,mBAAAyyI,EAoCAzyI,uBAAA,SAAgBmnI,EACZ/3G,EACAnL,EACA5Q,GACqB,IAGGykB,EADlBs7G,EAASX,EAAiBp/H,EAFhCpO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAE6B4yB,EAAAU,EAC9B66G,GAAM,IAAxB,IAAAv7G,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAA0B,KAAf46G,EAAGv7G,EAAAn2B,MACV,GACIytB,GAASikH,EAAIjkH,OACbA,EAAQikH,EAAIpvH,KACZA,EAAMovH,EAAIjkH,OACVnL,GAAOovH,EAAIpvH,IAEX,OAAO,CAEf,CAAC,OAAA0F,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACD,OAAO,CACX,EAQAx5B,sBAAA,SAAgBszI,EACZjgI,GAEqB,IAII2rB,EALzB9sB,EAAAjN,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,QAAmBkV,MAAO4b,UAC1B28G,EAAAztI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,GAEb0tI,EAAQF,EAAiBp/H,EAAMq/H,GAC/Bz6G,KAAOjH,EAAAuiH,eAAWviH,EAAA0H,eAAcxmB,GAAO,GAAGqtB,EAAAhH,EAC5Bo6G,GAAK,IAAzB,IAAApzG,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAA2B,KAAhB+6G,EAAKx0G,EAAAr9B,MACZ,MAAIqvB,EAAA6a,SAAQ2nG,EAAMpkH,MAAO6I,GACrB,OAAOu7G,EACJ,MAAIxiH,EAAA2a,UAAS1T,EAAMu7G,EAAMvvH,OACtB9R,EAAW6e,EAAA+H,qBAAoBy6G,EAAMvvH,IAAKgU,IAChCy6G,EAAU,OAAOc,CAEzC,CAAC,OAAA7pH,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACD,OAAOm5G,EAAMA,EAAMttI,OAAS,EAChC,6MClPA,IAAAuE,EAAA1L,EAAA,OACAiQ,EAAAjQ,EAAA,OACA2C,EAAA3C,EAAA,MACA8+E,EAAA9+E,EAAA,OACAyC,EAAAzC,EAAA,yJAQgBuK,EADJiF,yBAAA,aACIjF,CADyD,cAC/CA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,6BAQIA,EANRiF,yBAAA,WAMQjF,CAFP,UAEOA,CADiC,aACdA,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBACjClF,EAAAkB,oBAAA,wBAMJlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADiC,cACVA,EAAAmF,iBAAA,wBAAkBnF,EAAAkF,yBACzClF,EAAAkB,oBAAA,yBAORlB,EADIkF,wBACJlF,2CArBIA,EAAA6I,qBAAA,YAAAkZ,EAAAzZ,MAQQtI,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,QACA7I,CADS,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAQTxJ,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,QAEA7I,CAFS,iBAAAA,EAAAuJ,0BAAA,EAAAC,kEAUjBxJ,EAJJiF,yBAAA,cAIIjF,CADH,eACyBA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAAipH,OAAM,GAAEhrI,EAAAmF,iBAAA,kBAC3CnF,EADuDkF,wBACvDlF,0BAEIA,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,+CAERnF,EADIkF,wBACJlF,UAJiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBAzC7BtR,+BAkDyC,eAAA0zI,EAA5BC,EAA4B,WAUjC,OAAAxzI,EAHJ,SAAAwzI,EACqC/xF,EACzBqS,GAAuD7zD,EAAAC,KAAAszI,GAD9BtzI,KAAAuhD,SACzBvhD,KAAA4zD,cARL5zD,KAAAsiB,SAAU,EACDtiB,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACjCkrD,MAAO,IAAIvrF,EAAAsgC,YAAY7pC,KAAKuhD,OAAO6oF,YAAc,GACjDhB,UAAW,IAAI7/H,EAAAsgC,YAAY7pC,KAAKuhD,OAAO8oF,gBAAkB,IAM1D,EAAC,EAAAhpI,IAAA,OAAAC,OAAAiyI,EAAA/xI,EAAAC,IAAAC,KAEG,SAAAC,IAAA,IAAA6xI,EAAAC,EAAApgH,EAAAvF,EAAA,OAAArsB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAnC,KAAKsiB,SAAU,EACftiB,KAAK4zD,YAAYs/C,cAAe,EAE1B7/E,EAAa,CACf0B,WAAsB,QAAXy+G,EAAAxzI,KAAKuhD,cAAM,IAAAiyF,GAAc,QAAdA,EAAXA,EAAaj9H,UAAU,UAAE,IAAAi9H,OAAA,EAAzBA,EAA2BngI,MAAiB,QAAfogI,EAAIzzI,KAAKuhD,cAAM,IAAAkyF,GAAQ,QAARA,EAAXA,EAAa/6H,cAAM,IAAA+6H,OAAA,EAAnBA,EAAqBpgI,KACpEpR,EAAAE,KAAA,KACiBw6E,EAAAkuD,WACd,IAAIrqI,EAAAssB,cAAa+B,IAAA,GACV7uB,KAAKuhD,QAAM,IACd6oF,WAAYpqI,KAAK0Q,KAAKpP,MAAMwzF,MAC5Bu1C,eAAgBrqI,KAAK0Q,KAAKpP,MAAM8nI,aACjCkB,SACHj3G,GAECpwB,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,OATd,GAAL8qB,EAAK7rB,EAAA4B,KAUC,CAAA5B,EAAAE,KAAA,SAAAF,SAAAE,KAAA,MACQw6E,EAAAQ,qBAAoBn9E,KAAKuhD,OAAOluC,GAAIggB,EAAM0B,UAASlG,IAAA,GAC1D7uB,KAAKuhD,OAAO3rB,gBAAc,IAC7Bw0G,WAAYpqI,KAAK0Q,KAAKpP,MAAMwzF,MAC5Bu1C,eAAgBrqI,KAAK0Q,KAAKpP,MAAM8nI,UAChCt0C,MAAO90F,KAAK0Q,KAAKpP,MAAMwzF,MACvBs0C,UAAWppI,KAAK0Q,KAAKpP,MAAM8nI,aAE1BnmI,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,QARvB8qB,EAAK7rB,EAAA4B,KAAA,WAUJiqB,EAAK,CAAA7rB,EAAAE,KAAA,SACN,OAAAnC,KAAKsiB,SAAU,EACftiB,KAAK4zD,YAAYs/C,cAAe,KAChC5yG,EAAAqU,aAAW,uCAAwC1S,EAAAqB,OAAA,mBAGvD,EAAAhD,EAAAs3C,eAAc,mDACd53C,KAAK4zD,YAAYs/C,cAAe,EAChClzG,KAAKsiB,SAAU,EACftiB,KAAK4zD,YAAYlsD,MAAMomB,GAAO,yBAAA7rB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjC,SAAAozI,IAAA,OAAAG,EAAA5uI,MAAA3E,KAAA4E,UAAA,MAxCG,IAAA2uI,CAwCH,CAlDoC,GAkDpCF,SAlDQC,0CAA4BlrI,EAAAC,4BAQzByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAurD,cAAA,kDARlBy/E,EAA4BxqI,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,sxBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA9C7BhB,EADJiF,yBAAA,aACIjF,CAD+B,QAC3BA,EAAAmF,iBAAA,qCAA+BnF,EAAAkF,yBACnClF,EAAA4J,qBAAA,EAAA0hI,EAAA,gBAGJtrI,EAAAkF,yBA+BAlF,EA9BA4J,qBAAA,EAAA2hI,EAAA,aA8BAvrI,CA1BC,EAAAwrI,EAAA,eA0BDxrI,CAHC,EAAAyrI,EAAA,yBAAAzrI,EAAA2c,yEA/BgD3c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,SAO5Cla,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA0/D,GAsBhB1/D,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,8MAgBAgxH,CAA4B,4NCzDzC,IAAA/pI,EAAA1L,EAAA,OAMA8yB,EAAA9yB,EAAA,OAcAyC,EAAAzC,EAAA,OAQA2C,EAAA3C,EAAA,MACA+mD,EAAA/mD,EAAA,OACAmoI,EAAAnoI,EAAA,OACA8pD,EAAA9pD,EAAA,OAOMi2I,IAFFC,EAAepjH,EAAAg0B,QAAIh0B,EAAAqjH,eAAWrjH,EAAA8a,UAAS,IAAI3xB,KAAQ,GAAI,GAAI,CAAEsqE,MAAM,IAGnE,SAAC6vD,GAAiC,OAAK,SAACC,GAA4B,IAAAC,EAChE,OAA0B,QAAtBA,EAAAF,EAAiB3yI,aAAK,IAAA6yI,GAAtBA,EAAwBnvI,SAAWkvI,EAAQ5yI,MACpC,CAAE8yI,eAAgB,oCAEtB,IACX,CAAC,GAELz0I,oBAAA,SAAgBymI,IAEc,IAAAlgD,EAAAjgF,EAAA6B,EAAAggI,EAAAiB,EAAAsL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAD1BlnH,EAAAlpB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,IAAIpE,EAAAssB,cAC3B3nB,EAA0BP,UAAAI,OAAA,EAAAJ,UAAA,QAAAK,EAErB6oB,IAAOA,EAAQ,IAAIttB,EAAAssB,eACxB,IAAMpc,EAAO,IAAInH,EAAAqgC,UAAU,CACvBv2B,GAAI,IAAI9J,EAAAsgC,YAAY/b,EAAMza,IAC1Bo7B,SAAU,IAAIllC,EAAAsgC,YAAY/b,EAAM2gB,UAChCh6B,KAAM,IAAIlL,EAAAsgC,YACN/b,EAAMrZ,OAAuB,QAAnByxE,EAAIp4D,EAAM/V,iBAAS,IAAAmuE,OAAA,EAAfA,EAAiBx/E,SAAsB,QAAjBT,KAAI3F,EAAAkG,sBAAa,IAAAP,OAAA,EAAbA,EAAeS,QAAS,GAChE,CAAC6C,EAAAugC,WAAWC,WAEhBhyB,UAAW,IAAIxO,EAAAsgC,YACX/b,EAAM/V,WAAa,IAAI4vC,EAAA6Q,KAAK,CAAE9xD,MAAOonB,EAAMrZ,MAAQ,MAEvDyV,QAAS,IAAI3gB,EAAAsgC,YAAY/b,EAAM5D,UAAwB,QAAjBpiB,KAAIxH,EAAAkG,sBAAa,IAAAsB,OAAA,EAAbA,EAAepB,QACzDwjI,SAAU,IAAI3gI,EAAAsgC,YAAY/b,EAAMo8G,UAChCh0H,UAAW,IAAI3M,EAAAsgC,YAAY/b,EAAM5X,WAAa,IAC9CK,UAAW,IAAIhN,EAAAsgC,YAAY/b,EAAMvX,WAAa,IAC9CpV,MAAO,IAAIoI,EAAAsgC,YAAY/b,EAAM3sB,OAC7B4vC,KAAM,IAAIxnC,EAAAsgC,YAAY/b,EAAMijB,MAC5B06F,QAAS,IAAIliI,EAAAsgC,YAAY/b,EAAK29G,SAC9B55H,KAAM,IAAItI,EAAAsgC,YAAY/b,EAAMjc,KAAM,CAACtI,EAAAugC,WAAWC,WAC9Cj4B,SAAU,IAAIvI,EAAAsgC,YAAY/b,EAAMhc,SAAU,CAAC8yC,EAAA6B,cAC3Cj2B,QAAS,IAAIjnB,EAAAsgC,YAAY/b,EAAM0C,SAC/BC,SAAU,IAAIlnB,EAAAsgC,YAAY/b,EAAM2C,UAChCs5G,UAAW,IAAIxgI,EAAAsgC,YAAY/b,EAAMi8G,WACjCj7G,WAAY,IAAIvlB,EAAAsgC,YAAY/b,EAAMgB,YAClC+2G,mBAAoB,IAAIt8H,EAAAsgC,YAAY/b,EAAM+3G,oBAC1C4B,OAAQ,IAAIl+H,EAAAsgC,YAAY/b,EAAM25G,QAC9B+E,YAAa,IAAIjjI,EAAAsgC,YAAY/b,EAAM0+G,aACnCp2H,SAAU,IAAI7M,EAAAsgC,YAAgC,QAArBi+F,EAACh6G,EAAM8H,sBAAc,IAAAkyG,OAAA,EAApBA,EAAsB1xH,UAChD+zH,eAAgB,IAAI5gI,EAAAsgC,aACI,QAApBk/F,EAAAj7G,EAAM8H,sBAAc,IAAAmzG,GAAa,QAAbA,EAApBA,EAAsB3yH,SAAS,UAAE,IAAA2yH,OAAA,EAAjCA,EAAmClnG,QAAS,IAEhDkmG,qBAAsB,IAAIx+H,EAAAsgC,aACF,QAApBwqG,EAAAvmH,EAAM8H,sBAAc,IAAAy+G,GAAa,QAAbA,EAApBA,EAAsBj+H,SAAS,UAAE,IAAAi+H,OAAA,EAAjCA,EAAmC33D,cAAe,IAEtD0tD,WAAY,IAAI7gI,EAAAsgC,YAAY/b,EAAMs8G,YAAc,GAChDC,eAAgB,IAAI9gI,EAAAsgC,YAAY/b,EAAMu8G,gBAAkB,GACxDrzH,OAAQ,IAAIzN,EAAAsgC,YAAgC,QAArByqG,EAACxmH,EAAM8H,sBAAc,IAAA0+G,OAAA,EAApBA,EAAsBt9H,QAE9Ci+H,aAAc,IAAI1rI,EAAAsgC,YAAgC,QAArB0qG,EAACzmH,EAAM8H,sBAAc,IAAA2+G,OAAA,EAApBA,EAAsBU,cACpDvvI,SAAU,IAAI6D,EAAAsgC,YAAY/b,EAAMpoB,UAChCwvI,YAAa,IAAI3rI,EAAAsgC,aAAY,GAC7BsrG,cAAe,IAAI5rI,EAAAsgC,aACK,QAApB2qG,EAAA1mH,EAAM8H,sBAAc,IAAA4+G,OAAA,EAApBA,EAAsBW,iBAAiB,GAE3Cl+C,WAAY,IAAI1tF,EAAAsgC,aAAgC,QAApB4qG,EAAA3mH,EAAM8H,sBAAc,IAAA6+G,OAAA,EAApBA,EAAsBx9C,aAAc,IAChEnzD,SAAU,IAAIv6B,EAAAsgC,aAAgC,QAApB6qG,EAAA5mH,EAAM8H,sBAAc,IAAA8+G,OAAA,EAApBA,EAAsB5wG,WAAY,IAC5DkgB,KAAM,IAAIz6C,EAAAsgC,aAAgC,QAApB8qG,EAAA7mH,EAAM8H,sBAAc,IAAA++G,OAAA,EAApBA,EAAsB3wF,OAAQ,IACpDkoF,cAAe,IAAI3iI,EAAAsgC,aAAY,GAC/BnxB,OAAQ,IAAInP,EAAAsgC,YAAiB/b,EAAMpV,QACnCmuC,gBAAiB,IAAIt9C,EAAAsgC,aACG,QAApB+qG,EAAA9mH,EAAM8H,sBAAc,IAAAg/G,OAAA,EAApBA,EAAsB/tF,kBAAmB,UAE7C9D,SAAU,IAAIx5C,EAAAsgC,YAAY/b,EAAMi1B,UAAYziD,EAAAy9F,gBAC5Cq3C,aAAc,IAAI7rI,EAAAsgC,aACM,QAApBgrG,EAAA/mH,EAAM8H,sBAAc,IAAAi/G,OAAA,EAApBA,EAAsBO,gBAAgB,GAE1CvI,YAAa,IAAItjI,EAAAsgC,aACO,QAApBirG,EAAAhnH,EAAM8H,sBAAc,IAAAk/G,OAAA,EAApBA,EAAsBjI,cAAe,WAEzCziH,OAAQ,IAAI7gB,EAAAsgC,aAAgC,QAApBkrG,EAAAjnH,EAAM8H,sBAAc,IAAAm/G,OAAA,EAApBA,EAAsB3qH,SAAU,IACxDu8B,SAAU,IAAIp9C,EAAAsgC,aAAgC,QAApBmrG,EAAAlnH,EAAM8H,sBAAc,IAAAo/G,OAAA,EAApBA,EAAsBruF,YAAY,KAEhEj2C,EAAKpL,IAAI,aAAawN,aAAaC,UAAU,SAACwP,GAAC,OAC3C7R,EAAKgT,SAASjP,KAAKirB,SAASnd,GAAG7b,MAAM,GAEzCgK,EAAKpL,IAAI,aAAawN,aAAaC,UAAU,SAAC48C,GAC1Cj/C,EAAKgT,SAAShL,OAAOgnB,SAAU,MAADiwB,KAAG3qD,OAAU2qD,EAAE,GAAa,MAC1Dj/C,EAAKgT,SAAS1M,OAAQ,MAAD24C,KAAG3qD,OAAS,SAAW,YAChD,GACA,IAAMqwI,EAAkB,WAAK,IAAAC,EACD,QAApBA,EAAC5kI,EAAKpP,MAAM8U,gBAAQ,IAAAk/H,IAAnBA,EAAqBtwI,SAAW0L,EAAKse,cAAcnd,MACxDnB,EAAKe,WACD,CACI2E,SAAU1F,EAAKpP,MAAM8U,SAASkF,IAAI,SAACkiB,GAAU,OAAA3O,IAAA,GACtC2O,GAAK,IACR1P,MAAO,CACHjc,KAAMnB,EAAKpP,MAAMkvB,WACXG,EAAA6C,YAAW9iB,EAAKse,cAAcnd,MAC9BnB,EAAKse,cAAcnd,KACzBC,SAAUpB,EAAKpP,MAAMkvB,QACf,KACA9f,EAAKpP,MAAMwQ,WACpB,IAGT,CAAEo1C,WAAW,GAErB,EACAx2C,SAAKoC,aAAaC,UAAU,SAAC2P,GACkC,IAAAqkC,EAEpDC,EAFHt2C,EAAKse,cAAcnd,KAAOiI,KAAKuX,OAAS3gB,EAAKpP,MAAM+R,GACnC,QAAhB0zC,EAAAr2C,EAAKpL,IAAI,eAAO,IAAAyhD,GAAhBA,EAAkBI,QAAQ,CAAED,WAAW,IAEvB,QAAhBF,EAAAt2C,EAAKpL,IAAI,eAAO,IAAA0hD,GAAhBA,EAAkB/K,OAAO,CAAEiL,WAAW,KAEtCxkC,EAAE7Q,MAAQ6Q,EAAE5Q,UAAY4Q,EAAE8N,UAAS6kH,GAC3C,GACA3kI,EAAKgT,SAAS5R,SAASgB,aAAaC,UAAU,SAACjB,GAC3CpB,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAMC,GACpC,CAAE+wC,UAAW,EAAGyE,eAAgB,SAClC5xB,WAEN,CAAEwxB,WAAW,IAEjBmuF,GACJ,GACA3kI,EAAKgT,SAAS+M,SAAS3d,aAAaC,UAAU,SAAClB,GACvCA,KAAO8e,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAM,IAAI6jB,UAC/ChlB,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAW5nB,EAAKse,cAAcnd,KAAM,IACpC,CAAEgxC,UAAW,EAAGyE,eAAgB,SAClC5xB,UACF5jB,SAAU,IAEd,CAAEo1C,WAAW,IAGjBx2C,EAAKe,WACD,CACIK,YAAU6e,EAAA+H,qBACN7mB,EACAnB,EAAKse,cAAcnd,OAG3B,CAAEq1C,WAAW,IAGrBmuF,GACJ,GACA3kI,EAAKgT,SAAS7R,KAAKiB,aAAaC,UAAU,SAAClB,GAAQ,IAAA0jI,EAAAC,EAC/C9kI,EAAKe,WACD,CACIgf,YAAUE,EAAAiyB,0BACNjyB,EAAA2H,YAAWzmB,EAAMnB,EAAKpP,MAAMwQ,UAC5B,CAAE+wC,UAAW,EAAGyE,eAAgB,SAClC5xB,WAEN,CAAEwxB,WAAW,IAEbr1C,EAAOiI,KAAKuX,QAAU3gB,EAAKpP,MAAM+R,IACjC3C,EAAKe,WACD,CACII,QAAM8e,EAAAiyB,uBAAsB9oC,KAAKuX,MAAO,CACpCwxB,UAAW,EACXyE,eAAgB,SACjB5xB,WAEP,CAAEwxB,WAAW,IAImB,oBAAf,QAArBquF,EAAA7kI,EAAKpP,MAAMwtB,kBAAU,IAAAymH,OAAA,EAArBA,EAAuB5N,WACa,UAAf,QAArB6N,EAAA9kI,EAAKpP,MAAMwtB,kBAAU,IAAA0mH,OAAA,EAArBA,EAAuB7N,WAEvBj3H,EAAKe,WAAW,CACZqd,WAAUD,IAAA,GACHne,EAAKpP,MAAMwtB,YAAU,IACxBw9G,aAAc,CAAC,IAAIxyH,KAAKjI,GAAM4jI,cAI1CJ,GACJ,GACA3kI,EAAKgT,SAAStN,SAAStD,aAAaC,UAAU,SAAC/P,GAC3C,IAKEulI,EAGKmN,EARDt/H,EAAW1F,EAAKse,cAAc5Y,UAAY,GAEpC,MAARA,KAAUpR,SACD,MAARG,KAAUG,IAAI,uCACXH,EAAS7D,MAAM,4BAEO,QAA1BinI,EAAA73H,EAAKpL,IAAI,yBAAiB,IAAAijI,GAA1BA,EAA4BvwE,cAAc,CAACzuD,EAAAugC,WAAWC,WACtDr5B,EAAKpL,IAAI,kBAAkBmM,WAAWf,EAAKpP,MAAM6oI,kBAEvB,QAA1BuL,EAAAhlI,EAAKpL,IAAI,yBAAiB,IAAAowI,GAA1BA,EAA4BC,kBAC5BjlI,EAAKpL,IAAI,kBAAkB+jH,UAAU,OAEzC34G,EAAKklI,wBACT,GACAllI,EAAKpL,IAAI,wBAAwB0yD,cAAc,CAC3C87E,EAAsBpjI,EAAKpL,IAAI,eAE/BwoB,EAAMza,KACN3C,EAAKpL,IAAI,QAAQ6hD,UACjBz2C,EAAKpL,IAAI,aAAa6hD,WAEN,YAAhBr5B,EAAMyP,OAAqB7sB,EAAKpL,IAAI,QAAQ6hD,UACzCz2C,CACX,EAMA/Q,8BAAA,SAAgBk2I,EAA4Bj+G,IACxCm8G,EAAepjH,EAAA0H,eAAc,IAAIve,KAAK8d,GAC1C,EAQAj4B,qBAAA,SAAgBm2I,EACZjgH,EACAulB,EACA26F,GACkC,IAAlClkI,EAAAjN,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,MAAe+rB,EAAAiI,SAAQ,IAAI9e,MAErBuX,EAAM,IAAIvX,KAAKjI,GACfmkI,KAAiBhQ,EAAAiN,qBAAoBp9G,EAAUhkB,EAAM,GACrDkd,EAAQ,IAAIjV,KAAKk8H,EAAejnH,OAChCnL,EAAM,IAAI9J,KAAKk8H,EAAepyH,KAC9BqyH,KAAiB31I,EAAA4rF,sBACnBr6E,EACAA,EACAmkI,EAAejnH,MACfinH,EAAepyH,KAEbsyH,KAAwBvlH,EAAA+jB,gBAAe,CACzC5T,SAASm1G,EACHtlH,EAAA+H,qBADGu9G,EACiBryH,EACAmL,EADKsC,KAG7B8kH,GAAiBF,KAAkB,EAACtlH,EAAAoC,WAAUhE,EAAOsC,GAE3D,MAAO,CACHqQ,OAAS0Z,EAEH66F,EACAF,EACI,uBACA,YACJ,sBALA,eAMNK,gBATeH,KAAkB,EAACtlH,EAAAoC,WAAUnP,EAAKyN,GAU3C,oBACA4kH,EAAc,cAAAlyI,UACA4sB,EAAAkI,QAAOjV,EAAK,UAAS,KAAA7f,OAAImyI,EAAqB,KAC5DC,EACA,oBAAmB,WAAApyI,UACR4sB,EAAAkI,QAAO9J,EAAO,UAAS,KAAAhrB,OAAImyI,EAAqB,KAEzE,EAEAv2I,kBAAA,SAAgB02I,EACZrjI,EACAsjI,EACAC,GAEA,IAAMC,EAAOD,EAAeC,KACtBjvD,EAAKgvD,EAAehvD,GAUpB5nD,EATgB3sB,EAAKwI,OAAO,SAACkc,GAC/B,IAAM3I,EAAQ,IAAIjV,KAAK4d,EAAQ7lB,MACzB+R,KAAM+M,EAAA2H,YAAWvJ,EAAO2I,EAAQ5lB,UACtC,OACK4lB,EAAQnhB,UAAU2Y,KACf,SAAC/S,GAAK,OAAKA,EAAMzV,QAAU6vI,EAAep6H,KAAK,MAC9C,EAAC7b,EAAA4rF,sBAAqBsqD,EAAMjvD,EAAIx4D,EAAM2G,UAAW9R,EAAI8R,UAElE,GACmC3xB,OAAOuyI,GAC1C32G,SAAanjB,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEphB,KAAOyM,EAAEzM,IAAI,MACpCvR,EAAAqvC,QAAOhQ,EAAc,KAChC,EAEAhgC,8BAAA,SAAgBi0B,EAA4B8D,GACxC,IAAIxhB,EAAY,CACZ,CACI7C,GAAIqkB,EAAQwmB,QACZ3qC,KAAMmkB,EAAQumB,UACdv3C,MAAOgxB,EAAQ2Y,WACfomG,WAAW,IAGnB,MAA6B,YAAzB/+G,EAAQhkB,cACRwC,EAAU+iB,KACN,IAAI0uB,EAAA6Q,KAAK,CACLjlD,KAAMmkB,EAAQpkB,YAAcokB,EAAQjkB,YACpC/M,MAAOgxB,EAAQxmB,SACfqnB,WAAYb,EAAQa,cAIhCriB,EAAYA,EAAUnS,OAAO2zB,EAAQxhB,WAC9B,IAAI1V,EAAAssB,cAAa+B,MAAA,GACjB6I,GACAA,EAAQ9B,gBAAc,IACzB1f,YACA7C,GAAIqkB,EAAQrkB,IAAMqkB,EAAQ9B,eAAeviB,GACzCoB,KAAMijB,EAAQ2Y,WACd27F,eAAe,IAEvB,qGCzVA,IAAAr7G,EAAA9yB,EAAA,OAEa8B,cAAc,SAACu0I,GAA4B,IAAAwC,EAC9C7kI,EAAqB,QAAjB6kI,EAAGxC,EAAQrkE,cAAM,IAAA6mE,OAAA,EAAdA,EAAgBpxI,IAAI,QACjC,OAAIuM,MAAQ8e,EAAA6a,SAAQ1xB,KAAKuX,OAAG,EAAIV,EAAA2H,YAAWzmB,EAAKvQ,MAAO4yI,EAAQ5yI,QACpD,CAAEwQ,UAAU,GAEhB,IACX,EAGAnS,WAAA,SAAgBg3I,EACZzC,GAEA,OAAOA,EAAQ5yI,UAASqvB,EAAA2a,UAAS4oG,EAAQ5yI,MAAO,IAAIwY,MAC9C,CAAE88H,WAAW,GACb,IACV,oFClBA38G,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,oKCDA,IAAAmO,EAAAjQ,EAAA,OAIAg5I,GAFAh5I,EAAA,OAEAA,EAAA,mDAIA8B,yBAgBmC,eAAAm3I,EAAtBC,EAAsBj3I,EAO/B,SAAAi3I,EACoCpwG,EACxB9lC,GAA0B,IAAAm2I,EAAAj3I,EAAAC,KAAA+2I,GADF/2I,KAAA2mC,QACxB3mC,KAAAa,YARIb,KAAAmc,MAAQnc,KAAK2mC,MAAMxqB,MACnBnc,KAAAi3I,WAAUJ,EAAA7hD,gBAAc,GAAAjxF,OACjC2B,SAASC,QAAM5B,QACd/D,KAAKa,UAAUyE,IAAI,wBAtBb,oCAuBRsiC,QAAQ,SAA0B,QAAlBovG,EAAEh3I,KAAK2mC,MAAMxqB,aAAK,IAAA66H,OAAA,EAAhBA,EAAkBtwI,QAKvC,GAACowI,SAVKC,0CAAsB3uI,EAAAC,4BAQnByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAA,kDARlBwuI,EAAsBjuI,UAAA,sBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBAZGoiB,UAAAC,MAAAC,EAAA,wGAAO,2JAAjCtnB,EADJiF,yBAAA,WACIjF,CADI,UACJA,EAAAulB,iBAAA,KAAkDvlB,EAAAkF,yBAClDlF,EAAAkB,oBAAA,WAEIlB,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,WACJlB,EAAAkF,gCAR8BlF,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAA,MAAAxkB,EAAA8S,MAAA,KAAA9S,EAAA8S,MAAA5I,iCAOInL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,MAAA5H,EAAA4tI,QAAA7uI,EAAA05C,6EAK7Bi1F,CAAsB,4NCxBnC,IAAAjpI,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,UAQAA,EAAA,OACAA,EAAA,kFAagBuK,EADJiF,yBAAA,cACIjF,CAD+D,cACrDA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,0BAkBQA,EADJiF,yBAAA,WACIjF,CADmD,cACjCA,EAAAmF,iBAAA,UAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBACrClF,EAAAkB,oBAAA,4BAKJlB,EAAAkF,mDAkBQlF,EAJJiF,yBAAA,WAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAiBvlB,EAAAkF,yBACjBlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,6DAGRnF,EADIkF,wBACJlF,4CAHQA,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAA/C,EAAAZ,KAAApP,MAAAuQ,KAAA,qBAAAzJ,EAAAiM,sBAAA,IAAA/C,EAAAZ,KAAApP,MAAAuQ,KAAAP,EAAAqd,aAAA,+BAQJvmB,EAJJiF,yBAAA,WAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAqBvlB,EAAAkF,yBACrBlF,EAAAkB,oBAAA,yBAOJlB,EAAAkF,kEALQlF,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,OAAAK,EAAAZ,KAAApP,MAAAuQ,KAGAzJ,CAHwB,MAAAkJ,EAAA4F,aAGxB9O,CAFoB,WAAAkJ,EAAA4lI,yCArD5B9uI,EAFRiF,yBAAA,YAEQjF,CAFuD,WAEvDA,CADuB,cACJA,EAAAmF,iBAAA,WAAKnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBACvClF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAOAlB,EAAAiF,yBAAA,eAAAjF,EAAAulB,iBAAA,MAERvlB,EAFiDkF,wBAEjDlF,KACAA,EAAA4J,qBAAA,GAAAmlI,EAAA,cASI/uI,EADJiF,yBAAA,YACIjF,CADuB,YACvBA,EAAAulB,iBAAA,MAAkBvlB,EAAAkF,yBAClBlF,EAAAiF,yBAAA,aAIIjF,EAAAmF,iBAAA,IAKRnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,aAaIjF,EAZA4J,qBAAA,GAAAolI,EAAA,aAYAhvI,CATC,GAAAivI,EAAA,cAuBTjvI,EADIkF,wBACJlF,4CA7DmBA,EAAA6I,qBAAA,YAAAK,EAAAZ,MAcatI,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,OAAAK,EAAA6F,qBAcpB/O,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAZ,KAAAgT,SAAAnN,WAAA,MAAAjF,EAAAZ,KAAAgT,SAAAnN,UAAAjV,MAAA,QAAAgQ,EAAAZ,KAAAgT,SAAAnN,UAAAjV,MAAA,GAAAmU,gBAAA,MAAAnE,EAAAZ,KAAAgT,SAAAnN,WAAA,MAAAjF,EAAAZ,KAAAgT,SAAAnN,UAAAjV,MAAA,QAAAgQ,EAAAZ,KAAAgT,SAAAnN,UAAAjV,MAAA,GAAAiS,MAAA,KASCnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAA7R,MAYAzJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,KAAAgT,SAAA5R,wEAlDjB1J,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAslI,EAAA,gBA+DIlvI,EADJiF,yBAAA,cACIjF,CAD6D,eAC1BA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA8hI,OAAM,GAAlDhrI,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,iFAlEOA,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAZ,gCAqEPtI,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,iCACPnF,EAD4BkF,wBAC5BlF,2CAF6BA,EAAAoF,sBAAApF,EAAA6I,qBAAA,eACtB7I,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAwN,sBAAA,IAAAtE,EAAAgR,WAlFnB3iB,+BAmGyC,eAAA43I,EAA5BC,EAA4B,WA6BjC,OAAA13I,EANJ,SAAA03I,EACqC7wG,EACzB9lC,EACAstB,EACAylC,EACApjD,GAAezQ,EAAAC,KAAAw3I,GAJUx3I,KAAA2mC,QACzB3mC,KAAAa,YACAb,KAAAmuB,cACAnuB,KAAA4zD,cACA5zD,KAAAwQ,UA3BIxQ,KAAAsiB,QAAUtiB,KAAKmuB,YAAY7L,OA4BxC,EAAC,EAAAjhB,IAAA,OAAAiE,IA1BJ,WACI,OAAOtF,KAAKmuB,YAAYzd,IAC5B,GAAC,CAAArP,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAjE,IAAA,sBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,iCAC9B,GAAC,CAAAjE,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAC,MAUM,WACHtB,KAAKmuB,YAAY1G,UACjBznB,KAAK0Q,KAAKe,WAAW,CACjB8E,UAAW,CAACvW,KAAK2mC,MAAMxqB,OACvB1H,QAAMnU,EAAAkG,eAAcE,MACpBqR,aAAWzX,EAAAkG,gBAEnB,GAAC,CAAAnF,IAAA,OAAAC,OAAAiyI,EAAA/xI,EAAAC,IAAAC,KAEM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKmuB,YAAYhF,WAAUhlB,MAAO,SAACnB,GACrC,QAAA1C,EAAAqU,aAAY3R,GACNA,CACV,GAAE,OACEhD,KAAKa,UAAU6oF,SAAS12D,cAAcptB,SAAS,aAC/C5F,KAAKwQ,QAAQK,SAAS,CAAC,QAAS,UAAW,aAAU,EAErDvQ,EAAAs3C,eAAc,6BAElB53C,KAAK4zD,YAAYlsD,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAC5B,SAAAozI,IAAA,OAAAG,EAAA5uI,MAAA3E,KAAA4E,UAAA,MAbA,IAAA2uI,CAaA,CAnDoC,GAmDpCgE,SAnDQC,0CAA4BpvI,EAAAC,4BAwBzByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA6M,kBAAAjN,EAAAC,4BAAAK,EAAAmrD,cAAAzrD,EAAAC,4BAAAO,EAAAuE,QAAA,kDAxBlBqqI,EAA4B1uI,UAAA,4BAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,eA/FpBC,UAAAC,MAAAC,EAAA,8FAsEoDF,UAAAG,MAAAD,EAAA,yFAvDhCF,UAAAI,MAAAF,EAAA,qHAGDF,UAAAM,MAAAJ,EAAA,0GAYRF,UAAAO,MAAAL,EAAA,uFAgBIF,UAAAyoB,MAAAvoB,EAAA,sFAYAF,UAAAugC,MAAArgC,EAAA,qvCA1DxBtnB,EADJiF,yBAAA,WACIjF,CADI,QACJA,EAAAulB,iBAAA,KAAoBvlB,EAAAkF,yBACpBlF,EAAAkB,oBAAA,WACAlB,EAAA4J,qBAAA,EAAAylI,EAAA,8CAGJrvI,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA0lI,EAAA,oDAqEAtvI,EAAA4J,qBAAA,EAAA2lI,EAAA,yBAAAvvI,EAAA2c,yEAzEa3c,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,UAIEla,EAAAoF,oBAAA,GAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAA0/D,qOAyFpC0vE,CAA4B,mJCpHzC35I,EAAA,UAGA6xG,EAAA7xG,EAAA,gEA4CoBuK,EAAAiF,yBAAA,SAA0CjF,EAAAmF,iBAAA,GAAUnF,EAAAkF,kEAAVlF,EAAAoF,sBAAApF,EAAA+L,4BAAAgW,EAAAsC,gCAC1CrkB,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAAi0B,WAAA,+BAEJh2C,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,6DAEJnF,EAAAkF,kEAFIlF,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAA8V,EAAA4E,MAAA,wBAAA3mB,EAAAiM,sBAAA,IAAA8V,EAAAvG,IAAA,4CApBZxb,EAAAiF,yBAAA,WAUIjF,EAAAkB,oBAAA,WAEIlB,EADJiF,yBAAA,UACIjF,CADiB,UAEbA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAKAlF,EAJA4J,qBAAA,EAAA4lI,EAAA,UAIAxvI,CAJ0C,EAAAyvI,EAAA,UAI1CzvI,CAHwD,EAAA0vI,EAAA,WAQhE1vI,EADIkF,wBACJlF,2CArBIA,EAAA29F,qBAAA,4EAAA57E,EAAA+sF,MAAA,IAAA/sF,EAAAgtF,OADA/uG,EAAA6I,qBAAA,KAAAkZ,EAAA3W,QAWQpL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAA5W,MAAA4W,EAAA3W,QAAA2W,EAAA9W,GAAA,KAE0BjL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAsC,MACArkB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAsC,MAAAtC,EAAAi0B,YAGCh2C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA4E,QAnCnDpvB,2BAoEqC,eAAAo4I,EAAxBplF,EAAwB,WAkB7B,OAAA7yD,EAHJ,SAAA6yD,EACsCs5D,EAC1BpiB,GAAiC9pG,EAAAC,KAAA2yD,GADP3yD,KAAAisH,WAC1BjsH,KAAA6pG,WAfI7pG,KAAAqT,GAAKrT,KAAKisH,SAAS54G,GACnBrT,KAAAwT,OAASxT,KAAKisH,SAASz4G,OACvBxT,KAAAuT,KAAOvT,KAAKisH,SAAS14G,KACrBvT,KAAAysB,KAAOzsB,KAAKisH,SAASx/F,KACrBzsB,KAAA+uB,MAAQ/uB,KAAKisH,SAASl9F,MACtB/uB,KAAA4jB,IAAM5jB,KAAKisH,SAASroG,IACpB5jB,KAAA0hC,OAAS1hC,KAAKisH,SAASvqF,OACvB1hC,KAAAo+C,WAAap+C,KAAKisH,SAAS7tE,UASxC,EAAC,EAAA/8C,IAAA,WAAAC,MAEG,WAA0B,IAAAL,EAAAjB,KAAjBg4I,EAAApzI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBozI,EAAQ,IACZhrG,WAAW,WAAK,IAAAirG,EACNpoE,EACuC,QADjCooE,EACRh3I,EAAK4oG,SAAS5B,cAAciwC,qBAAa,IAAAD,OAAA,EAAzCA,EAA2CC,cAC/C,IAAKroE,EAAQ,OAAO5uE,EAAKyD,WAAWszI,GACpC,IAAMryF,IACC2O,SAASub,EAAOnqB,MAAME,IAAK,IAAM,IADlCD,IAEC2O,SAASub,EAAOnqB,MAAMyyF,KAAM,IAAM,IAEzCl3I,EAAKk2G,MAAQxxD,KAAc,GAAM,SAAW,MAC5C1kD,EAAKi2G,MAAQvxD,KAAc,GAAM,QAAU,MAC/C,EAAG,IACP,GAAC,CAAAtkD,IAAA,kBAAAiE,IAED,WACI,MAAO,EACX,IAAC,CArCgC,GAqChCyyI,SArCQplF,0CAAwBvqD,EAAAC,4BAgBrBqnG,EAAAvsC,kBAAgB/6D,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAhBnBv1C,EAAwB7pD,UAAA,wBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,oeAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE7BhB,EAAAkB,oBAAA,WAYAlB,EAAA4J,qBAAA,EAAAomI,EAAA,yBAAAhwI,EAAA2c,yEALI3c,EALA6I,qBAAA,UAAAonI,EAKAjwI,CALwB,cAKxBA,CAJkB,qBAIlBA,CAHsB,qBAGtBA,CAFsB,WAEtBA,CADc,oiBA2DbuqD,CAAwB,gRCnFrC90D,EAAA,WACAwC,EAAAxC,EAAA,OACA8yB,EAAA9yB,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAaAyC,GADAzC,EAAA,OACAA,EAAA,QAUAy6I,GADAz6I,EAAA,OACAA,EAAA,QAGA06I,EAAA16I,EAAA,OACAk0D,EAAAl0D,EAAA,OACA26I,EAAA36I,EAAA,OACAi0D,EAAAj0D,EAAA,OAEAspC,GADAtpC,EAAA,OACAA,EAAA,yEAiBA8B,sBACiC,eAAA84I,EAApBC,EAAoB,SAAA93I,GAqJ7B,SAAA83I,EACYp/H,EACAxY,EACAD,EACA83I,EACAnhI,GAAkB,IAAAvW,EAAAlB,SAAAC,KAAA04I,IAE1Bz3I,EAAAC,EAAAlB,KAAA04I,IANQp/H,SACArY,EAAAH,OACAG,EAAAJ,YACAI,EAAA03I,YACA13I,EAAAuW,UAzJJvW,EAAA23I,QAAU,IAAIx/H,EAAAuB,gBAA0B,IACxC1Z,EAAAsmC,SAAW,IAAInuB,EAAAuB,gBAA6B,IAC5C1Z,EAAA43I,UAAY,IAAIz/H,EAAAuB,gBAA0B,IAC1C1Z,EAAA63I,eAAiB,IAAI1/H,EAAAuB,gBAA0B,IAC/C1Z,EAAA83I,UAAoC,GACpC93I,EAAA+3I,OAAiC,GACjC/3I,EAAAg4I,aAAuC,GAEvCh4I,EAAAi4I,YAAc,IAAI9/H,EAAAuB,gBAA0B,IAEpC1Z,EAAA44C,cACZ54C,EAAKH,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACpD,GAAG,QAAOA,CAAG,MACrBhY,EAAAwxB,WAAU,SAACxZ,GAAG,SACV/X,EAAAuoC,cAAaxwB,EAAI/E,GAAE,sBAAwBvQ,QACvC1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAElD,QAAS,IAAK,GACvC,MAELtW,EAAAkb,KAAI,SAACtY,GAAC,OAAMA,GAAG0T,mBAAmB8nB,MAAQx7B,EAAE0T,QAAU,EAAE,IAAC,EACzDtW,EAAAsyB,aAAY,IAGJzxB,EAAAypD,UAAYzpD,EAAKqY,OAAO9C,MAAM1T,QAC1C1C,EAAAmxB,cAAa,KAAE,EACfnxB,EAAAwxB,WAAU,SAAC69B,GAAG,SACVpvD,EAAAuoC,cAAa6mB,EAAIp8C,GAAI,SAASvQ,QAC1B1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAElD,QAAS,IAAK,MACpCtW,EAAAkb,KAAI,SAAC8W,GAAC,OACDA,GAAG1b,mBAAmB8nB,MAAQpM,EAAE1b,QAAU,IAAI4E,IAC3C,SAAC00E,GAAsB,OACnB,IAAIsoD,EAAAa,KAAItqH,IAAA,GAAMmhE,GAAC,IAAEp8E,KAAM67C,IAAa,EAC3C,GAER,MAELrvD,EAAAkyB,YAAW,SAACzO,GAAC,MAAK,EAAE,MACpBzjB,EAAAsyB,aAAY,IAGRzxB,EAAAm4I,SAAQhgI,EAAA2I,eAAc,CAC1B9gB,EAAKqY,OAAO9C,MACZvV,EAAKqY,OAAO0I,UACblf,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAob,QAAO,SAAAvV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAgB,QAAb6B,EAAA,KAAaA,EAAA,GAATm3F,SAAkC,MAChD7+F,EAAAkb,KAAI,SAAA4G,GAAU,IAAA8lB,EAARynB,EAAQxtC,EAAAC,EAAA,GAAL,GACLjhB,EAAK83I,UAAY,GACjB,IAAMhkH,EAAY9zB,EAAKH,KAAKixB,QAAQ,mBACpC,GAAKgD,EACL,KAAIhD,EAAgD,QAAzCiW,KAAG3nC,EAAA2xB,WAAU+C,EAAW,yBAAiB,IAAAiT,OAAA,EAAtCA,EAAwCjW,QAClD09B,EAAIp8C,IAEH0e,IACL9wB,EAAK4R,aAAY,aAEbkf,EACKG,SACAnf,UAAU,SAACkF,GAAC,OACThX,EAAKo4I,qBAAqBphI,GAAK,GAAI8c,EAAU,IAGzD9zB,EAAK4R,aAAa,kBAAmBkf,EAAQS,QAAM,CACvD,IAGIvxB,EAAAq4I,iBAAgBlgI,EAAA2I,eAAc,CAClC9gB,EAAKsmC,SACLtmC,EAAKqY,OAAO9C,QACb1T,QACC1C,EAAAob,QACI,SAAAoX,GAAA,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAE5vB,EAAC6vB,EAAA,GAAE48B,EAAG58B,EAAA,UACH7vB,EAAEu2I,SAAWv2I,EAAE6O,QAAO8e,EAAA+C,UAAS5Z,KAAKuX,OAAOqE,cAAgB+5B,CAAG,MAEvErvD,EAAAwxB,WAAU,SAAAwB,GAAe,IAAAqV,EAAAxmB,EAAAmR,EAAA,GAAbpwB,EAACylC,EAAA,GAAEjyB,EAAKiyB,EAAA,GAChB,SAAOtB,EAAAxT,eAAc,CACjB/gB,KAAM,OACN0gB,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAWxwB,EAAE6O,MAAQiI,KAAKuX,QACpDoC,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS1wB,EAAE6O,MAAQiI,KAAKuX,QAChD1d,MAAO6C,EAAMnD,IAErB,IAAC,EACDjT,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,SAACgT,GACD50B,EAAK23I,QAAQz2I,KAAK0zB,EAASva,IAAI,SAACtY,GAAC,OAAKA,EAAEkO,QAAQ,IAChDjQ,EAAKi4I,YAAY/2I,KACb0zB,EAASra,OAAO,SAACxY,GAAC,OAAKA,EAAEu1B,UAAU,GAAEjd,IAAI,SAACtY,GAAC,OAAKA,EAAEkO,QAAQ,GAElE,IAAC,EACD9Q,EAAAsyB,aAAY,IAGRzxB,EAAAu4I,iBAAgBpgI,EAAA2I,eAAc,CAClC9gB,EAAKypD,UACLzpD,EAAK23I,QACL33I,EAAK43I,UACL53I,EAAKi4I,YACLj4I,EAAK63I,eACL73I,EAAK44C,cACL54C,EAAKsmC,WACNzkC,QACC1C,EAAAmxB,cAAa,KAAE,EACfnxB,EAAAkb,KAAG,eAAAyY,EAAAvyB,EACC,SAAAiuC,GAAA,IAAAxb,EAAAhS,EAAAwtB,EAAA,GACItb,EAAKF,EAAA,GACLwlH,EAAMxlH,EAAA,GACNylH,EAAQzlH,EAAA,GACRsE,EAAUtE,EAAA,GACV0lH,EAAK1lH,EAAA,GACLmmB,EAAYnmB,EAAA,UAAAxyB,IAAAC,KAAA,SAAAC,KAAA,IAAA6U,GAAA6gB,GAAAC,GAAAoD,GAAA,OAAAj5B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEZlB,SAAK83I,UAAY,GAAG3zI,EAAAjD,KAAA,EACAlB,EAAKqY,OAAO9C,MAAM1T,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAzDuT,GAAKpR,EAAAvB,KAAAwzB,GAAAa,EACoB/D,GAAK/uB,EAAAlD,KAAA,EAAAw4B,GAAAj5B,IAAAC,KAAA,SAAAg5B,KAAA,IAAAiO,GAAAixG,GAAAvmI,GAAA+nC,GAAAy+F,GAAAC,GAAAC,GAAAjhG,GAAAiC,GAAA,OAAAt5C,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAvBkR,IAAuBumI,GAAAtiH,GAAAh2B,OAAvB+R,GAAI+nC,GAAQw+F,GAARx+F,SACPy+F,GAAUJ,EAAOtuG,KAAK,SAAC/Y,IAAC,OAAK/e,KAAO+e,EAAC,GACrC0nH,GAAeJ,EAASvuG,KAAK,SAAC/Y,IAAC,OAAK/e,KAAO+e,EAAC,GAC5C2nH,GAAYJ,EAAMxuG,KAAK,SAAC/Y,IAAC,OAAK/e,KAAO+e,EAAC,GACtC0mB,GACFvgB,EAAW4S,KAAK,SAAC/Y,IAAC,OAAK/e,KAAO+e,EAAC,IAC9BynH,IACG54I,EAAKJ,UAAUyE,IAAG,yBACpBy1C,GAWL,QAXkBpS,MAAGroC,EAAA06C,kBAClB,CACInpC,KAAMiI,KAAKuX,MACXvf,SAAU,GACV2C,QAAMnU,EAAAkG,eACN6rB,SAAU,CACNhf,MACAM,MAAO,CAAC6C,GAAM3C,UAAW2C,GAAMnD,MAGvC+mC,UACH,IAAAzR,QAAA,EAXqBA,GAWnBsS,OACHh6C,EAAK83I,UAAU1lI,IACX+nC,KAAaL,GACN8+F,IAAYC,IAAiBhhG,GAIzBghG,IAAiBhhG,GAElB,OADA,UAJAihG,GACI,gBACA,OAIR,eAAe,wBAAA93I,GAAAwC,OAAA,EAAAi2B,GAAA,GAAArD,GAAA/O,IAAA,WAAAgP,GAAAD,GAAAc,KAAAC,KAAA,CAAAhzB,EAAAjD,KAAA,gBAAAiD,EAAA47C,cAAAtmB,KAAA,iBAAAt1B,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,iBAAAiD,EAAAlD,KAAA,GAAAkD,EAAAi0B,GAAAj0B,EAAAjB,MAAA,GAAAkzB,GAAAxT,EAAAze,EAAAi0B,IAAA,QAAAj0B,SAAAlD,KAAA,GAAAm1B,GAAA8B,IAAA/zB,EAAAg0B,OAAA,YAE7Bn4B,EAAK+4I,aAAa7lH,GAAO,yBAAA/uB,EAAAX,OAAA,EAAA9C,GAAA,sBAnCbF,EAmCa,GAC5B,gBAAAkb,GAAA,OAAAoX,EAAApvB,MAAA3E,KAAA4E,UAAA,EA3CF,KAuDH3D,EAAKs3F,OAAOt3F,CAChB,CAACG,SAAAs3I,EAAA93I,GAAAd,EAAA44I,EAAA,EAAAr3I,IAAA,OAAAC,OAAAu3F,EAAAr3F,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAAJ,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DjD,KAAK2S,WAAW,CACZsnI,gBACoD,IAAhDj6I,KAAKa,UAAUyE,IAAI,2BAE3BtF,KAAK6S,aAAa,WAAY7S,KAAKs5I,cAAcvmI,aACjD/S,KAAK6S,aAAa,OAAQ7S,KAAKo5I,MAAMrmI,aACrC/S,KAAK6S,aAAa,gBAAiB7S,KAAK65C,cAAc9mC,aACtD/S,KAAK6S,aAAa,UAAW7S,KAAKw5I,cAAczmI,aAChD/S,KAAK6S,aACD,QACA7S,KAAK0qD,UAAU33C,UAAU,SAACohB,GAAK,OAAKrvB,EAAKk1I,aAAa7lH,EAAM,IAC9D,wBAAAhuB,EAAA1B,OAAA,EAAAS,EAAAlF,KAAA,IACL,SAAAu4F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,aAAAC,MAEM,SAAW0gB,GACdhiB,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASpvB,YAAe6J,GACzD,GAAC,CAAA3gB,IAAA,uBAAAC,MAEM,SAAA8yB,EAEHW,GAAiB,IAAA7uB,EAAAlG,KADfsB,EAAK8yB,EAAL9yB,MAGI44I,GAAW54I,GAAS,IAAIka,OAC1B,SAACkH,GAAC,OAAM,CAAC,OAAQ,WAAW9c,SAAS8c,EAAEhd,SAAS,GAE9CyuB,GAAS7yB,GAAS,IAAIka,OACxB,SAACkH,GAAC,MACiB,SAAfA,EAAEhd,UACc,YAAfgd,EAAEhd,UAAqC,SAAXgd,EAAE9P,IAAgB,IAE1C5S,KAAKunC,SAASpvB,WAAWtG,MAAQiI,KAAKuX,SAE/Cxf,EAAQ8e,EAAA+C,UAAS5Z,KAAKuX,OAAOqE,YAC5B11B,KAAKunC,SAASpvB,WAAWohI,UAE1Bv5I,KAAK44I,QAAQz2I,KACTgyB,EACK3Y,OAAO,SAACkH,GAAC,MAAoB,YAAfA,EAAEhd,QAAsB,GACtC4V,IAAI,SAACoH,GAAC,OAAKA,EAAElP,QAAUkP,EAAExR,QAAQ,IAE1ClR,KAAKk5I,YAAY/2I,KACbgyB,EACK3Y,OAAO,SAACkH,GAAC,MAAoB,YAAfA,EAAEhd,UAA0Bgd,EAAE6V,UAAU,GACtDjd,IAAI,SAACoH,GAAC,OAAKA,EAAElP,QAAUkP,EAAExR,QAAQ,IAE1ClR,KAAK64I,UAAU12I,KACXgyB,EACK3Y,OAAO,SAACkH,GAAC,OAAKA,EAAEy3H,WAAW,GAC3B7+H,IAAI,SAACoH,GAAC,OAAKA,EAAElP,QAAUkP,EAAExR,QAAQ,IAE1ClR,KAAK84I,eAAe32I,KAChBgyB,EACK3Y,OAAO,SAACkH,GAAC,OAAKA,EAAE03H,aAAa,GAC7B9+H,IAAI,SAACoH,GAAC,OAAKA,EAAElP,QAAUkP,EAAExR,QAAQ,KAG9C,IACwBumB,EADlB0kE,EAAcn8F,KAAKa,UAAUyE,IAAI,uBAAyB,GAAGkyB,EAAAU,EAChD/D,GAAK,IAAxB,IAAAqD,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAA0B,KAAfllB,EAAIukB,EAAAn2B,MACXtB,KAAKg5I,OAAO9lI,EAAKM,QAAUN,EAAKhC,UAAYgC,EAAKmnI,WACjDr6I,KAAKi5I,aAAa/lI,EAAKM,QAAUN,EAAKhC,UAClCirF,EAAYjpF,EAAKkrC,aAAe,EACxC,CAAC,OAAA90B,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACDn5B,KAAKs6I,eAAeJ,EAASnlH,GAC7B/0B,KAAKwD,QAAQ,SAAU,kBAAM0C,EAAKmrE,cAAc,EAAE,IACtD,GAAC,CAAAhwE,IAAA,eAAAC,MAEO,WACJ,IAAM2iB,EAAY,GACZ+uC,EAAUhzD,KAAKa,UAAUyE,IAAI,uBAAyB,GAC5D,QAAWosD,KAAW1xD,KAAK+4I,UAClB/4I,KAAK+4I,UAAUrnF,KACpBztC,EAAS,IAAAlgB,OAAK2tD,IAAa,CACvBjzB,KACIu0B,EAAO,QAAAjvD,OAAS/D,KAAK+4I,UAAUrnF,MAC/BsB,EAAO,GAAAjvD,OAAI/D,KAAK+4I,UAAUrnF,MAC1BI,EAAAmB,gBAAe,GAAAlvD,OAAI/D,KAAK+4I,UAAUrnF,OAG9C1xD,KAAKsZ,OAAOihI,UAAU,QAASt2H,EACnC,GAAC,CAAA5iB,IAAA,iBAAAC,MAEO,SAAe44I,EAAgCnlH,GACnD,IAC4B4J,EADtB3rB,EAAO,GAAGksB,EAAAhH,EACKgiH,GAAO,IAA5B,IAAAh7G,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAA8B,KAAAoiH,EAAAC,EAAnBC,EAAM/7G,EAAAr9B,MACPgkD,EAAIo1F,EAAOp1F,EAAIo1F,EAAOC,UACtBp1F,EAAIm1F,EAAOn1F,EAAIm1F,EAAOE,WAC5B5nI,EAAKimB,KAAK,CACN6yF,SAAQ,gBAAA/nH,OAAkBuhD,EAAC,KAAAvhD,OAAIwhD,GAC/B7/C,SAAU,CACN4/C,EAA0B,QAAvBk1F,EAAAE,EAAOG,wBAAgB,IAAAL,GAAvBA,EAAyB50I,SAAS,SAAW,EAAI0/C,EAAIA,EACxDC,EAA0B,QAAvBk1F,EAAAC,EAAOG,wBAAgB,IAAAJ,GAAvBA,EAAyB70I,SAAS,UAAY,EAAI2/C,EAAIA,GAE7D9+B,QAAS+xH,EAAAsC,2BACTn0H,QAAS,GACTlkB,KAAIosB,IAAA,GAAO6rH,GAAM,IAAEhiI,OAAQqc,KAEnC,CAAC,OAAAzL,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACDn5B,KAAKsZ,OAAOyhI,YAAY,UAAW/nI,EACvC,GAAC,CAAA3R,IAAA,eAAAC,MAEO,SAAa6yB,GAAa,IAINwJ,EAJM72B,EAAA9G,KACxBgT,EAAO,GACP0/C,EAAU,GACV1wC,EAAUhiB,KAAKunC,SAASpvB,WAAWylB,EAAA1F,EACtB/D,GAAK,QAAAiL,EAAA,WAAE,IAAflsB,EAAIyqB,EAAAr8B,MAiBX,GAhBA0R,EAAKimB,KAAK,CACN6yF,SAAQ,cAAA/nH,OAAgBmP,EAAKM,QAAUN,EAAKG,IAC5C3N,SAAUwN,EAAKG,GACfoT,QAASsrC,EAAAY,yBACTC,WAAW,EACXC,UAAU,EACVpwD,KAAM,CACF4Q,GAAIH,EAAKM,QAAUN,EAAKG,GACxBG,OAAQN,EAAKK,KACbA,KAAML,EAAKK,MAAQL,EAAKM,OACxBiZ,KAAM3lB,EAAKkyI,OAAO9lI,EAAKM,SAAWN,EAAKmnI,WACvC34G,OAAQ56B,EAAKiyI,UAAU7lI,EAAKM,QAC5B4qC,WAAYt3C,EAAKmyI,aAAa/lI,EAAKM,SAAW,IAElDmT,QAAS,MAERzT,EAAKkoC,SAAQ,SAClB,IAAI4/F,GAAW,EACTC,EAAO,eAAArrG,EAAApuC,EAAAC,IAAAC,KAAG,SAAAsE,IAAA,IAAAk1I,GAAAC,GAAAC,GAAAC,GAAAloI,GAAAC,EAAAmhB,EAAA+mH,GAAAzpI,GAAAC,GAAA2a,GAAA4jB,GAAA,OAAA5uC,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,UACP64I,EAAQ,CAAAj0I,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,oBACmB,SAA5BwD,EAAKiyI,UAAU7lI,EAAKG,IAAc,CAAAtM,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAC3BhD,EAAAqU,aAAW,GAAA5Q,OACXmP,EAAKK,MAAQ,OAAM,mCACzB,UAGU,QAAX2nI,GAAAhoI,EAAKgoC,cAAM,IAAAggG,KAAXA,GAAal2I,QACZkO,EAAKgoC,OAAOhsB,KAAK,SAAClsB,IAAC,SAAK1C,EAAAkG,eAAc00C,OAAOt1C,SAAS5C,GAAE,GAAC,CAAA+D,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAEnDhD,EAAAqU,aAAW,+BAAA5Q,OACiBmP,EAAKK,KAAI,OAC3C,OAELzM,SAAK6xI,UAAUlxH,UACf3gB,EAAK6xI,UAAUhmI,WAAW,CAAEC,KAAM,SAC9BoP,EAAQnQ,OACR/K,EAAK6xI,UAAUjoI,KAAKe,WAAW,CAC3BI,KAAMmQ,EAAQnQ,OAElB/K,EAAK6xI,UAAUjoI,KAAKe,WAAW,CAC3B+e,UAAWxO,EAAQwO,WAE1BzpB,GAAA5E,KAAA,GACoC2E,EAAKy0I,gBACtCz0I,EAAK6xI,UAAUjoI,KAAKpP,MAAMuQ,KAC1B/K,EAAK6xI,UAAUjoI,KAAKpP,MAAMwQ,SACM,QADEqpI,GACV,QADUC,GAClCt0I,EAAKygC,SAASpvB,kBAAU,IAAAijI,QAAA,EAAxBA,GAA0BI,cAAM,IAAAL,OAChCjoI,GACH,QAAAooI,OALKzpI,IAKLypI,GAAAv0I,GAAAlD,MALKgO,KAAMC,GAAQwpI,GAARxpI,SAMZ2a,IANsBA,GAAI6uH,GAAJ7uH,OAMPzK,EAAQvN,SAAQnU,EAAAkG,eACzB6pC,GAAiB,QAAPgrG,GAAG5uH,UAAI,IAAA4uH,QAAA,EAAJA,GAAM30I,MACzBI,EAAK6xI,UAAUjoI,KAAKe,WAAW,CAC3B8E,UAAW,CAACrD,GACZhC,SAAUgC,EAAKG,GACfC,WAAYJ,EAAKK,KACjB1B,QACAC,SAAUkQ,EAAQwO,QAAU,IAAU1e,GACtC0B,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBkZ,QACA4jB,cACA38B,aAAc,OACdC,MAAOT,EAAKU,KACN,CAAU,QAAVT,GAACD,EAAKU,YAAI,IAAAT,QAAA,EAATA,GAAWU,UAAoB,QAAXT,EAAEF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,IAClC,KACPtM,GAAA5E,KAAA,GACG2E,EAAK6xI,UAAU/nI,cAAazM,MAAO,SAAC0f,IACtCzhB,cAAQO,IAAIkhB,KAAC,EACbvjB,EAAAqU,aAAW,uBAAA5Q,OACgBmP,EAAKK,MAAQL,EAAKG,GAAE,MAAAtP,OACvC8f,GAAEwlC,SAAWxlC,GAAE/d,OAAS+d,KAG1BA,EACV,GAAE,QACF/c,EAAKkyI,OAAO9lI,EAAKM,QACgB,QADT+gB,EACpBvS,EAAQvN,SAAQnU,EAAAkG,sBAAa,IAAA+tB,OAAA,EADNA,EAExBhhB,QACHjT,EAAAs3C,eAAa,4BAAA7zC,OACmBmP,EAAKK,MAAQL,EAAKG,KAChD,yBAAAtM,GAAAtC,OAAA,EAAAuB,EAAA,IACL,kBA/DY,OAAA4pC,EAAAjrC,MAAA3E,KAAA4E,UAAA,KAgEb,CAAC,YAAa,cAAcyjB,QAAQ,SAACyF,GAAK,OACtC4kC,EAAQz5B,KAAK,CACT5lB,GAAIH,EAAKG,GACT0S,OAAQ+H,EACR2tH,SAAU,GACVz1H,SAAU,WACNg1H,GAAW,EACXl0I,EAAKtD,QAAQ,UAAW,kBAAOw3I,GAAW,CAAK,EACnD,GACF,GAEN,CAAC,UAAW,YAAY3yH,QAAQ,SAACyF,GAAK,OAClC4kC,EAAQz5B,KAAK,CACT5lB,GAAIH,EAAKG,GACT0S,OAAQ+H,EACR2tH,SAAU,GACVz1H,SAAUi1H,GACZ,EAEV,EAtGA,IAAAr9G,EAAAtV,MAAAqV,EAAAC,EAAAzF,KAAAC,MAAAgH,GAsGC,OAAA9V,GAAAsU,EAAA/Z,EAAAyF,EAAA,SAAAsU,EAAAzE,GAAA,CACDn5B,KAAKsZ,OAAOoiI,WACR,QACA17I,KAAKunC,SAASpvB,WAAW8hI,eAAiBvnF,EAAU,IAExD1yD,KAAKsZ,OAAOyhI,YAAY,QAAS/nI,GACjChT,KAAKwD,QAAQ,SAAU,kBAAMsD,EAAKuqE,cAAc,EAAE,IACtD,GAAC,CAAAhwE,IAAA,kBAAAC,MAAA,eAAAq6I,EAAAn6I,EAEO,SACJqQ,EACAC,GAAgB,IAAA4tC,EAAA1/C,KAChByU,EAAA7P,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACAytB,EAAAztB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KAAI,OAAAnD,IAAAC,KAAA,SAAAmF,IAAA,IAAA4lB,EAAAmvH,EAAAhkI,EAAAlB,EAAA,OAAAjV,IAAAO,KAAA,SAAAg+C,GAAA,cAAAA,EAAA99C,KAAA89C,EAAA79C,MAAA,OAEN,GAAXsqB,EAAO,MACLizB,EAAK7+C,UAAUyE,IAAI,gCAA+B,CAAA06C,EAAA79C,KAAA,SAC9Cy5I,YAAQjrH,EAAA+C,aACV/C,EAAAoQ,SACIjnB,KAAKuX,MACLquB,EAAK7+C,UAAUyE,IAAI,+BAAiC,KAGtDsS,EAAM8nC,EAAKloC,QAAQzC,KAAKwjI,EAAAsD,0BAA2B,CACrDp5I,KAAM,CAAEoP,OAAMC,WAAU8pI,QAAOnnI,OAAM4d,cACvC2tB,EAAA79C,KAAA,EACoByV,EAAII,cAAc/U,YAAW,OAAtC,GAAPyT,EAAOspC,EAAAn8C,KACD,CAAAm8C,EAAA79C,KAAA,aAAQ,iBAAgB,OACpC0P,EAAO6E,EAAQ7E,KACfC,EAAW4E,EAAQ5E,SACnB2a,EAAO/V,EAAQ+V,KAAK,eAAAuzB,EAAA18C,OAAA,SAEjB,CAAEuO,OAAMC,WAAU2a,SAAM,yBAAAuzB,EAAAv7C,OAAA,EAAAoC,EAAA,EAnBVpF,EAmBU,GAClC,gBAAA85I,EAAAjiH,EAAAQ,GAAA,OAAA6hH,EAAAh3I,MAAA3E,KAAA4E,UAAA,EA1BA,MAzNA,IAAAi0F,CAmPA,CAjZ4B,CAAQv4F,EAAA6H,cAAYswI,SAAxCC,0CAAmBtwI,EAAA4U,mBAAA1U,EAAAu9G,qBAAAz9G,EAAA4U,mBAAAxU,EAAAC,qBAAAL,EAAA4U,mBAAAtU,EAAAH,iBAAAH,EAAA4U,mBAAApU,EAAAmI,oBAAA3I,EAAA4U,mBAAAoH,EAAA9L,WAAA,qDAAnBogI,EAAmBz7H,QAAnBy7H,EAAmBx7H,YAAnBw7H,CAAoB,iQCtDjC76I,EAAA,UACAwC,EAAAxC,EAAA,OACA8yB,EAAA9yB,EAAA,OAGAyC,EAAAzC,EAAA,OACA6xG,EAAA7xG,EAAA,wGA0DwBuK,EAJJiF,yBAAA,SAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAgBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GAC7BnF,EAAAkF,kEAD6BlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAA+vH,IAAA,+BAWzB1zI,EAPJiF,yBAAA,SAOIjF,CADH,WACGA,EAAAulB,iBAAA,KAAyBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GACtCnF,EAAAkF,kEADsClF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAgwH,aAAA,+BAGlC3zI,EADJiF,yBAAA,SACIjF,CAD4C,WAC5CA,EAAAulB,iBAAA,KAAevlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GAC5BnF,EAAAkF,kEAD4BlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAiwH,GAAA,+BAGxB5zI,EADJiF,yBAAA,SACIjF,CADkD,WAClDA,EAAAulB,iBAAA,KAAiBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GAC9BnF,EAAAkF,kEAD8BlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAkwH,KAAA,+BAM1B7zI,EAJJiF,yBAAA,SAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAqBvlB,EAAAkF,yBACrBlF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAse,EAAAU,KAAA,KAAAV,EAAAU,KAAAlZ,QAAA,MAAAwY,EAAAU,KAAA,KAAAV,EAAAU,KAAAy8F,WAAAn9F,EAAAm9F,SAAA,+BAGA9gH,EADJiF,yBAAA,SACIjF,CADkD,WAClDA,EAAAulB,iBAAA,KAAiBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GAC9BnF,EAAAkF,kEAD8BlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAU,KAAA7Z,KAAA,mEAtCtCxK,EAAAiF,yBAAA,YAGIjF,EAAA4I,qBAAA,wBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAcua,EAAArkB,QAAO,GAErBU,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,EAAAkqI,EAAA,YAMG9zI,EAAHiF,yBAAA,MAAGjF,CAAA,WAAAA,EAAAulB,iBAAA,KAAqBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,GAAenF,EAAAkF,yBAC7ClF,EAAHiF,yBAAA,MAAGjF,CAAA,WAAAA,EAAAulB,iBAAA,MAAsBvlB,EAAAkF,yBAASlF,EAAAmF,iBAAA,IAAenF,EAAAkF,yBAuBjDlF,EAtBA4J,qBAAA,GAAAmqI,EAAA,WAsBA/zI,CAhBC,GAAAg0I,EAAA,WAgBDh0I,CAbgD,GAAAi0I,EAAA,WAahDj0I,CAVsD,GAAAk0I,EAAA,WAUtDl0I,CAJC,GAAAm0I,EAAA,YAQTn0I,EADIkF,wBACJlF,6CAhCaA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAA+vH,MAAA/vH,EAAAywH,YAAA52I,SAAA,QAI4BwC,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAA0wH,SAAA,KACCr0I,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAA2hG,UAAA,IAG7BtlH,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAgwH,eAAAhwH,EAAAywH,YAAA52I,SAAA,iBAOEwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAiwH,KAAAjwH,EAAAywH,YAAA52I,SAAA,OAGEwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAkwH,OAAAlwH,EAAAywH,YAAA52I,SAAA,SAKJwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAm9F,WAAAn9F,EAAAywH,YAAA52I,SAAA,aAKIwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAU,OAAAV,EAAAywH,YAAA52I,SAAA,UArE7B,IAAM82I,EAAQ,GAEd/8I,6BAgGwC,eAAAg9I,EAA3B7B,EAA2B,SAAAl6I,GAwDpC,SAAAk6I,EACsC7uB,EAC1BprH,EACAgpG,GAAiC,IAAA+yC,EAAA37I,EAAAlB,SAAAC,KAAA86I,IAEzC75I,EAAAC,EAAAlB,KAAA86I,IAJkC7uB,WAC1BhrH,EAAAJ,YACAI,EAAA4oG,WAzDL5oG,EAAAioH,SAAW,GAEFjoH,EAAAwrB,KAAOxrB,EAAKgrH,SAASx/F,KAErBxrB,EAAA66I,IAAM76I,EAAKgrH,SAAS6vB,IAEpB76I,EAAA86I,aAAe96I,EAAKgrH,SAAS8vB,aAE7B96I,EAAA+6I,GAAK/6I,EAAKgrH,SAAS+vB,GAEnB/6I,EAAAg7I,KAAOh7I,EAAKgrH,SAASgwB,KAErBh7I,EAAAw7I,SAAiC,QAAzBG,EAAG37I,EAAKgrH,SAASwwB,gBAAQ,IAAAG,OAAA,EAAtBA,EAAwB/nF,QAAQ,GAE3C5zD,EAAA47I,SAAW57I,EAAKgrH,SAAS4wB,UAAY57I,EAAK67I,eAEnD77I,EAAA2lB,KAAO,EAAE3lB,CA4ChB,CAACG,SAAA05I,EAAAl6I,GAAAd,EAAAg7I,EAAA,EAAAz5I,IAAA,cAAAiE,IA1CD,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,mCAAqCo3I,CACnE,GAEA,CAAAr7I,IAAA,YAAAiE,IACA,WACI,SAAOqrB,EAAAq9F,qBAAqD,KAAhChuH,KAAKisH,SAASyB,WAAa,GAAW,CAC9DqvB,WAAW,GAEnB,GAKA,CAAA17I,IAAA,WAAAiE,IACA,WACI,OAAgC,IAAzBtF,KAAKisH,SAASwwB,SAAiBz8I,KAAK4mB,IAC/C,GAAC,CAAAvlB,IAAA,WAAAiE,IAED,WACI,OAAO0yB,KAAK8qB,OACRnyB,EAAA+H,qBACqC,KAAhC14B,KAAKisH,SAASyB,WAAa,GAC5B,IAAI5zG,MAGhB,GAAC,CAAAzY,IAAA,iBAAAiE,IAED,WACI,OAAOtF,KAAK0kG,SAAW,GACjB,UACA1kG,KAAK0kG,SAAW,GAChB,UACA,SACV,GAAC,CAAArjG,IAAA,WAAAC,MAUM,WAA0B,IAAAwD,EAAA9E,KAAjBg4I,EAAApzI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBozI,EAAQ,IACZhrG,WAAW,WAAK,IAAAgwG,EACNntE,EACuC,QADjCmtE,EACRl4I,EAAK+kG,SAAS5B,cAAciwC,qBAAa,IAAA8E,OAAA,EAAzCA,EAA2C9E,cAC/C,IAAKroE,EAAQ,OAAO/qE,EAAKJ,WAAWszI,GACpC,IAAMryF,IACC2O,SAASub,EAAOnqB,MAAME,IAAK,IAAM,IADlCD,IAEC2O,SAASub,EAAOnqB,MAAMyyF,KAAM,IAAM,IAEzCrzI,EAAKqyG,MAAQxxD,KAAc,GAAM,SAAW,MAC5C7gD,EAAKoyG,MAAQvxD,KAAc,GAAM,MAAQ,QACzC7gD,EAAK+N,aACD,OACA/N,EAAKmnH,SAAShC,MAAMl3G,UAAU,SAAC/P,GAAC,OAAM8B,EAAK8hB,KAAO5jB,CAAC,GAE3D,EAAG,IACP,GAAC,CAAA3B,IAAA,WAAAC,OAAA27I,EAAAz7I,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAqzB,EAAAte,EAAA,OAAAjV,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACCnC,KAAKkpH,SAAQ,CAAAjnH,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAC8C,GAAzD0xB,KAAM30B,EAAA2xB,WAAUhyB,KAAKisH,SAASvzG,OAAQ,oBACpC,CAAAzW,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACR,OAAAtD,KAAKkpH,SAAW,aAAajnH,EAAAE,KAAA,EACP6yB,EACjBC,QAAQ,qBAAsB,CAACj1B,KAAK87I,MAAK33I,MACnC,SAACnB,GAAC,OAAK,IAAI,GAAC,OACvBhD,KAAKkpH,UAHCxyG,EAAOzU,EAAA4B,OAIE6S,EAAQ2kC,YAAc3kC,EAAQ2kC,YAAc,GAAG,yBAAAp5C,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjE,SAAAk9I,IAAA,OAAAD,EAAAt4I,MAAA3E,KAAA4E,UAAA,MAZA,IAAAq4I,CAYA,CA7FmC,CAAQ38I,EAAA6H,cAAYw0I,SAA/C7B,0CAA0B1yI,EAAAC,4BAyDvBqnG,EAAAvsC,kBAAgB/6D,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAzDnB4yC,EAA0BhyI,UAAA,gCAAAC,SAAA,CAAAX,EAAAY,sCAAA0V,MAAA9M,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mDArDJoiB,UAAAC,MAAAC,EAAA,0FACAF,UAAAG,MAAAD,EAAA,2FAHCF,UAAAI,MAAAF,EAAA,qFAWAF,UAAAM,MAAAJ,EAAA,8FAGAF,UAAAO,MAAAL,EAAA,oFAGAF,UAAAyoB,MAAAvoB,EAAA,sFAMAF,UAAAugC,MAAArgC,EAAA,yFAIAF,UAAAwgC,MAAAtgC,EAAA,k9BAxD5BtnB,EATAkB,oBAAA,WASAlB,CALO,WAKPA,CADO,cAOPA,EAAAiF,yBAAA,YAOIjF,EAAA4I,qBAAA,wBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAcnI,EAAA6zI,WAAU,GAE3B90I,EAAAkF,yBAEDlF,EAAA4J,qBAAA,EAAAmrI,EAAA,0BAAA/0I,EAAA2c,2EAvBI3c,EAAAg1I,qBAAA,WAAA/zI,EAAAg0I,SAAA,aAAAh0I,EAAAg0I,SAAA,MAUAj1I,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,mBAAAjwD,EAAAwzI,UAIAz0I,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,UAAAqsI,EAIAl1I,CAJ0B,cAI1BA,CAHkB,YAAAiB,EAAA6tG,MAGlB9uG,CAFmB,YAAAiB,EAAA8tG,MAEnB/uG,CADmB,0aAyElB0yI,CAA2B,4KCvHxCj9I,EAAA,UACAK,EAAAL,EAAA,OAEA0/I,EAAA1/I,EAAA,UACAA,EAAA,+DAsCgBuK,EAVJiF,yBAAA,UAUIjF,CADH,UAC2BA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACvClF,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGRnF,EADIkF,wBACJlF,2CAZIA,EAAA29F,qBAAA,4EAAAz0F,EAAA4lG,MAAA,IAAA5lG,EAAA6lG,OADA/uG,EAAA6I,qBAAA,KAAAK,EAAAkC,QAQwBpL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAuoD,KAAAtmD,MAEpBnL,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAhO,EAAAksI,aAAA,sBAAAlsI,EAAAuoD,KAAAllC,QAAA3vB,QAAA,QA/BpBrF,iCAuC2C,eAAA89I,EAA9BngF,EAA8B,WAUnC,OAAAx9D,EAJJ,SAAAw9D,EACsC2uD,EAC1BpiB,EACAryF,GAAkBzX,EAAAC,KAAAs9D,GAFQt9D,KAAAisH,WAC1BjsH,KAAA6pG,WACA7pG,KAAAwX,UARLxX,KAAA65D,KAAmB75D,KAAKisH,SAASpyD,KACjC75D,KAAAw9I,aAAuBx9I,KAAKisH,SAASuxB,YAQzC,EAAC,EAAAn8I,IAAA,WAAAC,MAEG,WAA0B,IAAAL,EAAAjB,KAAjBg4I,EAAApzI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBozI,EAAQ,IACZhrG,WAAW,WAAK,IAAAirG,EACNpoE,EACuC,QADjCooE,EACRh3I,EAAK4oG,SAAS5B,cAAciwC,qBAAa,IAAAD,OAAA,EAAzCA,EAA2CC,cAC/C,IAAKroE,EAAQ,OAAO5uE,EAAKyD,WAAWszI,GACpC,IAAMryF,IACC2O,SAASub,EAAOnqB,MAAME,IAAK,IAAM,IADlCD,IAEC2O,SAASub,EAAOnqB,MAAMyyF,KAAM,IAAM,IAEzCl3I,EAAKk2G,MAAQxxD,KAAc,GAAM,SAAW,MAC5C1kD,EAAKi2G,MAAQvxD,KAAc,GAAM,QAAU,MAC/C,EAAG,IACP,GAAC,CAAAtkD,IAAA,gBAAAC,MAEM,WACHtB,KAAKwX,QAAQzC,KAAKwoI,EAAAG,gCAAiC,CAC/Cj7I,KAAIosB,EAAA,GAAO7uB,KAAKisH,WAExB,IAAC,CA/BsC,GA+BtCwxB,SA/BQngF,0CAA8Bl1D,EAAAC,4BAO3BnK,EAAAilE,kBAAgB/6D,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAC,EAAAgQ,WAAA,kDAPnBglD,EAA8Bx0D,UAAA,+BAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,iTAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCApCnChB,EAAAiF,yBAAA,cAEIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAs0I,gBAAe,GAExBv1I,EAAAkB,oBAAA,WAUJlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA4rI,EAAA,yBAAAx1I,EAAA2c,2EATQ3c,EAAAoF,sBAKApF,EALA6I,qBAAA,UAAA4sI,EAKAz1I,CALwB,cAKxBA,CAJkB,qBAIlBA,CAHsB,qBAGtBA,CAFsB,WAEtBA,CADc,yDA0BjBk1D,CAA8B,0JCnD3C,IAAAxvD,EAAAjQ,EAAA,UACAA,EAAA,4DAWA8B,kCAe4C,eAAAm+I,EAA/BJ,EAA+B59I,EAOxC,SAAA49I,EAA6C/2G,GAA0B5mC,EAAAC,KAAA09I,GAA1B19I,KAAA2mC,QAN7B3mC,KAAA65D,KAAO75D,KAAK2mC,MAAMkzB,KAClB75D,KAAA20B,QAAU30B,KAAK2mC,MAAMhS,QAAQ0K,OAAO,SAAC/jB,EAAKq0C,GACtDr0C,SAAIq0C,EAAEt8C,IAAM,OACLiI,CACX,EAAG,GAEuE,GAACwiI,SAPlEJ,0CAA+Bt1I,EAAAC,4BAOpByF,EAAAg5B,iBAAe,kDAP1B42G,EAA+B50I,UAAA,gCAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kJAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAXhChB,EADJiF,yBAAA,WACIjF,CADI,UAC4BA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBAE3ClF,EADJiF,yBAAA,aACIjF,CADwC,cAC9BA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,mBACJlB,EAAAkF,gCAPoClF,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAwwD,KAAAtmD,MAMnBnL,EAAAoF,oBAAA,GAAcpF,EAAd6I,qBAAA,OAAA5H,EAAAwwD,KAAczxD,CAAD,cAAAiB,EAAAsrB,+FAKzB+oH,CAA+B,0NC3B5C7/I,EAAA,OACAA,EAAA,OADA,IAEAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,MACAub,EAAAvb,EAAA,OACAwC,EAAAxC,EAAA,OAEAo/D,GADAp/D,EAAA,MACAA,EAAA,QACAi0D,EAAAj0D,EAAA,4DAEA8B,wBAGmC,eAAAo+I,EAAtBC,EAAsB,SAAAp9I,GAwF/B,SAAAo9I,EACYntH,EACA41F,EACA3lH,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAg+I,IAElC/8I,EAAAC,EAAAlB,KAAAg+I,IALQntH,WACA5vB,EAAAwlH,WACAxlH,EAAAH,OACAG,EAAAJ,YA3FJI,EAAAwgC,QAAU,IAAIroB,EAAAuB,gBAAgB,IACtB1Z,EAAA2zB,SAAW3zB,EAAK4vB,SAAS+tC,kBACzB39D,EAAAygC,UAAStoB,EAAA2I,eAAc,CACnC9gB,EAAKwlH,SAASjwG,MACdvV,EAAKwlH,SAASzkG,QACd/gB,EAAKH,KAAK2W,kBACX3U,QACC1C,EAAAkb,KAAI,SAAArV,GAAyB,IAAA6B,EAAAma,EAAAhc,EAAA,GAAvBwpD,EAAG3nD,EAAA,GACL,IAAK2nD,GADa3nD,EAAA,GAATm3F,UACc,MAAO,GAC9B,IAAMtqC,EAAS1zD,EAAKH,KAAKixB,QAAQ,mBACjC,IAAK4iC,EAAQ,SAAOv7C,EAAAQ,IAAG,IACvB,IAAImY,KAAU1xB,EAAA2xB,WAAU2iC,EAAQ,kBAAkB5iC,QAAQ09B,EAAIp8C,IAC9DpS,EAAK4R,aAAY,aAEbkf,EACKG,SACAnf,UAAU,SAACtQ,GAAI,IAAAw7I,EAAA,OACZh9I,EAAKwgC,QAAQt/B,MACL,MAAJM,GAAW,QAAPw7I,EAAJx7I,EAAMnB,aAAK,IAAA28I,OAAA,EAAXA,EAAaziI,OACT,SAACxY,GAAC,MAAoB,WAAfA,EAAE0C,QAAqB,KAC7B,GACR,IAGbzE,EAAK4R,aAAa,kBAAmBkf,EAAQS,OACjD,IAGYvxB,EAAAi9I,iBAAgB9kI,EAAA2I,eAAc,CAC1C9gB,EAAKwlH,SAASjwG,MACdvV,EAAK4vB,SAASwqC,eACdp6D,EAAK2zB,SACL3zB,EAAKwgC,UACN3+B,QACC1C,EAAAkb,KAAI,SAAA4G,GAAyC,IAAAC,EAAAF,EAAAC,EAAA,GAAvCutC,EAAGttC,EAAA,GAAE84C,EAAY94C,EAAA,GAAEwS,EAAOxS,EAAA,GAAEuf,EAAMvf,EAAA,GACpC,IAAKstC,EAAK,MAAO,GACjB,IAQwBn4B,EARlBvuB,EAAW,GACXo1I,EAAa,GACbnrF,EAAU/xD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtD84I,KAAQ99I,EAAAqvC,QACVsrB,EACKz/C,OAAO,SAACxY,GAAC,OAAKA,EAAEwyB,WAAai6B,EAAIp8C,EAAE,GACnCiI,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,IACtBgkB,EAAAa,EACiBkmH,GAAK,QAAA1jH,EAAA,WAAE,IAGWjD,EAH1BoiC,EAAIviC,EAAAh2B,MACL+8I,EAAe1pH,EAAQnZ,OAAO,SAACxY,IAAC,OAAKA,GAAEu9C,UAAYsZ,CAAI,GACzD2jF,EAAe,EAAEhmH,EAAAU,EACAmmH,GAAY,QAAAj/G,EAAA,WAAE,IAAxB9J,GAAMmC,EAAAn2B,MACPm4I,EAAS/3G,EAAOxS,KAClB,SAAClsB,GAAC,OAAKA,EAAEuyB,YAAcD,GAAOjiB,IAAMrQ,EAAEs7I,SAAS,GAEnDd,GAAgB/D,EAAS,EAAI,CACjC,EALA,IAAAjiH,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAAgH,GAKC,OAAA9V,IAAAkO,EAAA3T,EAAAyF,GAAA,SAAAkO,EAAA2B,GAAA,CACD,IAAMolH,GAAYtjF,EAAa/rC,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOwmD,CAAI,GACxD9wD,EAASkwB,KAAK,CACVvzB,SAAU64I,GAAU/qI,OACpBiT,QAASw2C,EAAAK,+BACT1K,WAAW,EACXC,UAAU,EACVlsC,QAAS,GACTlkB,KAAM,CACFo3D,KAAM0kF,GACN5pH,UACA6oH,eACAgB,aAAcH,EAAar5I,OAC3B0T,OAAQzX,EAAKH,KAAKixB,QAAQ,sBAGlC,IAAM0sH,GAAiBjB,EAAea,EAAar5I,OAC7C1D,GACFm9I,GAAiB,GACX,OACAA,GAAiB,GACjB,UACA,OACVN,EAAU,IAAAp6I,OAAKw6I,GAAU/qI,SAAY,CACjCirB,KACIu0B,EAAO,WAAAjvD,OAAYzC,MACnB0xD,EAAO,GAAAjvD,OAAIzC,MACXwwD,EAAAmB,gBAAe,GAAAlvD,OAAIzC,KAE/B,EArCA,IAAA+1B,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAqCC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACDl4B,EAAKwlH,SAAS8zB,UAAU,UAAW4D,GACnCl9I,EAAKwlH,SAASs0B,YAAY,UAAWhyI,EACzC,IAUA9H,EAAK4R,aACD,QACA5R,EAAKwlH,SAASjwG,MACT1T,QAAK1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,IACtB+P,UAAU,SAACyD,GAAK,OAAKvV,EAAK4vB,SAAS6+B,SAASl5C,EAAMnD,GAAG,IAE9DpS,EAAK4R,aAAa,SAAU5R,EAAKygC,OAAO3uB,aACxC9R,EAAK4R,aAAa,gBAAiB5R,EAAKi9I,cAAcnrI,aAAa9R,CACvE,CAACG,SAAA48I,EAAAp9I,GAAAd,EAAAk+I,EAAA,CAvG8B,CAAQ19I,EAAA6H,cAAY41I,SAA1CC,0CAAqB51I,EAAA4U,mBAAA1U,EAAAyxB,gBAAA3xB,EAAA4U,mBAAAxU,EAAAq9G,qBAAAz9G,EAAA4U,mBAAAtU,EAAAD,qBAAAL,EAAA4U,mBAAApU,EAAAL,iBAAA,qDAArBy1I,EAAqB/gI,QAArB+gI,EAAqB9gI,UAAAC,WAFlB,SAEH6gI,CAAsB,qPCbnCngJ,EAAA,WACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,SAEAA,EAAA,OACAA,EAAA,iIAoBoBuK,EAAAiF,yBAAA,kBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAytI,GAEAt2I,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAixI,EAAAjpI,cAAAipI,EAAAnrI,KAAA,mEAVRnL,EARJiF,yBAAA,qBAQIjF,CADH,gDAKOA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAoE,YAAAvE,GAAmB,GAEpC/I,EAAA4J,qBAAA,EAAA2sI,EAAA,kDAORv2I,EADIkF,wBACJlF,6CAVQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAuE,WAIoBzN,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwE,sCAqBpB1N,EAAAiF,yBAAA,kBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAA2tI,GAEAx2I,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAmxI,EAAAnpI,cAAAmpI,EAAArrI,KAAA,mEAlBZnL,EAAAiF,yBAAA,oDAQIjF,EAAAiF,yBAAA,gDAIIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA0Z,GAAA,IAAAxZ,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAo+C,SAAAv+C,GAAgB,GAEjC/I,EAAA4J,qBAAA,EAAA6sI,EAAA,kDAORz2I,EADIkF,wBACJlF,uJAVQA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAkF,QAIoBpO,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwQ,UAzCxCniB,6BA8DwC,eAAAm/I,EAA3BC,EAA2B,SAAAn+I,GAyBpC,SAAAm+I,EACYj+I,EACAwY,EACA9I,EACAyiC,GAAsB,IAAAhyC,EAAAlB,SAAAC,KAAA++I,IAE9B99I,EAAAC,EAAAlB,KAAA++I,IALQj+I,OACAG,EAAAqY,SACArY,EAAAuP,UACAvP,EAAAgyC,SA3BIhyC,EAAA6U,UAAY7U,EAAKH,KAAKuuD,iBAEtBpuD,EAAA4U,SAAW5U,EAAKH,KAAK2W,gBAErBxW,EAAA6gB,OAAS7gB,EAAKH,KAAK07D,cAEnBv7D,EAAAuV,MAAQvV,EAAKqY,OAAO9C,MAEpBvV,EAAAyuD,SAAW,SAACD,GACxBxuD,EAAKqY,OAAOyhI,YAAY,WAAY,IACpC95I,EAAKuC,QACD,YACA,kBACIvC,EAAKuP,QAAQK,SAAS,GAAI,CACtBmuI,WAAY/9I,EAAKgyC,OACjBgsG,YAAa,CAAErrI,KAAM67C,EAAIp8C,KAC3B,EACN,IAER,EAEgBpS,EAAAyU,YAAc,SAAC0C,GAAG,OAAMnX,EAAKH,KAAK+U,SAAWuC,CAAG,EAAEnX,CASlE,CAACG,SAAA29I,EAAAn+I,GAAAd,EAAAi/I,EAAA,EAAA19I,IAAA,WAAAC,OAAAC,EAAAC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAmD,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DjD,KAAK6S,aACD,cACA7S,KAAKizC,OAAOU,cAAc5gC,UAAU,SAAC6gC,GAAM,OACvCA,EAAO/G,IAAI,QACL/nC,EAAKwU,OAAOo2C,SAAS9b,EAAOtuC,IAAI,SAChC,EAAE,IAEd,wBAAArD,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACL,SAAA0E,IAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,MAZA,IAAArD,CAYA,CA5CmC,CAAQjB,EAAA6H,cAAY22I,SAA/CC,0CAA0B32I,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAq9G,qBAAAz9G,EAAAC,4BAAAK,EAAAyE,QAAA/E,EAAAC,4BAAAK,EAAA2sC,gBAAA,kDAA1B0pG,EAA0Bj2I,UAAA,2BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,0ZAjDNoiB,UAAAC,MAAAC,EAAA,0RAsBAF,UAAAG,MAAAD,EAAA,oKAhCzBtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAktI,EAAA,sDAsBA92I,EAAA4J,qBAAA,EAAAmtI,EAAA,sDAsBJ/2I,EAAAkF,gCAvCSlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAyiD,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAAyM,YAAA,KAAA49C,EAAA1uD,QAAA,GAsBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,cAAA89C,EAAA3mD,EAAAwN,sBAAA,IAAAvM,EAAAyY,SAAA,KAAAitC,EAAA/pD,mYA+BJ+5I,CAA2B,qQCrExClhJ,EAAA,WACAwC,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,MAGAyC,EAAAzC,EAAA,OAMA0X,EAAA1X,EAAA,OAGA63C,GADA73C,EAAA,MACAA,EAAA,QACAuhJ,EAAAvhJ,EAAA,OAEA2M,GADA3M,EAAA,OACAA,EAAA,QAEAi0D,GADAj0D,EAAA,OACAA,EAAA,QACAwhJ,EAAAxhJ,EAAA,OACAyhJ,EAAAzhJ,EAAA,OACA0hJ,EAAA1hJ,EAAA,OACA2hJ,EAAA3hJ,EAAA,UACAA,EAAA,4SAuBgBuK,EADJiF,yBAAA,UACIjF,CADyD,sDAKrDA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAW,IAAA,IAAAT,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAAmuI,YAAAtuI,IAAmB,GACvC/I,EAAAkF,yBACDlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,KACJvlB,EAD8CkF,wBAC9ClF,iDAJQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,mBAAA8M,EAAA3V,EAAAwN,sBAAA,IAAAtE,EAAA0Q,WAAA,MAAAjE,EAAAopC,SAAAppC,EAAAopC,QAAAvhD,SAAA,wCAVZwC,EAAAiF,yBAAA,WAKIjF,EAAAkB,oBAAA,0BACAlB,EAAA4J,qBAAA,EAAA0tI,EAAA,aASJt3I,EAAAkF,mEAT8ClF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,GAAAquI,yCAgB1Cv3I,EAAAiF,yBAAA,WAIIjF,EAAAkB,oBAAA,YAIAlB,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,GACzBnF,EADsCkF,wBACtClF,8BAHQA,EAAAoF,sBAAApF,EAAAkxD,sBAAA,mBAAAsmF,GAAA,IAEiBx3I,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAyrI,GAAA,iCATzBx3I,EALJiF,yBAAA,WAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAAwCvlB,EAAAkF,yBACxClF,EAAA4J,qBAAA,EAAA6tI,EAAA,cAUJz3I,EAAAkF,mEARyBlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,GAAAqqF,SAtCjC,IAAM+gD,GAAQ,GAEd/8I,0BAmEqC,eAAAmgJ,GAAxBC,GAAwB,SAAAn/I,IA+CjC,SAAAm/I,EACYzmI,EACA0mI,GACAC,GACAC,GACApvH,GACAD,GACAoiB,GACAziC,GACA8Q,GACAxgB,GACAD,GACAqnB,GACAi4H,IAAwB,IAAAl/I,GAAAlB,SAAAC,KAAA+/I,IAEhC9+I,GAAAC,EAAAlB,KAAA+/I,IAdQzmI,SACArY,GAAA++I,MACA/+I,GAAAg/I,UACAh/I,GAAAi/I,UACAj/I,GAAA6vB,YACA7vB,GAAA4vB,YACA5vB,GAAAgyC,UACAhyC,GAAAuP,WACAvP,GAAAqgB,WACArgB,GAAAH,QACAG,GAAAJ,aACAI,GAAAinB,eACAjnB,GAAAk/I,SA1DIl/I,GAAAyM,IAAMzM,GAAKqY,OAAOqnC,QAElB1/C,GAAA4lB,OAAS5lB,GAAKqY,OAAO8mI,WAErBn/I,GAAAo/I,UAAYp/I,GAAKqY,OAAOgnI,cAExBr/I,GAAA8H,SAAW9H,GAAKqY,OAAO2J,aAEvBhiB,GAAAyxD,QAAUzxD,GAAKqY,OAAOinI,YAEtBt/I,GAAAmlH,OAASnlH,GAAKqY,OAAOknI,WAErBv/I,GAAA+gB,QAAU/gB,GAAKqY,OAAO0I,QAEtB/gB,GAAAooD,QAAUpoD,GAAKqY,OAAO+vC,QAEtBpoD,GAAA0R,WAAa,SAAC4P,IAAC,OAAKthB,GAAKqY,OAAO3G,WAAW4P,GAAE,EAEtDthB,GAAAw9G,OAAS,GAwBAx9G,GAAA0lH,iBACZ1lH,GAAKk/I,MAAMttD,WAAW5xF,EAkB1B,CAACG,SAAA2+I,EAAAn/I,IAAAd,EAAAigJ,EAAA,EAAA1+I,IAAA,cAAAC,OAAAm/I,EAAAj/I,EAAAC,IAAAC,KAzCM,SAAAC,GAAkBmL,IAAgB,IAAA4zI,GAAA1+H,GAAAmlC,GAAA,OAAA1lD,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACfnC,KAAKgiB,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAtD+e,GAAO/f,GAAA4B,KACPsjD,GAAWr6C,IAEI,QAAf4zI,GAAA1+H,GAAQmlC,eAAO,IAAAu5F,QAAA,EAAfA,GAAiBllI,OACb,SAACxY,IAAC,MAAW,UAANA,IAAuB,YAANA,EAAe,KACtC,MAHL1C,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAAMJ,GAAQmlC,SAAW,IAAE,CAAG,QAAS,aAInDnnD,KAAK2S,WAAW,CAAEw0C,aAAW,wBAAAllD,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IAChC,SAAAy/I,GAAA9iI,IAAA,OAAA8jI,EAAA97I,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,cAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,0BAChC,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,yBAChC,GAAC,CAAAjE,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAAyBo3I,EACvD,GAAC,CAAAr7I,IAAA,WAAAC,MAAA,eAAAC,EAAAC,EAAAC,IAAAC,KAuBM,SAAAsE,KAAA,IAAAlB,GAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OACH,OAAAnC,KAAKsZ,OAAOyiC,QAAQ51C,GAAAhE,KAAA,EACdnC,KAAKshB,QAAQze,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAChEjD,KAAKy/I,aAAY,GACjBz/I,KAAK6S,aAAa,eAAgB7S,KAAK8wB,SAASjE,gBAChD7sB,KAAK6S,aACD,cACA7S,KAAKizC,OAAOU,cAAc5gC,UAAS,eAAA9M,GAAAzE,EAAAC,IAAAC,KAAC,SAAAwD,GAAO0uC,IAAM,IAAAnnB,GAAA,OAAAhrB,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAML,IALpCyxC,GAAO/G,IAAI,UAAY+G,GAAO/G,IAAI,UAClC/nC,GAAKwU,OAAOo2C,SACR9b,GAAOtuC,IAAI,UAAYsuC,GAAOtuC,IAAI,SAG1CR,GAAKwU,OAAOyhI,YAAY,WAAY,KAChCnnG,GAAO/G,IAAI,SAAQ,CAAAznC,GAAAjD,KAAA,QACnB2C,GAAK67I,YAAY/sG,GAAOtuC,IAAI,UAAUF,GAAAjD,KAAA,oBAC/ByxC,GAAO/G,IAAI,QAAO,CAAAznC,GAAAjD,KAAA,SACqB,IAA1CsqB,GAAO3nB,GAAKjE,UAAUS,MAAM,iBACnBsyC,GAAOtuC,IAAI,UAAYmnB,GAAK/lB,MAAK,CAAAtB,GAAAjD,KAAA,SAC1CsqB,UAAO,KAAKrnB,GAAAjD,KAAA,MACCoT,EAAAqrI,WAAUhtG,GAAOtuC,IAAI,SAASrC,YAAW,QAAtDwpB,GAAIrnB,GAAAvB,KAAA,WAEH4oB,GAAI,CAAArnB,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,YACEhD,EAAAqU,aAAW,8BAAA5Q,OACgB6vC,GAAOtuC,IAAI,WAC5C,QACLR,GAAK+7I,WACDp0H,cAAgB+R,MAAQ/R,GAAK,GAAKA,IACrCtoB,MAAO,SAACnB,KACL,EAAA1C,EAAAqU,aAAW,oBAAA5Q,OAAqB6vC,GAAOtuC,IAAI,UAC3CR,GAAK0L,QAAQK,SAAS,GAAI,CACtBmuI,WAAYl6I,GAAKmuC,OACjBgsG,YAAa,IAErB,GAAG75I,GAAAjD,KAAA,iBACIyxC,GAAO/G,IAAI,UAClB/nC,GAAKg8I,eACDltG,GAAOtuC,IAAI,UACXsuC,GAAOtuC,IAAI,SAGfR,GAAKtB,QAAQ,kBAAmB,WAC5BsB,GAAKwU,OAAOyhI,YAAY,WAAY,GACxC,GACH,yBAAA31I,GAAAX,OAAA,EAAAS,GAAA,IACJ,gBAAAo0B,IAAA,OAAArzB,GAAAtB,MAAA3E,KAAA4E,UAAA,EAtCkC,KAuCrC,wBAAAuB,GAAA1B,OAAA,EAAAuB,GAAAhG,KAAA,IACL,gBAAA0E,KAAA,OAAAnD,EAAAoD,MAAA3E,KAAA4E,UAAA,EAtEA,IAsEA,CAAAvD,IAAA,aAAAC,MAEM,SAAWslB,IACd5mB,KAAKsZ,OAAOynI,aAAan6H,GAAM5mB,KAAKsZ,OAAO+mI,UAAU9tF,OACzD,GAAC,CAAAlxD,IAAA,eAAAC,MAEM,SAAaixD,IAChBvyD,KAAKsZ,OAAOynI,aAAa/gJ,KAAKsZ,OAAO+mI,UAAUz5H,KAAM2rC,GACzD,GAAC,CAAAlxD,IAAA,iBAAAC,MAEO,SAAe+R,IAAqB,IAAAnN,GAAAlG,KAATuT,GAAI3O,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,GAChCo8I,GAAkB3tI,GAAGzN,SAAS,KAC9B2+E,GAAQlxE,GAAG1M,MAAM,KACjBwU,GAAe,CACjB2wG,SAAQ,UAAA/nH,OAAYsP,IACpB3N,SAAUs7I,GACJ,CAAE17F,EAAG8N,WAAWmxB,GAAM,IAAKh/B,EAAG6N,WAAWmxB,GAAM,KAC/ClxE,GACNoT,QAASivB,EAAAhvB,gBACTC,QAAS,GACTlkB,KAAM,CAAE4mD,QAAS91C,KAErBvT,KAAKy+G,OAASprG,GACdrT,KAAKwD,QAAQ,kBAAmB,kBAC5B0C,GAAKoT,OAAOyhI,YAAY,WAAY,CAAC5/H,IAAS,EAEtD,GAAC,CAAA9Z,IAAA,cAAAC,MAAA,eAAA2/I,EAAAz/I,EAAAC,IAAAC,KAEO,SAAAmF,GAAkBwM,IAAU,IAAAgiB,GAAAlZ,GAAAhB,GAAArU,GAAA9G,KAAA,OAAAyB,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,OAAA4E,UAAA5E,KAAA,EACZnC,KAAKkoB,YAAYgB,UAAU7V,IAAG,OAAvC,GAAL8I,GAAKpV,GAAAlD,KACD,CAAAkD,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAAShD,EAAAqU,aAAY,kCAAgC,OAC/D3U,KAAKsZ,OAAOo2C,SAA2C,QAAnCr6B,GAACr1B,KAAKc,KAAKmuB,YAAY9S,GAAMxI,cAAM,IAAA0hB,QAAA,EAAlCA,GAAoChiB,IACnD8H,GAAe,CACjB2wG,SAAQ,UAAA/nH,OAAYoY,GAAM9I,IAC1B3N,SAAUyW,GAAM3I,OAChBiT,QAASivB,EAAAhvB,gBACTC,QAAS,GACTlkB,KAAM,CACF4mD,QAAO,GAAAtlD,OAAKoY,GAAM1G,cAAgB0G,GAAM5I,KAAI,cAGpDvT,KAAKwD,QAAQ,kBAAmB,kBAC5BsD,GAAKwS,OAAOyhI,YAAY,WAAY,CAAC5/H,IAAS,GAChD,wBAAApU,GAAAtC,OAAA,EAAAoC,GAAA7G,KAAA,IACL,gBAAA2gJ,GAAA7mH,IAAA,OAAAmnH,EAAAt8I,MAAA3E,KAAA4E,UAAA,EAlBA,IAkBA,CAAAvD,IAAA,aAAAC,MAAA,eAAA4/I,EAAA1/I,EAAAC,IAAAC,KAEO,SAAAi+C,GAAiBlzB,IAAU,IAAA00H,GAAAC,GAAAC,GAAArsH,GAAAwwD,GAAA87D,GAAAzG,GAAA1/H,GAAAukC,GAAA1/C,KAAA,OAAAyB,IAAAO,KAAA,SAAAg+C,IAAA,cAAAA,GAAA99C,KAAA89C,GAAA79C,MAAA,OACiC,GAA5Dk/I,GAAsBrhJ,KAAKc,KAAKixB,QAAQ,qBACzB,CAAAiuB,GAAA79C,KAAA,aACT,uDAAsD,OAChE,MAA8B,iBAAnBk/I,KACPA,GAAiB,CACbtsH,UAAWssH,GACXzsF,OAAQ,mBACR6mF,SAAU,KAGZzmH,MAAM30B,EAAA2xB,WAAUqvH,GAAetsH,UAAWssH,GAAezsF,QAAO5U,GAAA79C,KAAA,EAE5D6yB,GAAIC,QAAQ,cAAe,CAC7BxI,GAAK/lB,MACL+lB,GAAKy8F,UAAYz8F,GAAKpZ,KACxB,OAMJ,IAVImyE,GAASxlC,GAAAn8C,KAKbyX,IAAI,SAAC8W,IAAC,OAAK,IAAI7c,EAAAgsI,YAAYnvH,GAAE,IACrB5V,KACN,SAACyW,GAAG3U,IAAC,OACD+iI,GAAe5F,SAASzxE,QAAQ/2C,GAAErgB,MAClCyuI,GAAe5F,SAASzxE,QAAQ1rD,GAAE1L,KAAK,GAEjC,MAAT4yE,OAAWxgF,OAAM,CAAAg7C,GAAA79C,KAAA,cACZ,kCAAiC,QAE3CnC,KAAKsZ,OAAOo2C,SAAqD,QAA7CyxF,GAACnhJ,KAAKc,KAAKmuB,YAAY,CAAa,QAAbmyH,GAAC57D,GAAU,UAAE,IAAA47D,QAAA,EAAZA,GAAc5qI,eAAO,IAAA2qI,QAAA,EAA5CA,GAA8C9tI,IAC7DiuI,GAAW97D,GAAU,GAAG7/B,SACtBk1F,GAAqBr1D,GAAU,GAA/Bq1D,iBACF1/H,GAAe,CACjB2wG,SAAQ,UAAA/nH,OAAY0oB,GAAKpZ,IACzB3N,SAC0B,aAAtB8/E,GAAU,GAAG5yE,KACP,CACI0yC,EAAmB,MAAhBu1F,OAAkBj1I,SAAS,SACxB,EAAI07I,GAAIh8F,EACRg8F,GAAIh8F,EACVC,EAAmB,MAAhBs1F,OAAkBj1I,SAAS,UACxB,EAAI07I,GAAI/7F,EACR+7F,GAAI/7F,GAEd+7F,GACV76H,QAC0B,aAAtB++D,GAAU,GAAG5yE,KACPwsI,EAAArxB,mBACAr4E,EAAAhvB,gBACVC,QAAS,GACTlkB,KAAM,CACF4mD,QAAO,GAAAtlD,OAAK0oB,GAAKlZ,KAAI,YACrB8vG,OAAQ79B,GAAU,GAAGi3D,SACrB/uB,UAAWloC,GAAU,GAAGkoC,YAGhC1tH,KAAKwD,QAAQ,kBAAmB,WAC5Bk8C,GAAKpmC,OAAOyhI,YAAY,WAAY,CAAC5/H,IACzC,GAAG,yBAAA6kC,GAAAv7C,OAAA,EAAAk7C,GAAA3/C,KAAA,IACN,gBAAA6gJ,GAAA5/F,IAAA,OAAAigG,EAAAv8I,MAAA3E,KAAA4E,UAAA,EA1DA,MA7FA,IAAA67I,CAuJA,CAtNgC,CAAQngJ,EAAA6H,cAAY23I,UAA5CC,4CAAuB33I,EAAAC,4BAAAC,EAAAu9G,qBAAAz9G,EAAAC,4BAAAG,EAAAg5I,sBAAAp5I,EAAAC,4BAAAK,EAAAgwI,qBAAAtwI,EAAAC,4BAAAO,EAAA64I,qBAAAr5I,EAAAC,4BAAA+b,EAAAs9H,uBAAAt5I,EAAAC,4BAAAgc,EAAA25H,uBAAA51I,EAAAC,4BAAAkc,EAAA8wB,gBAAAjtC,EAAAC,4BAAAkc,EAAApX,QAAA/E,EAAAC,4BAAAoc,EAAAN,eAAA/b,EAAAC,4BAAAuqG,EAAAnqG,qBAAAL,EAAAC,4BAAAwmI,EAAAtmI,iBAAAH,EAAAC,4BAAAymI,EAAA5jI,WAAA9C,EAAAC,4BAAA2mI,EAAAprE,mBAAA,mDAAvBm8E,GAAuBj3I,UAAA,uBAAAC,SAAA,CAAAX,EAAAknB,6BATrB,CACPgwH,EAAA5G,oBACA5mF,EAAA0vF,qBACAnC,EAAAoC,oBACAlC,EAAAmC,sBACAlC,EAAAxB,sBACAxzI,EAAAU,YACH9C,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,GAAAkE,OAAA,kBAxCgDoiB,UAAAC,MAAAC,EAAA,sFAQPF,UAAAG,MAAAD,EAAA,wgCA9BtCtnB,EAAAkB,oBAAA,6KASAlB,EAAA4J,qBAAA,EAAA2vI,EAAA,2CAgBAv5I,EAAA4J,qBAAA,EAAA4vI,EAAA,oBAlBIx5I,EANA6I,qBAAA,MAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAqE,KAMAtF,CANmB,SAAAA,EAAAwN,sBAAA,KAAAvM,EAAAwd,QAMnBze,CALyB,WAAAA,EAAAwN,sBAAA,KAAAvM,EAAAN,UAKzBX,CAJ6B,UAAAA,EAAAwN,sBAAA,KAAAvM,EAAAqpD,SAI7BtqD,CAH2B,SAAAA,EAAAwN,sBAAA,KAAAvM,EAAA+8G,QAG3Bh+G,CAFyB,QAAAiB,EAAAo1G,OAEzBr2G,CADgB,UAAAA,EAAAuJ,0BAAA,GAAAC,IAIfxJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAs9G,mBAiBAv+G,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAw4I,aAAAx4I,EAAAsyF,OAAA32F,yUAqCA+6I,EAAwB,sJCjGrCliJ,EAAA,MACAA,EAAA,OADA,IAEAK,EAAAL,EAAA,gEAkCoBuK,EAJJiF,yBAAA,UAIIjF,CADH,WAIOA,EAAAmF,iBAAA,oBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,2CAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA0c,EAAA28B,cAAA,aA9BxBnnD,8BAiDwC,eAAAmiJ,EAA3BC,EAA2B,WAkBhC,OAAAjiJ,EAJJ,SAAAiiJ,EACsCp7G,EAC1BkjE,EACAhpG,GAA0Bd,EAAAC,KAAA+hJ,GAFA/hJ,KAAA2mC,QAC1B3mC,KAAA6pG,WACA7pG,KAAAa,YAhBIb,KAAA0hC,OACZ1hC,KAAK2mC,MAAM0U,cAAgBr7C,KAAK2mC,MAAMla,KAChC,WACAzsB,KAAK2mC,MAAMjF,OACL1hC,KAAAysB,KAAOzsB,KAAK2mC,MAAMla,KAClBzsB,KAAAuT,KAAOvT,KAAK2mC,MAAMpzB,KAClBvT,KAAAwT,OAASxT,KAAK2mC,MAAMnzB,OACpBxT,KAAA8mD,aAAe9mD,KAAK2mC,MAAMmgB,YAUvC,EAAC,EAAAzlD,IAAA,eAAAiE,IARJ,WACI,OAAOtF,KAAKa,UAAU6oF,SAAS12D,cAAcptB,SAAS,YAC1D,IAAC,CAZmC,GAYnCk8I,SAZQC,0CAA2B35I,EAAAC,4BAexBnK,EAAAilE,kBAAgB/6D,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAC,EAAAC,iBAAA,kDAfnBw5I,EAA2Bj5I,UAAA,2BAAAG,MAAA,EAAAC,KAAA,GAAAkE,OAAA,2pBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9ChChB,EAAAiF,yBAAA,WASIjF,EAAAkB,oBAAA,WAGQlB,EAFRiF,yBAAA,UAEQjF,CAFoB,UAEpBA,CADmD,WACpBA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBACzClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,EAAAgwI,EAAA,aAcR55I,EADIkF,wBACJlF,UAxBIA,EALAiX,sBAAA,qBAAAhW,EAAAq4B,OAKAt5B,CALqC,+BAAAiB,EAAAq4B,OAKrCt5B,CAJ+C,2BAAAiB,EAAAq4B,OAI/Ct5B,CAH2C,qCAAAiB,EAAAq4B,OAG3Ct5B,CAFqD,uBAAAiB,EAAAq4B,OAErDt5B,CADuC,iCAAAiB,EAAAq4B,QAMAt5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAkK,MAE3BnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAq4B,OAAA,KAKHt5B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA44I,cAAA54I,EAAAy9C,+TA2BRi7F,CAA2B,kRC5DxClkJ,EAAA,WACAyC,EAAAzC,EAAA,OASAwC,EAAAxC,EAAA,OACA8yB,EAAA9yB,EAAA,OASAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAGAspC,GADAtpC,EAAA,OACAA,EAAA,QAEAi0D,GADAj0D,EAAA,OACAA,EAAA,QAEA06I,GADA16I,EAAA,OACAA,EAAA,QACAqkJ,EAAArkJ,EAAA,UACAA,EAAA,gFAwBA8B,wBACmC,eAAAwiJ,EAAtBT,EAAsB,SAAA9gJ,GAqG/B,SAAA8gJ,EACY5gJ,EACAwY,EACAzY,EACA83I,EACA7nH,EACAtZ,GAAkB,IAAAvW,EAAAlB,SAAAC,KAAA0hJ,IAE1BzgJ,EAAAC,EAAAlB,KAAA0hJ,IAPQ5gJ,OACAG,EAAAqY,SACArY,EAAAJ,YACAI,EAAA03I,YACA13I,EAAA6vB,WACA7vB,EAAAuW,UA1GJvW,EAAAsmC,SAAW,IAAInuB,EAAAuB,gBAAgC,IAC/C1Z,EAAA8vB,MAAQ,IAAI3X,EAAAuB,gBAAwB,GAE5B1Z,EAAA+gB,QAAU/gB,EAAKsmC,SAASzsB,eACjC7Z,EAAAmhJ,QAAkC,KAGzBnhJ,EAAA6gB,OAAS7gB,EAAKH,KAAK07D,cAAc15D,QAC7C1C,EAAAkb,KAAI,SAACq0C,GAAC,OAAKA,EAAEn0C,OAAO,SAACxY,GAAC,OAAKA,EAAEghD,KAAKp+C,SAAS,UAAU,EAAC,IAI1C3E,EAAA6yB,UAAS1a,EAAA2I,eAAc,CACnC9gB,EAAKH,KAAK2W,gBACVxW,EAAKsmC,SACLtmC,EAAK8vB,MACL9vB,EAAKqY,OAAO0I,UACblf,QACC1C,EAAAwxB,WAAU,SAAA3rB,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAEmS,EAAGtQ,EAAA,GAAE9E,EAAC8E,EAAA,GAAiB,OAAAA,EAAA,GAATm3F,WACtBA,EACM7lF,EAAAQ,IAAG,KAAE,EACLutB,EAAAxT,eAAc,CACVL,gBAAc3C,EAAA4C,gBACV5C,EAAA0H,eAAcr1B,EAAE6O,MAAQiI,KAAKuX,QAEjCoC,cAAY9C,EAAA4C,gBACR5C,EAAA0X,aAAYrlC,EAAE6O,MAAQiI,KAAKuX,QAE/Bze,KAAM,UACNe,MAAOyE,GAAK/E,IACd,MAEZjT,EAAAsyB,aAAY,IAGAzxB,EAAAohJ,eAAcjpI,EAAA2I,eAAc,CAAC9gB,EAAKsmC,WAAWzkC,QACzD1C,EAAAwxB,WAAU,SAAA1P,GAAA,IAAA8lB,EAAEhlC,EAAFif,EAAAC,EAAA,GAAG,YACTilB,EAAAxT,eAAc,CACVL,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAWxwB,EAAE6O,MAAQiI,KAAKuX,QACpDoC,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAAS1wB,EAAE6O,MAAQiI,KAAKuX,QAChDze,KAAM,UACNlM,MAAO1D,GAAGypB,OAAqB,QAAjBub,KAAI1nC,EAAAkG,sBAAa,IAAAwhC,OAAA,EAAbA,EAAethC,QACnC,MAENtG,EAAAsyB,aAAY,IAIAzxB,EAAAib,OAAqCjb,EAAK6gB,OAAOhf,QAC7D1C,EAAAwxB,WAAU,SAAC5uB,GAAC,SACRoW,EAAA0zB,UACI9pC,EAAEsY,IAAI,SAACq0C,GAAC,SACJtvD,EAAAuoC,cAAa+mB,EAAEt8C,GAAI,kBAAkBvQ,QACjC1C,EAAAkb,KAAI,SAACrD,GAAC,OACDA,EAAEvB,mBAAmB8nB,MAAQvmB,EAAEvB,QAAU,IAAI4E,IAC1C,SAACgN,GAAC,OAAAuG,IAAA,GAAWvG,GAAC,IAAEkgB,QAASmnB,EAAEt8C,IAAE,EAChC,GAER,GAER,MAELjT,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAmyB,SAAQzvB,EAAE,MACrB5C,EAAAsyB,aAAY,IAGAzxB,EAAAqhJ,iBAAgBlpI,EAAA2I,eAAc,CAC1C9gB,EAAKib,OACLjb,EAAKqY,OAAO9C,QACb1T,QACC1C,EAAAkb,KAAI,SAAAsX,GAAA,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAUpc,EAAKqc,EAAA,UAAPA,EAAA,GAAoBrX,OAAO,SAACxY,GAAC,OAAKA,EAAEwlC,UAAYhyB,EAAMnD,EAAE,EAAC,IAGjEpS,EAAA+3I,OAAiC,GACjC/3I,EAAAshJ,eAAyC,GAGjCthJ,EAAAwZ,oBAAmBrB,EAAA2I,eAAc,CAC7C9gB,EAAK6yB,OACL7yB,EAAKqhJ,cACLrhJ,EAAK6vB,SAAShZ,QACfhV,QACC1C,EAAAkb,KAAI,SAAA8X,GAA4B,IAAAqV,EAAAxmB,EAAAmR,EAAA,GAA1BU,EAAM2U,EAAA,GAAEvsB,EAAMusB,EAAA,GAAE3wB,EAAK2wB,EAAA,GACjBnG,EAAYpmB,EAAOV,OAAO,SAACxY,GAC7B,IAAM8qB,EAAQgG,EAAO5E,KAAK,SAACrL,IAAC,OAAKA,GAAE3S,WAAalO,EAAEqQ,EAAE,GAC9CmvI,GAAW,GAAAz+I,OACb+pB,GAAOuiB,YAAcrtC,EAAEq4C,aAAe,IACvCroB,cACGvG,GAAO3U,EAAMoX,KACf,SAACozE,IAAC,OAAKA,GAAE57F,MAAMssB,gBAAkBwvH,GAASxvH,aAAa,GAE3D/xB,SAAK+3I,OAAOh2I,EAAEqQ,IAAMmvI,GACpBvhJ,EAAKshJ,eAAev/I,EAAEqQ,IAAMoZ,IAAMq6B,mBAAgB7hD,GAC1Cu9I,EACZ,GACAvhJ,SAAKwhJ,qBAAqBvmI,EAAQomB,GAC3BA,CACX,IAYArhC,EAAK4R,aAAa,SAAU5R,EAAKwZ,iBAAiB1H,aAClD9R,EAAK0R,WAAW,CACZsnI,gBACsD,IAAlDh5I,EAAKJ,UAAUyE,IAAI,6BACxBrE,CACP,CAACG,SAAAsgJ,EAAA9gJ,GAAAd,EAAA4hJ,EAAA,EAAArgJ,IAAA,eAAAC,MAEM,WAAY,IAAAwD,EAAA9E,KACf,OAAAA,KAAK42B,SAAS,OAAQ,kBAAM9xB,EAAKisB,MAAM5uB,KAAK2X,KAAKuX,MAAM,EAAE,KACzDrxB,KAAK+wB,MAAM5uB,KAAK2X,KAAKuX,OACd,kBAAMvsB,EAAK20B,aAAa,CACnC,GAAC,CAAAp4B,IAAA,cAAAC,MAEM,WACHtB,KAAK05B,cAAc,OACvB,GAAC,CAAAr4B,IAAA,aAAAC,MAEM,SAAW0gB,GACdhiB,KAAKunC,SAASplC,KAAI0sB,IAAA,GAAM7uB,KAAKunC,SAASpvB,YAAe6J,GACzD,GAAC,CAAA3gB,IAAA,uBAAAC,OAAAohJ,EAAAlhJ,EAAAC,IAAAC,KAEO,SAAAwD,EACJgX,EACAomB,GAAyB,IAAAzb,EAAA9d,EAAA2pD,EAAAM,EAAAhxC,EAAAoxB,EAAAoyB,EAAAE,EAAAruC,EAAAC,GAAAoD,GAAAx0B,EAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAEnB0kB,SAAS,GACT9d,EAAW,GACX2pD,EAAU,GACVM,EAAUhzD,KAAKa,UAAUyE,IAAI,uBAAyB,GACtD0c,EAAUhiB,KAAKunC,SAASpvB,WAAUhS,GAAAhE,KAAA,EACXnC,KAAK8wB,SAASsiB,eACtCtwC,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,OAFVmwC,SAAcjtC,GAAAtC,KAAAsC,GAAAhE,KAAA,GAGcnC,KAAK8wB,SAAS00C,oBAC3C1iE,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,QAFVuiE,SAAmBr/D,GAAAtC,KAAAsC,GAAAhE,KAAA,GAGEnC,KAAK8wB,SAAS40C,aACpC5iE,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,QAFVyiE,EAAYv/D,GAAAtC,KAAAwzB,EAAAa,EAGEhc,GAAM/V,GAAAjE,KAAA,GAAAw4B,GAAAj5B,IAAAC,KAAA,SAAAg5B,KAAA,IAAAve,EAAA6+H,EAAAt5G,GAAAu5G,GAAA,OAAAx5I,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAqBnB,GArBIga,EAAKmb,GAAAh2B,MACN05I,IAAa14G,EAAUpT,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAO8I,EAAM9I,EAAE,GACpDquB,GAASs5G,EAAW,OAAS,OACnCn0H,EAAM,IAAA9iB,OAAKoY,EAAM3I,SAAY,CACzBirB,KACIu0B,EAAO,WAAAjvD,OAAY29B,MACnBsxB,EAAO,GAAAjvD,OAAI29B,MACXowB,EAAAmB,gBAAe,GAAAlvD,OAAI29B,KACvBmgD,QAAS,IAEb94E,EAASkwB,KAAK,CACVvzB,SAAQ,GAAA3B,OAAKoY,EAAM3I,QACnBiT,QAASy7H,EAAAH,4BACTp7H,QAAS,GACTgwF,OAAO,EACPl0G,KAAIosB,IAAA,GACG1S,GAAK,IACRsQ,KAAMvmB,EAAK8yI,OAAO78H,EAAM9I,IACxByzC,aAAc5gD,EAAKq8I,eAAepmI,EAAM9I,IACxCquB,cAGHs5G,EAAQ,CAAA51I,GAAAjD,KAAA,eAAAiD,GAAA9B,OAAA,mBACP23I,GAAO,eAAAlnH,GAAAvyB,EAAAC,IAAAC,KAAG,SAAAC,KAAA,IAAAghJ,GAAAC,GAAAC,GAAAxH,GAAAyH,GAAAC,GAAAC,GAAAC,GAAAC,GAAArxI,GAAAC,GAAA2a,GAAA4jB,GAAAof,GAAA,OAAAhuD,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,WACR+D,EAAKk8I,QAAO,CAAAngJ,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,SAAS4C,EAAKk8I,QAAQjmI,IAAM,WACxCqpD,EAAmB,CAAAvjE,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YACZhD,EAAAqU,aAAW,uDAAA5Q,QAEA,QAAVi/I,GAAA7mI,EAAMvI,YAAI,IAAAovI,QAAA,EAAVA,GAAYvtI,gBAA0B,QAAdwtI,GAAI9mI,EAAMvI,YAAI,IAAAqvI,QAAA,EAAVA,GAAY1vI,MAC5C,OACH,WAED6/B,EAAc,CAAAnxC,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YACPhD,EAAAqU,aAAW,8CAAA5Q,OAEVoY,EAAM5I,MAAQ4I,EAAM9I,GACxB,QACH,UAEW,MAAZqyD,MAAcx2C,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAO8I,EAAM9I,EAAE,GAAC,CAAApR,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YACrChD,EAAAqU,aAAW,mEAEjB,UAEU,SAAX+sB,GAAiB,CAAAz/B,GAAAE,KAAA,gBAAAF,GAAAqB,OAAA,YACVhD,EAAAqU,aAAW,GAAA5Q,OAEVoY,EAAM5I,MAAQ,gBAClB,mCACH,WAGW,QAAZovI,GAAAxmI,EAAM++B,cAAM,IAAAynG,KAAZA,GAAc39I,QACbmX,EAAM++B,OAAOhsB,KAAK,SAAClsB,IAAC,SAAK1C,EAAAkG,eAAc00C,OAAOt1C,SAAS5C,GAAE,GAAC,CAAAf,GAAAE,KAAA,gBAAAF,GAAAqB,OAAA,YAEpDhD,EAAAqU,aAAW,+BAAA5Q,OACiBoY,EAAM5I,KAAI,OAC5C,QAELrN,SAAKyyI,UAAUlxH,UACfvhB,EAAKyyI,UAAUhmI,WAAW,CAAEC,KAAM,YAC9BoP,EAAQnQ,OACR3L,EAAKyyI,UAAUjoI,KAAKe,WAAW,CAC3BI,KAAMmQ,EAAQnQ,OAElB3L,EAAKyyI,UAAUjoI,KAAKe,WAAW,CAC3B+e,UAAWxO,EAAQwO,WAE1BvuB,GAAAE,KAAA,GACoC+D,EAAKq1I,gBACtCr1I,EAAKyyI,UAAUjoI,KAAKpP,MAAMuQ,KAC1B3L,EAAKyyI,UAAUjoI,KAAKpP,MAAMwQ,SACM,QADE8wI,GACV,QADUC,GAClC38I,EAAKqhC,SAASpvB,kBAAU,IAAA0qI,QAAA,EAAxBA,GAA0BrH,cAAM,IAAAoH,OAChCzmI,GACH,QAAA+mI,OALKrxI,IAKLqxI,GAAAjhJ,GAAA4B,MALKgO,KAAMC,GAAQoxI,GAARpxI,SAMZ2a,IANsBA,GAAIy2H,GAAJz2H,OAMPzK,EAAQvN,SAAQnU,EAAAkG,eACzB6pC,GAAiB,QAAPgrG,GAAG5uH,UAAI,IAAA4uH,QAAA,EAAJA,GAAM30I,MACnB+oD,GAAMvpD,EAAKoT,OAAO6pI,aACxBj9I,EAAKyyI,UAAUjoI,KAAKe,WAAW,CAC3B8E,UAAW,CAAC4F,GACZjL,SAAUiL,EAAM9I,GAChBC,WAAY6I,EAAM5I,KAClB1B,QACAC,SAAUkQ,EAAQwO,QAAU,IAAU1e,GACtC0B,OAAQ2I,GAAO3I,QAAU2I,GAAO9I,GAChCI,YAAa0I,EAAM5I,KACnBkZ,QACA4jB,cACA38B,aAAc,UACdC,MAAOwI,EAAMvI,KACP,CAAW,QAAXkvI,GAAC3mI,EAAMvI,YAAI,IAAAkvI,QAAA,EAAVA,GAAYjvI,UAAqB,QAAZkvI,GAAE5mI,EAAMvI,YAAI,IAAAmvI,QAAA,EAAVA,GAAY1vI,IACpC,CAACo8C,GAAI57C,UAAW47C,GAAIp8C,MAC3BpR,GAAAE,KAAA,GACG+D,EAAKyyI,UAAU/nI,cAAazM,MAAO,SAAC0f,IACtC,KAAU,mBAANA,KAAM,EACVvjB,EAAAqU,aAAW,gCAAA5Q,OAEHoY,EAAM5I,MAAQ4I,EAAM9I,GACxB,MAAAtP,OAAK8f,GAAEwlC,SAAWxlC,GAAE/d,OAAS+d,KAE3BA,EACV,GAAE,SACF,EAAAvjB,EAAAs3C,eAAa,qCAAA7zC,OAELoY,EAAM5I,MAAQ4I,EAAM9I,KAE1B,yBAAApR,GAAAwC,OAAA,EAAA9C,GAAA,IACL,kBApFY,OAAAoyB,GAAApvB,MAAA3E,KAAA4E,UAAA,KAqFb8tD,EAAQz5B,KAAK,CACT5lB,GAAI8I,GAAO3I,QAAU2I,GAAO9I,GAC5B0S,OAAQ,QACR01H,SAAU,GACVz1H,SAAUi1H,KACX,wBAAA71I,GAAAX,OAAA,EAAAi2B,GAAA,GAAArD,EAAA/O,IAAA,YAAAgP,GAAAD,EAAAc,KAAAC,KAAA,CAAAjyB,GAAAhE,KAAA,gBAAAgE,GAAA66C,cAAAtmB,KAAA,qBAAAv0B,GAAAjC,GAAA,CAAAiC,GAAAhE,KAAA,gBAAAgE,GAAA7C,OAAA,uBAAA6C,GAAAhE,KAAA,iBAAAgE,GAAAhE,KAAA,iBAAAgE,GAAAjE,KAAA,GAAAiE,GAAAkzB,GAAAlzB,GAAAhC,MAAA,IAAAkzB,EAAAxT,EAAA1d,GAAAkzB,IAAA,QAAAlzB,UAAAjE,KAAA,GAAAm1B,EAAA8B,IAAAhzB,GAAAizB,OAAA,YAEPp5B,KAAKsZ,OAAOoiI,WACR,UACA15H,EAAQi4H,eAAiBvnF,EAAU,IAEvC1yD,KAAKsZ,OAAOihI,UAAU,UAAW1zH,GACjC7mB,KAAKsZ,OAAOyhI,YAAY,UAAWhyI,GAAU,yBAAA5C,GAAA1B,OAAA,EAAAS,EAAAlF,KAAA,oBAChD,SAAAyiJ,EAAA9lI,EAAA2c,GAAA,OAAAopH,EAAA/9I,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAAA,eAAAq6I,EAAAn6I,EAEO,SACJqQ,EACAC,GAAgB,IAAAhL,EAAA9G,KAChByU,EAAA7P,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACAytB,EAAAztB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,KAAI,OAAAnD,IAAAC,KAAA,SAAAsE,IAAA,IAAAymB,EAAAmvH,EAAAhkI,EAAAlB,EAAA,OAAAjV,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAEL,GAAXsqB,EAAO,MACL3lB,EAAKjG,UAAUyE,IAAI,kCAAiC,CAAAyB,EAAA5E,KAAA,SAChDy5I,YAAQjrH,EAAA+C,aACV/C,EAAAoQ,SACIjnB,KAAKuX,MACLvqB,EAAKjG,UAAUyE,IAAI,iCAAmC,KAGxDsS,EAAM9Q,EAAK0Q,QAAQzC,KAAKwjI,EAAAsD,0BAA2B,CACrDp5I,KAAM,CAAEoP,OAAMC,WAAU8pI,QAAOnnI,OAAM4d,cACvCtrB,EAAA5E,KAAA,EACoByV,EAAII,cAAc/U,YAAW,OAAtC,GAAPyT,EAAO3P,EAAAlD,KACD,CAAAkD,EAAA5E,KAAA,aAAQ,iBAAgB,OACpC0P,EAAO6E,EAAQ7E,KACfC,EAAW4E,EAAQ5E,SACnB2a,EAAO/V,EAAQ+V,KAAK,eAAA1lB,EAAAzD,OAAA,SAEjB,CAAEuO,OAAMC,WAAU2a,SAAM,yBAAA1lB,EAAAtC,OAAA,EAAAuB,EAAA,EAnBXvE,EAmBW,GAClC,gBAAA85I,EAAAzhH,EAAAmnB,GAAA,OAAA06F,EAAAh3I,MAAA3E,KAAA4E,UAAA,EA1BA,MA7IA,IAAA89I,CAuKA,CAxS8B,CAAQpiJ,EAAA6H,cAAYg6I,SAA1CT,0CAAqBt5I,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAq9G,qBAAAz9G,EAAA4U,mBAAAtU,EAAAH,iBAAAH,EAAA4U,mBAAApU,EAAAmI,oBAAA3I,EAAA4U,mBAAAoH,EAAA4V,gBAAA5xB,EAAA4U,mBAAAqH,EAAA/L,WAAA,qDAArBopI,EAAqBzkI,QAArBykI,EAAqBxkI,YAArBwkI,CAAsB,4MCxDnC7jJ,EAAA,MACAA,EAAA,OADA,IAEAyC,EAAAzC,EAAA,UAEAA,EAAA,iKA0CYuK,EAAAkB,oBAAA,yBAGIlB,EAAA6I,qBAAA,qCAOA7I,EAAAiF,yBAAA,mBAAAjF,EAAAulB,iBAAA,KAMAvlB,EAAAkF,mDASYlF,EARZiF,yBAAA,kBAQYjF,CALX,WAKWA,CAFP,WAEOA,CADsC,YACTA,EAAAmF,iBAAA,GAAiBnF,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,GACzBnF,EADiDkF,wBACjDlF,GACAA,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,6BAfIA,EAAA6I,qBAAA,QAAAmyI,GAMqCh7I,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAivI,EAAA7vI,MACRnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAivI,EAAA3vI,aAKrBrL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA21I,EAAAxwI,KAAA,+BAxBhBxK,EAAAwY,kCAAA,GAGIxY,EAAA4J,qBAAA,EAAAqxI,EAAA,mDAOAj7I,EAAA4J,qBAAA,EAAAsxI,EAAA,+JANKl7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBAAA0P,EAAAvY,EAAAwN,sBAAA,IAAAmW,EAAAw3H,WAAA5iI,EAAA3b,SAOkBoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAA+0G,sBAAA,IAAA/0G,EAAAwN,sBAAA,IAAAmW,EAAAw3H,SAAA,OAzDvC5jJ,yBAsGoC,eAAA6jJ,EAAvBC,EAAuB,SAAA7iJ,GAyBhC,SAAA6iJ,EACYp7B,EACA7gF,EACAh3B,EACAyiC,GAAsB,IAAAhyC,EAAAlB,SAAAC,KAAAyjJ,IAE9BxiJ,EAAAC,EAAAlB,KAAAyjJ,IALQp7B,MACApnH,EAAAumC,UACAvmC,EAAAuP,UACAvP,EAAAgyC,SA5BLhyC,EAAAurG,MAAO,EACPvrG,EAAAyiJ,WAAa,GACbziJ,EAAA0iJ,YAAa,EACJ1iJ,EAAAsiJ,QAAUtiJ,EAAKumC,QAAQo8G,eACvB3iJ,EAAAqhB,QAAUrhB,EAAKumC,QAAQllB,QACvBrhB,EAAA4iJ,UAAY,SAACv7H,GAAC,OAAKrnB,EAAKumC,QAAQq8G,UAAUv7H,EAAE,EAC5CrnB,EAAAgD,QAAU,SAACmuB,GAAC,OACxBA,aAAarJ,OAAS9nB,EAAKk4E,OAAO/mD,GAAKnxB,EAAK4iJ,UAAUzxH,EAAE,EAcJnxB,EAAA61G,QAAU,SAACjzF,GAAC,OAChE5iB,EAAK6iJ,WAAWjgI,EAAE,EAAC5iB,CASvB,CAACG,SAAAqiJ,EAAA7iJ,GAAAd,EAAA2jJ,EAAA,EAAApiJ,IAAA,aAAAC,MAjBM,SAAWwsB,GAAK,IAAAi2H,EACmCC,EAAzC,QAATD,EAAC/jJ,KAAKqoH,WAAG,IAAA07B,GAAe,QAAfA,EAARA,EAAU97C,qBAAa,IAAA87C,GAAvBA,EAAyBtgE,SAAS31D,EAAMm5C,UACzCjnE,KAAKwsG,MAAO,EACE,QAAdw3C,EAAAhkJ,KAAKktG,iBAAS,IAAA82C,GAAe,QAAfA,EAAdA,EAAgB/7C,qBAAa,IAAA+7C,GAA7BA,EAA+BpkB,OAEvC,GAAC,CAAAv+H,IAAA,WAAAC,MAcM,WACHtB,KAAKikJ,qBACT,GAAC,CAAA5iJ,IAAA,aAAAC,MAEM,WAAU,IAAA4iJ,EAAAp/I,EAAA9E,KACK,QAAlBkkJ,EAAIlkJ,KAAKktG,iBAAS,IAAAg3C,GAAdA,EAAgBj8C,eAChBjoG,KAAKwD,QACD,QACA,kBAAMsB,EAAKooG,UAAUjF,cAAczhF,OAAO,EAC1C,IAGZ,GAAC,CAAAnlB,IAAA,aAAAC,MAEM,WACHtB,KAAKwsG,MAAO,EACZxsG,KAAK6+H,YACT,GAAC,CAAAx9H,IAAA,cAAAC,MAEM,SAAYuiB,GAAO,IAAAsgI,EACtBnkJ,KAAKwsG,MAAO,EACZxsG,KAAK0jJ,WAAa,GAClB1jJ,KAAK6jJ,UAAU,IACG,QAAlBM,EAAInkJ,KAAKktG,iBAAS,IAAAi3C,GAAdA,EAAgBl8C,gBAChBjoG,KAAKktG,UAAUjF,cAAczhF,QAC7BxmB,KAAKktG,UAAUjF,cAAc23B,OAErC,GAAC,CAAAv+H,IAAA,SAAAC,MAEM,SAAOma,GACVzb,KAAK0jJ,WAAajoI,EAAKlI,KACvB,IAAM8f,EAAa,GAOnBA,EALkB,UAAd5X,EAAK7I,KACC,QACc,YAAd6I,EAAK7I,KACL,UACA,QACI6I,EAAKpI,GACnBrT,KAAKwQ,QAAQK,SAAS,GAAI,CACtBmuI,WAAYh/I,KAAKizC,OACjBgsG,YAAa5rH,GAErB,GAAC,CAAAhyB,IAAA,sBAAAC,MAEM,WACH,IAAM8iJ,EAAe9hJ,OAAO+hJ,WACtBC,EACFtkJ,KAAKukJ,WAAWt8C,cAAcuP,wBAElCx3G,KAAK2jJ,WADYW,EAAYnM,KAAOmM,EAAYn9I,MAAQ,EAC3Bi9I,EAAe,CAChD,IAAC,CArF+B,CAAQ9jJ,EAAA6H,cAAYq7I,SAA3CC,0CAAsBr7I,EAAAC,4BAAAD,EAAA8/F,YAAA9/F,EAAAC,4BAAAC,EAAAk8I,sBAAAp8I,EAAAC,4BAAAG,EAAA2E,QAAA/E,EAAAC,4BAAAG,EAAA6sC,gBAAA,kDAAtBouG,EAAsB36I,UAAA,qBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,sQAAtBhB,EAAA4I,qBAAA,iBAAAG,GAAA,OAAA9H,EAAAy6I,WAAA3yI,EAAkB,KAAA/I,EAAAq8I,4BAAlBr8I,CAAsB,sBAAA+I,GAAA,OAAtB9H,EAAAytG,QAAA3lG,EAAe,KAAA/I,EAAAq8I,kIArECj1H,UAAAC,MAAAC,EAAA,wLAoBZF,UAAAG,MAAAD,EAAA,yiCAlDTtnB,EAAAiF,yBAAA,gBAMIjF,EADA4I,qBAAA,oBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAA46I,sBAAqB,KAAA77I,EAAAwlH,0BACtCxlH,CADuC,iBAAA+I,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAmjG,KACvBnjG,EAAAq7I,YAAAvzI,GAAsB9H,EAAAs7I,aAAY,GAElDv8I,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GACdnF,EAD2DkF,wBAC3DlF,GACAA,EAAAiF,yBAAA,aAUIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAw1H,aAAY,GAIrBz2H,EAAAiF,yBAAA,eAIIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAq6I,WAAAvyI,KAAA9H,EAAAq6I,WAAAvyI,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAIA/I,EAHA4I,qBAAA,yBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAApF,QAAAkN,GAAe,EAGhC/I,CAHiC,kBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAmjG,OAAAnjG,EAAAq6I,WAAA,GALrCt7I,EAAAkF,yBAYAlF,EAAA4J,qBAAA,EAAA4yI,EAAA,mDAKJx8I,EAAAkF,yBACAlF,EAAAiF,yBAAA,8BACIjF,EAAA4J,qBAAA,GAAA6yI,EAAA,sDA6BJz8I,EAAAkF,gGAhEclF,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAmjG,MAAAnjG,EAAAq6I,WAAA,kBAOVt7I,EAAAoF,sBAIApF,EAJAiX,sBAAA,UAAAhW,EAAAs6I,WAIAv7I,CAJ4B,kBAAAiB,EAAAs6I,WAI5Bv7I,CAHoC,UAAAiB,EAAAs6I,WAGpCv7I,CAF4B,kBAAAiB,EAAAs6I,WAE5Bv7I,CADoC,OAAAiB,EAAAmjG,MAAAnjG,EAAAq6I,YAUhCt7I,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAq6I,YAMAt7I,EADA6I,qBAAA,kBAAA6zI,EACA18I,CADwB,6BAAA28I,GAIvB38I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAiZ,UAOAla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAiZ,WAAAjZ,EAAAmjG,MAAAnjG,EAAAq6I,spBAuDJD,CAAuB,+PC5GpC,IAAApjJ,EAAAxC,EAAA,OAQAyC,EAAAzC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAWA8nE,EAAA9nE,EAAA,OAEAmnJ,EAAAnnJ,EAAA,MAEAonJ,GADApnJ,EAAA,OACAA,EAAA,uCAiBA8B,uBAGiC,eAAAulJ,EAApBV,EAAoB,WAoO5B,OAAA1kJ,EAPD,SAAA0kJ,EACY1jJ,EACAD,EACA4iE,GAA+B,IAAAxiE,EAAAjB,KAAAD,EAAAC,KAAAwkJ,GAF/BxkJ,KAAAc,OACAd,KAAAa,YACAb,KAAAyjE,eA9NJzjE,KAAAmlJ,oBAAsB,IAAI/rI,EAAAuB,gBAAwB,IAElD3a,KAAAolJ,QAAU,IAAIhsI,EAAAuB,gBAAwB,IAEtC3a,KAAAixB,SAAW,IAAI7X,EAAAuB,iBAAyB,GAEhC3a,KAAAqlJ,mBACZrlJ,KAAKmlJ,oBAAoBrqI,eAErB9a,KAAAslJ,wBAA0BtlJ,KAAKc,KAAK2W,gBAAgB3U,QACxD1C,EAAAob,QAAO,SAACpD,GAAG,QAAOA,CAAG,MACrBhY,EAAAwxB,WAAU,SAACxZ,GAAG,SAAK/X,EAAAuoC,cAAaxwB,EAAI/E,GAAI,qBAAqB,MAC7DjT,EAAAkb,KAAI,SAAArV,GAAA,IAAGyQ,EAAOzQ,EAAPyQ,QAAO,OAAQA,GAAiB6uI,UAAY,EAAE,MACrDnlJ,EAAAsyB,aAAY,IAGR1yB,KAAAwlJ,aAAwCxlJ,KAAKolJ,QAAQtiJ,QACzD1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,kBAAM5hB,EAAKgwB,SAAS9uB,MAAK,EAAK,MAClC/B,EAAAwxB,WAAU,SAACma,GAAC,OACRA,GAAG/mC,OAAS,EACL/D,EAAKwkJ,UAAU15G,GAAsCjpC,QAClD1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAkB,KAAC,EAE3CR,EAAAQ,IAAG,GAAkB,MAE/BxZ,EAAAsyB,aAAY,IAGR1yB,KAAA0lJ,cAAqC1lJ,KAAKolJ,QAAQtiJ,QACtD1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAyiB,KAAI,kBAAM5hB,EAAKgwB,SAAS9uB,MAAK,EAAK,MAClC/B,EAAAwxB,WAAU,SAACma,GAAC,OACRA,GAAG/mC,OAAS,KACN3E,EAAAslJ,cAAa,CAAE55G,IAAGvD,QAASvnC,EAAKH,KAAKy5C,aAAalnC,KAAMvQ,QACpD1C,EAAAkb,KAAI,SAAAxT,GAAO,OAAAA,EAAJrF,KAEE+Y,OAAO,SAACxY,GAAC,OAAKA,EAAEwQ,MAAM,GACtB8H,IACG,SAACtY,GAAC,OACE,IAAI2iE,EAAAI,MAAKl3C,IAAA,GACF7rB,GAAC,IACJwT,MAAOvV,EAAKH,KAAKmuB,YACbjsB,EAAE2Q,SAED,EAChB,KACR,EAELyF,EAAAQ,IAAG,GAAG,MAEhBxZ,EAAAkyB,YAAW,iBAAM,EAAE,IAGftyB,KAAA4lJ,uBAAkDxsI,EAAA2I,eAAc,CACpE/hB,KAAKyjE,aAAaovB,WAClB7yF,KAAKolJ,QACLplJ,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAmxB,cAAa,MAAI,EACjBnxB,EAAAwxB,WAAU,SAAA1P,GAAA,IAAAm8F,EAAAl8F,EAAAF,EAAAC,EAAA,GAAa6pB,EAAC5pB,EAAA,UAAHA,EAAA,IACJ4pB,EAAE/mC,OAAS,EACP,QADQq5G,EACnBrrB,mBAAW,IAAAqrB,OAAA,EAAXA,EAAaM,SAASC,iBAAiBC,aAAa,CAAE9yE,OAAG,EACzD3yB,EAAAQ,IAAG,GAAG,MAEhBxZ,EAAAkb,KAAI,SAACtI,GACD,OAAOA,EAAKsI,IACR,SAACtY,GAAC,IAAAmxH,EAAAC,EAAAO,EAAAkxB,EAAAC,EAAAC,EAAAC,EAAA,MACG,CACG3yI,IACgB,QAAZ8gH,EAAAnxH,EAAE+5G,kBAAU,IAAAoX,OAAA,EAAZA,EAAcd,cACF,QADYe,EACxBpxH,EAAE+5G,kBAAU,IAAAqX,OAAA,EAAZA,EAAcpX,SACdh6G,EAAEg6G,QACFh6G,EAAEqQ,GACNG,QACgB,QAAZmhH,EAAA3xH,EAAE+5G,kBAAU,IAAA4X,OAAA,EAAZA,EAActB,cACF,QADYwyB,EACxB7iJ,EAAE+5G,kBAAU,IAAA8oC,OAAA,EAAZA,EAAc7oC,SACdh6G,EAAEg6G,QACF,GACJpqG,KAAM,UACNW,MAAkB,QAAZuyI,EAAA9iJ,EAAE+5G,kBAAU,IAAA+oC,OAAA,EAAZA,EAAcvyI,OAAQ,GAC5BE,YAAW,GAAA1P,OAAiB,QAAjBgiJ,EAAK/iJ,EAAE+5G,kBAAU,IAAAgpC,OAAA,EAAZA,EAAc/oC,OAAM,aAAAj5G,OAAwB,QAAxBiiJ,EAAYhjJ,EAAE+5G,kBAAU,IAAAipC,OAAA,EAAZA,EAAc/oC,WAChD,EAE9B,IAAC,EACD78G,EAAAsyB,aAAY,IAGR1yB,KAAAimJ,oBACJjmJ,KAAKc,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACpD,GAAG,QAAOA,CAAG,MACrBhY,EAAAwxB,WAAU,oBACNvxB,EAAAmgD,mBAAkBv/C,EAAKH,KAAK+U,SAASxC,GAAI,CACrCE,KAAM,kBACPzQ,QAAK1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAElD,QAAS,IAAK,GAAE,MAElDtW,EAAAkb,KAAI,SAAC7Y,GACD,IACuB60B,EADjBtkB,EAAO,GAAGqkB,EAAAa,EACGz1B,GAAI,IAAvB,IAAA40B,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAyB,KAAd3c,EAAI6b,EAAAh2B,MACL++C,EAAW5kC,EAAK4kC,SAAS6lG,mBAC/B,GAAK7lG,EAAmB,KACmB5oB,EADnBD,EAAAU,EACNmoB,EAAS3pC,SAAgB,IAA3C,IAAA8gB,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAA6C,KAAlC+tH,EAAG1uH,EAAAn2B,MACV0R,EAAKimB,KAAK,CACN5lB,GAAI8yI,EAAI9yI,GACRT,KAAM,UACNW,KAAM4yI,EAAI5yI,KACVE,YAAa,GACbG,KAAM6H,EAAK7H,MAEnB,CAAC,OAAA0V,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,EACL,CAAC,OAAA7P,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOnmB,CACX,IAGQhT,KAAA4jJ,kBAA6CxqI,EAAA2I,eAAc,CACvE/hB,KAAKolJ,QACLplJ,KAAK0lJ,cACL1lJ,KAAKwlJ,aACLxlJ,KAAKmlJ,oBACLnlJ,KAAKslJ,wBACLtlJ,KAAKimJ,oBACLjmJ,KAAK4lJ,sBACN9iJ,QACC1C,EAAAkb,KACI,SAAA0sB,GAQK,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAND9rB,EAAM0W,EAAA,GACN9a,EAAK8a,EAAA,GACL2yH,EAAQ3yH,EAAA,GACRwzH,EAAcxzH,EAAA,GACd7pB,EAAQ6pB,EAAA,GACRyzH,EAAgBzzH,EAAA,GAEVqR,EARArR,EAAA,GAQgBI,cAChBuwH,EAAO,GAAAx/I,OAAAqe,EACNikI,GAAgBjkI,EAChBlG,EACEV,OACG,SAACxY,GAAC,OACEA,EAAE0D,MAAMssB,cAAcptB,SAASq+B,IAC/BjhC,EAAEuQ,KAAKyf,cAAcptB,SAASq+B,IAC9BjhC,EAAEyS,aAAaud,cAAcptB,SAASq+B,EAAO,GAEpD3oB,IAAI,SAACgN,GAAC,MAAM,CACTjV,GAAIiV,EAAEjV,GACNT,KAAM,QACNW,KAAM+U,EAAE7S,cAAgB6S,EAAE/U,KAC1BE,YAAW,aAAA1P,OAAeukB,EAAE/I,SAAQ,KACvC,IAAE6C,KACJ9hB,EAAAmyB,SACC2zH,EAAe9qI,IAAI,SAACgnF,GAAC,OAChBA,EAAUgkD,MAAMhrI,IACb,SAACirI,GAAI,MACA,CACGlzI,GAAIivF,EAAE57F,MACNkM,KAAM2zI,GAAQ,UACdC,SAAS,EACTjzI,KAAM+uF,EAAE/uF,KACRE,YAAa6uF,EAAE57F,MACV,EAChB,IAEP8U,OACE,SAACxY,GAAC,OACEA,EAAEuQ,KAAKyf,cAAcptB,SAASq+B,IAC9BjhC,EAAEyQ,YAAYuf,cAAcptB,SAASq+B,IACrCjhC,EAAE4P,KAAKogB,cAAcptB,SAASq+B,EAAO,IAC5C7hB,EACEmjI,EACEjqI,IACG,SAACgnF,GAAC,MACG,CACGjvF,GAAIivF,EAAE57F,MACNkM,KAAO0vF,EAAU1vF,MAAQ,UACzB4zI,SAAS,EACTjzI,KAAM+uF,EAAE/uF,KACRE,YAAa6uF,EAAE57F,MACV,GAEhB8U,OACG,SAACxY,GAAC,OACEA,EAAEuQ,KAAKyf,cAAcptB,SAASq+B,IAC9BjhC,EAAEyQ,YAAYuf,cAAcptB,SAASq+B,IACrCjhC,EAAE4P,KAAKogB,cAAcptB,SAASq+B,EAAO,IAC5C7hB,EACFtK,EAAMwD,IAAI,SAACgnF,GAAC,MAAM,CACjBjvF,GAAIivF,EAAE57F,MACNkM,KAAM,OACNW,KAAM+uF,EAAE/uF,KACRE,YAAa6uF,EAAE57F,MAClB,IAAE0b,EACArZ,EACEyS,OAAO,SAACxY,GAAC,OAAKA,EAAEuQ,KAAKyf,cAAcptB,SAASq+B,EAAO,GACnD3oB,IAAI,SAACgN,GAAC,IAAAm+H,EAAA,MAAM,CACTpzI,GAAIiV,EAAEjV,GACNT,KAAM,UACNW,KAAM+U,EAAE/U,KACRE,YAAa,GACbG,KAAqB,QAAjB6yI,EAAGn+H,EAAU1U,YAAI,IAAA6yI,OAAA,EAAdA,EAAgBpzI,GAC1B,KAETkwI,SAAQ/mI,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE1f,KAAK+0B,cAAchqB,EAAE/K,KAAK,GAC5CgwI,CACX,IAAC,EAELnjJ,EAAAyiB,KAAI,kBAAM5hB,EAAKgwB,SAAS9uB,MAAK,EAAM,MACnC/B,EAAAsyB,aAAY,IAGA1yB,KAAAsiB,QAAUtiB,KAAKixB,SAASnW,eAEjC9a,KAAAylJ,UAAY,SAAC15G,GAAS,IAAAlZ,EAAA,OACzB5xB,EAAKJ,UAAUyE,IAAI,0BAAuB,EACpCjF,EAAAqmJ,YAAW,CAAE36G,IAAG46G,aAAyB,QAAb9zH,KAAExyB,EAAA2nG,oBAAW,IAAAn1E,OAAA,EAAXA,EAAaxf,KAAMvQ,QAC7C1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEP,IAAI,KAAC,EAEtBuiJ,EAAA4B,aAAY76G,EAAE,EAOpB/rC,KAAK4jJ,eAAe7wI,YACpB/S,KAAKu4F,MACT,EAAC,EAAAl3F,IAAA,OAAAC,OAAAu3F,EAAAr3F,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAqzB,EAAAjD,EAAAjtB,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,QACvD+xB,KAAMiwH,EAAA4B,oBACR7mJ,KAAKc,KAAKixB,QAAQ,qBAClB,wBAGMA,EAAUiD,EAAIjD,QAAQ,uBACpBG,SAASnf,UAAU,SAAC+zI,GACxB,IAAM9zI,EAAO,GACb,QAAWJ,KAAQk0I,EAAc,KACQnoH,EADRO,EAAAhH,EACV4uH,EAAal0I,IAAK,IAArC,IAAAssB,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MACIplB,EAAKimB,KAAIpK,IAAA,GADE8P,EAAAr9B,OACQ,IAAEsR,SACxB,OAAA0W,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACL,CACAr0B,EAAKqgJ,oBAAoBhjJ,KAAK6Q,EAClC,GACA+e,EAAQS,QACX,wBAAAvwB,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACJ,SAAAu4F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,YAAAC,MAEM,SAAU0gF,GACbhiF,KAAKolJ,QAAQjjJ,KAAK6/E,EACtB,KAzBC,IAAA6W,CAyBA,CA7P4B,GA6P5BqsD,SA7PQV,0CAAoBp8I,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAxU,EAAAo7D,mBAAA,qDAApB4gF,EAAoBvnI,QAApBunI,EAAoBtnI,UAAAC,WAFjB,SAEHqnI,CAAoB,0LC7CjC,IAAAlkJ,EAAAzC,EAAA,OACAK,EAAAL,EAAA,sFAgCoBuK,EAJJiF,yBAAA,UAIIjF,CADH,cACaA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,WAAcjF,EAAAmF,iBAAA,GAClBnF,EAD8BkF,wBAC9BlF,4CADkBA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA0c,EAAA48H,KAAA,qCAMd3+I,EAJJiF,yBAAA,UAIIjF,CADH,cACaA,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBACjBlF,EAAAiF,yBAAA,WAAcjF,EAAAmF,iBAAA,GAClBnF,EADiCkF,wBACjClF,4CADkBA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA0c,EAAA68H,SAAA,4BAMd5+I,EAJJiF,yBAAA,UAIIjF,CADH,gBACwCA,EAAAmF,iBAAA,WACzCnF,EAD8CkF,wBAC9ClF,6BAtBJA,EAAAiF,yBAAA,WAiBIjF,EAdA4J,qBAAA,EAAAi1I,EAAA,YAcA7+I,CAXC,EAAA8+I,EAAA,YAWD9+I,CAJC,EAAA++I,EAAA,aAUL/+I,EAAAkF,iEAlBSlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA48H,MAOA3+I,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA68H,UAMA5+I,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAA48H,KAAA,KAnCrB,IAAIK,EAAW,GAEfznJ,6BA2CwC,eAAA0nJ,EAA3BC,EAA2B,SAAA1mJ,GAYpC,SAAA0mJ,EAA8Cr7B,GAAwB,IAAAhrH,EAAAlB,SAAAC,KAAAsnJ,IAClErmJ,EAAAC,EAAAlB,KAAAsnJ,IAD0Cr7B,WAX9BhrH,EAAA8lJ,KAAO9lJ,EAAKgrH,SAAS86B,MAAQ,EAC7B9lJ,EAAA+lJ,SAAW/lJ,EAAKgrH,SAAS+6B,UAAY,EAAE/lJ,CAYvD,CAACG,SAAAkmJ,EAAA1mJ,GAAAd,EAAAwnJ,EAAA,EAAAjmJ,IAAA,OAAAiE,IAVD,WACI,OAAO8hJ,IAAapnJ,KAAKisH,SAAS54G,EACtC,EAAC6H,IAED,SAAgB5Z,GAAc,IAAAwD,EAAA9E,KAC1BA,KAAKwD,QAAQ,OAAQ,kBAAO4jJ,EAAW9lJ,EAAQwD,EAAKmnH,SAAS54G,GAAK,EAAE,EACxE,IAAC,CAVmC,CAAQ/S,EAAA6H,cAAYk/I,SAA/CC,0CAA0Bl/I,EAAAC,4BAYfnK,EAAAilE,kBAAgB,kDAZ3BmkF,EAA0Bx+I,UAAA,0BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAAkE,OAAA,ozBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA/B3BhB,EATJiF,yBAAA,aASIjF,CADH,cACcA,EAAAmF,iBAAA,kBACfnF,EAD0BkF,wBAC1BlF,GACAA,EAAA4J,qBAAA,EAAAu1I,EAAA,yBAAAn/I,EAAA2c,yEAPI3c,EAAA6I,qBAAA,UAAAu2I,kFAoCCF,CAA2B,0KCvDxCzpJ,EAAA,UACAK,EAAAL,EAAA,UACAA,EAAA,mDAmDwBuK,EAAAkB,oBAAA,oDAGIlB,EAAA6I,qBAAA,SAAAK,EAAA6K,MAAAiO,OAAA,0BAGJhiB,EAAAkB,oBAAA,qCAiBAlB,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,kEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA8kI,gBAAA,+BAYAhuI,EALJiF,yBAAA,WAKIjF,CADH,UACGA,EAAAulB,iBAAA,KAAqBvlB,EAAAkF,yBAAOlF,EAAAmF,iBAAA,GAEhCnF,EAAAkF,kEAFgClF,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,GAAAhO,EAAA6K,MAAAoD,SAAA,QAAAjO,EAAA6K,MAAAoD,SAAA,iDAO5BnX,EAAAiF,yBAAA,WAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAg6I,EAAA,+BARRr/I,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAA01I,EAAA,aAMJt/I,EAAAkF,kEAJ4BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA6K,MAAApT,oCA9DxCX,EAAAiF,yBAAA,WASIjF,EAAAkB,oBAAA,WAEIlB,EADJiF,yBAAA,UACIjF,CADkB,WAadA,EANA4J,qBAAA,EAAA21I,EAAA,YAMAv/I,CADE,EAAAw/I,EAAA,cAKNx/I,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADuD,YAQnDA,EAAAmF,iBAAA,+BAGJnF,EAAAmF,iBAAA,QAAAnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA61I,EAAA,cAGJz/I,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CADiC,YAE7BA,EAAAmF,iBAAA,IACJnF,EAAAkF,yBASAlF,EARA4J,qBAAA,GAAA81I,EAAA,aAQA1/I,CAJC,GAAA2/I,EAAA,aAiBb3/I,EAFQkF,wBAERlF,6CA9DIA,EADAiX,sBAAA,4BAAA/N,EAAA4lG,MACA9uG,CAD2C,+BAAAkJ,EAAA6lG,OAJ3C/uG,EAAA6I,qBAAA,WAAAK,EAAA6K,MAAA,KAAA7K,EAAA6K,MAAA9I,IAWQjL,EAAAoF,oBAAA,GAEApF,EAFAiX,sBAAA,aAAA/N,EAAA6K,MAAAiO,OAAA,GAEAhiB,CAFoC,OAAAkJ,EAAA6K,MAAAiO,OAAA,GAEpChiB,CAD8B,OAAAkJ,EAAA6K,MAAAiO,OAAA,IAKzBhiB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA6K,MAAAiO,OAAA,IAMAhiB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA6K,MAAAiO,OAAA,IAMDhiB,EAAAoF,oBAAA,GAAApF,EAAA29F,qBAAA,qEAAAz0F,EAAAowB,QAKEt5B,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAvc,EAAAowB,mCAIgBt5B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,wBAAAK,EAAAowB,QAMlBt5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6K,MAAA1G,cAAAnE,EAAA6K,MAAA5I,KAAA,KAKCnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA6K,MAAAoD,UAAA,GAOAnX,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAAK,EAAA6K,MAAApT,SAAA,KAAAuI,EAAA6K,MAAApT,SAAA/D,QAAA,GAAAsM,EAAA02I,gBA3E7BroJ,4BAkHsC,eAAAsoJ,EAAzBC,EAAyB,WAoB9B,OAAApoJ,EAJJ,SAAAooJ,EACsCj8B,EAC1BprH,EACAgpG,GAAiC9pG,EAAAC,KAAAkoJ,GAFPloJ,KAAAisH,WAC1BjsH,KAAAa,YACAb,KAAA6pG,WAjBI7pG,KAAAmc,MAAQnc,KAAKisH,SAAS9vG,MAEtBnc,KAAA8zB,OAAS9zB,KAAKisH,SAASn4F,OAEvB9zB,KAAA0hC,OAAS1hC,KAAKisH,SAASvqF,MAcpC,EAAC,EAAArgC,IAAA,gBAAAiE,IARJ,WACI,OAAQtF,KAAKa,UAAUyE,IAAI,2BAC/B,GAAC,CAAAjE,IAAA,WAAAC,MAQM,WAAQ,IAAAL,EAAAjB,KACXgtC,WAAW,kBAAM/rC,EAAKknJ,cAAc,EAAE,IAC1C,GAAC,CAAA9mJ,IAAA,eAAAC,MAEM,WACH,IAAMggJ,EAAMthJ,KAAK6pG,SAAS5B,cAAcuP,wBACxCx3G,KAAKk3G,MAAQoqC,EAAIh8F,EAAIE,SAASzU,KAAKq3G,YAAc,EAAI,QAAU,MAC/DpoJ,KAAKm3G,MAAQmqC,EAAI/7F,EAAIC,SAASzU,KAAKs3G,aAAe,EAAI,MAAQ,QAClE,GAAC,CAAAhnJ,IAAA,kBAAAiE,IAED,WACI,MAAO,EACX,IAAC,CAlCiC,GAkCjC2iJ,SAlCQC,0CAAyB9/I,EAAAC,4BAiBtBnK,EAAAilE,kBAAgB/6D,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAD,EAAA8/F,YAAA,kDAjBnBggD,EAAyBp/I,UAAA,yBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,WA7DVC,UAAAC,MAAAC,EAAA,mSAiBWF,UAAAG,MAAAD,EAAA,k2CAnE/BtnB,EAAAiF,yBAAA,aAUIjF,EAAA4I,qBAAA,wBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAcnI,EAAA8+I,eAAc,GAE/B//I,EAAAkF,yBACDlF,EAAA4J,qBAAA,EAAAs2I,EAAA,2BAAAlgJ,EAAA2c,2EALI3c,EALA6I,qBAAA,UAAAs3I,EAKAngJ,CALyB,cAKzBA,CAJkB,qBAIlBA,CAHsB,qBAGtBA,CAFsB,WAEtBA,CADc,ogBAwGb8/I,CAAyB,gRCpItCrqJ,EAAA,WACAwC,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,MAQAub,EAAAvb,EAAA,OAEAyC,EAAAzC,EAAA,OAQAg4D,EAAAh4D,EAAA,OACA8nE,EAAA9nE,EAAA,OACA2C,EAAA3C,EAAA,MAKA2qJ,GAJA3qJ,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,QACA4qJ,EAAA5qJ,EAAA,OACA6qJ,EAAA7qJ,EAAA,wEAEa8B,kBAAkB,CAC3BgpJ,KAAM,UACNC,QAAS,UACTC,SAAU,UACVC,KAAM,UACN,gBAAiB,UACjB,eAAgB,UAChBC,QAAS,WAGbppJ,uBACkC,eAAAqpJ,EAArBxH,EAAqB,SAAA5gJ,GAwD9B,SAAA4gJ,EACYloI,EACAzY,EACAstB,EACA3W,EACA1W,GAAyB,IAAAG,EAAAlB,SAAAC,KAAAwhJ,IAEjCvgJ,EAAAC,EAAAlB,KAAAwhJ,IANQloI,SACArY,EAAAJ,YACAI,EAAAktB,cACAltB,EAAAuW,UACAvW,EAAAH,OA5DJG,EAAA03I,UAAsC,GACtC13I,EAAA83I,UAA6B,GAC7B93I,EAAAgoJ,UAAW,EACXhoJ,EAAA0/F,aAAe,GAEP1/F,EAAA44C,cACZ54C,EAAKH,KAAK2W,gBAAgB3U,QACtB1C,EAAAob,QAAO,SAACpD,GAAG,QAAOA,CAAG,MACrBhY,EAAAwxB,WAAU,SAACxZ,GAAG,SACV/X,EAAAuoC,cAAaxwB,EAAI/E,GAAE,sBAAwBvQ,QACvC1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAElD,QAAS,IAAK,GACvC,MAELtW,EAAAkb,KAAI,SAACtY,GAAC,OAAMA,GAAG0T,mBAAmB8nB,MAAQx7B,EAAE0T,QAAU,EAAE,IAAC,EACzDtW,EAAAsyB,aAAY,IAGZzxB,EAAAm4I,SAAQhgI,EAAA2I,eAAc,CAC1B9gB,EAAKqY,OAAO4C,OACZjb,EAAKqY,OAAO0I,UACblf,QACC1C,EAAAob,QAAO,SAAAvV,GAAgB,OAAhBgc,EAAAhc,EAAA,GAAgB,GAATg5F,SAA2B,MACzC7+F,EAAAkb,KAAI,SAAA4G,GAAW,IAATlP,EAASiP,EAAAC,EAAA,GAAL,GAIN,GAHAjhB,EAAK0wB,UAAU,MACf1wB,EAAK0wB,UAAU,MACf1wB,EAAK83I,UAAY,GACR,MAAJ/lI,KAAMhO,OAAe,KACFsyB,EADED,EAAAa,EACNllB,GAAI,QAAA0nB,EAAA,WAAE,IAAfve,EAAKmb,EAAAh2B,MACN0zB,KAAM30B,EAAA2xB,WAAU7V,EAAM9I,GAAI,YAC5B0e,EAAUiD,EAAIjD,QAAQ,YAC1B9wB,EAAK4R,aAAY,KAAA9O,OACRoY,EAAM9I,IACX0e,EACKG,SACAnf,UAAU,SAACkF,GAAC,OACThX,EAAKioJ,qBAAqBl2I,EAAMmJ,EAAOlE,EAAE,IAGrDhX,EAAK4R,aAAY,UAAA9O,OAAWoY,EAAM9I,IAAM0e,EAAQS,QAChDT,EAAUiD,EAAIjD,QAAQ,UACtB9wB,EAAK4R,aAAY,KAAA9O,OACRoY,EAAM9I,IACX0e,EACKG,SACAnf,UAAU,SAACkF,GAAC,OACThX,EAAKkoJ,mBAAmBn2I,EAAMmJ,EAAOlE,EAAE,IAGnDhX,EAAK4R,aAAY,UAAA9O,OAAWoY,EAAM9I,IAAM0e,EAAQS,OACpD,EAtBA,IAAA6E,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAsBC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACDl4B,EAAKmoJ,cAAcp2I,GACnB/R,EAAKooJ,qBAAqBr2I,EAAI,CAClC,IAWA/R,EAAK4R,aAAa,SAAU5R,EAAKm4I,MAAMrmI,aAAa9R,CACxD,CAACG,SAAAogJ,EAAA5gJ,GAAAd,EAAA0hJ,EAAA,EAAAngJ,IAAA,YAAAC,OAAAgoJ,EAAA9nJ,EAEM,SAAgB2a,GAAY,IAAArX,EAAA9E,KAAEw8C,EAAA53C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAsB,OAAAnD,IAAAC,KAAA,SAAAC,EAAAixB,GAAA,IAAAinB,EAAA,OAAAp4C,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACnD2C,EAAKmkJ,UAAkC,SAAtBnkJ,EAAK67F,aAAuB,CAAA1+F,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAAArB,SAAAE,KAAA,EACrB2C,EAAK+0C,cAC5B/2C,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,OACF,GAHR42C,EAAa53C,EAAA4B,QAAAmkC,EAIf1nC,EAAA06C,kBACI,CACInpC,KAAMiI,KAAKuX,MACXvf,SAAU,GACVugB,SAAUlW,EACV1H,QAAMnU,EAAAkG,gBAEVqzC,IACC,IATDoB,OAUE,CAAAh5C,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACCuyD,EAAAlhD,aACH,gEACH,WAG6B,SAA7B7P,EAAKi0I,UAAU58H,EAAM9I,KAAmBmpC,IACxCrgC,EAAMi/B,SAAQ,CAAAn5C,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,YAERuyD,EAAAlhD,aAAW,GAAA5Q,OAEVoY,EAAM1G,cAAgB0G,EAAM5I,KAChC,wDACH,QAMF,GAJHzO,EAAKqpB,YAAY1G,UACjB3iB,EAAKqpB,YAAYzd,KAAKe,WAAW,CAC7BgD,KAAmB,QAAfme,KAAEtyB,EAAAkG,sBAAa,IAAAosB,OAAA,EAAbA,EAAelsB,MACrB6P,UAAW,CAAC4F,MAEZrX,EAAKjE,UAAUyE,IAAI,kCAAiC,CAAArD,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAC7CwB,EAAKqpB,YAAYo7H,sBAAoB,QAEhDzkJ,EAAK0S,QAAQzC,KACRjQ,EAAKjE,UAAUyE,IAAI,+BACdojJ,EAAA3R,uBACA0R,EAAAjR,6BACN,CACI/0I,KAAM,CAAE0Z,WAEd,yBAAAla,EAAAwC,OAAA,EAAA9C,EAAA,EA7CqDF,EA6CrD,GACL,SAAA+nJ,EAAA7sI,GAAA,OAAA2sI,EAAA3kJ,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,uBAAAC,MAEM,SACH4a,EACAC,EACA0Z,GAAmB,IAAA3vB,EAAAlG,KAEd61B,IACL71B,KAAK24I,UAAUx8H,EAAM9I,IAAMwiB,EAASva,IAAI,SAAC8W,GAAC,OAAK,IAAI5xB,EAAAssB,cAAcsF,EAAE,GACnEpyB,KAAKwD,QACD,mBACA,kBAAM0C,EAAKmjJ,qBAAqBntI,EAAO,EACvC,KAER,GAAC,CAAA7a,IAAA,qBAAAC,MAEM,SAAmB4a,EAAiBC,EAAculB,GAAc,IAAA56B,EAAA9G,KAC/Dmc,EAAMi/B,SAAUp7C,KAAK+4I,UAAU58H,EAAM9I,IAAMquB,GAAU,cAC7C1hC,KAAK+4I,UAAU58H,EAAM9I,IACjCrT,KAAKwD,QACD,kBACA,WACIsD,EAAKhD,aAAa,oBAClBgD,EAAKk2E,cAAc9gE,GACnBpV,EAAKuiJ,qBAAqBntI,EAC9B,EACA,IAER,GAAC,CAAA7a,IAAA,gBAAAC,MAAA,eAAAmoJ,EAAAjoJ,EAAAC,IAAAC,KAEO,SAAAwD,EAAoBgX,GAAe,IAAA+H,EAAA+uC,EAAAx7B,EAAAC,EAAAtb,EAAAulB,EAAA,OAAAjgC,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACjC8hB,EAAY,GACZ+uC,EAAUhzD,KAAKa,UAAUyE,IAAI,uBAAyB,GAAEkyB,EAAAU,EAC1Chc,GAAM9W,EAAAlD,KAAA,EAAAs1B,EAAAlP,IAAA,WAAAmP,EAAAD,EAAAW,KAAAC,KAAA,CAAAhzB,EAAAjD,KAAA,SAAV,GACPnC,KAAK+4I,WADH58H,EAAKsb,EAAAn2B,OACc+R,IAAG,CAAAjO,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,sBACvBo+B,EAAS1hC,KAAK+4I,UAAU58H,EAAM9I,IACpC4Q,EAAS,IAAAlgB,OAAKoY,EAAM3I,SAAY,CAC5BirB,KACIu0B,EAAO,SAAAjvD,OAAU29B,KACjBsxB,EAAO,GAAAjvD,OAAI29B,KACX/hC,EAAAszD,gBAAe,GAAAlvD,OAAI29B,IACvBmgD,QAAS,IACX,QAAAz8E,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,iBAAAiD,EAAAlD,KAAA,GAAAkD,EAAAlB,GAAAkB,EAAAjB,MAAA,GAAAqzB,EAAA3T,EAAAze,EAAAlB,IAAA,QAAAkB,SAAAlD,KAAA,GAAAs1B,EAAA2B,IAAA/zB,EAAAg0B,OAAA,YAENp5B,KAAKsZ,OAAOihI,UAAU,SAAUt2H,GAAW,yBAAA7e,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,mBAC9C,gBAAAg9E,EAAA1jD,GAAA,OAAAmwH,EAAA9kJ,MAAA3E,KAAA4E,UAAA,EAjBA,IAiBA,CAAAvD,IAAA,uBAAAC,MAEO,SAAqB4a,GACzB,IAC0ByiB,EADpB51B,EAA4B,GAAGm2B,EAAAhH,EACjBhc,GAAM,IAA1B,IAAAgjB,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAA4B,KAAjBjc,EAAKwiB,EAAAr9B,MACP6a,EAAM3I,QACXzK,EAASkwB,KAAK,CACVvzB,SAAUyW,EAAM3I,OAChBo/C,WAAW,EACXC,UAAU,EACVpsC,QAAS+hI,EAAAN,0BACTvhI,QAAS,GACTlkB,KAAM,CACF0Z,MAAO,IAAIwpD,EAAAI,MAAM5pD,GACjB2X,OAAQ9zB,KAAK24I,UAAUx8H,EAAM9I,IAC7BquB,OAAQ1hC,KAAK+4I,UAAU58H,EAAM9I,KAAO,iBAGhD,CAAC,OAAAiW,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACDn5B,KAAKsZ,OAAOyhI,YAAY,SAAUhyI,EACtC,GAAC,CAAA1H,IAAA,gBAAAC,MAEO,SAAc4a,GAAe,IAEPyhB,EAFO+hB,EAAA1/C,KAC3B0yD,EAAwB,GAAG90B,EAAA1F,EACbhc,GAAM,QAAAkjB,EAAA,WAAE,IAAjBjjB,EAAKwhB,EAAAr8B,MACZ,IAAK6a,EAAM3I,OAAM,SACjB,QAAA8iF,EAAA,EAAA42C,EAAqB,CAAC,YAAa,cAAa52C,EAAA42C,EAAAloI,OAAAsxF,IAC5C5jC,EAAQz5B,KAAK,CACT5lB,GAAI8I,EAAM3I,OACVuS,OAHSmnH,EAAA52C,GAITmlD,SAAU,EACVz1H,SAAU,WACN05B,EAAKupG,UAAW,EAChBvpG,EAAKl8C,QACD,UACA,kBAAOk8C,EAAKupG,UAAW,CAAI,EAC3B,KAEJvpG,EAAKihD,aAAe,MACxB,IAGR,QAAA+oD,EAAA,EAAAC,EAAqB,CAAC,UAAW,YAAWD,EAAAC,EAAA3kJ,OAAA0kJ,IACxCh3F,EAAQz5B,KAAK,CACT5lB,GAAI8I,EAAM3I,OACVuS,OAHS4jI,EAAAD,GAITjO,SAAU,EACVz1H,SAAU,WACN05B,EAAK8pG,UAAUrtI,GACfujC,EAAKihD,aAAe,IACxB,GAGZ,EA7BA,IAAA/iE,EAAAtV,MAAAqV,EAAAC,EAAAzF,KAAAC,MAAAgH,GA6BC,OAAA9V,GAAAsU,EAAA/Z,EAAAyF,EAAA,SAAAsU,EAAAzE,GAAA,CACDn5B,KAAKwD,QACD,cACA,kBAAMk8C,EAAKpmC,OAAOoiI,WAAW,SAAUhpF,EAAQ,EAC/C,GAER,KAxJC,IAAA42F,CAwJA,CAzN6B,CAAQhpJ,EAAA6H,cAAY6gJ,SAAzCxH,0CAAoBp5I,EAAA4U,mBAAA1U,EAAAu9G,qBAAAz9G,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAtU,EAAA2M,kBAAAjN,EAAA4U,mBAAApU,EAAA0P,WAAAlQ,EAAA4U,mBAAAoH,EAAA3b,qBAAA,qDAApB+4I,EAAoBvkI,QAApBukI,EAAoBtkI,YAApBskI,CAAqB,gRCpClC,IAAAnhJ,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAUAyC,EAAAzC,EAAA,OAQA8nE,GADA9nE,EAAA,OACAA,EAAA,WACAA,EAAA,+CAgBA8B,sBAGiC,eAAAiqJ,EAApB/jC,EAAoB,SAAAjlH,GAgJ7B,SAAAilH,EACY/kH,EACAwgB,EACAzgB,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA6lH,IAElC5kH,EAAAC,EAAAlB,KAAA6lH,IAJQ/kH,OACAG,EAAAqgB,UACArgB,EAAAJ,YAjJJI,EAAAs9D,OAAS,IAAInlD,EAAAuB,gBAA+B,MAE5C1Z,EAAA4oJ,WAAa,IAAIzwI,EAAAuB,gBAAiD,CACtEiM,KAAM,EACN2rC,OAAQ,CAAEjN,EAAG,GAAKC,EAAG,MAGjBtkD,EAAA6oJ,QAAU,IAAI1wI,EAAAuB,gBAAuC,IAErD1Z,EAAA8Z,UAAY,IAAI3B,EAAAuB,gBAA0C,IAE1D1Z,EAAA8oJ,SAAW,IAAI3wI,EAAAuB,gBAAuC,IAEtD1Z,EAAA+oJ,QAAU,IAAI5wI,EAAAuB,gBAAwC,IAEtD1Z,EAAAsmC,SAAW,IAAInuB,EAAAuB,gBAA4B,CAC/CskF,WAAW,EACX93C,QAAS,CAAC,QAAS,aAGflmD,EAAAgpJ,SAAW,IAAI7wI,EAAAuB,gBAAwB,IAG/B1Z,EAAAuV,MAAQvV,EAAKs9D,OAAOzjD,eAEpB7Z,EAAAooD,QAAUpoD,EAAKgpJ,SAASnvI,eAExB7Z,EAAAib,UAAS9C,EAAA2I,eAAc,CACnC9gB,EAAKs9D,OACLt9D,EAAKH,KAAK+B,cACXC,QACC1C,EAAAob,QAAO,SAAAvV,GAAgB,OAAhBgc,EAAAhc,EAAA,GAAgB,EAAiB,MACxC7F,EAAAwxB,WAAU,SAAA1P,GAAA,IAAE1L,EAAFyL,EAAAC,EAAA,GAAO,YACb7hB,EAAAslJ,cAAa,CACTn9G,QAAShyB,GAAOnD,IAAMpS,EAAKH,KAAKy5C,aAAalnC,GAC7C05B,MAAO,KACRjqC,QACC1C,EAAAkb,KAAI,SAAA0sB,GAAO,OAAAA,EAAJvlC,KAAgB6Y,IAAI,SAACtY,GAAC,OAAK,IAAI2iE,EAAAI,MAAM/iE,EAAS,EAAC,MACtD5C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAc,GACtC,MAELxZ,EAAAsyB,aAAY,IAGAzxB,EAAA0/C,QAAU1/C,EAAKs9D,OAAOz7D,QAClC1C,EAAAkb,KAAI,SAACm0C,GAAG,OAAMA,EAAMA,EAAIj8C,OAAS,KAAO,EAAE,IAG9BvS,EAAAq/I,cAAgBr/I,EAAK4oJ,WAAW/uI,eAEhC7Z,EAAAgiB,gBAAe7J,EAAA2I,eAAc,CACzC9gB,EAAK8Z,UACL9Z,EAAKsmC,WACNzkC,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAAsX,GAAwB,IAAAC,EAAA5Q,EAAA2Q,EAAA,GAAtB7pB,EAAQ8pB,EAAA,GAAE7Q,EAAO6Q,EAAA,GACf7f,EAAO,GACX,QAAW3R,KAAO0H,EAAU,KAAA23I,EAAAwJ,EAAAC,EAEL,QAAfzJ,EAAA1+H,EAAQmlC,eAAO,IAAAu5F,GAAfA,EAAiB96I,SAASvE,IACF,QADM6oJ,EAC9BloI,EAAQooI,wBAAgB,IAAAF,GAAxBA,EAA0BtkJ,SAASvE,IAC1B,iBAARA,GACkB,QADI8oJ,EACnBnoI,EAAQmlC,eAAO,IAAAgjG,GAAfA,EAAiBvkJ,SAAS,WAGlCoN,EAAOA,EAAKjP,OAAOgF,EAAS1H,IAChC,CACA,OAAO2R,CACX,IAGY/R,EAAAs/I,eAAcnnI,EAAA2I,eAAc,CACxC9gB,EAAK8oJ,SACL9oJ,EAAKsmC,WACNzkC,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAA8X,GAAuB,IAAAqV,EAAAxmB,EAAAmR,EAAA,GAArBs/B,EAAOjqB,EAAA,GAAEzmB,EAAOymB,EAAA,GACdz1B,EAAO,GACX,QAAW3R,KAAOqxD,EAAS,KAAA23F,EAAAC,EAEJ,QAAfD,EAAAroI,EAAQmlC,eAAO,IAAAkjG,GAAfA,EAAiBzkJ,SAASvE,IACH,QADOipJ,EAC9BtoI,EAAQuoI,uBAAe,IAAAD,GAAvBA,EAAyB1kJ,SAASvE,KAGtC2R,EAAOA,EAAKjP,OAAO2uD,EAAQrxD,IAC/B,CACA,OAAO2R,CACX,IAGY/R,EAAAu/I,cAAapnI,EAAA2I,eAAc,CACvC9gB,EAAK+oJ,QACL/oJ,EAAKsmC,WACNzkC,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAAyY,GAAsB,IAAA0b,EAAAxtB,EAAA8R,EAAA,GAApBqyF,EAAM32E,EAAA,GAAEztB,EAAOytB,EAAA,GACbz8B,EAAO,GACX,QAAW3R,KAAO+kH,EAAQ,KAAAokC,EAAAC,EAEH,QAAfD,EAAAxoI,EAAQmlC,eAAO,IAAAqjG,GAAfA,EAAiB5kJ,SAASvE,IACJ,QADQopJ,EAC9BzoI,EAAQ0oI,sBAAc,IAAAD,GAAtBA,EAAwB7kJ,SAASvE,KAGrC2R,EAAOA,EAAKjP,OAAOqiH,EAAO/kH,IAC9B,CACA,OAAO2R,CACX,IAGY/R,EAAAm/I,cAAahnI,EAAA2I,eAAc,CACvC9gB,EAAK6oJ,QACL7oJ,EAAKsmC,WACNzkC,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAA2Y,GAAsB,IAAA02H,EAAAhiH,EAAA1mB,EAAAgS,EAAA,GAApBpN,EAAM8hB,EAAA,GAAE3mB,EAAO2mB,EAAA,GACbiiH,EAAiB,CAAEjkE,KAAM,CAAE7/D,QAAS,SACxC,QAAWzlB,KAAOwlB,EAAQ,KAAAgkI,EAAAC,EAEH,QAAfD,EAAA7oI,EAAQmlC,eAAO,IAAA0jG,GAAfA,EAAiBjlJ,SAASvE,IACJ,QADQypJ,EAC9B9oI,EAAQ+oI,sBAAc,IAAAD,GAAtBA,EAAwBllJ,SAASvE,KAGrCupJ,EAAc/7H,IAAA,GAAQ+7H,GAAmB/jI,EAAOxlB,IACpD,CACA,OAAmB,QAAnBspJ,EAAI3oI,EAAQmlC,eAAO,IAAAwjG,GAAfA,EAAiB/kJ,SAAS,WAC1BglJ,EAAe,UAAY,CAAE9jI,QAAS,QACtC8jI,EAAe,UAAY,CAAE9jI,QAAS,SAEnC8jI,CACX,IAGY3pJ,EAAA+gB,QAAU/gB,EAAKsmC,SAASzsB,eAgBpC7Z,EAAKs3F,OAAOt3F,CAChB,CAACG,SAAAykH,EAAAjlH,GAAAd,EAAA+lH,EAAA,EAAAxkH,IAAA,YAAAiE,IAfD,WACI,OAAOtF,KAAK6pJ,WAAW1xI,UAC3B,GAAC,CAAA9W,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKu+D,OAAOpmD,UACvB,GAAC,CAAA9W,IAAA,OAAAC,OAAAu3F,EAAAr3F,EAAAC,IAAAC,KAWM,SAAAC,IAAA,IAAAmD,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DjD,KAAKc,KAAK07D,cACL15D,QAAK1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,IACtB+P,UAAU,SAAC8xD,GACR,IAAMruD,EAAQ1R,EAAKy5D,OAAOpmD,YACR0sD,EAAW31C,KACzB,SAACugC,GAAG,OAAKj5C,GAAOnD,KAAOo8C,EAAIp8C,EAAE,IAEfwxD,EAAW7/D,QACzBF,EAAK4qD,SAASmV,EAAW,GAAGxxD,IAE5BvO,EAAKjE,UAAUyE,IAAI,gCACnBR,EAAK6N,WAAW,CACZ43I,gBAAiBzlJ,EAAKjE,UAAUyE,IAC5B,iCAIRR,EAAKjE,UAAUyE,IAAI,+BACnBR,EAAK6N,WAAW,CACZ+3I,eAAgB5lJ,EAAKjE,UAAUyE,IAC3B,gCAIRR,EAAKjE,UAAUyE,IAAI,iCACnBR,EAAK6N,WAAW,CACZy3I,iBAAkBtlJ,EAAKjE,UAAUyE,IAC7B,kCAIRR,EAAKjE,UAAUyE,IAAI,+BACnBR,EAAK6N,WAAW,CACZo4I,eAAgBjmJ,EAAKjE,UAAUyE,IAC3B,+BAIhB,GAAG,wBAAArD,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACV,SAAAu4F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,aAAAC,MAEM,SAAW0gB,GACd,IAAMgpI,EAAchrJ,KAAKunC,SAASpvB,WAC5BgvC,KAAU7mD,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EACdJ,EAAQmlC,SAAW6jG,EAAY7jG,SAAO/kC,EACtCpiB,KAAKa,UAAUyE,IAAI,wBAA0B,MAErDtF,KAAKunC,SAASplC,KAAI0sB,MAAA,GACX7uB,KAAKunC,SAASpvB,YACd6J,GAAO,IACVmlC,YAER,GAAC,CAAA9lD,IAAA,QAAAC,MAEM,WACHtB,KAAK8pJ,QAAQ3nJ,KAAK,IAClBnC,KAAK+a,UAAU5Y,KAAK,IACpBnC,KAAKgqJ,QAAQ7nJ,KAAK,IAClBnC,KAAK+pJ,SAAS5nJ,KAAK,IACnBnC,KAAKunC,SAASplC,KAAK,CACf88F,WAAW,EACX93C,QAAS,CAAC,QAAS,aAEvBnnD,KAAK+gJ,aAAa,EAAG,CAAEz7F,EAAG,GAAKC,EAAG,IACtC,GAAC,CAAAlkD,IAAA,WAAAC,MAEM,SAASknC,GACZ,IAAMinB,EAAMzvD,KAAKc,KAAKmuB,YAAY,CAACuZ,IAC/BinB,GAAKzvD,KAAKu+D,OAAOp8D,KAAKstD,EAC9B,GAAC,CAAApuD,IAAA,YAAAC,MAEM,SAAUiS,EAAcsT,GAC3B,IAAM5C,EAAYjkB,KAAK8pJ,QAAQ3xI,WAC/B8L,EAAU1Q,GAAQsT,EAClB7mB,KAAK8pJ,QAAQ3nJ,KAAK8hB,EACtB,GAAC,CAAA5iB,IAAA,cAAAC,MAEM,SAAYiS,EAAcxK,GAC7B,IAAMkiJ,EAAcjrJ,KAAK+a,UAAU5C,WACnC8yI,EAAY13I,GAAQxK,EACpB/I,KAAK+a,UAAU5Y,KAAK8oJ,EACxB,GAAC,CAAA5pJ,IAAA,aAAAC,MAEM,SAAWiS,EAAcm/C,GAC5B,IAAMw4F,EAAclrJ,KAAK+pJ,SAAS5xI,WAClC+yI,EAAY33I,GAAQm/C,EACpB1yD,KAAK+pJ,SAAS5nJ,KAAK+oJ,EACvB,GAAC,CAAA7pJ,IAAA,YAAAC,MAEM,SAAUiS,EAAc6yG,GAC3B,IAAM+kC,EAAanrJ,KAAKgqJ,QAAQ7xI,WAChCgzI,EAAW53I,GAAQ6yG,EACnBpmH,KAAKgqJ,QAAQ7nJ,KAAKgpJ,EACtB,GAAC,CAAA9pJ,IAAA,eAAAC,MAEM,SAAaslB,EAAc2rC,GAC9BvyD,KAAK6pJ,WAAW1nJ,KAAK,CAAEykB,OAAM2rC,UACjC,KA9GC,IAAAsmC,CA8GA,CA5P4B,CAAQv4F,EAAA6H,cAAYyhJ,SAAxC/jC,0CAAmBz9G,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAA2b,eAAA/b,EAAA4U,mBAAAtU,EAAAH,iBAAA,qDAAnBs9G,EAAmB5oG,QAAnB4oG,EAAmB3oG,UAAAC,WAFhB,SAEH0oG,CAAoB,gRC/CjC,IAAAxlH,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,MAEAyC,EAAAzC,EAAA,OAIAi0D,GAHAj0D,EAAA,OAEAA,EAAA,OACAA,EAAA,QACAutJ,EAAAvtJ,EAAA,OACAub,EAAAvb,EAAA,OACAwtJ,EAAAxtJ,EAAA,kDA2OA,SAASytJ,EAAezgC,GACpB,IAAMlzF,GAAyBkzF,GAAU,IAAIxrF,OACzC,SAACgjE,EAAC55D,GAAA,IAAA1U,EAAA9R,EAAAwmB,EAAA,GAAG6c,EAACvxB,EAAA,GAAEwxB,EAACxxB,EAAA,SAAO,CACZk5F,MAAO3nE,EAAI+8C,EAAE4qB,MAAQ3nE,EAAI+8C,EAAE4qB,MAC3BC,MAAO5nE,EAAI+8C,EAAE6qB,MAAQ5nE,EAAI+8C,EAAE6qB,MAC3BC,MAAO5nE,EAAI88C,EAAE8qB,MAAQ5nE,EAAI88C,EAAE8qB,MAC3BC,MAAO7nE,EAAI88C,EAAE+qB,MAAQ7nE,EAAI88C,EAAE+qB,MAC9B,EACD,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGf,MAAO,CACH9nE,EAAG3tB,EAAKs1F,OAASt1F,EAAKu1F,MAAQv1F,EAAKs1F,OAAS,EAC5C1nE,EAAG5tB,EAAKw1F,OAASx1F,EAAKy1F,MAAQz1F,EAAKw1F,OAAS,EAEpD,CAnOAxtH,sBACiC,eAAA4rJ,EAApB9J,EAAoB,SAAA7gJ,GA+C7B,SAAA6gJ,EACYnoI,EACAxY,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAyhJ,IAElCxgJ,EAAAC,EAAAlB,KAAAyhJ,IAJQnoI,SACArY,EAAAH,OACAG,EAAAJ,YAjDJI,EAAAuqJ,WAAuB,GACvBvqJ,EAAA83I,UAA6B,GAC7B93I,EAAAwqJ,WAA8B,GAC9BxqJ,EAAAyqJ,UAA4B,GAC5BzqJ,EAAA0qJ,gBAAkC,GAClC1qJ,EAAA2qJ,UAA6B,GAC7B3qJ,EAAA4qJ,MAA0B,GAC1B5qJ,EAAA6qJ,QAAuC,GACvC7qJ,EAAA8Z,UAA6B,GAC7B9Z,EAAA8qJ,WAAa,IAAI3yI,EAAAuB,gBAA2B,IAE5C1Z,EAAAm4I,SAAQhgI,EAAA2I,eAAc,CAC1B9gB,EAAKH,KAAK2W,gBACVxW,EAAKqY,OAAO9C,MACZvV,EAAKqY,OAAO0I,UACblf,QACC1C,EAAAob,QAAO,SAAAvV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAuB,QAAlB6B,EAAA,MAAKA,EAAA,KAAaA,EAAA,GAATm3F,SAA6C,MAClE7+F,EAAAkb,KAAI,SAAA4G,GAAa,IAARutC,EAAQxtC,EAAAC,EAAA,GAAL,GACRjhB,EAAK83I,UAAY,GACjB,IAAIhkH,EAAiB9zB,EAAKH,KAAKixB,QAAQ,mBACvC,GAAKgD,EACL,KAAMi3H,KAAa3rJ,EAAA2xB,WAAU+C,EAAW,kBAAkBhD,QAAO,GAAAhuB,OAC1D0rD,EAAIp8C,GAAE,WAEP44I,KAAY5rJ,EAAA2xB,WAAU+C,EAAW,kBAAkBhD,QAAO,GAAAhuB,OACzD0rD,EAAIp8C,KAELM,KAAQyF,EAAA2I,eAAc,CACxBiqI,EAAW95H,SACX+5H,EAAU/5H,WACXpvB,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAA0sB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAE/U,EAACL,EAAA,GAAE2wE,EAAC3wE,EAAA,YAAA7uB,OAAAqe,EACF6Q,GAAG3xB,OAAS,IAAE8gB,GACdmhF,GAAGjiG,OAAS,IAAIka,OAAO,SAACxY,GAAC,MAAoB,SAAfA,EAAE0C,QAAmB,IAAC,IAGhEzE,EAAK4R,aAAY,eAEbc,EAAMZ,UAAU,SAAC48C,GAAC,OAAK1uD,EAAKirJ,UAAUv8F,EAAE,IAE5C1uD,EAAK4R,aAAa,UAAWm5I,EAAWx5H,QACxCvxB,EAAK4R,aAAa,eAAgBo5I,EAAUz5H,OAAM,CACtD,IASAvxB,EAAKs3F,OAAOt3F,CAChB,CAACG,SAAAqgJ,EAAA7gJ,GAAAd,EAAA2hJ,EAAA,EAAApgJ,IAAA,OAAAC,OAAAu3F,EAAAr3F,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAwqJ,EAAA90H,EAAAC,EAAA80H,EAAAx4I,EAAAy4I,EAAA70H,EAAAC,EAAA60H,EAAAz5H,EAAA05H,EAAAC,EAAAC,EAAAC,EAAAl6F,EAAA,OAAA/wD,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EACjCwB,QAAQslB,IAChCjpB,KAAKc,KAAKghB,OAAOxG,IAAI,SAAClD,IAAG,SACrB/X,EAAAuoC,cAAaxwB,GAAI/E,GAAI,eAAepQ,WAAW,IAEtD,OAJKkpJ,EAAalqJ,EAAA4B,KAKnB7D,KAAKwrJ,WAAa,GAAGn0H,EAAAa,EACFi0H,GAAalqJ,EAAAC,KAAA,EAAAm1B,EAAA/O,IAAA,WAAAgP,EAAAD,EAAAc,KAAAC,KAAA,CAAAn2B,EAAAE,KAAA,SACe,GAArCkqJ,EAAa,OADZz4I,EAAI0jB,EAAAh2B,QACyB,QAAjB8qJ,EAAJx4I,EAAM8C,eAAe,IAAA01I,OAAA,EAArBA,EAAuBC,MAC5B,CAAApqJ,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,uBAAAk0B,EAAAU,EACSm0H,GAAK,IAAxB,IAAA70H,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAGQm0H,GAHO15H,GAAJy5H,EAAI70H,EAAAn2B,OAOFy7G,YAAc,IAJnBwvC,WACAC,EAAc35H,EAAd25H,eACAC,EAAY55H,EAAZ45H,aACAC,EAAc75H,EAAd65H,eAEIl6F,GAAgB85F,EAAKK,UAAY,IAAjCn6F,YACRxyD,KAAK4rJ,UAAUU,EAAKj5I,IAPRwf,EAARtT,UAOkC,IACtCvf,KAAKyrJ,WAAWa,EAAKj5I,IAAMq5I,GAAkB,GAC7C1sJ,KAAK0rJ,UAAUY,EAAKj5I,IAAiB,MAAXm/C,KAAaxtD,OACjCsmJ,EAAe94F,GACf,KACNxyD,KAAK2rJ,gBAAgBW,EAAKj5I,KACP,IAAfk5I,EACMC,GAAkBxsJ,KAAK0rJ,UAAUY,EAAKj5I,IACtC,KACVrT,KAAK6rJ,MAAMS,EAAKj5I,MACVo5I,GACFzsJ,KAAKa,UAAUyE,IAAI,iCACvBtF,KAAK8rJ,QAAQQ,EAAKj5I,IAAMm/C,GAAe,GACvCxyD,KAAKwrJ,WAAWvyH,KAAKqzH,EAAK94I,QAAU84I,EAAKj5I,GAC5C,OAAAiW,IAAAkO,EAAA3T,EAAAyF,GAAA,SAAAkO,EAAA2B,GAAA,SAAAl3B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiC,GAAAjC,EAAAkC,MAAA,GAAAkzB,EAAAxT,EAAA5hB,EAAAiC,IAAA,QAAAjC,SAAAC,KAAA,GAAAm1B,EAAA8B,IAAAl3B,EAAAm3B,OAAA,YAELp5B,KAAKsZ,OAAOyhI,YAAY,eAAgB,CACpC,CACIjvB,SAAU,eACVpmH,SAAU,CAAE4/C,EAAG,GAAKC,EAAG,IACvB9+B,QAAS4kI,EAAAxhC,mBACTpnH,KAAM,CACF2nH,UAAWpqH,KAAK+rJ,WAChB3gC,aAAa,EACbE,aAAa,MAIzBtrH,KAAKqxE,eACLrxE,KAAK6S,aAAa,OAAQ7S,KAAKo5I,MAAMrmI,aAAa,yBAAA9Q,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,mBACrD,SAAAu4F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,YAAAC,MAEM,WAAgC,IAIXq9B,EAHlBynF,EAAS,GACTr9G,EAAW,GAAGm2B,EAAAhH,EAFPtzB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,IAIT,IAAxB,IAAAs6B,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAA0B,KAAfxkB,EAAI+qB,EAAAr9B,MACL+R,EAAKO,EAAKJ,QAAUI,EAAKg5I,QAEzBrtI,EAAW3L,EAAK2L,UAAYvf,KAAK4rJ,UAAUv4I,IAAO,IAOlDw5I,GALFj5I,EACI5T,KAAKyrJ,WAAWp4I,IACZrT,KAAKa,UAAUyE,IAAI,+BACnB,UACH,GACcia,EAQvB,GAPAvf,KAAK+4I,UAAU1lI,GAAMO,EAAKumI,YACpB,OACA0S,EAAS,GACT,OACAA,EAAS,IACT,UACA,OACD7sJ,KAAK0rJ,UAAUr4I,GACpB,KAAIoT,EAAU,GACV7S,EAAKgxB,QACLne,GAAO,GAAA1iB,OAAO6P,EAAKgxB,OAAS,EAAC,gBAAA7gC,OACV,IAAf6P,EAAKgxB,MAAc,GAAK,IAC5B,OAEAhxB,EAAKk5I,cACLrmI,GAAO,gBAAA1iB,OAAoB6P,EAAKk5I,YAAW,eAC3Cl5I,EAAKm5I,aAAe,IACpBtmI,GAAO,GAAA1iB,OAAO6P,EAAKo5I,iBAAgB,KAAAjpJ,OACL,IAA1B6P,EAAKo5I,iBAAyB,SAAW,SAC7C,OACAp5I,EAAKozI,WAAUvgI,GAAO,aAAA1iB,OAAiB6P,EAAKozI,SAAQ,QACpDpzI,EAAKq5I,aAAYxmI,GAAO,eAAA1iB,OAAmB6P,EAAKq5I,WAAU,QAC1Dr5I,EAAKw9E,UAAS3qE,GAAO,UAAA1iB,OAAc6P,EAAKw9E,QAAO,OAE/CpxF,KAAK2rJ,gBAAgBt4I,KACpBrT,KAAKa,UAAUyE,IAAI,iCAEpB8gH,EAAOntF,KAAK,CACRvzB,SAAU1F,KAAK2rJ,gBAAgBt4I,GAC/BoT,UACAE,QAAS,MAIb3mB,KAAKa,UAAUyE,IAAI,uCAClBsO,EAAKk5I,aAAel5I,EAAKozI,WAE1Bj+I,EAASkwB,KAAK,CACV6yF,SAAQ,WAAA/nH,OAAasP,GACrB3N,SAAU1F,KAAK0rJ,UAAUr4I,GACzBoT,QAAS2kI,EAAA9D,2BACT7kJ,KAAM,CACF4Q,KACA0zI,KAAMnzI,EAAKk5I,aAAe,GAC1B9F,SAAUpzI,EAAKozI,UAAY,IAE/BrgI,QAAS,IACZ,CAET,CAAC,OAAA2C,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACDn5B,KAAK+a,UAAYhS,EACjB/I,KAAKsZ,OAAO4zI,UAAU,QAAS9mC,GAC/BpmH,KAAKqxE,cACT,GAAC,CAAAhwE,IAAA,eAAAC,MAEO,WACJ,IAAM2iB,EAAY,GAEZ+uC,EAAUhzD,KAAKa,UAAUyE,IAAI,uBAAyB,GACtD6nJ,EAAW,GACjB,QAAW3kH,KAAWxoC,KAAK+4I,UAAW,CAClC,IAAMznE,EACFte,EAAO,QAAAjvD,OAAS/D,KAAK+4I,UAAUvwG,MAC/BwqB,EAAO,GAAAjvD,OAAI/D,KAAK+4I,UAAUvwG,MAC1BspB,EAAAmB,gBAAe,GAAAlvD,OAAI/D,KAAK+4I,UAAUvwG,KAClCxoC,KAAK6rJ,MAAMrjH,GACX2kH,EAASl0H,KAAK,CACV1lB,KAAMi1B,EACNqiF,OAAQ7qH,KAAK8rJ,QAAQtjH,GACrB0zD,MAAO5qB,IAGXrtD,EAAS,IAAAlgB,OAAKykC,IAAa,CACvB/J,KAAM6yC,EACNuQ,QAAS,GAGrB,CACA7hF,KAAK+rJ,WAAW5pJ,KAAKgrJ,GACrBntJ,KAAKsZ,OAAOyhI,YAAY,QAAO,GAAAh3I,OAtBd,GAsB4Bqe,EAAKpiB,KAAK+a,aACvD/a,KAAKsZ,OAAOihI,UAAU,eAAgBt2H,EAC1C,KAtJC,IAAA40E,CAsJA,CA5M4B,CAAQv4F,EAAA6H,cAAYojJ,SAAxC9J,0CAAmBr5I,EAAA4U,mBAAA1U,EAAAu9G,qBAAAz9G,EAAA4U,mBAAAxU,EAAAC,qBAAAL,EAAA4U,mBAAAtU,EAAAH,iBAAA,qDAAnBk5I,EAAmBxkI,QAAnBwkI,EAAmBvkI,YAAnBukI,CAAoB,8KCvCjC5jJ,EAAA,iEAEA8B,8BA6DwC,eAAAytJ,EAA3BC,EAA2BvtJ,EAcpC,SAAAutJ,EAAoB/zI,GAA2B,IAAArY,EAAAjB,KAAAD,EAAAC,KAAAqtJ,GAA3BrtJ,KAAAsZ,SAbJtZ,KAAAstJ,OAAS,kBACrBrsJ,EAAKqY,OAAOynI,aACR/oH,KAAKC,IAAI,GAAiC,IAA7Bh3B,EAAKqY,OAAO+mI,UAAUz5H,MACnC3lB,EAAKqY,OAAO+mI,UAAU9tF,OACzB,EACWvyD,KAAAutJ,QAAU,kBACtBtsJ,EAAKqY,OAAOynI,aACR/oH,KAAK8F,IAAI,EAAiC,kBAA9B78B,EAAKqY,OAAO+mI,UAAUz5H,MAClC3lB,EAAKqY,OAAO+mI,UAAU9tF,OACzB,EACWvyD,KAAA+7C,MAAQ,kBACpB96C,EAAKqY,OAAOynI,aAAa,EAAG,CAAEz7F,EAAG,GAAKC,EAAG,IAAM,CAED,GAAC6nG,SAd1CC,0CAA2BjlJ,EAAAC,4BAAAC,EAAAu9G,qBAAA,kDAA3BwnC,EAA2BvkJ,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mEApDhBoiB,UAAAC,MAAAC,EAAA,qKAWAF,UAAAG,MAAAD,EAAA,sKAWAF,UAAAI,MAAAF,EAAA,8JA5BhBtnB,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAikJ,QAAQ,GAIjBllJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,SACdnF,EADiBkF,wBACjBlF,GACAA,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAkkJ,SAAS,GAIlBnlJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAA0yC,OAAO,GAIhB3zC,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,eACdnF,EADuBkF,wBACvBlF,qcA0BKilJ,CAA2B,8IChExC,IAAA/sJ,EAAAzC,EAAA,OAEA0L,GADA1L,EAAA,MACAA,EAAA,QACAK,EAAAL,EAAA,OAEAyxG,EAAAzxG,EAAA,MACA2vJ,EAAA3vJ,EAAA,OACAwxG,EAAAxxG,EAAA,MAEA8rD,EAAA9rD,EAAA,OACA4vJ,EAAA5vJ,EAAA,OAKA2qJ,GAHA3qJ,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QAGA4qJ,GAFA5qJ,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,mJAmBA8B,sBAegC,eAAA+tJ,EAAnBvhJ,EAAmBrM,EAAA,SAAAqM,IAAApM,EAAAC,KAAAmM,EAAA,GAAAuhJ,SAAnBvhJ,yCAAmB,iDAAnBA,uDAZL7L,EAAAyY,aACA7a,EAAAgR,iBACA3F,EAAAmC,YACAnC,EAAA0C,oBACAqjG,EAAAuB,qBACA28C,EAAAG,cACAt+C,EAAAqB,aACA/mD,EAAA39C,iBACAyhJ,EAAAz+I,wBAIK7C,CAAmB,oCA5B5Bq8I,EAAAN,0BAAyB,CAAA5/I,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAAgqG,uBAAA9pG,EAAAi/F,6BAAA,oCAIzB8gD,EAAAjR,6BAA4B,CAAAlvI,EAAA2oG,KAAAroG,EAAA0oG,cAAAltF,EAAAwpI,aAAAxpI,EAAAypI,SAAAxpI,EAAA+sF,UAAA7sF,EAAAmtF,eAAAjtF,EAAAqpI,SAAAl7C,EAAAjB,mBAAAk9B,EAAA38B,qBAAA28B,EAAA18B,gBAAA08B,EAAAkf,qBAAAlf,EAAAmf,mBAAAnf,EAAAof,gBAAAnf,EAAAof,uBAAAlf,EAAAmf,0BAAA,CAAA7lJ,EAAAmpG,UAAAnpG,EAAAmqG,6FClChCx4E,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,mJCXA,IAAA4J,EAAA1L,EAAA,OACAiQ,EAAAjQ,EAAA,UACAA,EAAA,0LAuBoBuK,EALRiF,yBAAA,UAKQjF,CAFP,WAEOA,CADmD,WAC5CA,EAAAmF,iBAAA,eAASnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAOZnF,EAFQkF,wBAERlF,8CAPYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA+gB,SAAA9e,MAAAjC,EAAA+gB,SAAA7e,QAAA,+CAaJpL,EALRiF,yBAAA,UAKQjF,CAFP,UAEOA,CAD8C,WACvCA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACXlF,EAAAkB,oBAAA,4BAKRlB,EADIkF,wBACJlF,iEAjCJA,EAAAiF,yBAAA,YAsBIjF,EAjBA4J,qBAAA,EAAAo8I,EAAA,YAiBAhmJ,CAdC,EAAAimJ,EAAA,aA8BOjmJ,EAJRiF,yBAAA,UAIQjF,CAFP,UAEOA,CAD8C,WACvCA,EAAAmF,iBAAA,UAAInF,EAAAkF,yBACXlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,2CAGZnF,EAFQkF,wBAERlF,KAKQA,EAJRiF,yBAAA,UAIQjF,CAFP,YAEOA,CAD8C,YACvCA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACjBlF,EAAAiF,yBAAA,sBAEIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,IAAiB,GAI1D/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD8C,YACvCA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBACflF,EAAAkB,oBAAA,0BAWZlB,EAFQkF,wBAERlF,iDAnEIA,EAAA6I,qBAAA,YAAAK,EAAAZ,MAIKtI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA+gB,UAiBAjqB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAAmD,MAgBiBrM,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,KAAAK,EAAAg9I,YAWVlmJ,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAuQ,KAGAzJ,CAH2B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG3BxJ,CADuC,WAAAkJ,EAAA4lI,eAQvC9uI,EAAAoF,oBAAA,GAIApF,EAJA6I,qBAAA,cAAA+mH,EAAA1mH,EAAAZ,KAAApL,IAAA,cAAA0yH,EAAA12H,MAIA8G,CAJgC,UAIhCA,CAHe,SAGfA,CAFU,UAEVA,CADW,WAAAkJ,EAAA4lI,gBAxEnCv3I,4BAyFsC,eAAA4uJ,EAAzB1S,EAAyB,WA0B9B,OAAA/7I,EAXJ,SAAA+7I,EAEYl1G,EAQA9lC,GAA0Bd,EAAAC,KAAA67I,GAR1B77I,KAAA2mC,QAQA3mC,KAAAa,YAxBLb,KAAAyU,KAAOzU,KAAK2mC,MAAMlyB,KAClBzU,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACxBnd,KAAM,IAAIljB,EAAAsgC,YAAY7pC,KAAK2mC,MAAMla,MACjC5a,KAAM,IAAItI,EAAAsgC,YAAY7pC,KAAK2mC,MAAM90B,MACjCC,SAAU,IAAIvI,EAAAsgC,YAAY7pC,KAAK2mC,MAAM70B,YAGzB9R,KAAAsuJ,WAAatuJ,KAAK2mC,MAAMi1G,MACxB57I,KAAAqyB,SAAWryB,KAAK2mC,MAAMtU,QAiBnC,EAAC,EAAAhxB,IAAA,gBAAAiE,IAfJ,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,IAAC,CAbiC,GAajCipJ,SAbQ1S,0CAAyBzzI,EAAAC,4BAgBtByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAC,iBAAA,kDAhBlBszI,EAAyB/yI,UAAA,yBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,i+BAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IArF1BhB,EADJiF,yBAAA,aACIjF,CAD+C,QAC3CA,EAAAmF,iBAAA,uBAAiBnF,EAAAkF,yBAEjBlF,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAA4J,qBAAA,EAAAw8I,EAAA,gBAyEIpmJ,EAHJiF,yBAAA,aAGIjF,CADH,cAEOA,EAAAmF,iBAAA,gBAERnF,EADIkF,wBACJlF,UA3EKA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAqH,MAwEqBtI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAqH,KAAApP,sQAOrBu6I,CAAyB,sFChGtC5hH,EAAAC,aAAAr8B,EAAA,OAAA8B,GAEAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,KAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,8ICTA,IAAAiK,EAAA/L,EAAA,mCAEA8B,uBAiCiC,eAAA8uJ,EAApBC,EAAoB,WAU7B,OAAA5uJ,EA3CJ,SAAA4uJ,IAAA3uJ,EAAAC,KAAA0uJ,GAuC+B1uJ,KAAA0zF,UAAY,IAAI9pF,EAAAoV,aAEpChf,KAAA2uJ,cAAe,GAEtB,EAAAttJ,IAAA,gBAAAC,MAGO,WACHtB,KAAK2uJ,cAAgB3uJ,KAAK2uJ,aAC1B3uJ,KAAK0zF,UAAUx0E,MACnB,IAAC,CAhB4B,GAgB5BuvI,SAhBQC,yCAAoB,kDAApBA,EAAoB5lJ,UAAA,sBAAAqW,OAAA,CAAA5L,KAAA,OAAAqpB,SAAA,YAAAxd,QAAA,CAAAs0E,UAAA,YAAAyS,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,0QAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCA9BzBhB,EAAAiF,yBAAA,cAQIjF,EAAA4I,qBAAA,kCAAiB3H,EAAAulJ,eAAe,GAEhCxmJ,EAAAiF,yBAAA,WAGIjF,EAAA4I,qBAAA,0BAAS3H,EAAAulJ,eAAe,GAExBxmJ,EAAAg+F,uBAAA,GACJh+F,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAA0BjF,EAAA4I,qBAAA,0BAAS3H,EAAAulJ,eAAe,GAC9CxmJ,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,wEAFQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,eAAApE,EAAAslJ,aAAA,+NAYHD,CAAoB,oJCnCjC,IAAA9kJ,EAAA/L,EAAA,MAOA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OAQAwC,GADAxC,EAAA,MACAA,EAAA,QACA8yB,EAAA9yB,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,kGAkB4BuK,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAA49I,EAAAx7I,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAohJ,EAAAp5I,cAAAo5I,EAAAt7I,KAAA,4BA8BZnL,EAAAiF,yBAAA,qBAMIjF,EAAAmF,iBAAA,6BACJnF,EAAAkF,mDA2CJlF,EALJiF,yBAAA,WAKIjF,CADH,cAEQA,EAAAmF,iBAAA,GACUnF,EAAAkF,yBAEflF,EAAAkB,oBAAA,wBAKJlB,EAAAkF,iEARSlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,iEAcL7yC,EALJiF,yBAAA,WAKIjF,CADH,cAC0BA,EAAAmF,iBAAA,gBAAUnF,EAAAkF,yBACjClF,EAAAkB,oBAAA,wBAKJlB,EAAAkF,mDAaQlF,EAJJiF,yBAAA,UAIIjF,CADH,cAEQA,EAAAmF,iBAAA,GAGgCnF,EAAAkF,yBAErClF,EAAAkB,oBAAA,yBAOJlB,EAAAkF,kEAZSlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,wDAOD7yC,EAAAoF,sBAEApF,EAFA6I,qBAAA,SAEA7I,CAFU,WAEVA,CADY,qCAShBA,EAJJiF,yBAAA,UAIIjF,CADH,cAEQA,EAAAmF,iBAAA,GAGmCnF,EAAAkF,yBAExClF,EAAAkB,oBAAA,yBAOJlB,EAAAkF,kEAZSlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,2DAOD7yC,EAAAoF,sBAEApF,EAFA6I,qBAAA,MAAAK,EAAAZ,KAAApP,MAAAyjF,WAAAI,YAAA,GAEA/8E,CAF8C,WAE9CA,CADY,qCAvCxBA,EAAAiF,yBAAA,YA0BIjF,EAlBA4J,qBAAA,EAAA88I,EAAA,aAkBA1mJ,CAfC,EAAA2mJ,EAAA,cAiCL3mJ,EAAAkF,iEAlCSlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA09I,qBAAAppJ,SAAA,eAkBAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA09I,qBAAAppJ,SAAA,yCA4BGwC,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAg+I,GAEA7mJ,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAwhJ,EAAA,+BAVZ7mJ,EALJiF,yBAAA,WAKIjF,CADH,cAEQA,EAAAmF,iBAAA,GACMnF,EAAAkF,yBAGPlF,EADJiF,yBAAA,sBACIjF,CADgD,mBAE5CA,EAAA4J,qBAAA,EAAAk9I,EAAA,oBAMJ9mJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,8BAEnBnF,EAF2CkF,wBAE3ClF,6CAdSA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,sCAMwB7yC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA69I,2CAoBrB/mJ,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAm+I,GAEAhnJ,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA2hJ,EAAA,+BAVZhnJ,EALJiF,yBAAA,WAKIjF,CADH,cAEQA,EAAAmF,iBAAA,GACKnF,EAAAkF,yBAGNlF,EADJiF,yBAAA,sBACIjF,CADgD,mBAE5CA,EAAA4J,qBAAA,EAAAq9I,EAAA,oBAMJjnJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,8BAEnBnF,EAF2CkF,wBAE3ClF,6CAdSA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,qCAMwB7yC,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA69I,+EAc7B/mJ,EALJiF,yBAAA,WAKIjF,CADH,cAEQA,EAAAmF,iBAAA,GACanF,EAAAkF,yBAGdlF,EADJiF,yBAAA,UACIjF,CADqC,qBAKjCA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,EAAAg+I,YAAAn+I,EAAAG,EAAAZ,KAAApP,MAAAyjF,WAAAM,UAEU,IAExB,GACkBj9E,EAAAkF,yBACAlF,EAAAiF,yBAAA,qBAKIjF,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAERF,EAAAg+I,YAAAh+I,EAAAZ,KAAApP,MAAAyjF,WAAAM,UACS,GAACl0E,GAGxB,GAGU/I,EAFQkF,wBAERlF,+CA9BSA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,6CAMG7yC,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAyjF,WAAAM,UAAA,GACAj9E,CAD8C,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAY9CxJ,EAAAoF,sBAEApF,EAFA6I,qBAAA,OAAAK,EAAAZ,KAAApP,MAAAyjF,WAAAM,UAAA,GAEAj9E,CAF2C,UAAAkJ,EAAAZ,KAAApP,MAAAyjF,WAAAM,UAAA,GAE3Cj9E,CAD8C,iBAAAA,EAAAuJ,0BAAA,EAAAC,8BAkC1CxJ,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,gFAHIlF,EAAA6I,qBAAA,QAAAs+I,EAAAl8I,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAk7I,EAAAjuJ,MAAAgQ,EAAAqd,aAAA,+BAoBAvmB,EAAAiF,yBAAA,mBAQIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,0GARIlF,EAAA6I,qBAAA,QAAAu+I,EAAAn8I,IAOAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAm7I,EAAAluJ,MAAAgQ,EAAAqd,aAAA,+BATRvmB,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAy9I,EAAA,gHAEKrnJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAu+I,EAAAn8I,IAAA/B,EAAAZ,KAAApP,MAAAyjF,WAAAK,WAAA,sEA3CrBh9E,EALJiF,yBAAA,WAKIjF,CADH,cAEQA,EAAAmF,iBAAA,GACOnF,EAAAkF,yBAIJlF,EAFRiF,yBAAA,WAEQjF,CAFwC,sBAExCA,CADgD,mBAK5CA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAETF,EAAAo+I,aAAAv+I,EAAAG,EAAAZ,KAAApP,MAAAyjF,WAAAK,WAEW,IAE5B,GAC0Bh9E,EAAA4J,qBAAA,EAAA29I,EAAA,oBAORvnJ,EADIkF,wBACJlF,GAGIA,EADJiF,yBAAA,sBACIjF,CADgD,mBAM5CA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAA+E,GAAA,IAAA7E,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAETF,EAAAo+I,aAAAp+I,EAAAZ,KAAApP,MAAAyjF,WAAAK,WACU,GAACj0E,GAG5B,GAE0B/I,EAAA4J,qBAAA,EAAA49I,EAAA,uBAYJxnJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAAWjF,EAAAmF,iBAAA,mCAGvBnF,EAHmDkF,wBAGnDlF,iDAvDSA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,GAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,uCAOO7yC,EAAAoF,oBAAA,GACApF,EADA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAyjF,WAAAK,WAAA,MACAh9E,CADoD,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAU/BxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAAu+I,aAWrBznJ,EAAAoF,oBAAA,GASApF,EATA6I,qBAAA,UAAAK,EAAAZ,KAAApP,MAAAyjF,WAAAK,WAAA,OASAh9E,CAPC,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAS8BxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAAu+I,uCAsB3CznJ,EALJiF,yBAAA,WAKIjF,CADH,cAEOA,EAAAmF,iBAAA,GAEJnF,EAAAkF,yBACAlF,EAAAkB,oBAAA,wBAKJlB,EAAAkF,iEARQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAAZ,KAAApP,MAAAomC,MAAAuT,OAAA,iDApTpBt7C,4BAwUsC,eAAAmwJ,EAAzBC,EAAyB,WA4E9B,OAAAjwJ,EAHJ,SAAAiwJ,EACYjvJ,EACAD,GAA0Bd,EAAAC,KAAA+vJ,GAD1B/vJ,KAAAc,OACAd,KAAAa,YAzEIb,KAAAozI,MAAO,EACNpzI,KAAAgwJ,cAAgB,IAAIpmJ,EAAAoV,aAE9Bhf,KAAAgvJ,qBAAiC,GAExBhvJ,KAAAiwJ,eAAiBjwJ,KAAKc,KAAK2W,gBAAgB3U,QACvD1C,EAAAob,QAAO,SAACxY,GAAC,QAAOA,CAAC,MACjB5C,EAAAwxB,WAAU,SAACxZ,GAAG,SACV/X,EAAA6vJ,YAAW,CAAEr8I,UAAWuE,EAAI/E,KAAMvQ,QAC9B1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAEnX,KAAM,IAAK,GACpC,MAELrC,EAAAkb,KAAI,SAACywE,GAAG,OAAKA,EAAItpF,IAAI,MACrBrC,EAAAsyB,aAAY,IAGA1yB,KAAA6vJ,YAAc,IAAIrxH,MAAM,IAAQC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGitC,GAC5D,IAAMj2B,EAAOge,KAAK6I,MAAMoP,EAAM,GACxBnP,EAAWmP,EAAM,EAAK,GAC5B,MAAO,CACH58B,GAAI2G,EAAO8mB,EAAU,GACrBx/B,SAAOqvB,EAAAzV,KAAI,IAAIpB,KAAQ,CAAE8mB,MAAO5mB,EAAM8mB,YAE9C,GAEO9gC,KAAAmvJ,gBAAkB,CACrB,QACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YAGYnvJ,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACjCv2B,GAAI,IAAI9J,EAAAsgC,YAAW,WAAA9lC,UAAYzD,EAAAs/B,cAAa,KAC5ChsB,KAAM,IAAIrK,EAAAsgC,YAAY,IAAKtgC,EAAAugC,WAAWC,UACtCx2B,KAAM,IAAIhK,EAAAsgC,YAAY,GAAItgC,EAAAugC,WAAWC,UACrCrC,MAAO,IAAIn+B,EAAAqgC,UAAU,CACjB06C,aAAc,IAAI/6E,EAAAsgC,aAAY,GAC9BoR,OAAQ,IAAI1xC,EAAAsgC,aAAY,KAE5Bk7C,WAAY,IAAIx7E,EAAAqgC,UAAU,CACtBsR,OAAQ,IAAI3xC,EAAAsgC,YAAY,IACxB27C,UAAW,IAAIj8E,EAAAsgC,YAAY,IAC3Bs7C,WAAY,IAAI57E,EAAAsgC,YAAY,GAC5By7C,WAAY,IAAI/7E,EAAAsgC,YAAY,MAC5Bo7C,UAAW,IAAI17E,EAAAsgC,YAAY,UAC3Bq7C,SAAU,IAAI37E,EAAAsgC,YAAY,SAC1Bu7C,WAAY,IAAI77E,EAAAsgC,YAAY,CAAC,EAAG,KAChCw7C,UAAW,IAAI97E,EAAAsgC,YAAY,IACvBlZ,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,WAAO,EAC9B/E,EAAA+C,UAAS5Z,KAAKuX,OAAOqE,YAEzB6vD,aAAc,IAAIh8E,EAAAsgC,YAAY,OAWnC,EAAC,EAAAxoC,IAAA,cAAAiE,IAPJ,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,cAAAC,MAOM,SAAY87B,GACXA,EAAQwnD,SAAW5kF,KAAK4kF,UACxB5kF,KAAKgvJ,qBAAuBjmI,OAAOC,KAC/BhpB,KAAK4kF,QAAQG,YAAc,IAE/B/kF,KAAK0Q,KAAKe,WAAWzR,KAAK4kF,UAG1BxnD,EAAQg2G,MACRpzI,KAAKozI,OAASh2G,EAAQg2G,KAAK59B,gBAC1Bp4E,EAAQg2G,KAAK+c,aAEdnwJ,KAAKksC,MAEb,GAAC,CAAA7qC,IAAA,eAAAC,MAEM,SAAaytB,EAAenL,IAC1BmL,IAAUnL,IACXmL,EAAQnL,IAAKA,EAAMmL,EAAQ,KAC/B/uB,KAAK0Q,KAAKe,WAAW,CAAEszE,WAAY,CAAEK,WAAY,CAACr2D,EAAOnL,MAC7D,GAAC,CAAAviB,IAAA,cAAAC,MAEM,SAAYytB,EAAenL,IACzBmL,IAAUnL,IACXmL,EAAQnL,IAAKA,EAAMmL,GACvB/uB,KAAK0Q,KAAKe,WAAW,CACjBszE,WAAY,CACRM,UAAW,IACP10D,EAAA6C,YAAWzE,GAAO2G,WAAO,EACzB/E,EAAA+C,UAAS9P,GAAK8R,cAI9B,GAAC,CAAAr0B,IAAA,OAAAC,MAEM,WACH,IAAKtB,KAAK0Q,KAAKgE,MACX,SAAOpU,EAAAqU,aAAW,kCAAA5Q,UACoBzD,EAAAsU,kBAC9B5U,KAAK0Q,MACPmE,KAAK,MAAK,MAKpB,QAFMvT,EAAQtB,KAAK0Q,KAAKse,cAExBsnE,EAAA,EAAA85D,EADuBrnI,OAAOC,KAAK1nB,EAAMyjF,YACTuR,EAAA85D,EAAAprJ,OAAAsxF,IAAE,CAA7B,IAAMj1F,EAAG+uJ,EAAA95D,GACLt2F,KAAKgvJ,qBAAqBppJ,SAASvE,WAC7BC,EAAMyjF,WAAW1jF,EAEhC,CACArB,KAAKgwJ,cAAc9wI,KAAK5d,EAC5B,IAAC,CAjIiC,GAiIjCwuJ,SAjIQC,0CAAyB3nJ,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAzBwnJ,EAAyBjnJ,UAAA,yBAAAqW,OAAA,CAAAylE,QAAA,UAAAwuD,KAAA,QAAAh0H,QAAA,CAAA4wI,cAAA,iBAAAjnJ,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,GAAAkE,OAAA,w+EAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlUlBhB,EAHZiF,yBAAA,UAGYjF,CAH4C,UAG5CA,CAFiC,UAEjCA,CAD8B,aACZA,EAAAmF,iBAAA,UAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAG7BlF,EAFRiF,yBAAA,qBAEQjF,CAF6B,iBAE7BA,CAD2C,mBACrBA,EAAAmF,iBAAA,eAAQnF,EAAAkF,yBAC9BlF,EAAA4J,qBAAA,GAAAq+I,EAAA,mDAMJjoJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAAWjF,EAAAmF,iBAAA,+BAEnBnF,EAF2CkF,wBAE3ClF,KAEIA,EADJiF,yBAAA,WACIjF,CAD8B,cACZA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,WAAMjF,EAAAmF,iBAAA,QAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QAACnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAMAlB,EAAAiF,yBAAA,gBAAWjF,EAAAmF,iBAAA,+BAGvBnF,EAH+CkF,wBAG/ClF,OAGQA,EAFRiF,yBAAA,YAEQjF,CAFuD,WAEvDA,CAD8B,sBAM1BA,EAAAmF,iBAAA,yBAERnF,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,GAAAs+I,EAAA,uBASRloJ,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADuB,cACLA,EAAAmF,iBAAA,uBAAgBnF,EAAAkF,yBAE9BlF,EADJiF,yBAAA,sBACIjF,CADiC,oBAI7BA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA2lJ,qBAAA79I,KAAA9H,EAAA2lJ,qBAAA79I,IAAA,GAIA/I,EAAAiF,yBAAA,oBAA2BjF,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,oBAA8BjF,EAAAmF,iBAAA,gBAASnF,EAAAkF,yBACvClF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,uBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,uBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,uBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,yBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBACIjF,EAAAmF,iBAAA,sBACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,oBAAiCjF,EAAAmF,iBAAA,gBACrCnF,EAD8CkF,wBAC9ClF,GACAA,EAAAiF,yBAAA,gBAAWjF,EAAAmF,iBAAA,+BAEnBnF,EAF2CkF,wBAE3ClF,KAsNAA,EArNA4J,qBAAA,GAAAu+I,EAAA,aAqNAnoJ,CAjNC,GAAAooJ,EAAA,aAiNDpoJ,CAlMC,GAAAqoJ,EAAA,aAkMDroJ,CAnLC,GAAAsoJ,EAAA,aAmLDtoJ,CAzIC,GAAAuoJ,EAAA,aAyIDvoJ,CApHC,GAAAwoJ,EAAA,aAoHDxoJ,CA/FC,GAAAyoJ,EAAA,cA+FDzoJ,CA1DC,GAAA0oJ,EAAA,cAyEL1oJ,EAAAkF,gCA1TqClF,EAAA6I,qBAAA,YAAA5H,EAAAqH,MAQItI,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAA4mJ,iBAoCxB7nJ,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,QAAA5H,EAAAqH,KAAApP,MAAAomC,MAAAuT,QAaD7yC,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA2lJ,sBACA5mJ,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,GAAAC,IA8BPxJ,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,WAeAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,cAYAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,eAAAyD,EAAA2lJ,qBAAAppJ,SAAA,eA6CAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,cAqBAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,aAqBAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,cAqCAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,eA8DAwC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2lJ,qBAAAppJ,SAAA,mKAwBJmqJ,CAAyB,2ICnWtC,IAAAnmJ,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,iGA8BgBuK,EAAAiF,yBAAA,UACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,KAAA0c,EAAA4mI,UAAA5mI,EAAA4mI,UAAA5mI,EAAA7oB,OAAA6oB,EAAA7oB,QAAA,UA7BpB3B,mBA+D6B,eAAAqxJ,EAAhBC,EAAgB,WAsBzB,OAAAnxJ,EArFJ,SAAAmxJ,IAAAlxJ,EAAAC,KAAAixJ,GAiEoBjxJ,KAAAkxJ,KAAO,EAEPlxJ,KAAA89B,IAAM,IAEN99B,KAAAi4B,IAAM,EASfj4B,KAAAmxJ,SAAU,GAOjB,EAAA9vJ,IAAA,MAAAC,MAGO,WACEtB,KAAKsB,QACNtB,KAAKsB,MAAQtB,KAAKi4B,KAAO,GAO7Bj4B,KAAKsB,OALQtB,KAAKoxJ,SACZ,IAAMpxJ,KAAKkxJ,KACXlxJ,KAAKqxJ,UACL,GAAKrxJ,KAAKkxJ,KACVlxJ,KAAKkxJ,MAAQ,EAEflxJ,KAAKsB,MAAQtB,KAAK89B,MAClB99B,KAAKsB,MAAQtB,KAAK89B,KAAO,IAE7B99B,KAAK0/B,SAAS1/B,KAAKsB,MACvB,GAEA,CAAAD,IAAA,SAAAC,MACO,WACEtB,KAAKsB,QACNtB,KAAKsB,MAAQtB,KAAKi4B,KAAO,GAO7Bj4B,KAAKsB,OALQtB,KAAKoxJ,SACZ,IAAMpxJ,KAAKkxJ,KACXlxJ,KAAKqxJ,UACL,GAAKrxJ,KAAKkxJ,KACVlxJ,KAAKkxJ,MAAQ,EAEflxJ,KAAKsB,MAAQtB,KAAKi4B,MAClBj4B,KAAKsB,MAAQtB,KAAKi4B,KAAO,GAE7Bj4B,KAAK0/B,SAAS1/B,KAAKsB,MACvB,GAEA,CAAAD,IAAA,WAAAC,MAIO,SAASg8B,GACRA,EAAYt9B,KAAKi4B,MAAKqF,EAAYt9B,KAAKi4B,KACvCqF,EAAYt9B,KAAK89B,MAAKR,EAAYt9B,KAAK89B,KACtCR,EAAYt9B,KAAKkxJ,KAAQ,GAAM,IAChC5zH,EACItF,KAAK41D,MAAMtwD,GAAa,EAAIt9B,KAAKkxJ,QAAU,EAAIlxJ,KAAKkxJ,OAE5DlxJ,KAAKsB,MAAQg8B,EAETt9B,KAAK+8B,WACL/8B,KAAK+8B,UAAUO,EAEvB,GAEA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKsB,MAAQA,CACjB,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,IAAC,CApGwB,GAoGxBk0H,SApGQC,yCAAgB,kDAAhBA,EAAgBnoJ,UAAA,gBAAAqW,OAAA,CAAA+xI,KAAA,OAAApzH,IAAA,MAAA7F,IAAA,MAAA84H,UAAA,aAAAhoJ,SAAA,CAAAX,EAAAknB,6BATd,CACP,CACI/iB,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAM6wH,CAAgB,GAC9C5wH,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,gtBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA1DGhB,EAAAiF,yBAAA,WAQIjF,EALA4I,qBAAA,kCAAA3H,EAAAgoJ,WAAoC,CAAI,KAAAjpJ,EAAAwlH,0BAKxCxlH,CALyC,oCAAAiB,EAAA+nJ,UACJ,CAAI,KAAAhpJ,EAAAwlH,0BAIzCxlH,CAJ0C,iCAAAiB,EAAA+nJ,UACR,CAAI,KAAAhpJ,EAAAwlH,0BAGtCxlH,CAHuC,gCAAAiB,EAAAgoJ,WACL,CAAK,KAAAjpJ,EAAAwlH,0BAEvCxlH,CAFwC,kCAAAiB,EAAA+nJ,UACL,CAAK,KAAAhpJ,EAAAwlH,0BACxCxlH,CADyC,+BAAAiB,EAAA+nJ,UACT,CAAK,KAAAhpJ,EAAAwlH,2BAErCxlH,EAAAiF,yBAAA,cAOIjF,EAAA4I,qBAAA,0BAAS3H,EAAA8pC,QAAQ,GAEjB/qC,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,YACdnF,EADoBkF,wBACpBlF,GACAA,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAs/I,EAAA,cAGAlpJ,EAAAiF,yBAAA,aAGIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA/H,MAAA6P,KAAA9H,EAAA/H,MAAA6P,IAAA,GAEA/I,EADA4I,qBAAA,0BAAA3H,EAAA8nJ,SAAmB,CAAI,EACvB/oJ,CADwB,kBAChBiB,SAAAq2B,UAAAr2B,EAAA/H,OAAgB+H,EAAA8nJ,SAAY,CAAK,GAGjD/oJ,EARIkF,wBAQJlF,GACAA,EAAAiF,yBAAA,cAOIjF,EAAA4I,qBAAA,0BAAS3H,EAAAs7C,KAAK,GAEdv8C,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,SAElBnF,EAFqBkF,wBAErBlF,YAhCQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAA5H,EAAA/H,OAAA+H,EAAA/H,QAAA+H,EAAA4uB,KASO7vB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA8nJ,SAMH/oJ,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAApU,EAAA/H,OAYJ8G,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAAA5H,EAAA/H,QAAA+H,EAAAy0B,oIAiBHmzH,CAAgB,qLClE7B,IAAArnJ,EAAA/L,EAAA,MAOA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OACA8yB,EAAA9yB,EAAA,sFAiDgBuK,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iDADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,UAAAk9I,EAAA,KAAAA,EAAAl+I,GAAA,iCAmBAjL,EAAAkB,oBAAA,yEAfJlB,EAAAiF,yBAAA,eAWIjF,EAAA4I,qBAAA,uBAAAwgJ,EAAAppJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAxrB,SAAA8xH,EAAAn+I,IAAgB,GAGzBjL,EAAAmF,iBAAA,gCACAnF,EAAA4J,qBAAA,EAAAy/I,EAAA,cAKArpJ,EAAAkB,oBAAA,YAIJlB,EAAAkF,iFAdIlF,EALAiX,sBAAA,oBAAAmyI,EAAAn+I,KAAA63C,EAAAwmG,YAKAtpJ,CALkD,kBAAAopJ,EAAAG,SAKlDvpJ,CAJsC,yBAAAopJ,EAAAn+I,KAAA63C,EAAAwmG,YAItCtpJ,CAHuD,oBAAAopJ,EAAAn+I,KAAA63C,EAAAwmG,YAGvDtpJ,CAFkD,eAAAopJ,EAAAn+I,KAAA63C,EAAAwmG,YAElDtpJ,CAD6C,cAAAopJ,EAAAn+I,KAAA63C,EAAAwmG,aAG7CtpJ,EAAA6I,qBAAA,WAAAugJ,EAAAn+I,GAAA63C,EAAAsrF,MAAAgb,EAAAn+I,GAAA63C,EAAAq8B,IAEAn/E,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,KAAAm9I,EAAAn+I,GAAA,UAIKjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAi6C,EAAA0mG,QAAAJ,EAAAn+I,KA1DzB1T,wBA8EI,eAAAkyJ,EADSC,EACT,SAAAlxJ,GAiBA,SAAAkxJ,EAAoBjxJ,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA8xJ,IAC1C7wJ,EAAAC,EAAAlB,KAAA8xJ,IADgBjxJ,YAdJI,EAAAu1I,KAAO,EACPv1I,EAAAsmF,GAAkB,GAAbztE,KAAKuX,MACVpwB,EAAA8wJ,eAAiB,EACjB9wJ,EAAA2wJ,SAAQjhI,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UACxCz0B,EAAA4Q,KAAeiI,KAAKuX,MACpBpwB,EAAAywJ,eAAsB/gI,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAC7Cz0B,EAAAg9B,OAAS,EACTh9B,EAAA+wJ,UAAwB,GA6Cf/wJ,EAAA47B,iBAAmB,SAACC,GAAE,OAAM77B,EAAK87B,UAAYD,CAAE,EAC/C77B,EAAA+7B,kBAAoB,SAACF,GAAE,OAAM77B,EAAKg8B,SAAWH,CAAE,EAAE77B,CArCjE,CAACG,SAAA0wJ,EAAAlxJ,GAAAd,EAAAgyJ,EAAA,EAAAzwJ,IAAA,WAAAC,MAEM,WACHtB,KAAKiyJ,eACT,GAAC,CAAA5wJ,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQ20H,gBACR/xJ,KAAKiyJ,eAEb,GAAC,CAAA5wJ,IAAA,WAAAC,MAEM,SAASg8B,GACZ,KAAIA,EAAYt9B,KAAKw2I,MAAQl5G,GAAat9B,KAAKunF,IAC/C,KAAM11E,EAAO,IAAIiI,KAAKwjB,GACtBt9B,KAAK6R,QAAO8e,EAAAzV,KAAIlb,KAAK6R,KAAM,CACvBA,KAAMA,EAAKqgJ,UACXluE,MAAOnyE,EAAKsgJ,WACZC,KAAMvgJ,EAAKwgJ,gBACZ38H,UACH11B,KAAK0xJ,eAAc/gI,EAAA6C,YAAWxzB,KAAK6R,MAAM6jB,UACrC11B,KAAK+8B,WAAW/8B,KAAK+8B,UAAUO,EAAS,CAChD,GAAC,CAAAj8B,IAAA,aAAAC,MAEM,SAAWA,GACdtB,KAAK6R,KAAOvQ,EACZtB,KAAK0xJ,eAAc/gI,EAAA6C,YAAWlyB,GAAOo0B,UACrC11B,KAAKi+B,OAAS,EACdj+B,KAAKiyJ,eACT,GAAC,CAAA5wJ,IAAA,cAAAC,MAEM,SAAY6nG,GACfnpG,KAAKi+B,QAAUkrE,EACfnpG,KAAKiyJ,eACT,GAAC,CAAA5wJ,IAAA,gBAAAC,MAKM,WASH,QARM28B,EACFj+B,KAAKa,UAAUyE,IAAI,mBAAqBtF,KAAK+xJ,eAC3ClgJ,KAAO8e,EAAAkiH,WAAU7yI,KAAK6R,KAAM7R,KAAKi+B,QACnClP,KAAQ4B,EAAA2hI,gBAAY3hI,EAAA4hI,cAAa1gJ,GAAO,CACxC2gJ,aAAcv0H,IAEZ5M,KAAMV,EAAA6C,YAAW1Z,KAAKuX,OACtBre,EAAO,GACNA,EAAKhO,OAAS,IACjBgO,EAAKimB,KAAK,CACN5lB,GAAI0b,EAAM2G,UACV+8H,WAAS9hI,EAAA2a,UAASvc,EAAOsC,GACzBsgI,YAAUhhI,EAAA+hI,aAAY3jI,EAAOld,KAEjCkd,KAAQ4B,EAAAoQ,SAAQhS,EAAO,GAE3B/uB,KAAKgyJ,UAAYh/I,CACrB,IAAC,CA5ED,CAAQ1S,EAAA6H,cAAY0pJ,SADXC,0CAAqB1pJ,EAAAC,4BAAAC,EAAAC,iBAAA,kDAArBupJ,EAAqBhpJ,UAAA,oBAAAqW,OAAA,CAAAq3H,KAAA,OAAAjvD,GAAA,KAAAwqE,eAAA,kBAAAhpJ,SAAA,CAAAX,EAAAknB,6BARnB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAM0xH,CAAqB,GACnDzxH,OAAO,KAEdj4B,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,GAAAkE,OAAA,8pCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtEWhB,EAFRiF,yBAAA,UAEQjF,CAFS,UAETA,CAD2C,WAEvCA,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD2B,cAMvBA,EAAA4I,qBAAA,0BAAS3H,EAAAspJ,aAAA,EAAe,GAExBvqJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,kBACdnF,EAD0BkF,wBAC1BlF,GACAA,EAAAiF,yBAAA,cAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAspJ,YAAY,EAAE,GAEvBvqJ,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,oBAGtBnF,EAHmCkF,wBAGnClF,OACAA,EAAAiF,yBAAA,YAGIjF,EAAA4J,qBAAA,GAAA4gJ,EAAA,4CAMJxqJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,YACIjF,EAAA4J,qBAAA,GAAA6gJ,EAAA,iBA0BRzqJ,EADIkF,wBACJlF,UA5DYA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,WAAAhL,EAAA2oJ,UAAA,QAAA3oJ,EAAA2oJ,UAAA,GAAA3+I,KAAAhK,EAAAwI,KAAA,kBAOIzJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAA5H,EAAA2oJ,UAAA,QAAA3oJ,EAAA2oJ,UAAA,GAAA3+I,IAAAhK,EAAAmtI,MASApuI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,kBAAA5H,EAAA2oJ,UAAA,SAAA3oJ,EAAA2oJ,UAAA,IAAA3+I,IAAAhK,EAAAk+E,IAYYn/E,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAA+0G,sBAAA,KAAA9zG,EAAA2oJ,UAAA,MAUA5pJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2oJ,kGAiCvBF,CACT,kLCxGJ,IAAAloJ,EAAA/L,EAAA,MAQA0L,EAAA1L,EAAA,OAKAgyG,EAAAhyG,EAAA,OACA8yB,EAAA9yB,EAAA,OACAg0C,EAAAh0C,EAAA,+CAsBYuK,EAAAiF,yBAAA,UAAwBjF,EAAAg+F,uBAAA,GAAyBh+F,EAAAkF,uFAI7ClF,EADJiF,yBAAA,UACIjF,CAD0D,qBAMtDA,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAouB,SAAAvuB,GAAgB,GAEzC/I,EADKkF,wBACLlF,6CANQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,UAAAK,EAAAO,KAGAzJ,CAHgB,OAAAkJ,EAAAklI,KAGhBpuI,CAFa,KAAAkJ,EAAAsqI,MAEbxzI,CADY,iBAAAkJ,EAAAwhJ,aA3BhCnzJ,qBA4CI,eAAAozJ,EADSC,EACT,SAAAhgH,GA2BA,SAAAggH,EAAoBv8C,GAAmB,IAAAx1G,EAAAlB,SAAAC,KAAAgzJ,IACnC/xJ,EAAAC,EAAAlB,KAAAgzJ,IADgBv8C,YAvBEx1G,EAAAgyJ,aAAoBtiI,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAIjDz0B,EAAA6xJ,WAAqB,EAGrB7xJ,EAAAiyJ,OAAQ,EAEjBjyJ,EAAA4Q,KAAeiI,KAAKuX,MAAMpwB,CAgBjC,CAEAG,SAAA4xJ,EAAAhgH,GAAAlzC,EAAAkzJ,EAAA,EAAA3xJ,IAAA,YAAAiE,IAVA,WAAoB,IAAA6tJ,EAAAC,EAChB,OAAoB,QAAbD,EAAAnzJ,KAAKqzJ,gBAAQ,IAAAF,OAAA,EAAbA,EAAenrF,WAAwB,QAAjBorF,EAAIpzJ,KAAKqzJ,gBAAQ,IAAAD,OAAA,EAAbA,EAAenrF,QACpD,GAAC,CAAA5mE,IAAA,OAAAiE,IASD,WACI,OAAO,IAAIwU,KAAK9Z,KAAKizJ,aAAS,EAAKtiI,EAAA6C,YAAW,IAAI1Z,KACtD,GACA,CAAAzY,IAAA,QAAAiE,IACA,WACI,OAAO,IAAIwU,KAAK9Z,KAAKszJ,WAAO,EAAK3iI,EAAAmiH,aAASniH,EAAA+C,UAAS,IAAI5Z,MAAS,EACpE,GAAC,CAAAzY,IAAA,WAAAC,MAEM,WACHtB,KAAKqzJ,SAAWrzJ,KAAKy2G,UAAUnxG,IAAIiE,EAAAgqJ,WACnCvzJ,KAAK6R,KAAOiI,KAAKuX,KACrB,GAEA,CAAAhwB,IAAA,WAAAC,MAIO,SAASg8B,GAAiB,IAAAk2H,EAEvBC,EAAW,IAAI35I,KAAK9Z,KAAK6R,MAC3B6hJ,KAAW/iI,EAAAzV,KAAIoiB,EAAW,CAC1BsD,MAAO6yH,EAASz0H,WAChB8B,QAAS2yH,EAASx0H,eACnBvJ,UAECg+H,EAAW1zJ,KAAKw2I,KAAK9gH,YACrBg+H,EAAW1zJ,KAAKw2I,KAAK9gH,WAEzB11B,KAAK6R,KAAO6hJ,EACR1zJ,KAAK+8B,WACL/8B,KAAK+8B,UAAU22H,GAEN,QAAbF,EAAAxzJ,KAAK2zJ,gBAAQ,IAAAH,GAAbA,EAAe9rJ,OACnB,GAGA,CAAArG,IAAA,aAAAC,MAIO,SAAWA,GAAa,IAAAsyJ,EAC3B5zJ,KAAK6R,KAAOvQ,GAASwY,KAAKuX,MACb,QAAbuiI,EAAA5zJ,KAAK2zJ,gBAAQ,IAAAC,GAAbA,EAAelsJ,OACnB,GAGA,CAAArG,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,GAAC,CAAAz7B,IAAA,mBAAAC,MAEM,SAAiBs7B,GACpB58B,KAAK48B,SAAWA,CACpB,IAAC,CAjGD,CAAQiV,EAAA1pC,cAAY4qJ,SADXC,0CAAkB5qJ,EAAAC,4BAAAD,EAAAkwG,UAAA,kDAAlB06C,EAAkBlqJ,UAAA,mBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,2BA0BhBymG,EAAA2C,uBAAsB,+PAlCtB,CACP,CACIjmG,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAM4yH,CAAkB,GAChD3yH,OAAO,KAEdj4B,EAAAY,sCAAAm9F,mBAAAv0F,EAAA3I,MAAA,GAAAC,KAAA,EAAAkE,OAAA,sgBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,kCA7BOhB,EATJiF,yBAAA,aASIjF,CADH,SAEOA,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD6D,cACnDA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KACAA,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAA6hJ,EAAA,cACJzrJ,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA8hJ,EAAA,yBAAA1rJ,EAAA2c,0EAbI3c,EAAAiX,sBAAA,aAAAhW,EAAAuzB,UADAx0B,EAFA6I,qBAAA,UAAA8iJ,EAEA3rJ,CAF2B,WAAAiB,EAAAuzB,UAOvBx0B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAhL,EAAAwI,KAAAxI,EAAA6pJ,MAAA,mCAOG9qJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA2qJ,eAuBNhB,CACT,qJC7DJ,IAAAppJ,EAAA/L,EAAA,MAOA8yB,EAAA9yB,EAAA,2EAmCgBuK,EAAAiF,yBAAA,WAKIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iDADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA4/I,EAAA,kCAWJ7rJ,EAAAkB,oBAAA,iCAIAlB,EAAAkB,oBAAA,iCAIAlB,EAAAkB,oBAAA,iCAIAlB,EAAAkB,oBAAA,iCAWAlB,EAAAkB,oBAAA,yEA/BJlB,EAAAiF,yBAAA,cAMIjF,EADA4I,qBAAA,uBAAAwgJ,EAAAppJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAgpG,WAAA1C,EAAAn+I,IAAkB,EAC3BjL,CAD4B,4BAAAopJ,EAAAppJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACd05C,EAAAipG,eAAA3C,EAAAn+I,IAAsB,GAcpCjL,EAZA4J,qBAAA,EAAAoiJ,EAAA,aAYAhsJ,CATC,EAAAisJ,EAAA,aASDjsJ,CALC,EAAAksJ,EAAA,aAKDlsJ,CADC,EAAAmsJ,EAAA,cAKDnsJ,EAAAiF,yBAAA,YAKIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAwiJ,EAAA,cAIJpsJ,EAAAkF,iFAhCIlF,EAAAiX,sBAAA,yBAAAmyI,EAAAiD,UAAAjD,EAAAkD,QACAtsJ,EAAA6I,qBAAA,WAAAugJ,EAAA50H,UAKKx0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAugJ,EAAAmD,cAAAnD,EAAAiD,WAAAjD,EAAAkD,QAIAtsJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAugJ,EAAAiD,UAAAvpG,EAAA0pG,iBAIAxsJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAugJ,EAAAkD,QAAAxpG,EAAA0pG,iBAIAxsJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAugJ,EAAAiD,UAAAjD,EAAAkD,QAMDtsJ,EAAAoF,sBAAApF,EAAAiX,sBAAA,cAAAmyI,EAAAG,UAEAvpJ,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,KAAAm9I,EAAAn+I,GAAA,UAGCjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAugJ,EAAAr9G,WA9DrBx0C,6BAsEuC,eAAAk1J,EAA1BC,EAA0B,WAiHtC,OAAAh1J,EAvLD,SAAAg1J,IAAA/0J,EAAAC,KAAA80J,GAwE0B90J,KAAAizJ,aAAoBtiI,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAIjD11B,KAAA+xJ,eAAyB,EAMzB/xJ,KAAAgkF,SAAQrzD,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAE9B11B,KAAA+0J,YAAc,IAAInrJ,EAAAoV,aAElBhf,KAAAg1J,UAAY,IAAIprJ,EAAAoV,aAE1Bhf,KAAAi1J,aAAe,KAEfj1J,KAAAk1J,SAAW,GACXl1J,KAAAm1J,WAAa,IA4FvB,EAAA9zJ,IAAA,kBAAAiE,IA1FG,WACI,OACItF,KAAK4jB,KACL5jB,KAAK4jB,IAAM5jB,KAAK+uB,SAChB,EAAC4B,EAAAoC,WAAU/yB,KAAK4jB,IAAK5jB,KAAK+uB,MAElC,GAAC,CAAA1tB,IAAA,WAAAC,MAEM,WACHtB,KAAKo1J,eACLp1J,KAAKq1J,eACT,GAAC,CAAAh0J,IAAA,cAAAC,MAEM,SAAY87B,GACXA,EAAQ20H,iBACR/xJ,KAAKo1J,eACLp1J,KAAKq1J,iBAELj4H,EAAQrO,QACR/uB,KAAKq1J,gBACLr1J,KAAKgkF,MAAQhkF,KAAK+uB,OAASjV,KAAKuX,OAEhC+L,EAAQ4mD,OACRhkF,KAAKq1J,gBAELj4H,EAAQxZ,KAAK5jB,KAAKq1J,eAC1B,GAAC,CAAAh0J,IAAA,aAAAC,MAEM,SAAWuQ,IACT7R,KAAK+uB,OAASld,EAAO7R,KAAK+uB,OAC3B/uB,KAAK+uB,MAAQld,EACb7R,KAAK+0J,YAAY71I,KAAKrN,KAEtB7R,KAAK4jB,IAAM/R,EACX7R,KAAKg1J,UAAU91I,KAAKrN,IAExB7R,KAAKq1J,eACT,GAAC,CAAAh0J,IAAA,iBAAAC,MAEM,SAAeuQ,GACb7R,KAAK+uB,QACV/uB,KAAK4jB,IAAM/R,EACX7R,KAAKq1J,gBACT,GAAC,CAAAh0J,IAAA,YAAAC,MAEM,SAAUyoE,EAAeplC,GAC5B,OAAOA,EAAItxB,EACf,GAAC,CAAAhS,IAAA,YAAAC,MAEM,WACHtB,KAAKgkF,SAAQrzD,EAAAkiH,WAAU7yI,KAAKgkF,MAAO,GAAGtuD,UACtC11B,KAAKq1J,eACT,GAAC,CAAAh0J,IAAA,gBAAAC,MAEM,WACHtB,KAAKgkF,SAAQrzD,EAAAkiH,WAAU7yI,KAAKgkF,OAAO,GAAItuD,UACvC11B,KAAKq1J,eACT,GAAC,CAAAh0J,IAAA,gBAAAC,MAEO,WAAa,IAAAL,EAAAjB,KACX+uB,KAAQ4B,EAAA2hI,gBAAY3hI,EAAA4hI,cAAavyJ,KAAKgkF,OAAQ,CAChDwuE,aAAcxyJ,KAAK+xJ,iBAEvB/xJ,KAAKm1J,WAAa32H,MAAMg4G,KAAKh4G,MAAM,IAAOxV,QAAQ1N,IAAI,SAAC8W,GACnD,IAAMvgB,KAAO8e,EAAAoQ,SAAQhS,EAAOqD,GAAGsD,UAC/B,MAAO,CACHriB,GAAIxB,EACJ+qB,SACK37B,EAAKgyJ,cAAatiI,EAAA2a,UAASz5B,EAAM5Q,EAAKgyJ,YACtChyJ,EAAKqyJ,YAAW3iI,EAAA6a,SAAQ35B,EAAM5Q,EAAKqyJ,SACxCn/G,YAAUxjB,EAAAoC,WAAUlhB,EAAMiI,KAAKuX,OAC/BojI,YAAU9jI,EAAAoC,WAAUlhB,EAAM5Q,EAAK8tB,OAC/B2lI,UAAQ/jI,EAAAoC,WAAUlhB,EAAM5Q,EAAK2iB,KAC7B+tI,YAAUhhI,EAAA+hI,aAAY7gJ,EAAM5Q,EAAK+iF,OACjC2wE,YACI1zJ,EAAK2iB,KACL/R,MAAQ8e,EAAA6C,YAAWvyB,EAAK8tB,OAAO2G,WAC/B7jB,MAAQ8e,EAAA+C,UAASzyB,EAAK2iB,KAAK8R,UAEvC,EACJ,GAAC,CAAAr0B,IAAA,eAAAC,MAEO,WACJ,IAAMytB,KAAQ4B,EAAA2hI,aAAYx4I,KAAKuX,MAAO,CAClCmhI,aAAcxyJ,KAAK+xJ,iBAEvB/xJ,KAAKk1J,SAAW12H,MAAMg4G,KAAKh4G,MAAM,GAAGxV,QAAQ1N,IAAI,SAAC8W,GAAC,SAC9CzB,EAAAoQ,SAAQhS,EAAOqD,EAAE,EAEzB,IAAC,CAhHkC,GAgHlCyiI,SAhHQC,yCAA0B,kDAA1BA,EAA0BhsJ,UAAA,0BAAAqW,OAAA,CAAA8zI,UAAA,uBAAAK,QAAA,mBAAAvB,eAAA,iBAAAhjI,MAAA,QAAAnL,IAAA,MAAAogE,MAAA,SAAA5kE,QAAA,CAAA21I,YAAA,cAAAC,UAAA,aAAAjsJ,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,48DAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlE3BhB,EADJiF,yBAAA,UACIjF,CAD2C,WAEvCA,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADqC,cACdA,EAAA4I,qBAAA,0BAAS3H,EAAAisJ,eAAe,GAC3CltJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,kBACdnF,EAD0BkF,wBAC1BlF,GACAA,EAAAiF,yBAAA,cAAuBjF,EAAA4I,qBAAA,0BAAS3H,EAAAksJ,WAAW,GACvCntJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,oBAGtBnF,EAHmCkF,wBAGnClF,OAIIA,EAHJiF,yBAAA,WAGIjF,CADH,YAIOA,EAAA4J,qBAAA,GAAAwjJ,EAAA,aAOJptJ,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAyjJ,EAAA,iBAoCJrtJ,EAAAkF,gCA7DQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAAhL,EAAA26E,MAAA,kBAmBwB57E,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA5H,EAAA6rJ,UAOR9sJ,EAAAoF,sBAAepF,EAAf6I,qBAAA,UAAA5H,EAAA8rJ,WAAe/sJ,CAAA,eAAAiB,EAAA+iB,sFAuClC0oI,CAA0B,sLCzFvC,IAAAvrJ,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OACAK,EAAAL,EAAA,OACA8yB,EAAA9yB,EAAA,4MA+BgBuK,EADJiF,yBAAA,UACIjF,CAD6D,2BAOzDA,EADA4I,qBAAA,uBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAeF,EAAAokJ,aAAAvkJ,GAAoB,EACnC/I,CADoC,qBAAA+I,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACvBF,EAAAqkJ,WAAAxkJ,GAAkB,GAEvC/I,EADKkF,wBACLlF,6CAPQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,eAAAK,EAAAskJ,YAAA,MAAAtkJ,EAAAskJ,WAAA1hB,QAAA,KAAA5iI,EAAAskJ,WAAA1hB,QAAA5yI,QAAAgQ,EAAA+f,IAGAjpB,CAH2C,OAAAkJ,EAAAklI,KAG3CpuI,CAFa,KAAAkJ,EAAAsqI,MAEbxzI,CADY,iBAAAkJ,EAAAwhJ,aAhChCnzJ,0BA0CqC,eAAAk2J,EAAxBC,EAAwB,SAAAl1J,GA1CrC,SAAAk1J,IAAA,IAAA70J,EAAAlB,SAAAC,KAAA81J,2BA4C0B7C,aAAoBtiI,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAIjDz0B,EAAA6xJ,WAAqB,EAErB7xJ,EAAA27B,UAAoB,EACpB37B,EAAAiyJ,OAAQ,EAERjyJ,EAAAowB,IAAMvX,KAAKuX,MAAMpwB,EAkBpCG,SAAA00J,EAAAl1J,GAAAd,EAAAg2J,EAAA,EAAAz0J,IAAA,eAAAC,MAVU,SAAauQ,GACX7R,KAAK41J,YACV51J,KAAK41J,WAAW1hB,QAAQx0G,SAAS7tB,EACrC,GAAC,CAAAxQ,IAAA,aAAAC,MAEM,SAAWuQ,GAAY,IAAA2hJ,EACb,QAAbA,EAAAxzJ,KAAK2zJ,gBAAQ,IAAAH,GAAbA,EAAe9rJ,QACV1H,KAAK8wD,UACV9wD,KAAK8wD,SAASojF,QAAQx0G,SAAS7tB,EACnC,IAAC,CA5BgC,CAAQvR,EAAA6H,cAAY0tJ,SAA5CC,qGAAuBx2H,GAAvBw2H,EAAuB,qDAAvBA,EAAuBhtJ,UAAA,uBAAAitJ,eAAA,SAAA3sJ,EAAAC,EAAA2sJ,SAAA,EAAA5sJ,qCAaGG,EAAAgqJ,4CAEFhqJ,EAAAgqJ,6OAEtBr1J,EAAAs0G,uBAAsB,02BA7CzBpqG,EAXJiF,yBAAA,aAWIjF,CADH,WAEOA,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,SAAKjF,EAAAmF,iBAAA,YAAOnF,EAAAkF,yBACZlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAA2BjF,EAAAmF,iBAAA,YAC/BnF,EADoCkF,wBACpClF,GACAA,EAAAiF,yBAAA,YACIjF,EAAAg+F,uBAAA,IACAh+F,EAAAg+F,uBAAA,MACJh+F,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAikJ,EAAA,yBAAA7tJ,EAAA2c,0EAfI3c,EAAAiX,sBAAA,aAAAhW,EAAAuzB,UADAx0B,EAFA6I,qBAAA,UAAA8iJ,EAEA3rJ,CAF2B,WAAAiB,EAAAuzB,UAMvBx0B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,WAAAhL,EAAAusJ,WAAA,KAAAvsJ,EAAAusJ,WAAAt0J,QAAA+H,EAAAgoB,IAAA,oBAIAjpB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,WAAAhL,EAAAynD,SAAA,KAAAznD,EAAAynD,SAAAxvD,QAAA+H,EAAAgoB,IAAA,wBAuBHykI,CAAwB,oKChDrC,IAAAlsJ,EAAA/L,EAAA,MAQA0L,EAAA1L,EAAA,OACA8yB,EAAA9yB,EAAA,8FAwBwBuK,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,oJAAAnF,EAAAoF,sBAAApF,EAAAgM,6BAAA,IAAAgvI,EAAAvxI,KAAAzJ,EAAAiM,sBAAA,IAAA+uI,EAAAvxI,KAAAuxI,EAAA/vI,IAAA,kBAAA0Y,EAAA4X,SAAA,iCAAAy/G,EAAA7vI,KAAA,GAAA6vI,EAAAvxI,KAAA,sCALRzJ,EAAAiF,yBAAA,kBAIIjF,EAAA4J,qBAAA,EAAAkkJ,EAAA,sBAaA9tJ,EAAAmF,iBAAA,GACJnF,EAAAkF,+EAhBIlF,EAAA6I,qBAAA,QAAAmyI,EAAA/vI,IAEejL,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA8a,EAAAywB,OAafp0C,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAse,EAAAywB,MAAA,MA7BxB78C,yBAuDmC,eAAAw2J,EAAtBjI,EAAsB,WAuJlC,OAAApuJ,EA9MD,SAAAouJ,IAAAnuJ,EAAAC,KAAAkuJ,GA2DoBluJ,KAAA89B,IAAM,IAEN99B,KAAAi4B,IAAM,GAENj4B,KAAAkxJ,KAAO,GAMPlxJ,KAAAo2J,eAA2B,GAI3Bp2J,KAAA2jC,UAAW,EAEpB3jC,KAAA8R,SAAW,GAEX9R,KAAAq2J,iBAAqC,IAiI/C,EAAAh1J,IAAA,WAAAC,MA1HU,WACHtB,KAAKq2J,iBAAmBr2J,KAAKs2J,wBACzBt2J,KAAK89B,IACL99B,KAAKi4B,IACLj4B,KAAKkxJ,MAETlxJ,KAAKu2J,eACT,GAAC,CAAAl1J,IAAA,cAAAC,MAEM,SAAY87B,IAGXA,EAAQU,KACRV,EAAQnF,KACRmF,EAAQ8zH,MACR9zH,EAAQxF,MACRwF,EAAQg5H,kBAERp2J,KAAKq2J,iBAAmBr2J,KAAKs2J,wBACzBt2J,KAAK89B,IACL99B,KAAKi4B,IACLj4B,KAAKkxJ,MAETlxJ,KAAKu2J,gBAEb,GAEA,CAAAl1J,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAK8R,SAAWwrB,EAEZt9B,KAAK+8B,WACL/8B,KAAK+8B,WAAWO,EAExB,GAGA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAK8R,SAAWxQ,EAChBtB,KAAKu2J,eACT,GAAC,CAAAl1J,IAAA,mBAAAC,MAEM,SAAiBs7B,GACpB58B,KAAK48B,SAAWA,CACpB,GAGA,CAAAv7B,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,GAAC,CAAAz7B,IAAA,0BAAAC,MAEO,SAAwBw8B,EAAa7F,EAAai5H,GACtD,IAKwC55H,EALlCy7G,EAA2B,GAC7Bn7G,EAAOK,EACLpmB,EAAO7R,KAAK43B,KAAO53B,KAAK43B,KAAO,KAErCP,EAAAa,EACqBl4B,KAAKo2J,gBAAc,IAAxC,IAAA/+H,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0C,KAA/Bi0C,EAAM/0C,EAAAh2B,MACbyxI,EAAO95G,KAAK,CACR5lB,GAAIg5D,EACJx6D,KAAMA,KAAO8e,EAAA2H,YAAWzmB,EAAMw6D,GAAQ32C,eAAYzwB,EAClDsO,KACqB,GAAAxP,UACR4sB,EAAA+jB,gBADT23B,GAAU,KACc,CACd+X,KAAMpsD,KAAK6I,MAAMwrC,EAAU,OAEb,CACdzrC,MAAO5I,KAAK6I,MAAMwrC,EAAS,IAC3BvrC,QAASurC,EAAS,OAGxC,CAAC,OAAA/iD,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CAED,KAAOvB,GAAQkG,GACXi1G,EAAO95G,KAAK,CACR5lB,GAAIukB,EACJ/lB,KAAMA,KAAO8e,EAAA2H,YAAWzmB,EAAM+lB,GAAMlC,eAAYzwB,EAChDsO,KACa,IAATqkB,GAAS,EACHjH,EAAA+jB,gBAAe,CAAE5T,QAAS,GAAK,CAAE01H,MAAM,IACxB,GAAAzyJ,UACZ4sB,EAAA+jB,gBADH9c,GAAQ,KACU,CACdwsD,KAAMpsD,KAAK6I,MAAMjJ,EAAQ,OAEX,CACdgJ,MAAO5I,KAAK6I,MAAMjJ,EAAO,IACzBkJ,QAASlJ,EAAO,QAGlCA,GAAQs5H,EAEZne,SAAOv2H,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE5f,GAAKiL,EAAEjL,EAAE,GAC1B0/H,CACX,GAAC,CAAA1xI,IAAA,gBAAAC,MAEO,WAAa,IAAAm1J,EAAAx1J,EAAAjB,KACS,QAAtBy2J,EAACz2J,KAAKq2J,wBAAgB,IAAAI,GAArBA,EAAuBzxJ,QAChBhF,KAAKq2J,iBAAiBj6G,UAC9B,SAACp5C,GAAC,OAAKA,EAAEqQ,KAAOpS,EAAK6Q,QAAQ,GAEvB,GAAG9R,KAAK0/B,SAAS1/B,KAAKi4B,IACpC,IAAC,CAtJ8B,GAsJ9Bk+H,SAtJQjI,yCAAsB,kDAAtBA,EAAsBplJ,UAAA,uBAAAqW,OAAA,CAAA2e,IAAA,MAAA7F,IAAA,MAAAi5H,KAAA,OAAAt5H,KAAA,OAAAgF,SAAA,WAAAw5H,eAAA,iBAAA55G,MAAA,QAAA7Y,SAAA,YAAA56B,SAAA,CAAAX,EAAAknB,6BARpB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAM8tH,CAAsB,GACpD7tH,OAAO,KAEdj4B,EAAAk4B,gCAAA6lE,mBAAAv0F,EAAA3I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,wKAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,oEAhDWhB,EAFRiF,yBAAA,UAEQjF,CAF+C,qBAE/CA,CADiC,oBAM7BA,EAAA4I,qBAAA,uBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAenI,EAAAq2B,SAAAvuB,GAAgB,GAE/B/I,EAAA4J,qBAAA,EAAA0kJ,EAAA,oBAmBJtuJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAWjF,EAAAg+F,uBAAA,GAEnBh+F,EAF4CkF,wBAE5ClF,0DA3BYA,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,QAAA5H,EAAAyI,SAEA1J,CAFkB,WAAAiB,EAAAuzB,SAElBx0B,CADqB,cAAAiB,EAAAyI,SAAA,YAKE1J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAgtJ,yRA0C9BnI,CAAsB,2ICxEnCrwJ,EAAA,UACAyC,EAAAzC,EAAA,OACA0L,EAAA1L,EAAA,OAEAqxG,EAAArxG,EAAA,OACAqQ,EAAArQ,EAAA,OACA4M,EAAA5M,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACA8M,EAAA9M,EAAA,OACA8P,EAAA9P,EAAA,OACAyQ,EAAAzQ,EAAA,OACAuQ,EAAAvQ,EAAA,OACA0Q,EAAA1Q,EAAA,OAEA6rD,EAAA7rD,EAAA,OAIA84J,GAFA94J,EAAA,OACAA,EAAA,OACAA,EAAA,QACA+4J,EAAA/4J,EAAA,OAEAg5J,GADAh5J,EAAA,OACAA,EAAA,MACAi5J,EAAAj5J,EAAA,MACAk5J,EAAAl5J,EAAA,OAGAm5J,GAFAn5J,EAAA,OACAA,EAAA,OACAA,EAAA,QACAo5J,EAAAp5J,EAAA,OAEAq5J,GADAr5J,EAAA,OACAA,EAAA,QAEAs5J,GADAt5J,EAAA,OACAA,EAAA,MACAi/H,EAAAj/H,EAAA,OACAu5J,EAAAv5J,EAAA,OACAw5J,EAAAx5J,EAAA,OACAy5J,EAAAz5J,EAAA,OACA05J,EAAA15J,EAAA,MACA25J,EAAA35J,EAAA,iNA6BA8B,mBAqB6B,eAAA83J,GAAhBzrJ,GAAgBlM,EAAA,SAAAkM,KAAAjM,EAAAC,KAAAgM,GAAA,GAAAyrJ,UAAhBzrJ,6CAAgB,kDAAhBA,yDAlBL1L,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACAxB,EAAAoF,gBACAtG,EAAA0C,oBACA8B,EAAAuB,mBACAtB,EAAAwB,eACA7E,EAAAkB,gBACA8B,EAAAgC,sBACArB,EAAA6B,iBACA/B,EAAA2B,kBACAxB,EAAA6B,eACAlC,EAAA0B,eACAs/F,EAAAqB,gBACA7mD,EAAAx6C,oBAIKlD,EAAgB,oCA7CzB2qJ,EAAA3D,mBAAkB,CAAA1qJ,EAAA2oG,KAAAzoG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAA0oG,UAAAxoG,EAAA0oG,cAAAltF,EAAAouF,uBAkBlB4kD,EAAAtF,uBAAqB,CAAAxpJ,EAAAmqG,2CAjBrB8kD,EAAAzB,wBAAuB,CAAAptJ,EAAA0oG,UAAAxoG,EAAA0oG,cAAAltF,EAAAouF,uBACvBglD,EAAA1C,4BAA0B,CAAAxsJ,EAAAmqG,2CAG1BokD,EAAAa,uBAAsB,CAAApvJ,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA0pG,qBAAA1pG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAA0oG,UAAA/sF,EAAAupI,aAAAvpI,EAAAszI,UAAAjvJ,EAAAkvJ,UAAArzI,EAAAszI,gBAAAtzI,EAAAuzI,uBAAAvzI,EAAAwzI,sBAAAtzI,EAAA4sF,WAAAuB,EAAAolD,YAAAplD,EAAAqlD,aAAArlD,EAAAslD,cAAAtlD,EAAAulD,WAAAvvJ,EAAA0oG,cAAAu9B,EAAAl9B,oBAAA,CAAArpG,EAAAmpG,UAgBtB6lD,EAAAc,gDAfAtB,EAAA3I,yBAAwB,CAAA7lJ,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA0pG,qBAAA1pG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA/tF,EAAAupI,aAAAvpI,EAAAg0I,UAAAh0I,EAAAszI,UAAA7oB,EAAAgf,SAAAplJ,EAAAkvJ,UAAArzI,EAAAszI,gBAAAtzI,EAAAuzI,uBAAAlvJ,EAAA0oG,cAAA09B,GAAAzP,yBAAAsP,EAAAl9B,oBAAA,oCAIxBqlD,EAAAsB,wBAAuB,CAAAhwJ,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAA0oG,UAAA89B,GAAAqpB,cAAArpB,GAAAspB,eAAA5vJ,EAAA0oG,cAAA69B,GAAAxnC,6BAAA,CAAAr/F,EAAAmpG,4CAGvBylD,EAAAuB,wBAAuB,CAAAnwJ,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA0oG,UAAA/sF,EAAAupI,aAAAnpI,EAAA4sF,WAAAuB,EAAAolD,YAAAplD,EAAAqlD,aAAArlD,EAAAslD,cAAAtlD,EAAAulD,WAAAvvJ,EAAA0oG,cAAA69B,GAAAxnC,4BAAAknC,EAAAl9B,oBAAA,CAAArpG,EAAAmpG,4CACvBqrB,EAAAe,4BAA2B,CAAAv1H,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAAkwJ,mBAAAlwJ,EAAA0pG,qBAAA1pG,EAAA2pG,gBAAA3pG,EAAAulJ,qBAAAvlJ,EAAAwlJ,mBAAAxlJ,EAAAylJ,gBAAAvlJ,EAAA0oG,UAAA/sF,EAAAupI,aAAAvpI,EAAAwpI,SAAA/e,EAAAgf,SAAA6K,GAAAC,UAAAlwJ,EAAAkvJ,UAAAhvJ,EAAA0oG,cAAAunD,GAAAnnD,eAAAm9B,EAAAl9B,mBAH3BslD,EAAA6B,uBAEA5B,EAAAuB,yBAAuB,CAAAnwJ,EAAAmpG,4CAIvB0lD,EAAA4B,yBAAwB,CAAAzwJ,EAAA2oG,KAAAzoG,EAAA0pG,qBAAA1pG,EAAAwwJ,oBAAAxwJ,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAA0oG,UAAA/sF,EAAAupI,aAAAvpI,EAAAszI,UAAA7oB,EAAAgf,SAAA6K,GAAAC,UAAAlwJ,EAAAkvJ,UAAA1oB,GAAAqpB,cAAArpB,GAAAspB,eAAA5vJ,EAAA0oG,cAAAunD,GAAAnnD,eAjBxBilD,EAAA3D,oBAAkB,oCAmBlBqE,EAAAtH,0BAAyB,CAAAznJ,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA0pG,qBAAA1pG,EAAA2pG,gBAAA3pG,EAAAulJ,qBAAAvlJ,EAAA4pG,QAAA5pG,EAAAwlJ,mBAAAxlJ,EAAAylJ,gBAAAzlJ,EAAAywJ,cAAA50I,EAAAupI,aAAAvpI,EAAAwpI,SAAA/e,EAAAgf,SAAA6K,GAAAC,UAAAlwJ,EAAAkvJ,UAAAnzI,EAAA4sF,WAAA6nD,EAAAC,YAnBzBxC,EAAA3D,mBAGA4D,EAAA1I,uBAIA6I,EAAAqC,wBAAsB,CAAA9wJ,EAAAmpG,UAAAnpG,EAAAmqG,sOClD1B,IAAA7oG,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OACAmnJ,EAAAnnJ,EAAA,MACA8pD,EAAA9pD,EAAA,OAEAsvI,EAAAtvI,EAAA,KACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,gGAqBwBuK,EANRiF,yBAAA,iBAMQjF,CAFP,UAEOA,CADuB,SAClBA,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,YAAqBjF,EAAAmF,iBAAA,eAAanF,EAAAkF,yBAClClF,EAAAiF,yBAAA,WAAgCjF,EAAAmF,iBAAA,GAExCnF,EAFyDkF,wBAEzDlF,6BARIA,EAAA6I,qBAAA,cAAAooJ,EAAA,KAAAA,EAAA3yJ,OAIS0B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAklJ,EAAA9lJ,MAE2BnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,MAAAklJ,EAAA,KAAAA,EAAA3yJ,6BAMhD0B,EAAA8uD,6BAAA,GA3BRv3D,2BAsCqC,eAAA25J,EAAxBC,EAAwB,WAqBjC,OAAAz5J,EA3DJ,SAAAy5J,IAAA,IAAAt4J,EAAAjB,KAAAD,EAAAC,KAAAu5J,GAwCoBv5J,KAAA8X,SAAQsB,EAAAQ,IAAG,GAAG9W,QAC1B1C,EAAAwxB,WAAU,oBACNu7G,EAAA7mE,kBAAiBxjE,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAiB,GAAE,MAElExZ,EAAAwxB,WAAU,SAAC5e,GAAI,OACXoG,EAAAogJ,IAAG70J,WAAA,EAAAyd,EACIpP,EAAKsI,IAAI,SAACtY,GAAC,SACVgiJ,EAAApE,WAAU59I,EAAEqQ,IAAIvQ,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,KAAK,GAAE,IAExD,MAELxZ,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAqvC,QAAM,IAAErvC,EAAAkG,gBAAazC,OAAAqe,EAAKpf,IAAI,QAAQ,MACjD5C,EAAAsyB,aAAY,IAET1yB,KAAA48B,UAAW,EAyBF58B,KAAA68B,iBAAmB,SAACC,GAAqB,OACpD77B,EAAK87B,UAAYD,CAAE,EACR98B,KAAAg9B,kBAAoB,SAACF,GAAqB,OACrD77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,GAxBrE,EAAAjnB,IAAA,WAAAC,OAAAm4J,EAAAj4J,EAAAC,IAAAC,KAIO,SAAAC,EAAe+E,GAAa,IAAAoR,EAAA,OAAArW,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACXnC,KAAK8X,MAAMhV,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAAlD6U,EAAK7V,EAAA4B,KACX7D,KAAKyb,KAAO3D,GAAOoX,KAAK,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUA,CAAK,GAC3C1G,KAAKyb,OAAMzb,KAAKyb,KAAO,IAAIksC,EAAA6Q,KAAK,CAAE9xD,WACnC1G,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKyb,MAAM,wBAAAxZ,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACjD,SAAA0/B,EAAA/iB,GAAA,OAAA88I,EAAA90J,MAAA3E,KAAA4E,UAAA,IAED,CAAAvD,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKyb,KAAOna,EACF,MAALA,KAAOoF,QAAO1G,KAAKyb,QAAOnb,EAAAkG,eACnC,KAlBA,IAAAizJ,CAkBC,CAvCgC,GAuChCH,SAvCQC,yCAAwB,kDAAxBA,EAAwBzwJ,UAAA,wBAAAC,SAAA,CAAAX,EAAAknB,6BARtB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMm5H,CAAwB,GACtDl5H,OAAO,MAEdp3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,kBAXuBoiB,UAAAC,MAAAC,EAAA,0XArBhBtnB,EADJiF,yBAAA,qBACIjF,CADgD,kBAG5CA,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAAq2B,SAAAvuB,EAAgB,GAOjC/I,EAAA4J,qBAAA,EAAA0nJ,EAAA,kDAWJtxJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAAjF,EAAAulB,iBAAA,KACJvlB,EADoCkF,wBACpClF,GACAA,EAAA4J,qBAAA,EAAA2nJ,EAAA,2DAtBQvxJ,EAAAoF,sBAGApF,EAHA6I,qBAAA,gBAAA5H,EAAAoS,KAAA,KAAApS,EAAAoS,KAAA/U,MAGA0B,CAH4B,WAAAiB,EAAAuzB,SAG5Bx0B,CADqB,oBAAAiB,EAAAoS,MAAApS,EAAAoS,KAAA/U,MAAA2C,EAAAoS,KAAAlI,MAAAlK,EAAAoS,KAAA/U,MAAA,eAOA0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAyO,QAad1P,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAyO,sIAWVyhJ,CAAwB,0SChDrC,IAAAxxF,EAAAlqE,EAAA,OACA+L,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAKAub,GAHAvb,EAAA,OAGAA,EAAA,QACAuC,EAAAvC,EAAA,MAEAyC,EAAAzC,EAAA,OAOA+7J,GADA/7J,EAAA,OACAA,EAAA,kJA4CYuK,EAAAiF,yBAAA,YAMIjF,EAAAkB,oBAAA,YAKAlB,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,YAKIlB,EAJJiF,yBAAA,WAIIjF,CADH,eACgBA,EAAA4I,qBAAA,uBAAA6oJ,EAAAzxJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA4uG,SAAAD,GAAa,GAC/BzxJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,GACAA,EAAAiF,yBAAA,eAAajF,EAAA4I,qBAAA,uBAAA6oJ,EAAAzxJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA6uG,UAAAF,GAAc,GAChCzxJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,iBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,gBAAajF,EAAA4I,qBAAA,uBAAA6oJ,EAAAzxJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA8uG,YAAAH,GAAgB,GAClCzxJ,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,YAI1BnF,EAJ+BkF,wBAI/BlF,iEAxBIA,EAAAkxD,sBAAA,0BAAApO,EAAAjtB,OAAA,QAII71B,EAAAoF,sBAAApF,EAAA6I,qBAAA,SAAA4oJ,4BA6BJzxJ,EAAAkB,oBAAA,8EAGIlB,EADA6I,qBAAA,QAAA2yB,EAAAk7D,SACA12F,CADuB,sCAI3BA,EAAAiF,yBAAA,iBACKjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,gDAORlF,EALJiF,yBAAA,WAKIjF,CADH,iBACwCA,EAAAmF,iBAAA,aACzCnF,EADgDkF,wBAChDlF,iEAvBJA,EAAAiF,yBAAA,YAMIjF,EAAA4I,qBAAA,uBAAA4yB,EAAAx7B,EAAAgJ,wBAAA2E,GAAAwH,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA+uG,YAAAr2H,GAAiB,GAW1Bx7B,EATA4J,qBAAA,EAAAkoJ,EAAA,8BASA9xJ,CAJC,EAAA+xJ,EAAA,kBAID/xJ,CAFK,EAAAgyJ,EAAA,cASThyJ,EAAAkF,iFApBIlF,EAAAkxD,sBAAA,0BAAApO,EAAAjtB,OAAA,QACA71B,EAAA6I,qBAAA,aAAA2yB,EAAA99B,OAIKsC,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA2yB,EAAA99B,OAKMsC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA2yB,EAAA99B,OAKNsC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA2yB,EAAA99B,qEAMTsC,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAy9C,GAAA,IAAA3D,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAA05C,EAAAjtB,OAAAitB,EAAAjtB,OAA2B,EAAC,GAE5B71B,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,kBACdnF,EAD0BkF,wBAC1BlF,6CALIA,EAAA6I,qBAAA,eAAAi6C,EAAAjtB,sEAMJ71B,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA5S,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAA05C,EAAAjtB,OAAAitB,EAAAjtB,OAA2B,EAAC,GAE5B71B,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,mBACdnF,EAD2BkF,wBAC3BlF,6CALIA,EAAA6I,qBAAA,WAAAi6C,EAAAjtB,QAAAitB,EAAAlmD,OAAAkmD,EAAAmvG,0EASAjyJ,EAAAiF,yBAAA,qBAEIjF,EAAA4I,qBAAA,yBAAAklD,EAAA9tD,EAAAgJ,wBAAA8P,GAAA3D,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAW05C,EAAA8uG,YAAA9jG,GAAiB,GAE5B9tD,EAAAiF,yBAAA,YAA+BjF,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAErClF,EADJiF,yBAAA,cACIjF,CADuD,cAC7CA,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,+BAJmCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA+hD,GACT9tD,EAAAoF,yEAzG1C7N,0BA6JqC,eAAA26J,EAAxB7B,EAAwB,SAAA73J,GAyBjC,SAAA63J,EACY8B,EACAC,EACAhjJ,GAAkB,IAAAvW,EAAAlB,SAAAC,KAAAy4J,IAE1Bx3J,EAAAC,EAAAlB,KAAAy4J,IAJQ8B,aACAt5J,EAAAu5J,WACAv5J,EAAAuW,UA1BLvW,EAAA+R,KAAiB,GAEjB/R,EAAAw5J,WAAa,IAAIrhJ,EAAAuB,gBAA0B,IAC1C1Z,EAAA09F,aAAe,IAAIvlF,EAAAuB,gBAAiC,IAC5C1Z,EAAA29F,YAAc39F,EAAK09F,aAAa7jF,eACzC7Z,EAAAg9B,OAAiB,EAEjBh9B,EAAAo5J,WAAqB,EAEZp5J,EAAAunE,WAAa,CAACT,EAAA0B,MAAO1B,EAAAyB,OAErBvoE,EAAAy5J,WAAUthJ,EAAA2I,eAAc,CACpC9gB,EAAK29F,YACL39F,EAAKw5J,aACN33J,QAAK1C,EAAAkb,KAAI,SAAArV,GAAA,IAAA6B,EAAAma,EAAAhc,EAAA,GAAQ00J,EAAG7yJ,EAAA,UAALA,EAAA,GAAgB0T,OAAO,SAAC4W,GAAC,OAAKuoI,EAAI/0J,SAASwsB,EAAE/e,GAAG,EAAC,IAgHnDpS,EAAA47B,iBAAmB,SAACC,GAAyB,OACxD77B,EAAK87B,UAAYD,CAAE,EACR77B,EAAA+7B,kBAAoB,SAACF,GAAyB,OACzD77B,EAAKg8B,SAAWH,CAAE,EAAE77B,CApGzB,CAACG,SAAAq3J,EAAA73J,GAAAd,EAAA24J,EAAA,EAAAp3J,IAAA,SAAAiE,IAbD,WACI,OAAOtF,KAAKgT,KAAKhO,OAAShF,KAAK2+F,aAAaxmF,WAAWnT,OAAS,CACpE,GAAC,CAAA3D,IAAA,kBAAAC,MAkBM,WAAe,IAAAwD,EAAA9E,KAClBA,KAAKwD,QACD,kBACA,WACI,IAAMyqH,EAAMnpH,EAAK81J,SAAS3yD,cAAcuP,wBACxC1yG,EAAKu1J,WAAariI,KAAK6I,MAAMotF,EAAI9mH,MAAQ,IAC7C,EACA,KAEJnH,KAAK6S,aACD,iBACA7S,KAAK4+F,YAAY7rF,UAAU,SAACC,GACxB,IACwBskB,EADlBxO,EAAUhkB,EAAK21J,WAAWtiJ,WAAWkf,EAAAa,EAC1BpP,GAAO,QAAA4R,EAAA,WAAE,IAAfrnB,EAAEikB,EAAAh2B,MACHma,EAAOzI,EAAKkc,KAAK,SAAClsB,IAAC,OAAKA,GAAEqQ,KAAOA,CAAE,GACrCoI,GAAQA,EAAKqjF,UAAY,MACzBh6F,EAAK+1J,YAAYp/I,EAAKs/E,MACtBj2F,EAAK21J,WAAWt4J,KACZ2C,EAAK21J,WAAWtiJ,WAAWqD,OAAO,SAACxY,IAAC,OAAKA,KAAMqQ,CAAE,IAG7D,EARA,IAAAgkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAQC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,GAER,GAAC,CAAA93B,IAAA,WAAAC,MAEM,SAASoM,GACZ1N,KAAKu6J,WAAWO,KAAKptJ,IAAG,EACxBpN,EAAAiiF,YAAW,gCACf,GAAC,CAAAlhF,IAAA,YAAAC,MAEM,SAAUoM,GACb1N,KAAKwX,QAAQzC,KAAK6kJ,EAAAj9C,qBAAsB,CAAEl6G,KAAMiL,GACpD,GAAC,CAAArM,IAAA,cAAAC,MAEM,SAAYoM,GACf1N,KAAK0/B,SAAS1/B,KAAKgT,KAAKwI,OAAO,SAACxY,GAAC,OAAKA,IAAM0K,CAAG,GACnD,GAAC,CAAArM,IAAA,WAAAC,MAEM,SAASwsB,GACPA,EAAMxsB,QACXtB,KAAK0/B,YAASp/B,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAAKpiB,KAAKgT,MAAI,CAAE8a,EAAMxsB,UAC1CwsB,EAAMitI,UAAUC,aAAa15J,MAAQ,GACzC,GAAC,CAAAD,IAAA,cAAAC,MAEM,SAAYoM,GACf1N,KAAK0/B,YAASp/B,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAAKpiB,KAAKgT,MAAI,CAAEtF,KACxC,GAAC,CAAArM,IAAA,cAAAC,MAEM,SAAYma,GACXA,EAAK3V,QACL2V,EAAK3V,MAAQ,KACb2V,EAAK+jF,OAAOy7D,SAEpB,GAAC,CAAA55J,IAAA,eAAAC,OAAA45J,EAAA15J,EAAAC,IAAAC,KAEM,SAAAC,EAAmBmsB,GAAK,IAAAm3B,EAAAiiB,EAAA90C,EAAA/e,EAAAnN,EAAAlG,KAAA,OAAAyB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAE3B,GACW,OAFL8iD,EAA4Bn3B,EAAMm5C,UAEpChiB,EAASiiB,MAAK,CAAAjlE,GAAAE,KAAA,SAEd,KADM+kE,EAAkBjiB,EAAQiiB,OAEtBliE,OAAM,CAAA/C,GAAAE,KAAA,SACZnC,KAAK42B,SAAS,gBAAiB,kBAC3B1wB,EAAKo5F,sBAAsB,GAEtBltE,EAAI,EAAC,YAAEA,EAAI80C,EAAMliE,QAAM,CAAA/C,GAAAE,KAAA,SAAAF,UAAAE,KAAA,EACXnC,KAAKw6J,SAASW,0BAC3Bj0F,EAAM90C,IACT,OAFK/e,EAAEpR,GAAA4B,KAGR7D,KAAKy6J,WAAWt4J,KAAI,GAAA4B,OAAAqe,EAAKpiB,KAAKy6J,WAAWtiJ,YAAU,CAAE9E,KACrDrT,KAAKo7J,YAAYnzD,cAAc3mG,MAAQ,GAAG,QALZ8wB,IAAGnwB,GAAAE,KAAA,iCAAAF,GAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAShD,SAAAq7J,EAAA1+I,GAAA,OAAAu+I,EAAAv2J,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,WAAAC,MAEM,SAASA,GACZtB,KAAKgT,KAAO1R,EACRtB,KAAK+8B,WAAW/8B,KAAK+8B,UAAUz7B,EACvC,GAEA,CAAAD,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKgT,KAAO1R,GAAS,EACzB,GAAC,CAAAD,IAAA,uBAAAC,MAAA,eAAAg6J,EAAA95J,EAAAC,IAAAC,KAOO,SAAAwD,IAAA,IAAA8N,EAAA6uD,EAAA09B,EAAA,OAAA99F,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACmC,GACnB,KADd6Q,EAAOhT,KAAKy6J,WAAWtiJ,YACpBnT,OAAY,CAAAI,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,iBAAA8B,SAAAjD,KAAA,EACKnC,KAAKw6J,SAAS57D,YACnC97F,QAAK1C,EAAAsb,MAAK,IACVzY,YAAW,OACV4+D,EAHWz8D,EAAAvB,KAGY2X,OAAO,SAACxY,GAAC,OAClCgQ,EAAKkc,KAAK,SAACkD,IAAC,OAAKA,KAAMpvB,EAAEqQ,EAAE,EAAC,GAE1BksF,EAAY19B,EAASrmD,OAAO,SAAC2rD,GAAI,OAAKA,EAAK23B,UAAY,GAAG,GAChE9+F,KAAK2+F,aAAax8F,KAAK0/D,GACvB09B,EAAUl3E,QAAQ,SAAC+J,GAAC,cAAYA,EAAEotE,MAAM,GACpCD,EAAUv6F,QAAUgO,EAAKhO,QACzBhF,KAAK05B,cAAc,iBAAiB,yBAAAt0B,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAC3C,gBAAAs/F,IAAA,OAAAg8D,EAAA32J,MAAA3E,KAAA4E,UAAA,EArBA,MAlCA,IAAAs2J,CAuDA,CAnJgC,CAAQ56J,EAAA6H,cAAYmyJ,SAA5C7B,0CAAuBrwJ,EAAAC,4BAAAC,EAAAizJ,WAAAnzJ,EAAAC,4BAAAG,EAAAk2F,gBAAAt2F,EAAAC,4BAAAK,EAAA4P,WAAA,kDAAvBmgJ,EAAuB3vJ,UAAA,uBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,+QARrB,CACP,CACImD,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMq4H,CAAuB,GACrDp4H,OAAO,KAEdj4B,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,WA5CwBC,UAAAC,MAAAC,EAAA,uJAhGcF,UAAAG,MAAAD,EAAA,o5FAZnCtnB,EAAAiF,yBAAA,aAIIjF,EAAA4I,qBAAA,oBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAAmyJ,kBAAiB,KAAApzJ,EAAAwlH,2BAO9BxlH,EALJiF,yBAAA,UAKIjF,CADH,gBACyCA,EAAAmF,iBAAA,SAAGnF,EAAAkF,yBACzClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAA0CvlB,EAAAkF,yBAC1ClF,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAUnI,EAAAgyJ,aAAAlqJ,GAAoB,GAEtC/I,EANIkF,wBAMJlF,GA8BAA,EA7BA4J,qBAAA,EAAAypJ,EAAA,aA6BArzJ,CAxBC,GAAAszJ,EAAA,6CA2DDtzJ,EAVA4J,qBAAA,GAAA2pJ,EAAA,gBAUAvzJ,CAHC,GAAAwzJ,EAAA,iBAaLxzJ,EAAAkF,yBAEIlF,EADJiF,yBAAA,uBACIjF,CADgD,yBAE5CA,EAAA4J,qBAAA,GAAA6pJ,EAAA,uBASJzzJ,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,gCAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAwBnI,EAAAyyJ,SAAA3qJ,GAAgB,GAEhD/I,EARIkF,wBAQJlF,6CA1GQA,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,0BAAAjwD,EAAA40B,OAAA,QAagB71B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2J,MA6BC5K,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAqxJ,UA0BhBtyJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAArE,OAAAqE,EAAAgxJ,YAUAjyJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAArE,OAAAqE,EAAAgxJ,YAWoBjyJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2J,MAYrB5K,EAAAoF,sBAEApF,EAFA6I,qBAAA,kBAAA8qJ,EAEA3zJ,CAF4B,gCAAAiB,EAAAm/D,WAE5BpgE,CAD4C,wlBA2C/CqwJ,CAAwB,mMCnMrC,IAAA7uJ,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAGAkqE,EAAAlqE,EAAA,0HA4DgBuK,EAAAiF,yBAAA,oBAEIjF,EAAA4I,qBAAA,yBAAAgrJ,EAAA5zJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAW05C,EAAA/X,OAAA6oH,GAAY,GAEvB5zJ,EAAAiF,yBAAA,YAAgCjF,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAEtClF,EADJiF,yBAAA,aACIjF,CADuD,cAC7CA,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,+BAJoCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA6nJ,GACV5zJ,EAAAoF,yEA3D1C,SAAgByuJ,EACZ/nB,EACApmH,GAEA,GAAKomH,EACL,KAAMrqE,EAAQ/7C,EAAM+7C,MACdvoE,EAAQwsB,EAAMxsB,MACd64E,EAAY+5D,EAAQ5yI,MAC1B,GAAIA,EAAMsE,SAAS,KAAM,CACrB,IACuB0xB,EADjBtkB,EAAO1R,EAAMqF,MAAM,KAAK0wB,EAAAa,EACXllB,GAAI,IAAvB,IAAAqkB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAyB,KAAd3c,EAAI6b,EAAAh2B,OACNma,GAAQ,IAAI4nC,SACb82B,EAAUlhD,KAAKxd,EAAK4nC,QACpB6wF,EAAQx0G,SAASy6C,GAEzB,CAAC,OAAA7wD,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,MACS73B,GAAS,IAAI+hD,SACd82B,EAAUlhD,KAAK33B,EAAM+hD,QACrB6wF,EAAQx0G,SAASy6C,IAKrBtQ,IACAA,EAAMvoE,MAAQ,IAEtB,CAMA,SAAgB46J,EACZhoB,EACAz4H,GAEA,GAAKy4H,EAGL,KAAM/5D,EAAY+5D,EAAQ5yI,MACpByoE,EAAQoQ,EAAUnQ,QAAQvuD,GAE5BsuD,GAAS,IACToQ,EAAUh+B,OAAO4tB,EAAO,GACxBmqE,EAAQx0G,SAASy6C,GAAS,CAElC,CA/CAx6E,cAAAs8J,EAiCAt8J,iBAAAu8J,EAgBAv8J,yBAmCmC,eAAAw8J,EAAtB/C,EAAsB,WA4B/B,OAAAt5J,EA/DJ,SAAAs5J,IAAA,IAAAn4J,EAAAjB,KAAAD,EAAAC,KAAAo5J,GAoCoBp5J,KAAAwoE,WAAuB,CAACT,EAAAyB,MAAOzB,EAAA0B,OAE/BzpE,KAAAo8J,YAAc,GAEvBp8J,KAAAsB,MAAa,GAUJtB,KAAA2kD,IAAM,SAAC9gC,GAAoB,OACvCo4I,EACI,CAAE36J,MAAOL,EAAKK,MAAOo+B,SAAU,SAACtN,GAAC,OAAKnxB,EAAKy+B,SAAStN,EAAE,GACtDvO,EACH,EAGW7jB,KAAAmzC,OAAS,SAAC13B,GAAO,OAC7BygJ,EACI,CAAE56J,MAAOL,EAAKK,MAAOo+B,SAAU,SAACtN,GAAC,OAAKnxB,EAAKy+B,SAAStN,EAAE,GACtD3W,EACH,GAEL,EAAApa,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKsB,MAAQg8B,EAETt9B,KAAK+8B,WACL/8B,KAAK+8B,UAAUO,EAEvB,GAEA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKsB,MAAQA,CACjB,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,IAAC,CAhE8B,GAgE9Bq/H,SAhEQ/C,yCAAsB,kDAAtBA,EAAsBtwJ,UAAA,sBAAAqW,OAAA,CAAAqpD,WAAA,aAAA4zF,YAAA,eAAArzJ,SAAA,CAAAX,EAAAknB,6BATpB,CACP,CACI/iB,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAMg5H,CAAsB,GACpD/4H,OAAO,MAEdp3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mSAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCA7BOhB,EADJiF,yBAAA,qBACIjF,CADgD,uBAE5CA,EAAA4J,qBAAA,EAAAqqJ,EAAA,sBASJj0J,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAMIjF,EAAA4I,qBAAA,gCAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAwBnI,EAAAs7C,IAAAxzC,GAAW,GAE3C/I,EARIkF,wBAQJlF,4CAjB6BA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA/H,OAUrB8G,EAAAoF,sBAIApF,EAJA6I,qBAAA,cAAA5H,EAAA+yJ,aAAA,iBAIAh0J,CAJ+C,kBAAAk0J,EAI/Cl0J,CAF4B,gCAAAiB,EAAAm/D,WAE5BpgE,CAD4C,kJAgB/CgxJ,CAAsB,6KC7FnC,IAAAzxG,EAAA9pD,EAAA,OACAwC,EAAAxC,EAAA,iBAEM0+J,EAAoB,GAEpBl7D,EAAa,IAAI15C,EAAA25C,UAEvB3hG,gBAG0B,eAAA68J,EAAbpE,EAAa,kBAAAt4J,EAAA,SAAAs4J,IAAAr4J,EAAAC,KAAAo4J,EAAA,IAAA/2J,IAAA,YAAAC,OACtBw5B,EAAAt5B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBu8C,GAAe,IAAAzxB,EAAA,OAAAhrB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC7B+7C,EAAO,CAAAj8C,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS+9F,GAAU,OAG9B,KAFG50E,EAAO8vI,EAAUrtI,KACjB,SAAAjpB,GAAY,OAAPA,EAAFoN,KAAuB6qC,GAAdj4C,EAALS,QAAwCw3C,CAAO,IAElD,CAAAj8C,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASmpB,GAAI,OAAAxqB,SAAAE,KAAA,KACR9B,EAAAmhG,UAAStjD,GACjBj7C,YAAWkB,MACL,kBAAM,IAAI,GAAC,OAFlB,KAAJsoB,EAAIxqB,EAAA4B,MAGI,CAAA5B,EAAAE,KAAA,SACJsqB,SAAO,IAAIk7B,EAAA25C,UAAU70E,GACrB8vI,EAAUtjI,KAAKxM,GACfrqB,QAAQO,IAAI,cAAe8pB,GAAMxqB,EAAAqB,OAAA,SAC1BmpB,GAAI,eAAAxqB,EAAAqB,OAAA,SAER+9F,GAAU,yBAAAp/F,EAAAwC,OAAA,EAAA9C,EAAA,IACpB,SAAAunB,EAAAvM,GAAA,OAAAme,EAAAn2B,MAAA3E,KAAA4E,UAAA,MApBD,IAAAk2B,CAoBC,CArBqB,GAqBrB0hI,SArBQpE,yCAAa,+DAAbA,EAAaj9H,MAAA,IAAbi9H,CAAa,sKCX1B,IAAAxuJ,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAIAmoI,GAHAnoI,EAAA,OAGAA,EAAA,QACAs5J,EAAAt5J,EAAA,KACA8yB,EAAA9yB,EAAA,UACAA,EAAA,sHAsBgBuK,EAAAiF,yBAAA,kBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA0c,EAAAsyI,gBAAA,MAxBpB98J,2BAmDqC,eAAA+8J,EAAxBC,EAAwB,WAe7B,OAAA78J,EAHJ,SAAA68J,EACYnlJ,EACA3W,GAA0Bd,EAAAC,KAAA28J,GAD1B38J,KAAAwX,UACAxX,KAAAa,YAZIb,KAAA6R,KAAOiI,KAAKuX,MAGrBrxB,KAAAsB,MAA2B,CAAEgvB,QAAS,OAU1C,EAAC,EAAAjvB,IAAA,cAAAC,MAEG,SAAY87B,GACf,GAAIA,EAAQvrB,MAAQ7R,KAAK6R,KAAM,CAC3B,IAAMA,EAAO,IAAIiI,KAAK9Z,KAAK6R,MAAMqgJ,UAC3Bj9I,EAAW+iB,KAAK6I,MAAMhvB,EAAO,IAAMA,EAAO,EAAI,EAAI,GACxD7R,KAAK48J,kBAAiB,GAAA74J,OAAMkR,GAAQlR,OACnB,IAAbkR,EAAiB,KAAoB,IAAbA,EAAiB,KAAO,OAElC,IAAbA,GAAkBpD,GAAQ,IAAoB,IAAboD,KAClCjV,KAAK48J,kBAAoB,QACZ,IAAb3nJ,IAAgBjV,KAAK48J,kBAAoB,SAC7C58J,KAAKsB,MAAKutB,IAAA,GACH7uB,KAAKsB,OAAK,IACbytB,MAAO/uB,KAAK6R,KACZy6H,aAAetsI,KAAKsB,MAAMgvB,QAEpBtwB,KAAKsB,MAAMgrI,aADX,CAAC,IAAIxyH,KAAK9Z,KAAK6R,MAAM4jI,YAG/Bz1I,KAAK0/B,SAAS1/B,KAAKsB,MACvB,CACJ,GAAC,CAAAD,IAAA,kBAAAiE,IAED,WACI,SAAO0gI,EAAAp3G,kBAAiB5uB,KAAKsB,MACjC,GAEA,CAAAD,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKsB,MAAQg8B,EAETt9B,KAAK+8B,WACL/8B,KAAK+8B,UAAUO,EAEvB,GAEA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKsB,MAAQA,GAAU,EAC3B,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,GAAC,CAAAz7B,IAAA,4BAAAC,MAEM,WAAyB,IAAAL,EAAAjB,KACvBA,KAAKsB,MAAMgvB,UACZtwB,KAAKsB,MAAMgrI,aAAe,CAAC,IAAIxyH,KAAK9Z,KAAK6R,MAAM4jI,WAEnD,IAAM79H,EAAM5X,KAAKwX,QAAQzC,KAAKoiJ,EAAA4B,yBAA0B,CACpDt2J,KAAM,CAAEnB,MAAOtB,KAAKsB,SAExBtB,KAAK0/B,SAAQ7Q,IAAA,GAAM7uB,KAAKsB,OAAK,IAAEqmI,SAAU,UACzC/vH,EAAII,cAAcjF,UAAU,SAACtQ,GACzBxB,EAAKy+B,SAAQ7Q,IAAA,GACLpsB,GAAQxB,EAAKK,OAAK,IACtBqmI,SAAUllI,EAAO,iBAAoBxB,EAAK47J,YAElD,EACJ,GAAC,CAAAx7J,IAAA,YAAAC,MAEM,SAAUgvB,GACb,IAAMwsI,EAAc,IAAIhjJ,KAAK9Z,KAAK6R,MAAM4jI,SAClCsnB,EACF/8J,KAAKa,UAAUyE,IAAI,kCAAoC,IAC3DtF,KAAK68J,UAAY78J,KAAKsB,MAAMqmI,SACZ,SAAZr3G,EACAtwB,KAAK0/B,SAAS,CACVpP,QAAS,KACTq3G,SAAU,OACV2E,aAAc,CAACwwB,KAEA,UAAZxsI,GASY,WAAZA,GASY,YAAZA,EAjBPtwB,KAAK0/B,SAAS,CACVpP,UACAq3G,SAAUr3G,EACVvB,MAAO/uB,KAAK6R,KACZ+R,OAAK+M,EAAA+C,aAAS/C,EAAAoQ,SAAQ/gC,KAAK6R,KAAMkrJ,IAAqBrnI,UACtD42G,aAAc,CAACwwB,GACflmI,SAAU,IAoBK,WAAZtG,GACPtwB,KAAK0/B,SAAS,CACVpP,UACAq3G,SAAUr3G,EACVvB,MAAO/uB,KAAK6R,KACZ+R,OAAK+M,EAAAmiH,UAAS9yI,KAAK6R,KAAM,GAAG6jB,UAC5B42G,aAAc,CAACwwB,GACflmI,SAAU,GAGtB,IAAC,CAhJgC,GAgJhC8lI,SAhJQC,0CAAwBv0J,EAAAC,4BAAAC,EAAAgQ,WAAAlQ,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAxBo0J,EAAwB7zJ,UAAA,uBAAAqW,OAAA,CAAAtN,KAAA,QAAA9I,SAAA,CAAAX,EAAAknB,6BATtB,CACP,CACI/iB,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAMu8H,CAAwB,GACtDt8H,OAAO,KAEdj4B,EAAAk4B,gCAAAr3B,MAAA,GAAAC,KAAA,GAAAkE,OAAA,yQAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA7COhB,EADJiF,yBAAA,qBACIjF,CADgD,kBAG5CA,EAAA4I,qBAAA,yBAAAG,GAAA,OAAiB9H,EAAA2zJ,UAAA7rJ,EAAiB,GAGlC/I,EAAAiF,yBAAA,kBAAyBjF,EAAAmF,iBAAA,oBAAcnF,EAAAkF,yBACvClF,EAAAiF,yBAAA,kBAA0BjF,EAAAmF,iBAAA,WAAKnF,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,kBACIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,kBACIjF,EAAAmF,iBAAA,kCACJnF,EAAAkF,yBAIAlF,EAAA4J,qBAAA,GAAAirJ,EAAA,oBAMA70J,EAAAiF,yBAAA,mBAEIjF,EAAA4I,qBAAA,0BAAS3H,EAAA6zJ,2BAA2B,GAEpC90J,EAAAmF,iBAAA,kBAGZnF,EAFQkF,wBAERlF,YA5BQA,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAA/H,MAAAqmI,UAOIv/H,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,cAAArF,EAAAiM,sBAAA,IAAAhL,EAAAwI,KAAA,aAGAzJ,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAjW,EAAAuzJ,kBAAA,IAAAx0J,EAAAiM,sBAAA,KAAAhL,EAAAwI,KAAA,sBAMCzJ,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,0BAAA5H,EAAA/H,MAAAqmI,0PA8BRg1B,CAAwB,oKC5DrC,IAAA7uJ,EAAAjQ,EAAA,OACA8yB,EAAA9yB,EAAA,uCAoCYuK,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,iBACJnF,EAAAkF,uFAMIlF,EALJiF,yBAAA,WAKIjF,CADH,eAMOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,SACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,UACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,UACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA6rJ,gBAAgB,GAAE,GAE3B/0J,EAAAmF,iBAAA,UAERnF,EADIkF,wBACJlF,6CA3DQA,EAAAoF,sBAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,KASAwC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAA/N,EAAA7O,KAAA6pI,cAAAh7H,EAAA7O,KAAA6pI,aAAA1mI,SAAA,MAlGpBjG,2BAqKqC,eAAAy9J,EAAxBrE,EAAwB,WAY7B,OAAAj5J,EAFJ,SAAAi5J,EACqCpyH,GAAmC5mC,EAAAC,KAAA+4J,GAAnC/4J,KAAA2mC,QAV9B3mC,KAAAyC,KAAIosB,IAAA,GACJ7uB,KAAK2mC,MAAMrlC,OAAK,IACnBsiB,IAAK5jB,KAAK2mC,MAAMrlC,MAAMsiB,QAAO+M,EAAAoQ,SAAQ,IAAIjnB,KAAQ,GAAG4b,UACpDkB,SAAU52B,KAAK2mC,MAAMrlC,MAAMs1B,UAAY,EACvCtG,QAAStwB,KAAK2mC,MAAMrlC,MAAMgvB,QAAUtwB,KAAK2mC,MAAMrlC,MAAMgvB,QAAU,SAC/D+7G,YAAarsI,KAAK2mC,MAAMrlC,MAAM+qI,aAAe,IAE1CrsI,KAAAq9J,SAAW,OAIf,EAAC,EAAAh8J,IAAA,kBAAAC,MAEG,SAAgBqjC,GACd3kC,KAAKyC,KAAK6pI,eAActsI,KAAKyC,KAAK6pI,aAAe,IAClDtsI,KAAKyC,KAAK6pI,aAAa1mI,SAAS++B,GAChC3kC,KAAKyC,KAAK6pI,aAAetsI,KAAKyC,KAAK6pI,aAAa9wH,OAC5C,SAACvD,GAAC,OAAKA,IAAM0sB,CAAG,GAEjB3kC,KAAKyC,KAAK6pI,aAAarzG,KAAK0L,EACvC,IAAC,CArBgC,GAqBhCy4H,SArBQrE,0CAAwB3wJ,EAAAC,4BAWrByF,EAAAg5B,iBAAe,kDAXlBiyH,EAAwBjwJ,UAAA,uBAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,ohCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjKzBhB,EADJiF,yBAAA,WACIjF,CADI,QACAA,EAAAmF,iBAAA,uBAAiBnF,EAAAkF,yBAEjBlF,EADJiF,yBAAA,aACIjF,CADwC,cAC9BA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAGQA,EAFRiF,yBAAA,WAEQjF,CAFU,UAEVA,CAD0C,SACrCA,EAAAmF,iBAAA,kBAAYnF,EAAAkF,yBAEblF,EADJiF,yBAAA,sBACIjF,CAD8C,cAChBA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA5G,KAAAm0B,SAAAzlB,KAAA9H,EAAA5G,KAAAm0B,SAAAzlB,IAAA,GAClC/I,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,sBACIjF,CADiC,mBACrBA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA5G,KAAA6tB,QAAAnf,KAAA9H,EAAA5G,KAAA6tB,QAAAnf,IAAA,GACR/I,EAAAiF,yBAAA,mBACIjF,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,mBACIjF,EAAAmF,iBAAA,IACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,mBACIjF,EAAAmF,iBAAA,IAOhBnF,EANYkF,wBAMZlF,OAIAA,EAHA4J,qBAAA,GAAAsrJ,EAAA,YAGAl1J,CAHmE,GAAAm1J,EAAA,gBAwEnEn1J,EAAAiF,yBAAA,YAAkBjF,EAAAmF,iBAAA,WAAInF,EAAAkF,yBACtBlF,EAAAiF,yBAAA,yBAAgCjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAg0J,SAAAlsJ,KAAA9H,EAAAg0J,SAAAlsJ,IAAA,GAExB/I,EADJiF,yBAAA,YACIjF,CAD2B,0BAGvBA,EAAA4I,qBAAA,0BAAA3H,EAAA5G,KAAA4pI,YAA4B,CAAC,GAE7BjkI,EAAAmF,iBAAA,cAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,0BACRA,EAAAmF,iBAAA,SAAEnF,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,sBACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA5G,KAAAmhB,IAAAzS,KAAA9H,EAAA5G,KAAAmhB,IAAAzS,IAAA,GAGR/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,0BACLA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBAEjClF,EADJiF,yBAAA,sBACIjF,CADiC,eAI7BA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA5G,KAAA4pI,YAAAl7H,KAAA9H,EAAA5G,KAAA4pI,YAAAl7H,IAAA,GAHJ/I,EAAAkF,yBAMAlF,EAAAiF,yBAAA,cAAgBjF,EAAAmF,iBAAA,iBAIhCnF,EAJ0CkF,wBAI1ClF,SAIIA,EAHJiF,yBAAA,eAGIjF,CADH,gBAKOA,EAAA4I,qBAAA,0BAAA3H,EAAA5G,KAAA4pI,YAE0C,UAF1ChjI,EAAAg0J,SAGhB,EAACh0J,EAAA5G,KAAA4pI,WAAA,GAGejkI,EAAAmF,iBAAA,aAERnF,EADIkF,wBACJlF,UAzI0CA,EAAAoF,oBAAA,IAAApF,EAAAqV,2BAAA,UAAApU,EAAA5G,KAAAm0B,UAGlBxuB,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA5G,KAAA6tB,SAEJloB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAApE,EAAA5G,KAAAm0B,SAAA,YAGAxuB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,YAAApE,EAAA5G,KAAAm0B,SAAA,YAGAxuB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,aAAApE,EAAA5G,KAAAm0B,SAAA,YAQkBxuB,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAA5H,EAAA5G,KAAA6tB,SAM7BloB,EAAAoF,sBAAApF,EAAA6I,qBAAA,kBAAA5H,EAAA5G,KAAA6tB,SAmE2BloB,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAg0J,UAYpBj1J,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA5G,KAAAmhB,KACAxb,EAAA6I,qBAAA,kBAAA5H,EAAAg0J,UASIj1J,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA5G,KAAA4pI,aACAjkI,EAAA6I,qBAAA,qBAAA5H,EAAAg0J,UAkBZj1J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAA5G,0OAmBHs2J,CAAwB,sLC3KrC,IAAAnvJ,EAAA/L,EAAA,MAUA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OACA2/J,EAAA3/J,EAAA,8CAEA8B,yBAkBI,eAAA89J,EADS3E,EACT,SAAAl4J,GAlBJ,SAAAk4J,IAAA,IAAA73J,EAAAlB,SAAAC,KAAA84J,2BAqBoBsD,YAAc,GACdn7J,EAAAy8J,UAAW,EAMnBz8J,EAAA08J,UAAY,kBAAM18J,EAAKy+B,SAASz+B,EAAK28J,QAAQC,KAAKt5D,UAAU,EASpDtjG,EAAA47B,iBAAmB,SAACC,GAAuB,OACtD77B,EAAK87B,UAAYD,CAAE,EACR77B,EAAA+7B,kBAAoB,SAACF,GAAuB,OACvD77B,EAAKg8B,SAAWH,CAAE,EAAE77B,EAqD5BG,SAAA03J,EAAAl4J,GAAAd,EAAAg5J,EAAA,EAAAz3J,IAAA,cAAAC,MAnDU,SAAY87B,GAAyB,GAAC,CAAA/7B,IAAA,kBAAAC,MAEtC,WACHtB,KAAK89J,mBACT,GAEA,CAAAz8J,IAAA,WAAAC,MAIO,SAASg8B,GAERt9B,KAAK+8B,WACL/8B,KAAK+8B,UAAUO,EAEvB,GAEA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GAAa,IAAAwD,EAAA9E,KAC3BA,KAAKwD,QAAQ,QAAS,WAClB,GAAIsB,EAAK84J,QAAS,CACd,IAAMG,EAAQj5J,EAAK84J,QAAQI,UAAUC,QAAQ38J,GAC7CwD,EAAK84J,QAAQM,YAAYH,EAAO,SACpC,MACIj5J,EAAKtB,QAAQ,QAAS,kBAAMsB,EAAKq5J,WAAW78J,EAAM,EAE1D,EACJ,GAAC,CAAAD,IAAA,oBAAAC,MAEO,WAAiB,IAAA4E,EAAAlG,KACrBA,KAAK49J,QAAU,IAAIJ,EAAMx9J,KAAKo+J,WAAWn2D,cAAe,CACpDo2D,OAAQr+J,KAAKutG,cAActF,cAC3Bm0D,YAAap8J,KAAKo8J,YAClBkC,QAAS,CACLC,QAAS,CACL,CAAC,CAAEhlG,KAAM,CAAC,SAAS,EAAO,QAAS,UACnC,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEvmD,KAAM,WAAa,CAAEA,KAAM,aAGtCwrJ,SAAUx+J,KAAK09J,SACf9jE,MAAO,SAEX55F,KAAK49J,QAAQa,GAAG,cAAez+J,KAAK29J,WACpC39J,KAAK6S,aAAa,UAAW,kBACzB3M,EAAK03J,QAAQc,IAAI,cAAex4J,EAAKy3J,UAAU,EAEvD,IAAC,CA1ED,CAAQr9J,EAAA6H,cAAYs1J,SADX3E,qGAAsBx5H,GAAtBw5H,EAAsB,qDAAtBA,EAAsBhwJ,UAAA,sBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,0UATpB,CACP,CACImD,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAM04H,CAAsB,GACpDz4H,OAAO,KAEdj4B,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,iCAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAZGhB,EAAAiF,yBAAA,gBACIjF,EAAAkB,oBAAA,gBACJlB,EAAAkF,6BAYKwrJ,CACT,yMChCJ,IAAAlvJ,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAKA8gK,GAJA9gK,EAAA,OAEAA,EAAA,OAEAA,EAAA,QAEAub,GADAvb,EAAA,MACAA,EAAA,QACAuC,EAAAvC,EAAA,4GAyCoBuK,EAAAkB,oBAAA,6DAGIlB,EAAA6I,qBAAA,SAAAmxD,EAAAh4C,OAAA,0BAIAhiB,EAAAkB,oBAAA,yEAVRlB,EALJiF,yBAAA,WAKIjF,CADH,YAUOA,EANA4J,qBAAA,EAAA4sJ,EAAA,aAMAx2J,CADE,EAAAy2J,EAAA,yBAAAz2J,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD2B,YAEvBA,EAAAmF,iBAAA,GAGJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD6C,iBACbA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACrClF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAMRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD6C,kBACbA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBACtClF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MAKJvlB,EADIkF,wBACJlF,GAIIA,EAHJiF,yBAAA,YAGIjF,CADH,gBAMOA,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA+yI,aAAA18F,GAAmB,GAE5Bh6D,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAgzI,YAAA38F,GAAkB,GAE3Bh6D,EAAAiF,yBAAA,aAAAjF,EAAAqjD,sBAAA,MACIrjD,EAAAkB,oBAAA,eAEJlB,EAAAsjD,sBAGZtjD,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAA2P,gBAAA0mC,GAAsB,GAE/Bh6D,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,4FA9EaA,EAAAoF,oBAAA,GAA4BpF,EAA5B6I,qBAAA,aAAAmxD,EAAAh4C,OAAA,KAAAg4C,EAAAh4C,OAAAplB,OAA4BoD,CAAA,WAAAk9B,GAa7Bl9B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA3sD,cAAA2sD,EAAA7uD,MAAA,qBAOInL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA18D,WAAA,OAAA2oD,EAAAtiC,EAAAvV,MAAA4rD,EAAAzuD,QAAA,KAAA06C,EAAA54C,gBAAA,OAAA44C,EAAAtiC,EAAAvV,MAAA4rD,EAAAzuD,QAAA,KAAA06C,EAAA96C,MAAA,KAUAnL,EAAAoF,oBAAA,GACApF,EADAylB,oBAAAu0C,EAAA7iD,SAAA,IAAA6iD,EAAA7iD,SACAnX,CAD8Cg6D,EAAA7iD,sCAuCtDnX,EAAAoF,oBAAA,IAAApF,EAAAiX,sBAAA,gBAAA0M,EAAA6P,UAAAh2B,SAAA,MAAAw8D,EAAA,KAAAA,EAAA/uD,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAA6P,UAAAh2B,SAAA,MAAAw8D,EAAA,KAAAA,EAAA/uD,IAAA,+BAjH9B,IAAMmpB,EAAuB,GAE7B78B,0BA6IoC,eAAAq/J,EAAvB1G,EAAuB,WAmB5B,OAAAx4J,EAJJ,SAAAw4J,EACYz3J,EACAC,EACA0W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAAs4J,GAFlBt4J,KAAAa,YACAb,KAAAc,OACAd,KAAAwX,UAjBHxX,KAAAi/J,UAAW,EACbj/J,KAAA+rD,UAAY,EACZ/rD,KAAAkc,OAAS,IAAI9C,EAAAuB,gBAAyB,IACtC3a,KAAA4hB,WAAa5hB,KAAKkc,OAAOpZ,QAAK1C,EAAAmxB,cAAa,MAC3CvxB,KAAA48B,UAAW,EA+DF58B,KAAA68B,iBAAmB,SAACC,GAAwB,OACvD77B,EAAK87B,UAAYD,CAAE,EAER98B,KAAAg9B,kBAAoB,SAACF,GAAwB,OACxD77B,EAAKg8B,SAAWH,CAAE,EACP98B,KAAAk9B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,CAtDlE,EAAC,EAAAjnB,IAAA,YAAAiE,IARJ,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuBk3B,CAC/D,GAAC,CAAAn7B,IAAA,cAAAC,MAQM,WACCtB,KAAK4zD,aAAa5zD,KAAK4zD,YAAYlsD,OAC3C,GAAC,CAAArG,IAAA,QAAAC,MAEM,SAAMqS,GACT,OAAO3T,KAAKc,KAAKmuB,YAAYtb,EACjC,GAEA,CAAAtS,IAAA,eAAAC,MACO,WAAY,IAAAwD,EAAA9E,KACfA,KAAK4zD,YAAc5zD,KAAKwX,QAAQzC,KAAK4pJ,EAAAO,6BAA8B,CAC/Dz8J,KAAM,CACFyZ,OAAQlc,KAAKkc,OAAO/D,WACpB6J,QAAS,CAAEzC,SAAUvf,KAAK+rD,WAC1BkzG,SAAUj/J,KAAKi/J,YAGvBj/J,KAAK4zD,YAAY57C,cAAcjF,UAAU,WAAK,IAAAosJ,EAC1Cr6J,EAAK46B,SAAyB,QAAjBy/H,EAACr6J,EAAK8uD,mBAAW,IAAAurG,GAAmB,QAAnBA,EAAhBA,EAAkBjnJ,yBAAiB,IAAAinJ,OAAA,EAAnCA,EAAqCrgJ,UACnDha,EAAK8uD,iBAAc3uD,CACvB,EACJ,GAEA,CAAA5D,IAAA,cAAAC,MACO,SAAY6a,GACfnc,KAAK0/B,SAAS1/B,KAAKkc,OAAO/D,WAAWqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO8I,EAAM9I,EAAE,GACxE,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKkc,OAAO/Z,KAAKm7B,GAAa,IAC1Bt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAUO,GAAa,GACpD,GAGA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKkc,OAAO/Z,KAAKb,GAAS,GAC9B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgB6a,GACnB,GAAU,MAALA,KAAO9I,GACZ,KAAMysB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAASuW,EAAM9I,IAEvCrT,KAAKa,UAAUm/B,gBAAgB,mBAD/BD,EACiD,GAAAh8B,OAAAqe,EAC1C0d,GAAQ,CACX3jB,EAAM9I,KAKNysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMmZ,EAAM9I,EAAE,GAAC,CAGlD,IAAC,CA1F+B,GA0F/B2rJ,SA1FQ1G,0CAAuBlwJ,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAA4P,WAAA,kDAAvBggJ,EAAuBxvJ,UAAA,uBAAAqW,OAAA,CAAA8/I,SAAA,YAAAl2J,SAAA,CAAAX,EAAAknB,6BARrB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMk4H,CAAuB,GACrDj4H,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,eAAAmiB,qBArI2BC,UAAAC,MAAAC,EAAA,uIAAgB,iBAAO,qBAQQF,UAAAG,MAAAD,EAAA,kGAGAF,UAAAI,MAAAF,EAAA,kGAGCF,UAAAM,MAAAJ,EAAA,kGA4GrCF,UAAAO,MAAAL,EAAA,4FA3D+CF,UAAAyoB,MAAAvoB,EAAA,6PAD1CF,UAAAugC,MAAArgC,EAAA,4GACJ,gBAA8C0vI,GAgB1C5vI,UAAAwgC,MAAAtgC,EAAA,2JAAc,oBAYdF,UAAAygC,MAAAvgC,EAAA,6JAAe,i6CA3F3BtnB,EAHZiF,yBAAA,QAGYjF,CAHP,UAGOA,CAFmD,WAEnDA,CADwC,WACxCA,EAAAqjD,sBAAA,KAA4BrjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAEtClF,EADJiF,yBAAA,WACIjF,CAD2B,wBAIvBA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAA0iD,UAAA56C,KAAA9H,EAAA0iD,UAAA56C,IAAA,GAGA/I,EAAAiF,yBAAA,yBAAAjF,EAAAulB,iBAAA,KAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,0BAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,0BAAAjF,EAAAulB,iBAAA,MAOpBvlB,EALoBkF,wBAKpBlF,WACAA,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAAqtJ,EAAA,8CAyFJj3J,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,0BAAS3H,EAAAy1J,cAAc,GAGnB12J,EADJiF,yBAAA,YACIjF,CADoD,eAC1CA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAERvlB,EAF4BkF,wBAE5BlF,YAvHoBA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAA0iD,WACA3jD,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,EAAAC,IAEkBxJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,WAGA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,WAGA7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAYZ7I,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAuY,iBA6GrB02I,CAAuB,qOCzJpC,IAAA/uJ,EAAA1L,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QAOAwC,GADAxC,EAAA,MACAA,EAAA,2EAiD4BuK,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAquJ,EAAA7pJ,cAAA6pJ,EAAA/rJ,MAEAnL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6xJ,EAAA7pJ,cAAA6pJ,EAAA/rJ,KAAA,+BAeJnL,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,eAAAsuJ,EAAA,KAAAA,EAAAhsJ,OAAAgsJ,GAEAn3J,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA8xJ,EAAAhsJ,MAAAgsJ,EAAA,+BAVZn3J,EAJJiF,yBAAA,WAIIjF,CADH,WACGA,EAAAulB,iBAAA,KAAsBvlB,EAAAkF,yBAElBlF,EADJiF,yBAAA,sBACIjF,CADgD,mBAK5CA,EAAA4J,qBAAA,EAAAwtJ,EAAA,qBAQZp3J,EAFQkF,wBAERlF,8CAPiCA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA8a,EAAA0zI,8CAgB7Br3J,EAAAiF,yBAAA,kBAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,gDAGAlF,EADJiF,yBAAA,QACIjF,CADsB,cACtBA,EAAAulB,iBAAA,MAA+BvlB,EAAAkF,yBAC/BlF,EAAAkB,oBAAA,yBAGJlB,EAAAkF,mDA1EQlF,EAJhBiF,yBAAA,YAIgBjF,CAJuD,YAIvDA,CAHyB,WAGzBA,CAF8C,WAE9CA,CAD8B,WAC9BA,EAAAqjD,sBAAA,KAAgBrjD,EAAAkB,oBAAA,UAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,uBACIjF,EAAAkB,oBAAA,cAKAlB,EAAAiF,yBAAA,eAAAjF,EAAAulB,iBAAA,MAERvlB,EAFwCkF,wBAExClF,KAEIA,EADJiF,yBAAA,YACIjF,CAD8B,YAC9BA,EAAAqjD,sBAAA,MAAiBrjD,EAAAkB,oBAAA,WAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBAC/BlF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAKAlB,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAGZvlB,EAH6CkF,wBAG7ClF,OAEIA,EADJiF,yBAAA,YACIjF,CADuB,YACvBA,EAAAulB,iBAAA,MAAoBvlB,EAAAkF,yBAEhBlF,EADJiF,yBAAA,uBACIjF,CADgD,oBAK5CA,EAAA4J,qBAAA,GAAA0tJ,EAAA,oDAQZt3J,EAFQkF,wBAERlF,KACAA,EAAA4J,qBAAA,GAAA2tJ,EAAA,cAoBIv3J,EADJiF,yBAAA,SACIjF,CADC,eACDA,EAAAqjD,sBAAA,MACqBrjD,EAAAkB,oBAAA,WACrBlB,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAkB,oBAAA,yBAIAlB,EAAA4J,qBAAA,GAAA4tJ,EAAA,oBAGJx3J,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA6tJ,EAAA,cAMJz3J,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAIJvlB,EADIkF,wBACJlF,2CAnFsBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,YAAA8a,EAAArb,MAiCkBtI,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAmW,EAAAjW,YAU3B1N,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAA8a,EAAA0zI,sBAAA,KAAA1zI,EAAA0zI,sBAAAz6J,QAyBgCoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAA+zI,YAI/B13J,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAg0I,4EAgBV33J,EAJJiF,yBAAA,cAIIjF,CADH,eACsCA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAogC,SAAQ,GAApD/jD,EAAAulB,iBAAA,MAGJvlB,EADIkF,wBACJlF,0BAEIA,EAAAiF,yBAAA,aAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,+BACPnF,EADgCkF,wBAChClF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBA1G7BtR,8BAuHwC,eAAAqgK,EAA3BniC,EAA2B,WAoChC,OAAA/9H,EAJJ,SAAA+9H,EACYjqE,EACA9yD,EACAD,GAA0Bd,EAAAC,KAAA69H,GAF1B79H,KAAA4zD,cACA5zD,KAAAc,OACAd,KAAAa,YAlCLb,KAAAsiB,SAAU,EACDtiB,KAAA0Q,KAAO,IAAInH,EAAAqgC,UAAU,CACjCr2B,KAAM,IAAIhK,EAAAsgC,YAAY,GAAI,CAACtgC,EAAAugC,WAAWC,WACtCrjC,MAAO,IAAI6C,EAAAsgC,YAAY,GAAI,CAACtgC,EAAAugC,WAAWC,WACvCrkC,SAAU,IAAI6D,EAAAsgC,YAAY,IAC1Bp2B,YAAa,IAAIlK,EAAAsgC,YAAY,GAAI,CAACtgC,EAAAugC,WAAWC,WAC7Ck2H,WAAY,IAAI12J,EAAAsgC,YAAY,IAC5Bzf,OAAQ,IAAI7gB,EAAAsgC,YAAY,MAsBZ7pC,KAAA8V,UAAY9V,KAAKc,KAAK4W,aAMnC,EAAC,EAAArW,IAAA,aAAAiE,IAzBJ,WACI,OACKtF,KAAK0Q,KAAKgT,SAASjQ,YAAYiB,OAChC1U,KAAK0Q,KAAKgT,SAASjQ,YAAYw0D,OAEvC,GAAC,CAAA5mE,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,sBAAwB,oBACtD,GAAC,CAAAjE,IAAA,wBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAA8B,EAC5D,GAAC,CAAAjE,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,kCAC9B,GAAC,CAAAjE,IAAA,WAAAC,MAUM,WACH,IAAMmrB,KAAOnsB,EAAAkG,eACTimB,GACAzsB,KAAK0Q,KAAKe,WAAW,CACjB8B,KAAMkZ,EAAKlZ,KACX7M,MAAO+lB,EAAK/lB,QAGhB1G,KAAKc,KAAK+U,UACV7V,KAAK0Q,KAAKe,WAAW,CACjB/L,SACI1F,KAAKc,KAAK+U,SAASJ,cAAgBzV,KAAKc,KAAK+U,SAAStC,MAGtE,GAAC,CAAAlS,IAAA,SAAAC,OAAA4+J,EAAA1+J,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAw+J,EAAAC,EAAAprI,EAAArd,EAAApE,EAAA7M,EAAAhB,EAAA+N,EAAA2W,EAAA61I,GAAAI,GAAA,OAAA5+J,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAGgC,GAFnCnC,KAAKsiB,SAAU,EACftiB,KAAK0Q,KAAKiX,mBACV3nB,KAAK0Q,KAAKklI,0BACN51I,KAAK0Q,KAAKgE,MAAK,CAAAzS,GAAAE,KAAA,SAC8B,GAAvCi+J,EAAcpgK,KAAKc,KAAKixB,QAAQ,QACtB,CAAA9vB,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YACLhD,EAAAqU,aACH,mDACH,OAECqgB,YAAM30B,EAAA2xB,WAAUouI,EAAa,UAC3B7sJ,GADoCoE,EAExC3X,KAAK0Q,KAAKpP,OADNiS,KAAM7M,EAAKiR,EAALjR,MAAOhB,EAAQiS,EAARjS,SAAU+N,EAAWkE,EAAXlE,YAAa2W,EAAMzS,EAANyS,OAAQ61I,GAAUtoJ,EAAVsoJ,WAE9CI,IAGD,QAFDF,EAAAngK,KAAKy/J,sBAAsBvwI,KACvB,SAACtc,IAAI,OAAKA,GAAKW,OAAS0sJ,EAAU,UACrC,IAAAE,OAAA,EAFDA,EAEGz5J,QAAS1G,KAAKqgK,cAAap+J,GAAAE,KAAA,GAC5B6yB,EAAIC,QAAQ,YAAa,CAC3BorI,GAAa,4CAAAt8J,OAETk8J,GAAa,MAAQA,GAAa,IACtC,GAAAl8J,OACGwP,EAAI,MAAAxP,OAAK2C,EAAK,QAAA3C,OAAO2B,EAAQ,QAAA3B,OAAO0P,EAAYm0B,QAC/C,WACA,IACH,QAAA7jC,OAAOqmB,EAAOvV,KAAK,OAAK,MAAA9Q,OACnBwP,EAAI,WAAAxP,OAAU2C,EAAK,WAAA3C,OAAU2B,EAAQ,WAAA3B,OAAU0P,EAAW,QAAA1P,OAAOqmB,EAAOvV,KAC1E,SAEJ,GACA,GACA,GACA,GACA,KAAI,GAAA9Q,OACD2C,KACL,QACF1G,KAAK4zD,YAAYlsD,QACjB1H,KAAKsiB,SAAU,KACfhiB,EAAAs3C,eAAc,yCAAyC,yBAAA31C,GAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IAE9D,SAAAmsD,IAAA,OAAA+zG,EAAAv7J,MAAA3E,KAAA4E,UAAA,MA3CA,IAAAs7J,CA2CA,CA/FmC,GA+FnCF,SA/FQniC,0CAA2Bz1H,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAH,iBAAA,kDAA3Bs1H,EAA2B/0H,UAAA,2BAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,oCAnHnBoiB,UAAAC,MAAAC,EAAA,sGASeF,UAAAG,MAAAD,EAAA,2HAAI,iBAAO,mBAOHF,UAAAI,MAAAF,EAAA,iGAIRF,UAAAM,MAAAJ,EAAA,4HAAK,kBAAO,oBAOJF,UAAAO,MAAAL,EAAA,kGAKZF,UAAAyoB,MAAAvoB,EAAA,wFAmCaF,UAAAugC,MAAArgC,EAAA,yIACJ,kBAAO,oBAiBcF,UAAAwgC,MAAAtgC,EAAA,kKAlC9BF,UAAAygC,MAAAvgC,EAAA,2FAuB4CF,UAAA0gC,MAAAxgC,EAAA,yGAK/BF,UAAA2gC,MAAAzgC,EAAA,sFAe0BF,UAAA4gC,MAAA1gC,EAAA,o0CA9F3DtnB,EADJiF,yBAAA,cACIjF,CAD8C,QAC9CA,EAAAulB,iBAAA,KAA+BvlB,EAAAkF,yBAE3BlF,EADJiF,yBAAA,cACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KA8FAA,EA7FA4J,qBAAA,EAAAsuJ,EAAA,eA6FAl4J,CA7FuE,EAAAm4J,EAAA,gBA6FvEn4J,CALC,EAAAo4J,EAAA,yBAAAp4J,EAAA2c,yEAxFqC3c,EAAAoF,oBAAA,GAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA+kB,GAuFjD/kB,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,6JAuBAu7G,CAA2B,kLCxIxC,IAAAj0H,EAAA/L,EAAA,MASA0L,EAAA1L,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QACA8yB,EAAA9yB,EAAA,8GAsBgBuK,EAAAiF,yBAAA,kBACIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iEAF+BlF,EAAA6I,qBAAA,QAAAK,EAAAmvJ,YAC3Br4J,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA/C,EAAAmvJ,WAAAnvJ,EAAAqyB,SAAA,qDAEJv7B,EAAAiF,yBAAA,kBAIIjF,EAAAmF,iBAAA,gCAIJnF,EAAAkF,+EANIlF,EAAA6I,qBAAA,QAAAyvJ,EAAArtJ,IAEAjL,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAAqsJ,EAAA7uJ,KAAAP,EAAAqyB,SAAA,0BAAAryB,EAAAqvJ,cAAAD,EAAA7uJ,MAAA,MAjBpBlS,qBAyCI,eAAAihK,EADSC,EACT,SAAAjgK,GAzCJ,SAAAigK,IAAA,IAAA5/J,EAAAlB,SAAAC,KAAA6gK,2BA6CoB3P,KAAO,GAIPjwJ,EAAA6/J,eAAgB,EAChB7/J,EAAA0iC,UAAW,EAEX1iC,EAAA0/J,cAAgB,SAACrhI,GAAU,MAAK,EAAE,EAElCr+B,EAAAu1I,QAAe7lH,EAAA6C,YAAW1Z,KAAKuX,OAAOqE,UAE/Cz0B,EAAA4Q,UAAmBiI,MAAO4b,UAE1Bz0B,EAAA22B,QAAejH,EAAAkI,QAAO,IAAI/e,KAAQ,SAAS7Y,EAiKrDG,SAAAy/J,EAAAjgK,GAAAd,EAAA+gK,EAAA,EAAAx/J,IAAA,WAAAC,MApJU,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK+gK,aAAc,EACnB/gK,KAAKghK,cAAgBhhK,KAAKihK,uBACtBjhK,KAAK6R,MACJ7R,KAAK8gK,cACN9gK,KAAKkxJ,MAETlxJ,KAAKwD,QAAQ,OAAQ,kBAAOsB,EAAKi8J,aAAc,CAAK,EACxD,GAAC,CAAA1/J,IAAA,cAAAC,MAEM,SAAY87B,IACXA,EAAQ0jI,eAAiB1jI,EAAQ8zH,QACjClxJ,KAAKghK,cAAgBhhK,KAAKihK,uBACtBjhK,KAAK6R,MACJ7R,KAAK8gK,cACN9gK,KAAKkxJ,MAGjB,GAEA,CAAA7vJ,IAAA,eAAAiE,IACA,WACI,IAAMsyB,GAAQ53B,KAAK43B,MAAQ,SAASjxB,MAAM,KACpCkL,KAAO8e,EAAAzV,KAAIlb,KAAK6R,KAAM,CAAE+uB,OAAQhJ,EAAK,GAAIkJ,SAAUlJ,EAAK,KAC9D,OACI/lB,EAAKotB,aAAe,IAAO,IAC1Bj/B,KAAKghK,cAAc9xI,KAChB,SAAC0I,GAAI,OAAKA,EAAKvkB,QAAOsd,EAAAkI,QAAOhnB,EAAM,QAAQ,KAG/C7R,KAAKghK,cAAc/nI,KAAK,CACpBpnB,OACAwB,MAAIsd,EAAAkI,QAAOhnB,EAAM,WAErB7R,KAAKghK,cAAcxkJ,KAAK,SAACyW,EAAG3U,GAAC,MACzB,GAAAva,OAAGkvB,EAAE5f,IAAKi1B,cAAa,GAAAvkC,OAAIua,EAAEjL,IAAK,IAGnCrT,KAAKghK,aAChB,GAEA,CAAA3/J,IAAA,WAAAC,MAIO,SAASg8B,GAEZ,GADAt9B,KAAK43B,KAAO0F,EACRt9B,KAAK+8B,UAAW,CAChB,IAAMnF,GAAQ53B,KAAK43B,MAAQ,SAASjxB,MAAM,KACpCkL,KAAO8e,EAAA0H,kBACT1H,EAAAzV,KAAIlb,KAAK6R,KAAM,CAAE+uB,OAAQhJ,EAAK,GAAIkJ,SAAUlJ,EAAK,MAErD53B,KAAK+8B,UAAUlrB,EAAK6jB,UACxB,CACJ,GAEA,CAAAr0B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAK6R,KAAOvQ,GAAStB,KAAK6R,KAC1B,IAAIA,KAAO8e,EAAA0H,eAAcr4B,KAAK6R,MAC9BA,KAAO8e,EAAAiyB,uBAAsB/wC,EAAM,CAAEgxC,UAAW,IAChD7iD,KAAK43B,QAAOjH,EAAAkI,QAAOhnB,EAAM,SACzB7R,KAAKghK,cAAgBhhK,KAAKihK,uBACtBjhK,KAAK6R,MACJ7R,KAAK8gK,cACN9gK,KAAKkxJ,KAEb,GAAC,CAAA7vJ,IAAA,mBAAAC,MAEM,SAAiBs7B,GACpB58B,KAAK48B,SAAWA,EAChB58B,KAAKghK,cAAgBhhK,KAAKihK,uBACtBjhK,KAAK6R,MACJ7R,KAAK8gK,eAAiBlkI,EACvB58B,KAAKkxJ,KAEb,GAEA,CAAA7vJ,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAEA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,GAEA,CAAAz7B,IAAA,aAAAC,MAGO,WAAU,IAAA4E,EAAAlG,KACbA,KAAK+gK,aAAc,EACnB/gK,KAAKwD,QAAQ,WAAY,WACjB0C,EAAKg7J,eACLh7J,EAAKg7J,aAAa16I,QAClBtgB,EAAKg7J,aAAansJ,OAClB7O,EAAK2M,aACD,eACA3M,EAAKg7J,aAAaC,aAAapuJ,UAAU,SAACwqB,GACjCA,IACDr3B,EAAK66J,aAAc,EAE3B,IAGZ,EACJ,GAEA,CAAA1/J,IAAA,yBAAAC,MAKQ,SACJ8/J,EACAC,GACiB,IAAjBnQ,EAAAtsJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,GAETysB,EAAM,IAAIvX,KAAKke,KAAK8F,IAAI99B,KAAKw2I,KAAM18H,KAAKuX,QAC1Cxf,EAAO,IAAIiI,KAAKsnJ,GACdruB,EAAS,GACXsuB,KAAc,EAAC1wI,EAAAoC,WAAUlhB,EAAMwf,KAAG,EAAKV,EAAA6a,SAAQ35B,EAAMwf,GACrDxf,KAAO8e,EAAA6C,YAAW3hB,IAAI,EACf8e,EAAA6a,SAAQ35B,EAAMwf,KACrBxf,EAAO,IAAIiI,KAAKuX,IAEpBxf,KAAO8e,EAAAiyB,uBAAsB/wC,EAAM,CAAEgxC,UAAWquG,IAGhD,QAFMttI,KAAM+M,EAAA+C,UAAS7hB,IAAI,EAElB8e,EAAA6a,SAAQ5nB,EAAK/R,IAChBkhI,EAAO95G,KAAK,CACRpnB,KAAMA,EAAK6jB,UACXriB,MAAIsd,EAAAkI,QAAOhnB,EAAM,WAErBA,KAAO8e,EAAA2H,YAAWzmB,EAAMq/I,GAE5B,OAAOne,CACX,IAAC,CAjLD,CAAQzyI,EAAA6H,cAAYy4J,SADXC,qGAAkBvhI,GAAlBuhI,EAAkB,qDAAlBA,EAAkB/3J,UAAA,mBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,8TARhB,CACP,CACImD,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMygI,CAAkB,GAChDxgI,OAAO,KAEdj4B,EAAAY,qCAAAZ,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,mJAAAjE,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,sCAlCOhB,EADJiF,yBAAA,qBACIjF,CADiC,oBAK7BA,EAAA4I,qBAAA,yBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAAq2B,SAAAvuB,GAAgB,GAKjC/I,EAHA4J,qBAAA,EAAAsvJ,EAAA,mBAGAl5J,CAHoD,EAAAm5J,EAAA,oBAa5Dn5J,EADIkF,wBACJlF,SAjBQA,EAAAoF,sBACApF,EADA6I,qBAAA,UAAA5H,EAAAo3J,YAAAp3J,EAAAuuB,KACAxvB,CAD8B,WAAAiB,EAAAuzB,UAIjBx0B,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo3J,YAIUr4J,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAAm4J,sQA0B1BX,CACT,uKCjEJ,IAAAj3J,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OAEAuC,EAAAvC,EAAA,MAEA6hG,EAAA7hG,EAAA,OACA4hG,EAAA5hG,EAAA,sFAuBgBuK,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,6BAMAlB,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,gFAVQA,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,cAEA7I,CAFe,QAAA2jB,EAAAtQ,KAAAqjF,UAQf12F,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAtQ,KAAAqjF,SAAA,+BAYR12F,EARJiF,yBAAA,SAQIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,4CARIA,EAAA6I,qBAAA,OAAA8a,EAAAtQ,KAAA/N,IAAAtF,EAAA05C,uFAnBJ15C,EAPJiF,yBAAA,UAOIjF,CADH,WAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAgBAlF,EAfA4J,qBAAA,EAAAyvJ,EAAA,qBAeAr5J,CAfgE,EAAAs5J,EAAA,WAyBhEt5J,EAAAiF,yBAAA,cAAajF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAoyI,WAAW,MAAK,GAClC/1J,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+CAjCIA,EADAiX,sBAAA,YAAA0M,EAAAtQ,KAAAqjF,SAAA,EACA12F,CADqC,iBAAA2jB,EAAAtQ,KAAAqjF,SAAA,GAIjC12F,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAse,EAAAtQ,KAAAlI,KAAA,KAEWnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAtQ,KAAAqjF,UAAA,GAAA/yE,EAAAtQ,KAAAqjF,SAAA,KAmBV12F,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA8a,EAAAtQ,KAAAqjF,UAAA,4BAeL12F,EAHJiF,yBAAA,WAGIjF,CADH,UACGA,EAAAulB,iBAAA,KACJvlB,EADgEkF,wBAChElF,IAxDZzI,2BAoEqC,eAAAgiK,EAAxBC,EAAwB,WAUjC,OAAA9hK,EA9EJ,SAAA8hK,IAAA,IAAA3gK,EAAAjB,KAAAD,EAAAC,KAAA4hK,GA2EoB5hK,KAAA68B,iBAAmB,SAACC,GAAE,OAAM77B,EAAK87B,UAAYD,CAAE,EAC/C98B,KAAAg9B,kBAAoB,SAACF,GAAE,OAAM77B,EAAKg8B,SAAWH,CAAE,GAE/D,EAAAz7B,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKyb,KAAO6hB,EACRt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKyb,KAC5C,GAEA,CAAApa,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKyb,KAAOna,CAChB,GAAC,CAAAD,IAAA,cAAAC,MAEM,SAAYwsB,GAAK,IAAA+zI,EAAA/8J,EAAA9E,KACdilD,EAA4Bn3B,EAAMm5C,OAE5B,MAAPhiB,GAAc,QAAP48G,EAAP58G,EAASiiB,aAAK,IAAA26F,GAAdA,EAAgB78J,QAMrBhF,KAAK8hK,YALmB78G,EAAQiiB,MAKT,GAJL,SAACzrD,GACf3W,EAAK2W,KAAOA,EACZ3W,EAAK46B,SAAS56B,EAAK2W,KACvB,EAEJ,GAAC,CAAApa,IAAA,cAAAC,MAEO,SAAY6lE,EAAY46F,GAC5B,IAAM36F,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAACzjD,GACpC,IACMke,EAAO29D,EAASG,kBADFh8E,EAAEojD,OAAO7/D,OACwB+/D,EAAKv0D,MAEpD4sF,GADAZ,EAAca,EAAAK,aAAY,CAAC/9D,GAAO,CAAEg+D,UAAW54B,EAAK5zD,OAC/B,GACrB0sF,EAA6B,CAC/B5sF,GAAE,GAAAtP,UAAKzD,EAAAo+B,WAAU,eACjBnrB,KAAM4zD,EAAK5zD,KACXurF,SAAU,EACVvlC,KAAM4N,EAAK5N,KACXvwB,WAAYlvB,KAAKuX,MACjB3jB,IAAK,IAET8xF,EAAO99D,OACF5+B,QAAK1C,EAAAggG,WAAU,SAACp9F,GAAC,MAAkB,aAAbA,EAAE0+B,MAAqB,GAAE,IAC/C3uB,UAAU,SAACwqB,GACJiiE,EAAOa,aACPJ,EAAevyF,IAAM8xF,EAAOa,YAChCJ,EAAenB,SAAWvhE,EAAMuhE,SACX,UAAjBvhE,EAAMmE,SAAoBu+D,EAAenB,UAAW,GACxDijE,EAAU9hE,EACd,GACJ8hE,EAAU9hE,EACd,GACA74B,EAAWm5B,kBAAkBp5B,EACjC,IAAC,CAlEgC,GAkEhCw6F,SAlEQC,yCAAwB,kDAAxBA,EAAwB94J,UAAA,kBAAAC,SAAA,CAAAX,EAAAknB,6BARtB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMwhI,CAAwB,GACtDvhI,OAAO,MAEdp3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,qCAXsCoiB,UAAAC,MAAAC,EAAA,8rCAjD/BtnB,EAHJiF,yBAAA,UAGIjF,CADH,aAIOA,EAAA4I,qBAAA,kBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAUnI,EAAA24J,YAAA7wJ,GAAmB,GAHjC/I,EAAAkF,yBAKAlF,EAAA4J,qBAAA,EAAAiwJ,EAAA,aAuCJ75J,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAkwJ,EAAA,yBAAA95J,EAAA2c,2EAtCS3c,EAAAoF,oBAAA,GAAYpF,EAAZ6I,qBAAA,OAAA5H,EAAAoS,KAAYrT,CAAA,WAAAkkB,8EAuDhBs1I,CAAwB,mNC7ErC,IAAAh4J,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OAEAuC,EAAAvC,EAAA,MAEA6hG,EAAA7hG,EAAA,OACA4hG,EAAA5hG,EAAA,sFAsCwBuK,EAAAwY,kCAAA,GAGIxY,EAAAiF,yBAAA,YACIjF,EAAAkB,oBAAA,6BAMAlB,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,yFAVQA,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,cAEA7I,CAFe,QAAA4zJ,EAAAl9D,UAQf12F,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAuuJ,EAAAl9D,SAAA,+BAYR12F,EARJiF,yBAAA,SAQIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,qDARIA,EAAA6I,qBAAA,OAAA+qJ,EAAAtuJ,IAAAtF,EAAA05C,uFAvBJ15C,EAPJiF,yBAAA,WAOIjF,CADH,YAIOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBAkBAlF,EAjBA4J,qBAAA,EAAAmwJ,EAAA,sBAiBA/5J,CAfC,EAAAg6J,EAAA,YAyBDh6J,EAAAiF,yBAAA,eAAajF,EAAA4I,qBAAA,uBAAAgrJ,EAAA5zJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAS05C,EAAAm3G,WAAArG,GAAgB,GAClC5zJ,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+BArCIA,EADAiX,sBAAA,YAAA28I,EAAAl9D,SAAA,EACA12F,CADqC,iBAAA4zJ,EAAAl9D,SAAA,GAMjC12F,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAuuJ,EAAAzoJ,KAAA,KAGCnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA+qJ,EAAAl9D,UAAA,GAAAk9D,EAAAl9D,SAAA,KAoBA12F,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA+qJ,EAAAl9D,UAAA,+BAtCb12F,EAAAiF,yBAAA,YAKIjF,EAAA4J,qBAAA,EAAAswJ,EAAA,cA2CJl6J,EAAAkF,iEAzCyBlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAi6C,EAAAl4C,6BAgDzB5K,EAHJiF,yBAAA,WAGIjF,CADH,UACGA,EAAAulB,iBAAA,KACJvlB,EADgDkF,wBAChDlF,IA3EZzI,2BAuFqC,eAAA4iK,EAAxBC,EAAwB,WAUjC,OAAA1iK,EAjGJ,SAAA0iK,IAAA,IAAAvhK,EAAAjB,KAAAD,EAAAC,KAAAwiK,GAwFWxiK,KAAAgT,KAAqB,GAMZhT,KAAA68B,iBAAmB,SAACC,GAAE,OAAM77B,EAAK87B,UAAYD,CAAE,EAC/C98B,KAAAg9B,kBAAoB,SAACF,GAAE,OAAM77B,EAAKg8B,SAAWH,CAAE,GAE/D,EAAAz7B,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKgT,KAAOsqB,EAAU9hB,OAAO,SAACxY,GAAC,OAAKA,EAAE0K,KAAO1K,EAAE87F,UAAY,GAAG,GAC1D9+F,KAAK+8B,WAAW/8B,KAAK+8B,UAAU/8B,KAAKgT,KAC5C,GAEA,CAAA3R,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKgT,KAAO1R,EAAMga,IAAI,SAACtY,GAAC,OAAA6rB,EAAA,CACpBxb,GAAE,QAAAtP,UAAUzD,EAAAo+B,WAAU,aACnB17B,EAAC,EAEZ,GAAC,CAAA3B,IAAA,aAAAC,MAEM,SAAWma,GACdzb,KAAKgT,KAAOhT,KAAKgT,KAAKwI,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,EACxD,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYwsB,GAAK,IAAA+zI,EAAA/8J,EAAA9E,KACdilD,EAA4Bn3B,EAAMm5C,OAExC,GAAY,MAAPhiB,GAAc,QAAP48G,EAAP58G,EAASiiB,aAAK,IAAA26F,GAAdA,EAAgB78J,OAQrB,QAPMkiE,EAAkBjiB,EAAQiiB,MAC1B66F,EAAY,SAACtmJ,GACf3W,EAAKkO,KAAOoP,GACJtd,EAAKkO,MAAQ,IAAIwI,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,IACrDmJ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE+V,WAAa1qB,EAAE0qB,UAAU,GAC5ClkC,EAAK46B,SAAS56B,EAAKkO,KACvB,EACSof,EAAI,EAAGA,EAAI80C,EAAMliE,OAAQotB,IAC9BpyB,KAAK8hK,YAAY56F,EAAM90C,GAAI2vI,EAEnC,GAAC,CAAA1gK,IAAA,cAAAC,MAEO,SAAY6lE,EAAY46F,GAC5B,IAAM36F,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAACzjD,GACpC,IACMke,EAAO29D,EAASG,kBADFh8E,EAAEojD,OAAO7/D,OACwB+/D,EAAKv0D,MAEpD4sF,GADAZ,EAAca,EAAAK,aAAY,CAAC/9D,GAAO,CAAEg+D,UAAW54B,EAAK5zD,OAC/B,GACrB0sF,EAA6B,CAC/B5sF,GAAE,GAAAtP,UAAKzD,EAAAo+B,WAAU,eACjBnrB,KAAM4zD,EAAK5zD,KACXurF,SAAU,EACVvlC,KAAM4N,EAAK5N,KACXvwB,WAAYlvB,KAAKuX,MACjB3jB,IAAK,IAET8xF,EAAO99D,OACF5+B,QAAK1C,EAAAggG,WAAU,SAACp9F,GAAC,MAAkB,aAAbA,EAAE0+B,MAAqB,GAAE,IAC/C3uB,UAAU,SAACwqB,GACJiiE,EAAOa,aACPJ,EAAevyF,IAAM8xF,EAAOa,YAChCJ,EAAenB,SAAWvhE,EAAMuhE,SACX,UAAjBvhE,EAAMmE,SAAoBu+D,EAAenB,UAAW,GACxDijE,EAAU9hE,EACd,GACJ8hE,EAAU9hE,EACd,GACA74B,EAAWm5B,kBAAkBp5B,EACjC,IAAC,CA7EgC,GA6EhCo7F,SA7EQC,yCAAwB,kDAAxBA,EAAwB15J,UAAA,kBAAAC,SAAA,CAAAX,EAAAknB,6BARtB,CACP,CACI/iB,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMoiI,CAAwB,GACtDniI,OAAO,MAEdp3B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,qCA7EuCoiB,UAAAC,MAAAC,EAAA,2FACaF,UAAAG,MAAAD,EAAA,mFACDF,UAAAI,MAAAF,EAAA,sFAgEbF,UAAAM,MAAAJ,EAAA,oiDAnE3BtnB,EAJRiF,yBAAA,UAIQjF,CAJiC,UAIjCA,CADH,gBACmCA,EAAAmF,iBAAA,iBAAWnF,EAAAkF,yBAC3ClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAAsCvlB,EAAAkF,yBACtClF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,KAA2CvlB,EAAAkF,yBAC3ClF,EAAAiF,yBAAA,eAAAjF,EAAAulB,iBAAA,KAA8CvlB,EAAAkF,yBAC9ClF,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAUnI,EAAA24J,YAAA7wJ,GAAmB,GAErC/I,EANIkF,wBAMJlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAA4J,qBAAA,GAAAywJ,EAAA,cAkDRr6J,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA0wJ,EAAA,yBAAAt6J,EAAA2c,4EAhDa3c,EAAAoF,oBAAA,IAAoBpF,EAApB6I,qBAAA,aAAA5H,EAAA2J,KAAA,KAAA3J,EAAA2J,KAAAhO,OAAoBoD,CAAA,WAAAs9B,wFAiE5B88H,CAAwB,2RChGrC,IAAA54J,EAAA/L,EAAA,MASA0L,EAAA1L,EAAA,OACAyC,EAAAzC,EAAA,OASAuC,EAAAvC,EAAA,MASAkqE,GADAlqE,EAAA,OACAA,EAAA,QACAub,EAAAvb,EAAA,OAEA8kK,EAAA9kK,EAAA,OACA+kK,EAAA/kK,EAAA,OACAmnJ,EAAAnnJ,EAAA,MACA8pD,EAAA9pD,EAAA,OACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,mFAkCgCuK,EAAAiF,yBAAA,iFAUIjF,EAAAmF,iBAAA,mEAOJnF,EAAAkF,6GAfIlF,EAAA6I,qBAAA,oBAAAuvD,EAAAp4D,EAAAwN,sBAAA,IAAAxN,EAAAwN,sBAAA,UAAAomJ,EAAA,KAAAA,EAAAt1J,SAAA,KAAA85D,EAAAqiG,mBAAA33G,EAAAtzB,OAQAxvB,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAAuqH,EAAA5vH,EAAAwN,sBAAA,IAAAxN,EAAAwN,sBAAA,UAAAomJ,EAAA,KAAAA,EAAAt1J,SAAA,KAAAsxH,EAAA8qC,cAAA53G,EAAAtzB,MAAA,mEAlBZxvB,EAAAiF,yBAAA,qBAIIjF,EAAA4I,qBAAA,yBAAAgrJ,EAAA5zJ,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAW05C,EAAA63G,WAAA/G,GAAgB,GAGvB5zJ,EADJiF,yBAAA,WACIjF,CADqC,SAChCA,EAAAmF,iBAAA,GAA6BnF,EAAAkF,yBAClClF,EAAA4J,qBAAA,EAAAgxJ,EAAA,oBAkBJ56J,EAAAkF,yBAQIlF,EAPJiF,yBAAA,cAOIjF,CADH,cACaA,EAAAmF,iBAAA,YAElBnF,EAFwBkF,wBAExBlF,+BAjCIA,EAAAiX,sBAAA,aAAA28I,EAAA/xB,aAIS7hI,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA6nJ,EAAAzoJ,MAAAyoJ,EAAAt1J,OAEA0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA+qJ,EAAA/xB,aAqBL7hI,EAAAoF,8GAoBZpF,EAAAkB,oBAAA,iFAOAlB,EAAAiF,yBAAA,mBAEIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA2E,GAAA,IAAAm1C,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA+3G,mBAAkB,GAF/B76J,EAAAulB,iBAAA,KAMAvlB,EAAAkF,mEADIlF,EAAAoF,sBAAApF,EAAAylB,oBAAAq9B,EAAAg4G,QAAA/qJ,qGAEJ/P,EAAAiF,yBAAA,mBAEIjF,EAAA4I,qBAAA,uBAAAmyJ,EAAA/6J,EAAAgJ,wBAAA+E,GAAAoH,UAAA2tC,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAk4G,QAAAD,GAAa,GAGtB/6J,EAAAmF,iBAAA,GAAenF,EAAAkB,oBAAA,QACflB,EAAAiF,yBAAA,aAAsBjF,EAAAmF,iBAAA,GAC1BnF,EAD0CkF,wBAC1ClF,6BAFIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA01J,EAAA5vJ,KAAA,IACsBnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAgvJ,EAAAz8J,qEAS9B0B,EALJiF,yBAAA,WAKIjF,CADH,eAOOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA5S,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAAm4G,mBAAkB,GAN/Bj7J,EAAAqjD,sBAAA,KASIrjD,EAAAiF,yBAAA,YACajF,EAAAkB,oBAAA,aACblB,EAAAkF,yBACJlF,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAAjF,EAAAqjD,sBAAA,KAQIrjD,EAAAiF,yBAAA,YACgBjF,EAAAkB,oBAAA,aAChBlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAGIjF,EAAA4I,qBAAA,kBAAAG,GAAA/I,EAAAgJ,wBAAA0sD,GAAA,IAAA5S,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAU05C,EAAAo4G,iBAAAnyJ,GAAwB,GAHtC/I,EAAAkF,yBAKJlF,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0sD,GAAA,IAAA5S,EAAA9iD,EAAAmJ,0BAAS25C,SAAAq4G,sBAAqBn7J,EAAAoJ,sBAAE05C,EAAAs4G,SAAAtkJ,OAAe,GANnD9W,EAAAqjD,sBAAA,MASIrjD,EAAAiF,yBAAA,aACIjF,EAAAkB,oBAAA,cACJlB,EAAAkF,yBACJlF,EAAAsjD,sBACJtjD,EADIkF,wBACJlF,IAlJZ,SAASq7J,EAAc/8J,GAGnB,MADI,4JACMg9J,KAAKh9J,EACnB,CAEA,IAAMi9J,EAAsB,CAAC,WAAY,cACnCC,EAAoB,CACtB,2BACA,qEAGJjkK,yBAwJI,eAAAkkK,EADSnM,EACT,SAAA92J,GA+FA,SAAA82J,EACYlgJ,EACA3W,GAA0B,IAAAI,EAAAlB,SAAAC,KAAA03J,IAElCz2J,EAAAC,EAAAlB,KAAA03J,IAHQlgJ,UACAvW,EAAAJ,YA9FII,EAAA22B,KAAO9d,KAAKuX,MAIZpwB,EAAA8rC,MAAQ,EAER9rC,EAAA8iD,QAAS,EAET9iD,EAAA6iK,aAAc,EAEd7iK,EAAA8iK,cAAe,EAEf9iK,EAAA+iK,iBAAkB,EAIjB/iK,EAAAgjK,SAAW,IAAIr6J,EAAAoV,aAEf/d,EAAAuiK,SAAW,IAAI55J,EAAAoV,aAEvB/d,EAAAijK,mBAAqB,CAACn8F,EAAAyB,MAAOzB,EAAA0B,OAG/BxoE,EAAAqhB,SAAU,EACDrhB,EAAAiiK,QAAU,IAAI9pJ,EAAAuB,gBAAgB,IAavC1Z,EAAAkjK,WAAaljK,EAAKiiK,QAAQpgK,QAC7B1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAC5uB,GACP/B,SAAKqhB,SAAU,GAEXtf,EACM/B,EAAK8iD,UACD3qC,EAAA2I,eAAc,CACV9gB,EAAK2lJ,YAAY5jJ,IAAC,EAClB4/J,EAAAwB,cAAaphK,KACdF,QACC1C,EAAAkb,KAAI,SAAArV,GAAoB,IAAA6B,GAAAma,EAAAhc,EAAA,GAAlBo+J,GAAKv8J,GAAA,GAAEi8C,GAAMj8C,GAAA,GACX7G,EAAK6iK,cAAaO,GAAQ,IAC9B,IAI2B/sI,EAJrBgtI,GAAgB,GAChBtwI,GACF/yB,EAAKJ,UAAUyE,IAAI,qBACnB,GAAG+xB,EAAAa,EACYlE,IAAQ,IAA3B,IAAAqD,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA6B,KACzBw/B,GADWtgC,EAAAh2B,MAEFqF,MAAM,KAAIkxD,GAAA51C,EAAA21C,GAAA,GACnB0sG,GAAcrrI,KAAK,CACfvyB,MAHQmxD,GAAA,GAIRtkD,KAJcskD,GAAA,GAKdnR,QALuBmR,GAAA,IAO/B,CAAC,OAAAvuC,IAAA+N,EAAAxT,EAAAyF,GAAA,SAAA+N,EAAA8B,GAAA,CACD,SAAO74B,EAAAqvC,QACF00H,GACItgK,OAAOggD,IACPhgD,OAAOugK,IACZ,QAER,IAEJrjK,EAAK2lJ,YAAY5jJ,IAAC,EACtBoW,EAAAQ,IAAG,KACX9W,QAAK1C,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,GACnC,IAAC,EACDxZ,EAAAyiB,KAAI,SAAC7f,GAAC,OAAM/B,EAAKqhB,SAAU,CAAK,IAG7BrhB,EAAAsjK,YAAsB,GAObtjK,EAAAujK,QAAU,SAACl8I,GAAC,OAAKm7I,EAAcn7I,EAAE,EACjCrnB,EAAAwjK,WAAa,kBAAMxjK,EAAKoiK,iBAAiB,IAAI17G,EAAA6Q,KAAO,EAACv3D,CAWrE,CAACG,SAAAs2J,EAAA92J,GAAAd,EAAA43J,EAAA,EAAAr2J,IAAA,cAAAC,MArEO,SAAYyqC,GAAS,IAAA7pB,EACzB,OAAOliB,KAAKa,UAAUyE,IAAI,0BAAuB,EAC3CjF,EAAAqmJ,YAAW,CAAE36G,IAAG46G,aAAyB,QAAbzkI,KAAE7hB,EAAA2nG,oBAAW,IAAA9lF,OAAA,EAAXA,EAAa7O,KAAMvQ,QAC7C1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEP,KAAK6Y,IAAI,SAACgnF,GAAC,OAAK,IAAI36C,EAAA6Q,KAAK8pC,EAAE,EAAC,KAAC,EAE9C0iD,EAAA4B,aAAY76G,EACtB,GAAC,CAAA1qC,IAAA,qBAAAiE,IAsDD,WACI,OAAOm+J,EAAczjK,KAAKkjK,QAAQ/qJ,WACtC,GAAC,CAAA9W,IAAA,eAAAC,MASM,WAAmC,IAAAwD,EAAA9E,KAAtBs9B,EAAA14B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,GACpC5E,KAAKwD,QAAQ,SAAU,kBAAMsB,EAAKo+J,QAAQ/gK,KAAKm7B,EAAU,EAC7D,GAAC,CAAAj8B,IAAA,mBAAAC,MAEM,WAAmC,IAAA4E,EAAAlG,KAAlB0G,EAAA9B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,GAEpC,GADK8B,IAAOA,EAAQ1G,KAAKkjK,QAAQ/qJ,YAC5BsrJ,EAAc/8J,GACnB,KAAM+lB,EAAO,IAAIk7B,EAAA6Q,KAAK,CAAEnlD,GAAI3M,EAAOA,QAAO6M,KAAM7M,EAAMC,MAAM,KAAK,KACjE3G,KAAKojK,QAAQ32I,GACb,IAAQlZ,EAAuBkZ,EAAvBlZ,KAAMgnC,GAAiB9tB,EAAjB8tB,aACR2d,GAAe,GAAAn0D,OAAM2C,EAAK,KAAA3C,OAAIwP,EAAI,KAAAxP,OAAIw2C,IACtC4d,GAAen4D,KAAKa,UAAUyE,IAAI,qBAAuB,GAC/DtF,KAAKa,UAAUm/B,gBAAgB,mBAAkB,GAAAj8B,OAAAqe,EAC1C+1C,GAAa38C,OAAO,SAACxY,IAAC,OAAMA,GAAE4C,SAASc,EAAM,IAAC,CACjDwxD,MAEJl4D,KAAKwD,QACD,eACA,WACI0C,EAAKg9J,QAAQ/gK,KAAK,IAClB+D,EAAKw+J,WAAWz8D,cAAc3mG,MAAQ,EAC1C,EACA,IAAG,CAEX,GAEA,CAAAD,IAAA,UAAAC,MAIO,SAAQmrB,GAAU,IAAAk4I,EAAAxiJ,EAAArb,EAAA9G,KACfgT,IAAuB,QAAhB2xJ,EAAA3kK,KAAKukK,mBAAW,IAAAI,OAAA,EAAhBA,EAAkBnpJ,OAAO,SAACxY,IAAC,OAAKA,GAAEqQ,KAAOoZ,EAAKpZ,EAAE,KAAK,GAClErT,KAAK0/B,SAAQ,GAAA37B,OAAAqe,EACNpP,IAAI,CACP,IAAI20C,EAAA6Q,KAAI3pC,IAAA,GACDpC,GAAI,IACPpZ,GAAIoZ,EAAKpZ,IAAMoZ,EAAK/lB,MACpB8jI,eAGc,QAHAroH,EACRsK,EAAKpZ,KAA2B,IAArBoZ,EAAKw9G,YAEZ,KADAx9G,EAAK+9G,sBACD,IAAAroH,WAGtBniB,KAAKwD,QACD,eACA,WACIsD,EAAKo8J,QAAQ/gK,KAAK,IAClB2E,EAAK49J,WAAWz8D,cAAc3mG,MAAQ,EAC1C,EACA,IAER,GAEA,CAAAD,IAAA,aAAAC,MAIO,SAAWmrB,GACd,IAAMzZ,EAAOhT,KAAKukK,YAAY/oJ,OAAO,SAACopJ,GAAM,OAAKA,EAAOvxJ,KAAOoZ,EAAKpZ,EAAE,GACtErT,KAAK0/B,SAAS1sB,EAClB,GAEA,CAAA3R,IAAA,mBAAAC,MAIO,SAAiBwsB,GAAK,IAAA4xB,EAAA1/C,KAEzB,GAAI8tB,EAAMm5C,OAAQ,CACd,IAAME,EAAar5C,EAAMm5C,OAAOC,MAAM,GAEtC,GAAIC,EAAM,CACN,IACKw8F,EAAoB/9J,SAASuhE,EAAKv0D,OACnCgxJ,EAAkBh+J,SAASuhE,EAAKv0D,MAGhC,YADA,EAAAtS,EAAAqU,aAAY,gCAGhB,IAAMusE,EAAS,IAAI7Z,WACnB6Z,EAAOzZ,WAAWN,EAAM,SACxB+Z,EAAO5Z,iBAAiB,OAAQ,SAAC6Z,IAC7BzhC,EAAKmlH,eAAgB1jF,GAAIC,WAAmBh6E,QAC5C0mB,EAAMm5C,OAAO3lE,MAAQ,EACzB,GACA4/E,EAAO5Z,iBAAiB,QAAS,SAACtkE,IAAC,SAC/B1C,EAAAqU,aAAY,sBAAsB,EAE1C,CACJ,CACJ,GAEA,CAAAtT,IAAA,iBAAAC,MAIQ,SAAemB,GAAY,IAAAulC,EAGVvQ,GAHU6mD,EAAAt+E,KACzBgT,KAAO1S,EAAAinE,WAAU9kE,IAAS,GAC1B4Q,IAAkB,QAAb20B,KAAA1nC,EAAAkG,sBAAa,IAAAwhC,OAAA,EAAbA,EAAe88H,WAAY,UAAUttI,GAAAU,EAC/BllB,GAAI,QAAA0nB,GAAA,WAAE,IAAAqqI,EAAZ96E,EAAExyD,GAAAn2B,MACT2oF,EAAG12E,KAAO02E,EAAG12E,MAAI,GAAAxP,OAAOkmF,EAAG+6E,WAAU,KAAAjhK,OAAIkmF,EAAGg7E,WAC5C,IAAMn+I,IACFmjE,EAAG12E,MAAI,GAAAxP,OAAOi0B,KAAK6I,MAAsB,SAAhB7I,KAAKgxD,YAE7BriF,MAAM,KACNkO,KAAK,KACLme,cAEAi3D,EAAGvjF,QACJujF,EAAGvjF,MAAK,GAAA3C,OAAM+iB,GAAO,KAAA/iB,OAAIsP,GAAE,WAAAtP,OAAUxD,EAAA2kK,cAEzC,IAAMC,GAAkB7mF,EAAKz9E,UAAUyE,IACnC,iCACC,CAAC,cACN2kF,EAAGugD,eACkB,QADJu6B,EACb96E,EAAGugD,sBAAc,IAAAu6B,KAChBI,GAAgBj2I,KAAK,SAAClsB,IAAC,OAAKinF,EAAGvjF,MAAM0+J,SAASpiK,GAAE,GAGrDinF,EAAG9rC,MAAQ,GAAK8rC,EAAG9rC,MAEnBmgC,EAAK8kF,QAAQ,IAAIz7G,EAAA6Q,KAAKyxB,GAC1B,EAvBA,IAAAzyD,GAAAlP,MAAAmP,GAAAD,GAAAW,KAAAC,MAAAsC,IAuBC,OAAApR,IAAAkO,GAAA3T,EAAAyF,GAAA,SAAAkO,GAAA2B,GAAA,CACL,GAGA,CAAA93B,IAAA,sBAAAC,MACO,WACCtB,KAAKgkK,kBAET,EAAA1jK,EAAAonE,cAAa,eADC,sJAElB,GAEA,CAAArmE,IAAA,WAAAC,MAIO,SAASg8B,GACZt9B,KAAKukK,YAAcjnI,EACft9B,KAAK+8B,WACL/8B,KAAK+8B,UAAUO,EAEvB,GAGA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKukK,YAAcjjK,CACvB,GAAC,CAAAD,IAAA,mBAAAC,MAEM,SAAiBs7B,GACpB58B,KAAK48B,SAAWA,CACpB,GAGA,CAAAv7B,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAGA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,GAAC,CAAAz7B,IAAA,YAAAC,MAEM,SAAUma,GACb,OAAOA,GAAMlI,MAAQ,EACzB,GAEA,CAAAlS,IAAA,mBAAAC,MAGO,WAAwC,IAAAyzC,EAAA2pC,EAAA1+E,KAAvBysB,EAAA7nB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAAI+iD,EAAA6Q,KAC/B5gD,EAAM5X,KAAKwX,QAAQzC,KACrB4tJ,EAAA0C,sBACA,CACIl+J,MAAO,OACPD,OAAQ,OACRzE,KAAM,CAAEgqB,UAGK,QAArBsoB,EAAAn9B,EAAIM,yBAAiB,IAAA68B,GAArBA,EAAuBjnB,MAClBhrB,QAAK1C,EAAA2C,OAAM,SAACC,IAAC,MAAkB,SAAbA,GAAEsrB,MAAiB,IACrCvb,UAAU,SAAC+a,IACR4wD,EAAK0kF,QAAQt1I,GAAMuyB,UACnBzoC,EAAIlQ,OACR,EACR,IAAC,CA3SD,CAAQpH,EAAA6H,cAAY07J,SADXnM,0CAAsBtvJ,EAAAC,4BAAAC,EAAAgQ,WAAAlQ,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAtBmvJ,EAAsB5uJ,UAAA,wBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,gYARpB,CACP,CACImD,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAMs3H,CAAsB,GACpDr3H,OAAO,KAEdj4B,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,WAjGgCC,UAAAC,MAAAC,EAAA,wMAqBhBF,UAAAG,MAAAD,EAAA,mIACiC,iBA0BlCF,UAAAI,MAAAF,EAAA,mNACa,iBAAuC,kBACpD,mBAUAF,UAAAM,MAAAJ,EAAA,yOACgB,iBAAkC,kBAClD,kBACA,iCAeAF,UAAAO,MAAAL,EAAA,sNACI,kBAAkC,mBACtC,+1CAzHAtnB,EARZiF,yBAAA,UAQYjF,CAR4C,UAQ5CA,CAPI,wBAOJA,CADH,wBAEOA,EAAA4J,qBAAA,EAAAszJ,EAAA,uBAqCJl9J,EAAAkF,yBACAlF,EAAAiF,yBAAA,8CAUIjF,EAJA4I,qBAAA,yBAAAG,IAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAAk8J,aAAAp0J,IAAoB,EAIrC/I,CAJsC,gCAAA+I,IAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAIdnI,EAAA45J,iBAAA9xJ,GAAA7P,OAA8B,GAV1D8G,EAAAkF,yBAYAlF,EAAA4J,qBAAA,GAAAwzJ,EAAA,sBAKJp9J,EAAAkF,yBACAlF,EAAAiF,yBAAA,8BAQIjF,EAPA4J,qBAAA,GAAAyzJ,EAAA,oBAOAr9J,CAHC,GAAAs9J,EAAA,oDAYTt9J,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA2zJ,EAAA,eAiDJv9J,EAAAkF,+IAzHqClF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAk7J,aAyCrBn8J,EAAAoF,sBAIApF,EAJA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAvM,EAAA65J,SAIA96J,CAJ2B,kBAAAw9J,EAI3Bx9J,CAFwB,kBAAAy9J,EAExBz9J,CAD4B,gCAAAiB,EAAA66J,oBAK3B97J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAiZ,SAOAla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAy8J,oBAOgB19J,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAA86J,aAYxB/7J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAA06J,kBA8DJrM,CACT,2MCzMJ,IAAA9tJ,EAAA/L,EAAA,MAQA0L,EAAA1L,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAQAyC,EAAAzC,EAAA,OACA+kK,EAAA/kK,EAAA,OACAmnJ,EAAAnnJ,EAAA,MACA8pD,EAAA9pD,EAAA,OACAwC,EAAAxC,EAAA,6DAuBYuK,EAAAkB,oBAAA,iFAMAlB,EAAAiF,yBAAA,mBAEIjF,EAAA4I,qBAAA,uBAAA0vJ,EAAAt4J,EAAAgJ,wBAAA6gC,GAAA10B,UAAA2tC,EAAA9iD,EAAAmJ,0BAAS25C,SAAAxrB,SAAAghI,GAAgBt4J,EAAAoJ,sBAAE05C,EAAA66G,YAAW,GAEtC39J,EAAAiF,yBAAA,YAA2BjF,EAAAmF,iBAAA,GAAiBnF,EAAAkF,yBAC5ClF,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,GAERnF,EADIkF,wBACJlF,6BAJ+BA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAAusJ,EAAAntJ,MAEvBnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAizJ,EAAAh6J,MAAA,mEAOJ0B,EAJJiF,yBAAA,kBAIIjF,CADH,YASOA,EANA4I,qBAAA,qBAAAG,GAAA/I,SAAAgJ,wBAAA2E,GAC6B5E,EAAA60J,kBAAwB59J,EAAAoJ,sBACxEL,EAAAogF,iBACC,EAGkBnpF,CAJC,sBAAA+I,GAAA/I,SAAAgJ,wBAAA2E,GAE4B5E,EAAA60J,kBAAwB59J,EAAAoJ,sBACxEL,EAAAogF,iBACC,EAAkBnpF,CADC,iBAAA+I,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAm1C,EAAA9iD,EAAAmJ,0BAGlB25C,SAAAxrB,SAAAwrB,EAAAw4F,YAA8CvyI,EAAA60J,kBAC1B59J,EAAAoJ,sBACtBL,EAAAogF,iBACC,GACkBnpF,EAAAiF,yBAAA,YAAAjF,EAAAulB,iBAAA,KAIRvlB,EAFQkF,wBAERlF,+CAHYA,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAq9B,EAAAw4F,qGAIZt7I,EAAAiF,yBAAA,mBAGIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA+E,GAAA,IAAA+0C,EAAA9iD,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS05C,EAAA+6G,WAAU,GAEnB79J,EAAAmF,iBAAA,GACJnF,EAAAkF,mEAJIlF,EAAA6I,qBAAA,YAAAi6C,EAAA+6G,UAGA79J,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAA4rC,EAAAw4F,WAAA,yBAAAx4F,EAAAplD,MAAA,MAhEhBnG,2BAwFI,eAAAumK,EADS/X,EACT,SAAAvtJ,GA6DA,SAAAutJ,EAAoBttJ,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAmuJ,IAC1CltJ,EAAAC,EAAAlB,KAAAmuJ,IADgBttJ,YAjDJI,EAAA6E,MAAQ,GAQR7E,EAAAklK,SAA8C,SAACp6H,GAAC,IAAA9lC,EAAA,OAC5DhF,EAAKJ,UAAUyE,IAAI,0BAAuB,EACpCjF,EAAAqmJ,YAAW,CAAE36G,IAAG46G,aAAyB,QAAb1gJ,KAAE5F,EAAA2nG,oBAAW,IAAA/hG,OAAA,EAAXA,EAAaoN,KAAMvQ,QAC7C1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,EAAEP,KAAK6Y,IAAI,SAACtY,GAAC,OAAK,IAAI2kD,EAAA6Q,KAAKx1D,EAAE,EAAC,KAAC,EAE9CgiJ,EAAA4B,aAAY76G,EAAE,EAUjB9qC,EAAAiiK,QAAU,IAAI9pJ,EAAA48E,QAEd/0F,EAAAmlK,gBAAsCnlK,EAAKiiK,QAAQpgK,QACtD1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAA0xB,yBAAoB,EACpB1xB,EAAAwxB,WAAU,SAACyB,GACPpyB,SAAKqhB,SAAU,EACRrhB,EAAK+gB,SAAW/gB,EAAK+gB,QAAQhd,OAAS,KACvCoU,EAAAQ,IAAG3Y,EAAK+gB,SACRqR,EAAMruB,QAAU,EACf/D,EAAK8iD,UAEF3qC,EAAA0zB,UAAS,IAACk4G,EAAA4B,aAAYvzH,IAAK,EAAGuvI,EAAAwB,cAAa/wI,KAD3CpyB,EAAKklK,SAAS9yI,IAAK,EAEvBja,EAAAQ,IAAG,GACb,IAAC,EACDxZ,EAAAkyB,YAAW,SAACtvB,GAAC,SAAKoW,EAAAQ,IAAG,GAAG,MACxBxZ,EAAAkb,KAAI,SAACtI,GACD/R,EAAKqhB,SAAU,EACftP,KAAO1S,EAAAmyB,SAAQzf,GACf,IAAMixB,GAAUhjC,EAAKyiJ,YAAc,IAAI1wH,cACvC,OAAOhgB,EAAKwI,OACR,SAACC,GAAI,OAAMxa,EAAKua,QAAUva,EAAKua,OAAOC,EAAMwoB,EAAO,EAE3D,IAeGhjC,EAAAolK,YAAc,kBAAMplK,EAAK6C,aAAa,QAAQ,EAE9C7C,EAAA8kK,UAAY,WACf9kK,EAAKuC,QAAQ,OAAQ,eAAAwgJ,EAAA,OAAoB,QAApBA,EAAM/iJ,EAAKisG,iBAAS,IAAA82C,GAAe,QAAfA,EAAdA,EAAgB/7C,qBAAa,IAAA+7C,OAAA,EAA7BA,EAA+BpkB,MAAM,EACpE,EAAE3+H,CAdF,CAACG,SAAA+sJ,EAAAvtJ,GAAAd,EAAAquJ,EAAA,EAAA9sJ,IAAA,WAAAC,MAgBM,WAAQ,IAAAwD,EAAA9E,KAEXA,KAAK6S,aACD,iBACA7S,KAAKomK,gBAAgBrzJ,UAAU,SAACC,GAAI,OAAMlO,EAAKwhK,UAAYtzJ,CAAI,IAEnEhT,KAAKumK,mBACT,GAEA,CAAAllK,IAAA,oBAAAC,MAGO,WAAiB,IAAA4E,EAAAlG,KACpBA,KAAKwD,QACD,QACA,eAAAgjK,EAAA,OAAOtgK,EAAKw9I,YAA6B,QAAhB8iB,EAAAtgK,EAAKugK,mBAAW,IAAAD,OAAA,EAAhBA,EAAkBjzJ,OAAQ,EAAE,EACrD,IAER,GAEA,CAAAlS,IAAA,WAAAC,MAIO,SAASg8B,EAA0B52B,GACtC,GAAK42B,EACL,CACyB,iBAAdA,GACNA,IAAsBt9B,KAAK0jJ,aAE5BpmH,EAAY,IAAIqqB,EAAA6Q,KAAK,CACjBjlD,MAAOvT,KAAK0jJ,YAAch9I,GAAS,IAAIC,MAAM,KAAK,GAClDD,MAAO1G,KAAK0jJ,YAAch9I,GAAS,MAG3C,IAAM+lB,EAAO6Q,IACP,SAAU7Q,MAAW,UAAWA,KACtCzsB,KAAKymK,YAAch6I,EACfzsB,KAAK+8B,WAAW/8B,KAAK+8B,UAAUtQ,GACnCzsB,KAAKumK,oBAAiB,CAC1B,GAEA,CAAAllK,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAKymK,YAAcnlK,EACnBtB,KAAKumK,mBACT,GAAC,CAAAllK,IAAA,mBAAAC,MAEM,SAAiBs7B,GACpB58B,KAAK48B,SAAWA,CACpB,GAEA,CAAAv7B,IAAA,mBAAAC,MAIO,SAAiBw7B,GACpB98B,KAAK+8B,UAAYD,CACrB,GAEA,CAAAz7B,IAAA,oBAAAC,MAIO,SAAkBw7B,GACrB98B,KAAKi9B,SAAWH,CACpB,IAAC,CApJD,CAAQx8B,EAAA6H,cAAY+9J,SADX/X,0CAAwB/lJ,EAAAC,4BAAAC,EAAAC,iBAAA,kDAAxB4lJ,EAAwBrlJ,UAAA,0BAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,+BAuELQ,EAAAs+F,6TA/EjB,CACP,CACI37F,QAAShD,EAAA22B,kBACTC,eAAav2B,EAAAw2B,YAAW,kBAAM+tH,CAAwB,GACtD9tH,OAAO,KAEdj4B,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,0DA/BqDoiB,UAAAC,MAAAC,EAAA,4HACX,swBAnDnCtnB,EADJiF,yBAAA,qBACIjF,CAD6D,eAMzDA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAq6I,WAAAvyI,KAAA9H,EAAAq6I,WAAAvyI,GAAA/I,EAAAoJ,sBAAAL,EAAA,GASA/I,EARA4I,qBAAA,yBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAA65J,QAAA/gK,KAAAgP,GAAuB,IAAG,EAQ3C/I,CAR4C,yBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAq9J,UAKPr9J,EAAAq9J,SAAAr9J,EAAAq6I,YAAuBr6I,EAAAq2B,SAAAr2B,EAAAq6I,YAE5E,GAAE,EACct7I,CAFC,kBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBACOnI,EAAAk9J,oBAAmB,EAC3Bn+J,CAD4B,mBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBACnBnI,EAAAg9J,cAAa,GAd1Bj+J,EAAAkF,yBAgBAlF,EAAAiF,yBAAA,gBAA8CjF,EAAAmF,iBAAA,YAAMnF,EAAAkF,yBACpDlF,EAAA4J,qBAAA,EAAA20J,EAAA,qBACJv+J,EAAAkF,yBACAlF,EAAAiF,yBAAA,0BAEIjF,EAAA4I,qBAAA,0BAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAkBnI,EAAAq2B,SAAAvuB,EAAAk7D,OAAA/qE,OAA6B,GAkC/C8G,EAhCA4J,qBAAA,EAAA40J,EAAA,mBAgCAx+J,CA7BC,EAAAy+J,EAAA,mBA6BDz+J,CApBC,GAAA0+J,EAAA,qBA2BL1+J,EAAAkF,kEAzDQlF,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAApU,EAAAq6I,YAIAt7I,EAFA6I,qBAAA,WAAA5H,EAAAuzB,SAEAx0B,CAFqB,cAAAiB,EAAA+yJ,aAAA,qBAErBh0J,CADmD,kBAAA2+J,GASzC3+J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAiZ,SAOSla,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAi9J,WASlBl+J,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAq6I,YAAAr6I,EAAAq9J,UAAAr9J,EAAAq9J,SAAAr9J,EAAAq6I,aAuBAt7I,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAA5H,EAAAi9J,WAAAj9J,EAAAi9J,UAAAthK,UAAAqE,EAAAq6I,YAAAr6I,EAAAvD,6LA2BJqoJ,CACT,sFChHJxuJ,kKCDA,IAAAgxB,EAAA9yB,EAAA,OAGa8B,kBAAkB,CAC3B,CAAE0T,GAAI,IAAKE,KAAM,cACjB,CAAEF,GAAI,IAAKE,KAAM,aACjB,CAAEF,GAAI,IAAKE,KAAM,cACjB,CAAEF,GAAI,IAAKE,KAAM,UAGR5T,gBAAgB,CACzB,CAAE0T,GAAI,IAAKE,KAAM,OAAQyuB,YAAa,IAAK2I,MAAO,QAASpB,QAAS,OACpE,CACIl2B,GAAI,IACJE,KAAM,SACNyuB,YAAa,IACb2I,MAAO,QACPpB,QAAS,MACTnf,OAAQ,IAEZ,CACI/W,GAAI,IACJE,KAAM,SACNyuB,YAAa,IACb2I,MAAO,QACPpB,QAAS,OAEb,CACIl2B,GAAI,IACJE,KAAM,QACNyuB,YAAa,IACb2I,MAAO,gBACPpB,QAAS,OAEb,CACIl2B,GAAI,IACJE,KAAM,SACNyuB,YAAa,IACb2I,MAAO,OACPpB,QAAS,OAEb,CAAEl2B,GAAI,IAAKE,KAAM,QAASyuB,YAAa,IAAK2I,MAAO,OAAQpB,QAAS,OACpE,CAAEl2B,GAAI,IAAKE,KAAM,QAASyuB,YAAa,IAAK2I,MAAO,OAAQpB,QAAS,OACpE,CACIl2B,GAAI,IACJE,KAAM,YACNyuB,YAAa,IACb2I,MAAO,aACPpB,QAAS,OAEb,CACIl2B,GAAI,IACJE,KAAM,UACNyuB,YAAa,IACb2I,MAAO,YACPpB,QAAS,OAEb,CACIl2B,GAAI,KACJE,KAAM,qBACNyuB,YAAa,IACb2I,MAAO,UACPpB,QAAS,OAEb,CACIl2B,GAAI,KACJE,KAAM,aACNyuB,YAAa,IACb2I,MAAO,OACPpB,QAAS,QAIJ5pC,cAAgC6+B,MAAM,KAC9CC,KAAK,MACLnjB,IAAI,SAACtY,EAAGovB,GAAC,MAAM,CACZ/e,GAAE,SAAAtP,OAAWquB,GACb7e,KAAI,SAAAxP,OAAWquB,GACfiX,QAAS1pC,EAAAqnK,cAAc50I,EAAIzyB,EAAAqnK,cAAchiK,QAAQqO,GACjDI,YAAW,iBAAA1P,OAAmBquB,GAC9B60I,aAAY,SAAAljK,OAAWquB,GACvBkX,cAAa,UAAAvlC,OAAYquB,GACzBoX,WAAU,cAAAzlC,OAAgBquB,GAC1BqX,WAAY,GACZC,kBAAiB,kBAAA3lC,OAAoBquB,GACxC,GAEQzyB,uBAAuB6+B,MAAM,KACrCC,KAAK,MACLnjB,IAAI,SAACtY,EAAGovB,GAAC,MAAM,CACZ/e,GAAE,kBAAAtP,OAAoBquB,GACtB6X,aAAY,SAAAlmC,OAAWquB,GACvB+X,eAAc,WAAApmC,OAAaquB,GAC3BiY,iBAAe1Z,EAAA4C,aAAYzZ,KAAKuX,OAChCiZ,+BAA6B3Z,EAAA4C,aAAYzZ,KAAKuX,OAC9CmZ,6BAA2B7Z,EAAA4C,aAAYzZ,KAAKuX,MAAQ,KACvD,kHChGL,IAAA/wB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAqpK,EAAArpK,EAAA,OAOMspK,EAAY,iBAELxnK,cAcb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,qBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GAEP,OADekkK,EAAAI,eAEnB,KACH,EAEDjnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,yBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQo5I,EAAAI,gBAAgBp4I,KAC1B,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAErC,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAElE,OAAOya,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,qBAClB9mH,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMqqI,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,aAAAtP,UAAezD,EAAAytF,sBAAqB,QAE1Cm5E,SAAAI,gBAAgBruI,KAAKuuI,GACdA,CACX,KACH,EAEDnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,yBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAC8pB,GAAG,OACV23H,EAAOP,EAAAI,gBAAPG,CAAwB33H,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KACpE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,yBAClB9mH,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAC8pB,GACP,IAAMi6B,EAAQm9F,EAAAI,gBAAgBlrH,UAC1B,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOy8B,EAAIy3H,aAAal0J,EAAE,GAEvC,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoC+rC,EAAIy3H,aAAal0J,KAEpE6zJ,EAAAI,gBAAgBnrH,OAAO4tB,EAAO,EAElC,KACH,EAED1pE,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,gBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GAEP,OADekkK,EAAAF,aAEnB,KACH,EAED3mK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,oBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQo5I,EAAAF,cAAc93I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAClE,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAElE,OAAOya,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,gBAClB9mH,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMqqI,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,YAAAtP,UAAczD,EAAAytF,sBAAqB,QAEzCm5E,SAAAF,cAAc/tI,KAAKuuI,GACZA,CACX,KACH,EAEDnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,oBAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAC8pB,GAAG,OACV23H,EAAOP,EAAAF,cAAPS,CAAsB33H,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KAClE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,oBAClB9mH,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAC8pB,GACP,IAAMi6B,EAAQm9F,EAAAF,cAAc5qH,UACxB,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOy8B,EAAIy3H,aAAal0J,EAAE,GAEvC,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoC+rC,EAAIy3H,aAAal0J,KAEpE6zJ,EAAAF,cAAc7qH,OAAO4tB,EAAO,EAEhC,KACH,EAED1pE,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,0BAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GAEP,OADekkK,EAAAQ,oBAEnB,KACH,EAEDrnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,8BAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQo5I,EAAAQ,qBAAqBx4I,KAC/B,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAErC,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAElE,OAAOya,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,0BAClB9mH,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMqqI,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,mBAAAtP,UAAqBzD,EAAAytF,sBAAqB,QAEhDm5E,SAAAQ,qBAAqBzuI,KAAKuuI,GACnBA,CACX,KACH,EAEDnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,8BAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAC8pB,GAAG,OACV23H,EAAOP,EAAAQ,qBAAPD,CAA6B33H,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KACzE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,8BAClB9mH,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAC8pB,GACP,IAAMi6B,EAAQm9F,EAAAQ,qBAAqBtrH,UAC/B,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOy8B,EAAIy3H,aAAal0J,EAAE,GAEvC,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,yCAAAtlD,OAA2C+rC,EAAIy3H,aAAal0J,KAE3E6zJ,EAAAQ,qBAAqBvrH,OAAO4tB,EAAO,EAEvC,KACH,EAED1pE,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,WAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GAEP,OADekkK,EAAAS,WAEnB,KACH,EAEDtnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,eAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQo5I,EAAAS,YAAYz4I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAChE,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAElE,OAAOya,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,WAClB9mH,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMqqI,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,UAAAtP,UAAYzD,EAAAytF,sBAAqB,QAEvCm5E,SAAAS,YAAY1uI,KAAKuuI,GACVA,CACX,KACH,EAEDnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,eAClB9mH,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAC8pB,GAAG,OACV23H,EAAOP,EAAAS,YAAPF,CAAoB33H,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KAChE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAI,GAAAsF,OAAKojK,EAAS,eAClB9mH,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAC8pB,GACP,IAAMi6B,EAAQm9F,EAAAS,YAAYvrH,UACtB,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOy8B,EAAIy3H,aAAal0J,EAAE,GAEvC,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoC+rC,EAAIy3H,aAAal0J,KAEpE6zJ,EAAAS,YAAYxrH,OAAO4tB,EAAO,EAE9B,GAER,CAtR2Bq9F,GAE3B,IAAMK,EAAS,SAACG,GAAO,OAAK,SAACv0J,EAAI5Q,GAC7B,IAAMsnE,EAAQ69F,EAAQxrH,UAAU,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOA,CAAE,GAClD,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCsP,IAEnD,IAAMm0J,EAAS34I,EAAA,GAAQpsB,GACvBmlK,SAAQzrH,OAAO4tB,EAAO,EAAGy9F,GAClBA,CACX,CAAC,mHCvBD,IAAAlnK,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,OACAqpK,EAAArpK,EAAA,OACAgqK,EAAAhqK,EAAA,OAEAiqK,EAAAjqK,EAAA,OACAkqK,EAAAlqK,EAAA,OAGImqK,KAAar3I,EAAAzV,QAAIyV,EAAAs3I,SAAQnuJ,KAAKuX,MAAO,GAAI,CACzCuP,MAAO,EACPE,QAAS,EACTonI,QAAS,EACTC,aAAc,IAGZC,EAAgB,WAAyB,IAAxBh1B,EAAIxuI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACjBzC,KAAOwuB,EAAA2H,YAAW0vI,EAA4C,KAA5CA,EAAa1nK,EAAAytF,sBAAqB,GAAK,IAC/D,OAAIqlD,IAAM40B,KAAar3I,EAAA2H,YAAWn2B,EAAM,MAAE,EACnCwuB,EAAA4C,aAAYpxB,EACvB,EAEMkmK,EAAQ,CACV,OACA,UACA,gBACA,UACA,SACA,eAEEC,EAAW,CAAC,aAAc,aAAc,eAEjC3oK,gBAAgB,IAAI6+B,MAAM,KAAKC,KAAK,GAAGnjB,IAAI,SAACtY,EAAG+mE,IAClDw+F,EAAajoK,EAAAytF,sBAAqB,QADyB,IAAAy6E,EAE3D/7I,EACFq7I,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,UAAa,GACtD4N,EAAOy1J,KAAM/nK,EAAAytF,sBAAqBs6E,EAAMrjK,SACxCoT,EAAM2vJ,EAAAW,kBAAepoK,EAAAytF,sBAAqBg6E,EAAAW,eAAe1jK,SACzD2jK,EAAOZ,EAAAa,YAAYptJ,OAAO,SAACxY,GAAC,OAAKA,EAAE6Q,YAAcuE,GAAK/E,EAAE,GACxDo8C,EAAMk5G,KAAKroK,EAAAytF,sBAAqB46E,EAAK3jK,SACrC6jK,EACFhB,EAAAiB,YAAYttJ,OAAO,SAACxY,GAAC,OAAKA,EAAE2Q,MAAM/N,SAAS6pD,GAAKp8C,GAAG,IAAK,GACtDq8B,KAAWpvC,EAAAytF,sBAAqB,QAAU,EAC1Cg7E,EAAWjB,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,SACtDkkD,EAAQ4+G,EAAAkB,eAAY1oK,EAAAytF,sBAAqB+5E,EAAAkB,YAAYhkK,SACrDikK,KAAc3oK,EAAAytF,sBAAqB,EAAG,GACtCpoC,KAAWrlD,EAAA6pF,WACZpgB,EAAQ,GAAM,EAA6B,IAAzB/xC,KAAK6I,MAAMkpC,EAAQ,IACtC,GAEJ,MAAO,CACH12D,GAAE,WAAAtP,OAAagmE,GACfzyB,cAAe8wH,GAAc,GAC7B7wH,YAAa6wH,IACblqH,QAASzxB,EAAKpZ,GACd4qC,UAAWxxB,EAAKlZ,KAChB88B,WAAY5jB,EAAK/lB,MACjB88C,eAAgB/2B,EAAKlZ,KACrB8qC,gBAAiB5xB,EAAK/lB,MACtBwK,SACa,YAAT0B,EACMs2C,EAAMxiD,MACG,YAATkM,EAAkB,QAAA7O,OACV4hD,GAAQ,QAAA5hD,OACR0rD,GAAKp8C,GAAE,KAAAtP,OAAIgmE,GAC7Bz2D,WACa,YAATV,EACMs2C,EAAM31C,KACG,YAATX,EACA+yC,EAAQ,GAAA5hD,OACL0rD,GAAKp8C,GAAE,KAAAtP,OAAIgmE,GACxBt2D,YACa,YAATb,EACMs2C,EAAM31C,KACG,YAATX,EACA+yC,EAAQ,QAAA5hD,OACAgmE,GAClB5oE,MAAK,GAAA4C,UAAKzD,EAAA8iD,uBAAsBxwC,GAAK,aAAA7O,OAAYgmE,GACjDn3D,OACAc,aAAcd,EACdsD,UAAW,GACXqiB,cAAYj4B,EAAAytF,sBAAqB,QAAU,GAAM,EACjDnqC,UAAQtjD,EAAAytF,sBAAqB,QAAU,GAAM,EAC7Cr+C,SAAuB,IAAbA,EACVlX,SAAuB,IAAbkX,EACVmU,WAAqB,gBAATjxC,EAAyB,OAAS,UAC9C6wC,YAA0B,IAAb/T,EAAiBq5H,EAAS11J,GAAK,GAC5CswC,cAA4B,IAAbjU,EAAiBq5H,EAASx1J,KAAO,GAChDmwC,eAA6B,IAAbhU,EAAiBq5H,EAASriK,MAAQ,GAClDiN,MAAO,CAACyE,GAAK/E,GAAa,YAATT,EAAqB,WAAa68C,GAAKp8C,IACxDuiB,eAAgB,CACZpiB,OAAM,cAAAzP,OAAgBgmE,GACtBjjB,gBAAcxmD,EAAAs/B,cACV,EACA,wCAEJ5oB,OAAQ,IAAIwnB,MAAMyqI,GAAaxqI,KAAK,GAAGnjB,IAAI,SAACtY,GAAC,OAAA6rB,IAAA,GACtCq4I,EAAAS,eAAYrnK,EAAAytF,sBAAqBk7E,KAAa,IACjDznI,UAAQlhC,EAAAytF,sBAAqB,EAAG,IAAE,GAEtCm7E,SACiB,IAAbx5H,EACM44H,KAAShoK,EAAAytF,sBAAqBu6E,EAAStjK,SACvC,aACV69D,SAA6D,QAArD2lG,EAAEK,KAAWvoK,EAAAytF,sBAAqB86E,EAAW7jK,gBAAQ,IAAAwjK,OAAA,EAAnDA,EAAqDn1J,IAG3E,oHChHA,IAAA/S,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OAEAsrK,EAAAtrK,EAAA,OAEa8B,gBAEb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,yBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GAYP,OAXemmK,EAAAC,cAAc5tJ,OACzB,SAACsS,GAAK,SACFxtB,EAAA4rF,uBACKlpF,EAAEolD,aAAa90B,cACftwB,EAAEolD,aAAa30B,WAChB3F,EAAMwpB,cACNxpB,EAAMypB,eAETzpB,EAAMlb,OAAS5P,EAAEolD,aAAax1C,MAC3Bkb,EAAMpa,eAAiB1Q,EAAEolD,aAAax1C,KAAK,EAG3D,KACH,EAEDvS,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQq7I,EAAAC,cAAcl6I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAClE,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAElE,OAAOya,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAM,sCACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAAChjB,GACP,IAAM8qB,EAAQq7I,EAAAC,cAAcl6I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOrQ,EAAEukK,aAAal0J,EAAE,GAClE,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCf,EAAEukK,aAAal0J,KAGlE,IAAMoZ,EAAO,CACTpZ,GAAIrQ,EAAE+tC,KAAK19B,GACXE,KAAMvQ,EAAE+tC,KAAKx9B,KACb7M,MAAO1D,EAAE+tC,KAAKrqC,MACd6xB,YAAY,GAEhBzK,SAAM5X,UAAU+iB,KAAKxM,GACdA,CACX,KACH,EAEDpsB,EAAAgnK,sBAAqB,CACjB5oK,KAAM,oDACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAAChjB,GACP,IAAAqmK,EAAsBrmK,EAAEukK,aAAhBl0J,EAAEg2J,EAAFh2J,GAAI3M,EAAK2iK,EAAL3iK,MACNonB,EAAQq7I,EAAAC,cAAcl6I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOA,CAAE,GACnD,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCsP,IAGnD,IAAM61C,EAAQp7B,EAAM5X,UAAUgZ,KAC1B,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUglF,mBAAmBhlF,EAAM,GAEhD,IAAKwiD,EACD,KAAM,CACFxnB,OAAQ,IACR2nB,QAAO,mCAAAtlD,OAAqC2C,IAGpDwiD,SAAM3wB,WAAsC,SAAzBv1B,EAAEolD,aAAa7qB,MAC3B2rB,CACX,KACH,EAED7oD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6CACN4hD,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAChjB,GACP,IAAAsmK,EAAsBtmK,EAAEukK,aAAhBl0J,EAAEi2J,EAAFj2J,GAAI3M,EAAK4iK,EAAL5iK,MACNonB,EAAQq7I,EAAAC,cAAcl6I,KAAK,SAACrL,GAAC,OAAKA,EAAExQ,KAAOA,CAAE,GACnD,IAAKya,EACD,KAAM,CACF4T,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCsP,IAGnDya,SAAM5X,UAAY4X,EAAM5X,UAAUsF,OAC9B,SAACxY,GAAC,OAAKA,EAAE0D,QAAUglF,mBAAmBhlF,EAAM,GAEzConB,CACX,KACH,EAEDztB,EAAAgnK,sBAAqB,CACjB5oK,KAAM,yBACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMqqI,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,YAAAtP,UAAczD,EAAAytF,sBAAqB,QAEzCo7E,SAAAC,cAAcnwI,KAAKuuI,GACZA,CACX,IAGJ,IAAM3/G,EAAgB,SAACx0C,EAAI5Q,GACvB,IAAMsnE,EAAQo/F,EAAAC,cAAchtH,UAAU,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOA,CAAE,GACxD,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoCsP,IAEnD,IAAMm0J,EAAS34I,EAAA,GAAQpsB,GACvB0mK,SAAAC,cAAcjtH,OAAO4tB,EAAO,EAAGy9F,GACxBA,CACX,GAEA,EAAAnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAC8pB,GAAG,OAAK+X,EAAc/X,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KACzE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6BACN4hD,SAAU,GACVktF,OAAQ,QACRvnH,SAAU,SAAC8pB,GAAG,OAAK+X,EAAc/X,EAAIy3H,aAAal0J,GAAEwb,EAAA,GAAOihB,EAAIiB,MAAO,KACzE,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAM,qCACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAAC8pB,GAAG,OACV+X,EAAc/X,EAAIy3H,aAAal0J,GAAEwb,IAAA,GAC1BihB,EAAIiB,MAAI,IACXrB,UAAU,EACVlX,UAAU,IACZ,KACT,EAEDn4B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,oCACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAAC8pB,GAAG,OACV+X,EAAc/X,EAAIy3H,aAAal0J,GAAEwb,IAAA,GAC1BihB,EAAIiB,MAAI,IACXrB,UAAU,EACVlX,UAAU,IACZ,KACT,EAEDn4B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,sCACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAAC8pB,GAAG,OACV+X,EAAc/X,EAAIy3H,aAAal0J,GAAEwb,IAAA,GAC1BihB,EAAIiB,MAAI,IACXxY,WAAuC,SAA3BuX,EAAIsY,aAAa7qB,QAC/B,KACT,EAEDl9B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6BACN4hD,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAAC8pB,GACP,IAAMi6B,EAAQo/F,EAAAC,cAAchtH,UACxB,SAACv4B,GAAC,OAAKA,EAAExQ,KAAOy8B,EAAIy3H,aAAal0J,EAAE,GAEvC,GAAI02D,EAAQ,EACR,KAAM,CACFroC,OAAQ,IACR2nB,QAAO,kCAAAtlD,OAAoC+rC,EAAIy3H,aAAal0J,KAEpE81J,EAAAC,cAAcjtH,OAAO4tB,EAAO,EAEhC,GAER,CAxM6Bq9F,qHCL7B,IAAA/mK,EAAAxC,EAAA,OAEA0rK,EAAA1rK,EAAA,OACAgqK,EAAAhqK,EAAA,OAEAyC,EAAAzC,EAAA,OACAiqK,EAAAjqK,EAAA,OAEa8B,iBAEb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,0BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAM1Q,EAAOq7I,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,SAClDwkK,EAAQ1B,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,SACnDykK,EAAQ3B,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,SACzD,MAAO,CACH,CACIqO,GAAIy0J,EAAA4B,YAAYhjK,MAChBo/D,QAASgiG,EAAA4B,YAAYn2J,KACrBsyD,SAAS,EACThtB,UAAU,EACVoC,QAAQ,GAEZ,CACI5nC,GAAIoZ,EAAK/lB,MACTo/D,QAASr5C,EAAKlZ,KACdsyD,SAAS,EACThtB,UAAU,EACVoC,QAAQ,GAEZ,CACI5nC,GAAIm2J,EAAM9iK,MACVo/D,QAAS0jG,EAAMj2J,KACfsyD,SAAS,EACThtB,UAAU,EACVoC,QAAQ,GAEZ,CACI5nC,GAAIo2J,EAAM/iK,MACVo/D,QAAS2jG,EAAMl2J,KACfsyD,SAAS,EACThtB,UAAU,EACVoC,QAAQ,GAGpB,IAGJ,IAAM0uH,EAA0B,SAACxsI,GAC7B,IAAMpO,GAASoO,EAAQirB,aAAa90B,aAC9B1P,GAAOuZ,EAAQirB,aAAa30B,WAC5B9f,GAASwpB,EAAQirB,aAAa8J,UAAY,IAC3CvrD,MAAM,KACN6U,OAAO,SAAC4W,GAAC,QAAOA,CAAC,GAChBw3I,GAAWzsI,EAAQirB,aAAa6lF,YAAc,IAC/CtnI,MAAM,KACN6U,OAAO,SAAC4W,GAAC,QAAOA,CAAC,GA4BtB,OA1Bey1I,EAAAiB,YAAYttJ,OAAO,SAACW,GAAK,OACpCxI,EAAM3O,OACA2O,EAAM0rB,OACF,SAACwN,EAAKj5B,GAAI,OAAKi5B,GAAO1wB,EAAMxI,MAAM/N,SAASgO,EAAK,GAChD,IAEJg2J,EAAQ5kK,QACR4kK,EAAQhkK,SAASuW,EAAM9I,GACnB,GACZmI,OAAO,SAACW,GACN,IAG4Bmb,EAHtBzB,EAAW0zI,EAAAM,YAAYruJ,OAAO,SAACsS,GAAK,OACtCA,EAAM5X,UAAUgZ,KAAK,SAACzC,GAAI,OAAKA,EAAKpZ,KAAO8I,EAAM9I,EAAE,EAAC,GACtDgkB,EAAAa,EACkBrC,GAAQ,IAA5B,IAAAwB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA8B,KAAnBtK,EAAKwJ,EAAAh2B,MACZ,MACIhB,EAAA4rF,sBACIn9D,EACAnL,EACAkK,EAAMy9G,YACNz9G,EAAM09G,WAGV,OAAO,CACf,CAAC,OAAAliH,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAO,CACX,EAEJ,GAEA,EAAA94B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAO,OACdwsI,EAAwBxsI,GAAS7hB,IAAI,SAACtY,GAAC,MAAM,CACzCqvB,SAAUrvB,EACb,EAAE,KACV,EAED3C,EAAAgnK,sBAAqB,CACjB5oK,KAAM,oCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAO,OACdwsI,EAAwBxsI,GAAS7hB,IAAI,SAACtY,GAAC,MAAM,CACzCqvB,SAAUrvB,EACb,EAAE,GAEf,CAtG8BokK,uICR9B,IAAA9mK,EAAAzC,EAAA,OACA8yB,EAAA9yB,EAAA,OAEa8B,YAAY,CACrB,CACI0T,GAAI,SACJE,KAAM,SACN62B,WAAY,IACZtG,SAAU,SACVkgB,KAAM,CAAC,QAAS,gBAAiB,kBACjChiC,QAAS,CACL,CAAE3O,GAAI,QAASE,KAAM,YAAa0nB,MAAO,QACzC,CAAE5nB,GAAI,QAASE,KAAM,QAAS0nB,MAAO,QACrC,CAAE5nB,GAAI,QAASE,KAAM,UAAW0nB,MAAO,SAAUmP,WAAY,IAC7D,CAAE/2B,GAAI,QAASE,KAAM,UAAW0nB,MAAO,SAAUmP,WAAY,IAC7D,CAAE/2B,GAAI,QAASE,KAAM,UAAW0nB,MAAO,SAAUmP,WAAY,IAC7D,CAAE/2B,GAAI,QAASE,KAAM,UAAW0nB,MAAO,SAAUmP,WAAY,MAGrE,CACI/2B,GAAI,SACJE,KAAM,OACN62B,WAAY,IACZtG,SAAU,SACVkgB,KAAM,CAAC,SACPhiC,QAAS,CACL,CAAE3O,GAAI,QAASE,KAAM,QAAS0nB,MAAO,QACrC,CAAE5nB,GAAI,QAASE,KAAM,UAAW0nB,MAAO,QACvC,CAAE5nB,GAAI,QAASE,KAAM,OAAQ0nB,MAAO,QACpC,CAAE5nB,GAAI,QAASE,KAAM,YAAa0nB,MAAO,UAGjD,CAAE5nB,GAAI,SAAUE,KAAM,QAAS62B,WAAY,IAAKtG,SAAU,UAC1D,CACIzwB,GAAI,SACJE,KAAM,SACN62B,WAAY,IACZtG,SAAU,SACV9hB,QAAS,CACL,CAAE3O,GAAI,QAASE,KAAM,YAAa0nB,MAAO,QACzC,CAAE5nB,GAAI,QAASE,KAAM,SAAU0nB,MAAO,QACtC,CAAE5nB,GAAI,QAASE,KAAM,YAAa0nB,MAAO,UAGjD,CACI5nB,GAAI,SACJE,KAAM,UACN62B,WAAY,IACZtG,SAAU,SACV9hB,QAAS,CACL,CAAE3O,GAAI,QAASE,KAAM,YAAa0nB,MAAO,QACzC,CAAE5nB,GAAI,QAASE,KAAM,YAAa0nB,MAAO,QACzC,CAAE5nB,GAAI,QAASE,KAAM,YAAa0nB,MAAO,UAGjD,CACI5nB,GAAI,SACJE,KAAM,eACN62B,WAAY,IACZtG,SAAU,eACV9hB,QAAS,CACL,CACI3O,GAAI,QACJE,KAAM,eACN0nB,MAAO,QACPmP,WAAY,IAEhB,CAAE/2B,GAAI,QAASE,KAAM,YAAa0nB,MAAO,QAASmP,WAAY,IAC9D,CACI/2B,GAAI,QACJE,KAAM,gBACN0nB,MAAO,QACPmP,WAAY,IAEhB,CACI/2B,GAAI,QACJE,KAAM,qBACN0nB,MAAO,QACPmP,WAAY,MAIxB,CACI/2B,GAAI,SACJE,KAAM,WACN62B,WAAY,IACZtG,SAAU,eACV9hB,QAAS,CACL,CAAE3O,GAAI,QAASE,KAAM,eAAgB0nB,MAAO,QAC5C,CAAE5nB,GAAI,QAASE,KAAM,UAAW0nB,MAAO,QACvC,CAAE5nB,GAAI,QAASE,KAAM,cAAe0nB,MAAO,WAKvDt7B,wBAAA,SAAgBmqK,EAAsBh8I,GAClC,IAAMhc,KAAW6e,EAAA+H,qBAAoB5K,EAAMy9G,YAAaz9G,EAAM09G,WACxDu+B,KAAKzpK,EAAAytF,sBAAqBpuF,EAAAqqK,UAAUhlK,QAC1C,MAAO,CACHqO,GAAE,SAAAtP,UAAWzD,EAAAytF,sBAAqB,SAClCzsD,SAAUxT,EAAMza,GAChB82B,eAAc,IAAApmC,UAAMzD,EAAAytF,sBAAqB,SACzCrR,YAAW,IAAA34E,UAAMzD,EAAAytF,sBAAqB,OACtC5xD,cAAYxL,EAAA2H,YACY,IAApBxK,EAAMy9G,YAC2C,GAD7B,EACpBjrI,EAAAytF,sBAAqB/1D,KAAK6I,MAAM/uB,EAAW,KAE/C+vB,SAAOvhC,EAAAytF,sBAAqB,UAAa,GAAM,EAAI,aAAe,GAClExxD,MAAO,IAAIiC,MAAM,GAAGC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGitC,GAAG,OAAAphB,IAAA,GAChClvB,EAAAqqK,UAAWD,EAAK95H,EAAOtwC,EAAAqqK,UAAUhlK,SAAO,IAC3Cgd,QAAS,GACT2Z,YAAUr7B,EAAAytF,sBAAqB,GAAI,IAAE,GAGjD,yFCjHapuF,SAAS,aAETA,MAAM,+HCHnB,IAAAW,EAAAzC,EAAA,OACAosK,EAAApsK,EAAA,OACAqsK,EAAArsK,EAAA,MACAgqK,EAAAhqK,EAAA,OACAiqK,EAAAjqK,EAAA,OAEImqK,EAAaiC,IAAQE,QAAQ,KAAKnwJ,KAAK,GAErCouJ,EAAgB,WAAyB,IAAxBh1B,EAAIxuI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACjBzC,EAAO6lK,EAAWrjH,IAAoC,KAApCA,EAAKrkD,EAAAytF,sBAAqB,GAAK,GAAS,KAChE,OAAIqlD,IACA40B,EAAa7lK,GAEVA,EAAKioK,MAChB,EAEMxkC,EAAe,CAAC,YAAa,YAAa,aAC1CykC,EAAe,WACjB,IAAMC,KAAMhqK,EAAAytF,sBAAqB,IACjC,OAAOu8E,EAAM,EACP1kC,EAAa,GACb0kC,EAAM,EACN1kC,EAAa,GACbA,EAAa,EACvB,EAEajmI,cAAc,IAAI6+B,MAAM,KAAKC,KAAK,GAAGnjB,IAAI,SAACtY,EAAG+mE,GACtD,IAAMwgG,EAASzC,EAAAW,WAAW1kK,OAAO+jK,EAAAkB,aAC7B9yJ,EAAmB,IAAIsoB,SAAMl+B,EAAAytF,sBAAqB,EAAG,IACpDtvD,KAAK,GACLnjB,IAAI,kBAAMivJ,KAAOjqK,EAAAytF,sBAAqBw8E,EAAOvlK,QAAQ,GAC1DkR,EAAUsG,KACN,SAACyW,EAAG3U,GAAC,OAAM2U,EAAEu3G,eAAiB,GAAI,IAAOlsH,EAAEksH,eAAiB,GAAI,EAAG,GAEvE,IAAMruH,EAAQ0rJ,EAAAiB,eAAYxoK,EAAAytF,sBAAqB85E,EAAAiB,YAAY9jK,SAC3DkR,EAAYA,EAAUnS,OAAM8qB,IAAA,GAAM1S,GAAK,IAAEkW,UAAU,MAAM,EACrD/xB,EAAAytF,sBAAqB,MAAQ,GAAM,EAAG73E,EAAUs0J,QAAQ1C,EAAA4B,aACvDxzJ,EAAUs0J,QAAQ1C,EAAAW,cAAWnoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,UAClEkR,KAAY5V,EAAAqvC,QAAOz5B,EAAW,UAAY,CAAC,IAC3C,IAAMq1H,EAAc68B,GAAc,GAC5B58B,EAAY48B,IACZ/hF,KACF/lF,EAAAytF,sBAAqB,MAAQ,GAAM,EAAI,0BAA4B,GACvE,MAAO,CACH16E,GAAE,aAAAtP,OAAegmE,GACjBroC,OAAQ2oI,IACR51J,KAAMyB,EAAU,GAAGxP,MACnBwjI,SAAU,cACVhgH,QAAS,oBACThU,cAAY5V,EAAAqvC,QAAOz5B,EAAW,UAAY,IAAIoF,IAAI,SAACtY,EAAGitC,GAAG,OAAAphB,IAAA,GAClD7rB,GAAC,IACJyzI,UAAmB,IAARxmG,EACX1X,cAAYj4B,EAAAytF,sBAAqB,OAAS,GAAM,EAChDs2C,mBACI/jI,EAAAytF,sBAAqB,OAAS,GAAM,EAC9B,cACAztF,EAAAytF,sBAAqB,OAAS,GAAM,EACpC,WACA,aAAW,GAEzB5sF,MAAK,gBAAA4C,OAAkBgmE,GACvBh5B,KAAI,gBACJ06F,SAAS,EACTF,cACAC,YACAzoF,SAAU,mBACVvyB,SAAS,EACT9qB,SAAQ,GAAA3B,OAAKoY,GAAO5I,MACpBw2H,WAAW,EACXj7G,WAAY,GACZ09G,YAAa,GACb9zH,OAAQyD,EACRkqE,cACAjwD,WAAYiwD,EAAW,IAAAtiF,UAAOzD,EAAAytF,sBAAqB,OAAU,GAC7D+9C,iBAAkBzlD,EAAc,UAAY,GAC5CzwD,eAAgB,CACZxf,YACI9V,EAAAytF,sBAAqB,OAAS,GAAM,EAC9B,IACIm8E,EAAAJ,uBAAsB,CAClBz2J,GAAE,aAAAtP,OAAegmE,GACjBwhE,cACAC,eAGR,GACV12C,MAAiC,GAAjCA,EAAOx0F,EAAAytF,sBAAqB,GAC5Bq7C,UAAqC,GAArCA,EAAW9oI,EAAAytF,sBAAqB,IAG5C,GAEA,IAAM08E,EAAe,GACrB9qK,EAAAkqK,YAAYxhJ,QAAQ,SAACyF,GAAS,IAAA05B,EAAAE,EACWD,EAAhCgjH,EAAyB,QAAbjjH,EAAC15B,EAAMpV,cAAM,IAAA8uC,OAAA,EAAZA,EAAcn0C,MAC5Bo3J,EAAyB,QAAbhjH,EAAC35B,EAAMpV,cAAM,IAAA+uC,OAAA,EAAZA,EAAcp0C,IAAM,IAErCo3J,EAAyB,QAAb/iH,EAAC55B,EAAMpV,cAAM,IAAAgvC,OAAA,EAAZA,EAAcr0C,IAAI4lB,KAAKnL,EACxC,qIClGA,IAAAxtB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACA0rK,EAAA1rK,EAAA,OACAiqK,EAAAjqK,EAAA,OAEa8B,cAEb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAAChjB,GACP,IAAI8wB,EAASy1I,EAAAM,YACb,OAAK7mK,EAAEolD,aAAa8J,WAChBp+B,EAASA,EAAOtY,OACZ,SAACsS,GAAK,QACAA,EAAM5X,UAAUgZ,KACd,SAACzC,GAAI,OAAKA,EAAK/lB,QAAUohK,EAAA4B,YAAYhjK,KAAK,EAC7C,IAGT1D,EAAEolD,aAAa90B,eACfQ,EAASA,EAAOtY,OAAO,SAACqI,GAAC,SACrBvjB,EAAA4rF,uBACKlpF,EAAEolD,aAAa90B,cACftwB,EAAEolD,aAAa30B,WAChB5P,EAAE0nH,YACF1nH,EAAE2nH,UACL,IAGF13G,CACX,KACH,EAEDzzB,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uBACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GAAW,IAAAutI,EAAAC,EACZnD,EAAS34I,IAAA,GACRsO,EAAQ4T,MAAI,IACf19B,GAAE,cAAAtP,UAAgBzD,EAAAytF,sBAAqB,QAE3Cy5E,EAAUtxJ,UAAS,CACf4xJ,EAAAW,WAAWv5I,KAAK,SAAClsB,GAAC,OAAKA,EAAE0D,QAAU8gK,EAAU/yJ,IAAI,IAAC1Q,OAAAqe,EAC9ColJ,EAAUtxJ,WAAa,KAE/BsxJ,EAAUtxJ,UAAUmS,QAAQ,SAACoE,GACrBA,EAAK9Y,QAAO8Y,EAAK4F,UAAW,EACpC,GAEIm1I,EAAU9uJ,SACV8uJ,EAAUtxJ,UAAS,GAAAnS,OAAAqe,EACXolJ,EAAUtxJ,WAAa,IAAE,CAAA2Y,IAAA,GACxB24I,EAAU9uJ,QAAM,IAAE2Z,UAAU,OAGzCk3I,EAAAM,YAAY5wI,KAAKuuI,GAEjB,IAAM9uJ,KAASrY,EAAAuqK,YAA2B,QAAjBF,EAAClD,EAAU9uJ,cAAM,IAAAgyJ,OAAA,EAAhBA,EAAkBr3J,IAC5CqF,OAAM,MAANA,GAAmB,QAAbiyJ,EAANjyJ,EAAQmyJ,SAAS,UAAE,IAAAF,GAAnBA,EAAqBG,iBACdtD,CACX,KACH,EAEDnnK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,2BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAM1hB,EAAO8tJ,EAAAM,YAAY36I,KACrB,SAACpB,GAAK,OAAKA,EAAMza,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GAEnD,GAAIoI,EACA,OAAOA,EAEX,KAAM,CAAEimB,OAAQ,IAAK2nB,QAAS,kBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,2BACN4hD,SAAU,GACVktF,OAAQ,SACRvnH,SAAU,SAACmX,GACP,IAAM4sC,EAAQw/F,EAAAM,YAAYztH,UACtB,SAACtuB,GAAK,OAAKA,EAAMza,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GAEnD,KAAI02D,EAAQ,GAWZ,KAAM,CAAEroC,OAAQ,IAAK2nB,QAAS,mBAVtBkgH,EAAAM,YAAY9/F,GAAOt1D,OAASqzJ,EAAA4B,YAAYhjK,MACxC6iK,EAAAM,YAAY1tH,OAAO4tB,EAAO,GAEbw/F,EAAAM,YAAY9/F,GAAO7zD,UAAUgZ,KACtC,SAAClsB,GAAC,OAAKA,EAAE0D,QAAUohK,EAAA4B,YAAYhjK,KAAK,GAEnC29H,gBAAkB,UAKnC,KACH,EAEDhkI,EAAAgnK,sBAAqB,CACjB5oK,KAAM,2BACN4hD,SAAU,GACVktF,OAAQ,QACRvnH,SAAU,SAACmX,GACP,IAAM4sC,EAAQw/F,EAAAM,YAAYztH,UACtB,SAACtuB,GAAK,OAAKA,EAAMza,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GAEnD,GAAI02D,GAAS,EACT,OAAOw/F,EAAAM,YAAY1tH,OAAO4tB,EAAO,EAAG5sC,EAAQ4T,MAEhD,KAAM,CAAErP,OAAQ,IAAK2nB,QAAS,kBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,iDACN4hD,SAAU,GACVktF,OAAQ,OACRvnH,SAAU,SAACmX,GACP,IAAMrP,EAAQy7I,EAAAM,YAAY36I,KACtB,SAACpB,GAAK,OAAKA,EAAMza,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GAEnD,GAAIya,EAGCA,SAAM8H,eAAuB2C,YADzBzK,EAAM8H,eAAuB2C,YAAc,IACMx0B,OAAO,CACzDo5B,EAAQoqI,aAAa7gK,QAElBonB,EAEX,KAAM,CAAE4T,OAAQ,IAAK2nB,QAAS,kBAClC,GAER,CAtI2B+9G,kHCL3B,IAAA9mK,EAAAzC,EAAA,OACA6yB,EAAA7yB,EAAA,OAEMktK,EAAsB,WAIxB,QAHM5xI,EAAI,CAAC,aAAc,UAAW,YAAa,SAC3C6xI,KAAc1qK,EAAAytF,sBAAqB50D,EAAEn0B,OAAS,GAC9C+mF,EAAM,GACH35D,EAAI,EAAGA,EAAI44I,EAAa54I,IAC7B25D,EAAI9yD,KAAKE,KAAE74B,EAAAytF,sBAAqB50D,EAAEn0B,UAEtC,OAAO+mF,EAAIvwE,OAAO,SAACyuE,EAAI73D,EAAGke,GAAC,OAAKA,EAAE05B,QAAQigB,KAAQ73D,CAAC,EACvD,EAEazyB,cAAc,CACvB,CACI4T,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,wBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,YACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAGtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClB6C,MAAO,CACHnD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNkC,aAAc,UACd8J,SAAU,EACV0rJ,OAAQ,GACRz3J,OAAQ,2BACRwwC,KAAM,CAAC,IACPknH,QAAS,GACT9gJ,OAAQ,CAAC,IACTo7D,UAAW,CAAEnyE,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClB6C,MAAO,CACHnD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNkC,aAAc,UACd8J,SAAU,EACV0rJ,OAAQ,GACRz3J,OAAQ,2BACRwwC,KAAM,CAAC,IACPknH,QAAS,GACT9gJ,OAAQ,CAAC,IACTo7D,UAAW,CAAEnyE,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClB6C,MAAO,CACHnD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNkC,aAAc,UACd8J,SAAU,EACV0rJ,OAAQ,GACRz3J,OAAQ,2BACRwwC,KAAM,CAAC,IACPknH,QAAS,GACT9gJ,OAAQ,CAAC,IACTo7D,UAAW,CAAEnyE,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClB6C,MAAO,CACHnD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNkC,aAAc,UACd8J,SAAU,EACV0rJ,OAAQ,GACRz3J,OAAQ,2BACRwwC,KAAM,CAAC,IACPknH,QAAS,GACT9gJ,OAAQ,CAAC,IACTo7D,UAAW,CAAEnyE,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClB6C,MAAO,CACHnD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNkC,aAAc,UACd8J,SAAU,EACV0rJ,OAAQ,GACRz3J,OAAQ,2BACRwwC,KAAM,CAAC,IACPknH,QAAS,GACT9gJ,OAAQ,CAAC,IACTo7D,UAAW,CAAEnyE,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,kBAExB2H,IAAI,SAACrD,GAAC,SACJyY,EAAAy6I,mBAAiBt8I,IAAA,GACV5W,GAAC,IACJlP,SAAUgiK,IACV3gJ,OAAQ,CACJ,2GAEN,mHC1MN,IAAA9pB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAkqK,EAAAlqK,EAAA,OACA8yB,EAAA9yB,EAAA,OAEa8B,eA0Db,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,wBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAW,IAAAiuI,EAClB,OAA2B,QAApBA,EAAAjuI,EAAQirB,oBAAY,IAAAgjH,GAApBA,EAAsBC,YACvBC,EAAa9vJ,OACT,SAACxY,GAAC,OAAKA,EAAEwlC,UAAYrL,EAAQirB,aAAaijH,WAAW,GAEzDC,CACV,KACH,EAEDjrK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,gCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAW,IAAAouI,EAClB,OAA2B,QAApBA,EAAApuI,EAAQirB,oBAAY,IAAAmjH,GAApBA,EAAsBC,UACvBC,EAAoBjwJ,OAChB,SAACxY,GAAC,OAAKA,EAAEwoK,YAAcruI,EAAQirB,aAAaojH,SAAS,GAEzDC,CACV,KACH,EAEDprK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,kCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAW,IAAAuuI,EAClB,OAA2B,QAApBA,EAAAvuI,EAAQirB,oBAAY,IAAAsjH,GAApBA,EAAsBr4J,GACvBs4J,EAAsBnwJ,OAClB,SAACxY,GAAC,OAAKA,EAAEqQ,MAAQ8pB,EAAQirB,aAAa/0C,EAAE,GAE5Cs4J,CACV,KACH,EAEDtrK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,4BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP/6B,QAAQO,IAAI,WAAY2oK,GACxB,IAAMM,EAASN,EAAap8I,KACxB,SAAClsB,GAAC,OAAKA,EAAEqQ,MAAQ8pB,EAAQoqI,aAAal0J,EAAE,GAE5C,IAAKu4J,EAAQ,KAAM,CAAElqI,OAAQ,KAC7B,OAAOkqI,CACX,GAER,CA/G4BxE,GAE5B,IAAMkE,EAAe,IAAI9sI,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,kBAU/C,SAASuwJ,EAAiBD,GACtB,IAAMv4J,KAAK/S,EAAAytF,sBAAqB,OAAS,GACnC31E,EAAM2vJ,EAAAW,kBAAepoK,EAAAytF,sBAAqBg6E,EAAAW,eAAe1jK,OAAQ,IACvE,OAAA6pB,EAAA,CACIxb,KACAlS,MAAK,UAAA4C,OAAYsP,GACjBI,YAAa,GACbkuE,QAAS,OACTmqF,MAAO,GACPtjI,QAASpwB,GAAK/E,GACdg4J,YAAajzJ,GAAK/E,GAClB21B,cAAYrY,EAAA4C,aAAYzZ,KAAKuX,OAC7B4X,cAAYtY,EAAA4C,aAAYzZ,KAAKuX,QACzBu6I,GAAU,GAEtB,CAzBqDC,EAAkB,GACjEF,EAAwB,IAAIntI,MAAM,IACnCC,KAAK,GACLnjB,IAAI,kBAqCT,SAASywJ,IACL,IAAM14J,KAAK/S,EAAAytF,sBAAqB,OAAS,GACzC,MAAO,CACH16E,KACAT,KAAM,OACNzR,MAAK,YAAA4C,OAAcsP,GACnB2O,QAAS,GACT+nB,UAAU,EACViiI,QAAS,GACThoH,KAAM,GACNV,SAAS,EACTta,cAAYrY,EAAA4C,aAAYzZ,KAAKuX,OAC7B4X,cAAYtY,EAAA4C,aAAYzZ,KAAKuX,OAErC,CAnDe06I,EAA0B,GACnCN,KAAsBnrK,EAAAmyB,SACxB64I,EAAahwJ,IAAI,SAACtY,GAAC,OACf,IAAIw7B,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,kBAqBlC,SAAS2wJ,EAAuBL,GAE5B,MAAO,CACHv4J,IAFEA,EAAK/S,EAAAytF,sBAAqB,OAAS,GAGrCy9E,UAAWI,EAAOv4J,GAClB64J,eAAa5rK,EAAAytF,sBAAqB,OAAS,GAC3Co+E,eAAa7rK,EAAAytF,sBAAqB,GAAI,GACtCn7E,KAAM,SACNo2B,cAAYrY,EAAA4C,aAAYzZ,KAAKuX,OAC7B4X,cAAYtY,EAAA4C,aAAYzZ,KAAKuX,OAErC,CAhCwC46I,CAAuBjpK,EAAE,EAAC,6FCblE,IAAA3C,EAAAxC,EAAA,OAEAuuK,EAAAvuK,EAAA,OACAgqK,EAAAhqK,EAAA,OAEa8B,eAEb,SAASynK,IACLS,EAAAiB,YAAYzgJ,QAAQ,SAAClM,EAAY4tD,GAAK,SAAKqiG,EAAAC,cAAalwJ,EAAM,MAE9D9b,EAAAgnK,sBAAqB,CACjB5oK,KAAM,yBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAW,IAAAiuI,EAClB,OAA2B,QAApBA,EAAAjuI,EAAQirB,oBAAY,IAAAgjH,GAApBA,EAAsB5iI,QACvBq/H,EAAAiB,YAAYttJ,OAAO,SAACxY,GAAC,OACjBA,EAAE2Q,MAAM/N,SAASu3B,EAAQirB,aAAa5f,QAAQ,GAElDq/H,EAAAiB,WACV,KACH,EAEDzoK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,6BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAMhhB,EAAQ0rJ,EAAAiB,YAAY55I,KAAK,SAAAlsB,GAAC,OAAIA,EAAEqQ,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GACpE,IAAK8I,EAAO,KAAM,CAAEulB,OAAQ,KAC5B,OAAOvlB,CACX,GAER,CA5B4BirJ,sHCL5B,IAAA9mK,EAAAzC,EAAA,OACAyuK,EAAAzuK,EAAA,OAEM0uK,EAAe,CACjB,qBACA,gBACA,UACA,kBACA,cACA,aACA,cACA,WACA,gBACA,cACA,gBACA,qBACA,iBACA,iBAGS5sK,cAAc,CACvB0T,GAAI,UACJE,KAAM,sBACN7M,MAAO,iBACPw0C,OAAQ,CAAC,QAAS,QAClBsxH,WAAW,GAGF7sK,aAAa4sK,EAAajxJ,IAAI,SAAC/H,EAAM6e,GAAC,MAAM,CACrD/e,GAAE,QAAAtP,OAAUquB,EAAI,GAChB7e,KAAI,GAAAxP,OAAKwP,EAAI,cACb7M,MAAK,GAAA3C,OAAKwP,EAAK5M,MAAM,KAAKkO,KAAK,KAAKme,cAAa,KAAAjvB,OAAIuoK,EAAAG,QACxD,GAAG1oK,OAAO,CAACpE,EAAA+pK,cAEC/pK,cAAc4sK,EAAajxJ,IAAI,SAAC/H,EAAM6e,GAAC,MAAM,CACtD/e,GAAE,SAAAtP,OAAWquB,EAAI,GACjB7e,KAAI,GAAAxP,OAAKwP,EAAI,eACb7M,MAAK,GAAA3C,OAAKwP,EAAK5M,MAAM,KAAKkO,KAAK,KAAKme,cAAa,WAAAjvB,OAAUuoK,EAAAG,QAC3DjiC,kBAAgBlqI,EAAAytF,sBAAqB,OAAS,GAAM,EACpDn4D,kBACIt1B,EAAAytF,sBAAqB,OAAS,GAAM,EAC9B,CACI2+E,kBAAmB,CACfh/J,IAAK,qEAETi/J,QAAS,CACLj/J,IAAK,yEAGb,GACb,iHClDD,IAAArN,EAAAxC,EAAA,OAEAyC,EAAAzC,EAAA,OACAiqK,EAAAjqK,EAAA,OACAkqK,EAAAlqK,EAAA,OACAgqK,EAAAhqK,EAAA,OAEAosK,EAAApsK,EAAA,OACA0rK,EAAA1rK,EAAA,OAEa8B,aAEb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,2BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAgC,YAA5BA,EAAQoqI,aAAal0J,GACrB,OAAOy0J,EAAA4B,YAEX,IAAMkD,EAAS9E,EAAAW,WAAWv5I,KACtB,SAACzC,GAAI,OAAKA,EAAK/lB,QAAUy2B,EAAQoqI,aAAal0J,EAAE,GAEpD,GAAIu5J,EACA,OAAOA,EAEX,KAAM,CAAElrI,OAAQ,IAAK2nB,QAAS,iBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAIA,EAAQirB,aAAarc,EAAG,CACxB,IAAM9H,EAAS9G,EAAQirB,aAAarc,EAAE/Y,cACtC,OAAO80I,EAAAW,WAAWjtJ,OAAO,SAAAvV,GAAoB,IAAXS,EAAKT,EAALS,MAC9B,OAD4BT,EAAJsN,KAEfyf,cAAcptB,SAASq+B,IAC5Bv9B,EAAMssB,cAAcptB,SAASq+B,EAErC,EACJ,CACA,OAAO6jI,EAAAW,UACX,KACH,EAEDpoK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,2BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAM9pB,EAAKq4E,mBAAmBvuD,EAAQoqI,aAAal0J,IAC7Cu5J,EAAS9E,EAAAW,WAAWv5I,KAAK,SAACzC,GAAI,OAAKA,EAAK/lB,QAAU2M,CAAE,GAC1D,GAAIu5J,EACA,OAAA/9I,IAAA,GACO+9I,GAAM,IACTlnK,SAAUmnK,MAGlB,KAAM,CAAEnrI,OAAQ,IAAK2nB,QAAS,iBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAIA,EAAQirB,aAAarc,EAAG,CACxB,IAAM9H,EAAS9G,EAAQirB,aAAarc,EAAE/Y,cACtC,OAAO80I,EAAAkB,YAAYxtJ,OACf,SAACiR,GAAI,OACDA,EAAKlZ,KAAKyf,cAAcptB,SAASq+B,IACjCxX,EAAK/lB,MAAMssB,cAAcptB,SAASq+B,EAAO,EAErD,CACA,OAAO6jI,EAAAW,UACX,KACH,EAEDpoK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,8BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAMz2B,EAAQglF,mBAAmBvuD,EAAQoqI,aAAa7gK,OAChDkmK,EAAS9E,EAAAkB,YAAY95I,KAAK,SAACzC,GAAI,OAAKA,EAAK/lB,QAAUA,CAAK,GAC9D,GAAIkmK,EAAQ,OAAOA,EACnB,KAAM,CAAElrI,OAAQ,IAAK2nB,QAAS,kBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAIA,EAAQoqI,aAAa7gK,MAAO,CAC5B,IAAMA,EAAQy2B,EAAQoqI,aAAa7gK,MAAMssB,cAMzC,OALeu2I,EAAAM,YAAYruJ,OAAO,SAACsS,GAAK,OACpCA,EAAM5X,UAAUgZ,KACZ,SAACzC,GAAI,OAAKA,EAAK/lB,MAAMssB,gBAAkBtsB,CAAK,EAC/C,EAGT,CACA,KAAM,CACFg7B,OAAQ,IACR2nB,QAAO,iDAAAtlD,OAAmDo5B,EAAQoqI,aAAa7gK,OAEvF,IAGJ,IAAMomK,EAAiB,CACnB,UACA,UACA,SACA,SACA,MACA,QAGJ,SAASD,IACL,IAAMj6J,EACFk6J,KAAexsK,EAAAytF,sBAAqB++E,EAAe9nK,SACjDwR,EAAQuxJ,EAAAa,eAAYtoK,EAAAytF,sBAAqBg6E,EAAAa,YAAY5jK,SACrD+nK,EAAelF,EAAAiB,YAAYttJ,OAAO,SAAC8M,GAAC,OACtCA,EAAE3U,MAAM/N,SAAS4Q,EAAMnD,GAAG,GAExB8I,EACF4wJ,KAAazsK,EAAAytF,sBAAqBg/E,EAAa/nK,UAAY,GACzDU,EAAoB,GAC1B,OAAQkN,GACJ,IAAK,UACDlN,EAASsnK,QAAU,CACfn3J,SAAUW,EAAM3C,UAChB2C,MAAOA,EAAMnD,GACbqF,OAAQyD,EAAM9I,GACdG,OAAQ2I,EAAM3I,OACd8tB,SAAU,IAEd,MACJ,IAAK,UACD57B,EAASsnK,QAAU,CACfn3J,SAAUW,EAAM3C,UAChB2C,MAAOA,EAAMnD,GACbG,OAAQ2I,EAAM3I,OACd+kB,WAAY0xI,IAAQG,QAExB,MACJ,IAAK,SACL,IAAK,SACD1kK,EAASkN,GAAQ,CACbiD,SAAUW,EAAM3C,UAChB2C,MAAOA,EAAMnD,GACbiyC,IAAG,EAAChlD,EAAAytF,sBAAqB,KACzBxoC,IAAG,EAACjlD,EAAAytF,sBAAqB,KACzB2/B,UAAWu8C,IACNgD,YAAS3sK,EAAAytF,sBAAqB,IAAK,KACnCq8E,QAET,MACJ,IAAK,MACD1kK,EAASwnK,IAAM,CACX5tD,OAAKh/G,EAAAytF,sBAAqB,KAAO,GACjCo/E,OAAK7sK,EAAAytF,sBAAqB,KAAO,IACjC2/B,UAAWu8C,IACNgD,YAAS3sK,EAAAytF,sBAAqB,IAAK,KACnCq8E,QAIjB,OAAO1kK,CACX,CACJ,CAvK0B0hK,mICVbznK,YAAY,CACrB,CACIqpC,WAAY,WACZC,WAAY,WACZ11B,KAAM,UACNE,YAAa,GACbuwC,KAAM,CAAC,OACPpf,MAAO,EACPrlB,SAAU,EACV1L,UAAW,GACXu5J,SAAU,GACV/5J,GAAI,qBAIC1T,iBAAiB,CAC1B,CACI4T,KAAM,SACNE,YAAa,GACbuwC,KAAM,CAAC,YACPpf,MAAO,EACPrlB,SAAU,EACV1L,UAAW,mBACXu5J,SAAU,GACV/5J,GAAI,SACJyO,OAAQ,CAAC,QAAS,UAEtB,CACIvO,KAAM,WACNE,YAAa,GACbuwC,KAAM,CAAC,YACPpf,MAAO,EACPrlB,SAAU,EACV1L,UAAW,mBACXu5J,SAAU,GACV/5J,GAAI,SACJyO,OAAQ,CAAC,QAAS,WAIbniB,aAAa,GA0BbA,cAAcA,EAAA+oK,eAAeptJ,IAAI,SAAClD,GAAG,OAC9CA,EAAI0J,OAAOxG,IAAI,SAAC9E,EAAOy5B,GAAG,OAzBZ,SACd58B,EACA48B,EACAp6B,GAEK,IADLw3J,EAAAzoK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,KAEV4O,EAASH,EAAG6sH,OAAO,GACvB1sH,SAAM,qBAAAzP,OAAwBspK,EAAG,QAC1B,CACHh6J,GAAE,GAAAtP,OAAK8R,EAASxC,GAAE,KAAAtP,OAAIsP,GACtBE,KAAI,SAAAxP,OAAWsP,EAAG+xJ,SAAS,MAAQ,IAAM/xJ,EAAG1M,MAAM,KAAK,IACvDkN,UAAWgC,EAASxC,GACpBI,YAAa,GACbuwC,KAAM,CAAC,SACPxwC,SACAsgE,KAAM,gBACNlhE,KAAM,cACNgyB,MAAO,EACPrlB,SAAU,GACV7Z,SAAU,oBACV+P,aAAc,GAEtB,CAIQ63J,CAAU92J,EAAOy5B,EAAK73B,EAAK5B,EAAM7P,MAAM,KAAK,GAAG,EAClD,GACH04B,OACE,SAACkjE,EAAGhjE,GAAC,OAAKgjE,EAAEx+F,OAAOw7B,EAAE,EACrB,CAOI,CACIlsB,GAAI,WACJQ,UAAW,SACXN,KAAM,WACNywC,KAAM,CAAC,QAAS,WAChBxwC,OAAQ,gJCpFpB,IAAAlT,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAqsK,EAAArsK,EAAA,MACAiqK,EAAAjqK,EAAA,OACAkqK,EAAAlqK,EAAA,OAOM0vK,EAAgB,CAClBxtH,QAAS,CACLwlG,SAAU,CACNhyI,KAAM,WACNE,YAAa,GACbiD,QAAS,CACL,CACIrD,GAAI,SACJE,KAAM,+BACN7M,MAAO,iBACPs+J,WAAY,WACZC,UAAW,aAEf,CACI5xJ,GAAI,SACJE,KAAM,0BACN7M,MAAO,kBACPs+J,WAAY,OACZC,UAAW,gBAOlBtlK,iBAAiB,GACjBA,UAAU,GAEVA,aAEb,SAASynK,KACL,EAAA/mK,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uBACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAkC,QAA9BA,EAAQirB,aAAapE,KACrB,OAAO+jH,EAAAyF,UACJ,GAAkC,WAA9BrwI,EAAQirB,aAAapE,KAC5B,MAAO,GACJ,GAAkC,aAA9B7mB,EAAQirB,aAAapE,KAC5B,OAAO+jH,EAAAW,eACJ,GAAkC,UAA9BvrI,EAAQirB,aAAapE,KAC5B,OAAO+jH,EAAAa,YACJ,GAAIzrI,EAAQirB,aAAapE,KAC5B,OAAO+jH,EAAA0F,WAAWjyJ,OAAO,SAACxY,GAAC,OACvBA,EAAEghD,KAAKp+C,SAASu3B,EAAQirB,aAAapE,KAAK,GAGlD,KAAM,CAAEtiB,OAAQ,IAAK2nB,QAAS,kBAClC,KACH,EAEDhpD,EAAAgnK,sBAAqB,CACjB5oK,KAAM,0BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAO,MAAK,EAAE,KAC5B,EAED98B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,8BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GAAO,MAAM,EAAE,KAC7B,EAED98B,EAAAgnK,sBAAqB,CACjB5oK,KAAM,8BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,GAAkC,aAA9BA,EAAQirB,aAAa70C,KACrB,MAAO,CACHm6J,SAAU,CACNh3J,QAAS,CACLi3J,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBl5I,QAAS,aAMzB,GAAkC,aAA9BwI,EAAQirB,aAAa70C,KACrB,MAAO,CACH6C,SAAU,CACNM,QAASwzJ,EAAAF,YAIrB,GAAkC,mBAA9B7sI,EAAQirB,aAAa70C,KAA2B,CAChD,IAAMgxE,EAAQpnD,EAAQoqI,aAAal0J,GAAG1M,MAAM,KAE5C,OAAOmnK,EADIvpF,EAAMA,EAAMv/E,OAAS,GAEpC,CACA,GAAkC,YAA9Bm4B,EAAQirB,aAAa70C,KAAoB,CACzC,IAAMgxE,EAAQpnD,EAAQoqI,aAAal0J,GAAG1M,MAAM,KAE5C,OAAOonK,EADIxpF,EAAMA,EAAMv/E,OAAS,GAEpC,CACA,GAAkC,UAA9Bm4B,EAAQirB,aAAa70C,KAAkB,CACvC,IAAMgxE,EAAQpnD,EAAQoqI,aAAal0J,GAAG1M,MAAM,KAE5C,OAAOqnK,EADIzpF,EAAMA,EAAMv/E,OAAS,GAEpC,CACA,MAAkC,iBAA9Bm4B,EAAQirB,aAAa70C,MACP4pB,EAAQoqI,aAAal0J,GAAG1M,MAAM,KAErC,CACHw0E,aAAc,CACVzkE,QAAS,IAAI8nB,MAAM,IACdC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GAAG,WAAAlsC,OAAUksC,EAAG,MAIP,gBAA9B9S,EAAQirB,aAAa70C,KACd,CACH06J,YAAa,CACTv3J,QAAS,CACL21I,MAAO,CACH,CACIh5I,GAAI,YACJ0pG,WAAY,CACRx9F,SAAU,IACVitI,eAAgB,CAAElnG,EAAG,IAAMC,EAAG,MAGlConG,SAAU,CACNn6F,YAAa,CACT,CAAC,EAAK,GACN,CAAC,EAAK,IACN,CAAC,GAAK,IACN,CAAC,GAAK,MAIlB,CACIn/C,GAAI,YACJ0pG,WAAY,CACRx9F,SAAU,IACVitI,eAAgB,CAAElnG,EAAG,IAAMC,EAAG,OAGtC,CACIlyC,GAAI,YACJ0pG,WAAY,CACRx9F,SAAU,IACVitI,eAAgB,CAAElnG,EAAG,IAAMC,EAAG,WAStDgoH,EAAcpwI,EAAQoqI,aAAal0J,KACnCk6J,EAAcpwI,EAAQoqI,aAAal0J,IAC/B8pB,EAAQirB,aAAa70C,MAGlBg6J,EAAcpwI,EAAQoqI,aAAal0J,IAE1Ck6J,EAAcpwI,EAAQoqI,aAAal0J,MAClC8pB,EAAQirB,aAAa70C,MAEfg6J,EAAcpwI,EAAQoqI,aAAal0J,KAEvC,EACX,KACH,EAEDhT,EAAAgnK,sBAAqB,CACjB5oK,KAAM,8BACN4hD,SAAU,GACVktF,OAAQ,QACRvnH,SAAU,SAACmX,GACP,OAAKowI,EAAcpwI,EAAQoqI,aAAal0J,MACpCk6J,EAAcpwI,EAAQoqI,aAAal0J,IAAM,IAC7Ck6J,EAAcpwI,EAAQoqI,aAAal0J,IAAI8pB,EAAQ4T,KAAKx9B,MAChD4pB,EAAQ4T,KACL5T,EAAQ4T,IACnB,KACH,EAED1wC,EAAAgnK,sBAAqB,CACjB5oK,KAAM,8BACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,OAAKowI,EAAcpwI,EAAQoqI,aAAal0J,MACpCk6J,EAAcpwI,EAAQoqI,aAAal0J,IAAM,IAC7Ck6J,EAAcpwI,EAAQoqI,aAAal0J,IAAI8pB,EAAQ4T,KAAKx9B,MAChD4pB,EAAQ4T,KACL5T,EAAQ4T,IACnB,IAGJ,IAAMm9H,EAAgB,CAAC,eAAgB,iBAAkB,gBAEzD,SAASF,EAAyB36J,GAC9B,MAAO,CACH8gB,MAAO,CACHzd,QAAS,IAAI8nB,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGitC,GAAG,MAAM,CAC5C58B,GAAE,SAAAtP,UAAWzD,EAAA6pF,WAAU92E,EAAI,GAAE,KAAAtP,UAAIzD,EAAA6pF,WAAUl6C,EAAM,EAAG,IACpD18B,KAAI,QAAAxP,OAAUsP,EAAE,KAAAtP,UAAIzD,EAAA6pF,WAAUl6C,EAAM,EAAG,IACvCmL,YAAU96C,EAAAytF,sBAAqB,MAAQ,GAAM,EAC7C7yC,UACI56C,EAAAytF,sBAAqB,MAAQ,GAAM,EAAI,CAAC,UAAY,GACxDhlF,SAAUmlK,EAAc1yJ,OACpB,SAACxY,GAAC,SAAK1C,EAAAytF,sBAAqB,OAAS,GAAM,CAAC,GAEnD,IAGb,CAEA,SAAS+/E,EAAsBz6J,GAC3B,OAAK1T,EAAAwuK,eAAe96J,KAChB1T,EAAAwuK,eAAe96J,GAAM,CACjB,iBAAkB,CACdqD,QAAS,IAAI8nB,MAAM,KAAQC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGitC,GACvC,IAAM0V,KAAWrlD,EAAA6pF,WACZl6C,EAAM,GAA6B,IAAvBjY,KAAK6I,MAAMoP,EAAM,IAC9B,GAEEm+H,KACF9tK,EAAAytF,sBAAqB,MAAQ,GAAM,EAC7B+5E,EAAAW,cACInoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,SAEnC,GACX,MAAO,CACHqO,GAAE,QAAAtP,OAAU4hD,GACZnyC,OAAM,QAAAzP,OAAU4hD,GAChBpyC,KAAI,GAAAxP,OAAK4hD,GACTvK,YAAU96C,EAAAytF,sBAAqB,MAAQ,GAAM,EAC7C1yC,YAAa+yH,EAAS1nK,OAAS,GAC/B2nK,cAAeD,EAAS76J,MAAQ,GAExC,MAIL5T,EAAAwuK,eAAe96J,EAC1B,CAEA,SAAS06J,EAAgB16J,GACrB,OAAK1T,EAAA2uK,QAAQj7J,KACT1T,EAAA2uK,QAAQj7J,GAAM,CACVshB,QAAS,CACLje,QAAS,IAAI8nB,MAAM,GAAGC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGitC,GAClC,IAAM0V,KAAWrlD,EAAA6pF,WAAUl6C,EAAM,EAAG,GAOpC,OANMm+H,EACF9tK,EAAAytF,sBAAqB,MAAQ,GAAM,IAC7B06E,EACInoK,EAAAytF,sBAAqB+5E,EAAAW,WAAWzjK,QAGvC,CACHqO,GAAE,eAAAtP,OAAiBsP,EAAE,KAAAtP,OAAI4hD,GACzBnyC,OAAM,QAAAzP,OAAUsP,EAAE,KAAAtP,OAAI4hD,GACtBnwB,SAAQ,SACRjiB,KAAI,QAAAxP,OAAU4hD,GACdz+C,OAAQ,EACRytB,QAAS,IAAI6J,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,SAACtY,EAAGurK,GAAI,MAAM,CAC7Cl7J,GAAE,UAAAtP,OAAY4hD,EAAQ,KAAA5hD,UAAIzD,EAAA6pF,WACtBokF,EAAO,EACP,IAEJh7J,KAAI,UAAAxP,OAAYwqK,EAAO,GACvBl0G,cACI/5D,EAAAytF,sBAAqB,MAAQ,GAAM,EACvC3yC,YAAU96C,EAAAytF,sBAAqB,MAAQ,GAAM,EAC7CpoC,SAAU,CAAC4oH,EAAO,EAAGv2I,KAAK6I,MAAM0tI,EAAO,IACvCh1G,KAAM,CAAC,EAAG,GACb,GAET,MAIL55D,EAAA2uK,QAAQj7J,EACnB,EAEA,EAAAhT,EAAAgnK,sBAAqB,CACjB5oK,KAAM,uCACN4hD,SAAU,GACVktF,OAAQ,MACRvnH,SAAU,SAACmX,GACP,IAAMvpB,EAAOm0J,EAAAW,eAAex5I,KACxB,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAO8pB,EAAQoqI,aAAal0J,EAAE,GAE3C,IAAKO,EACD,KAAM,CACF8tB,OAAQ,IACR2nB,QAAO,gCAAAtlD,OAAkCo5B,EAAQoqI,aAAal0J,GAAE,MAExE,OAAO00J,EAAAa,YAAYptJ,OAAO,SAACxY,GAAC,OAAKA,EAAE6Q,YAAcD,EAAKP,EAAE,GAAEiI,IACtD,SAACm0C,GACG,IAAM80B,EAAQ90B,EAAIp8C,GAAG1M,MAAM,KACrB0M,EAAKkxE,EAAMA,EAAMv/E,OAAS,GAChC,MAAO,CACH4O,KAAM67C,EACNpP,SACkC,mBAA9BljB,EAAQirB,aAAa70C,KACfu6J,EAAsBz6J,GACQ,YAA9B8pB,EAAQirB,aAAa70C,KACrBw6J,EAAgB16J,GAChB26J,EAAyB36J,GAE3C,EAER,GAER,CAlS0B+zJ,wLCrC1B,IAAYoH,EAAZ,SAAYA,GACRA,WAAAC,KAAA,UACAD,IAAAE,GAAA,QACAF,IAAAG,KAAA,UAHQH,CAIZ,CAJA,CAAYA,IAAU7uK,aAAV6uK,EAAU,KAMVI,EAAZ,SAAYA,GACRA,WAAAC,KAAA,UACAD,IAAAE,MAAA,WACAF,IAAAD,KAAA,UAHQC,CAIZ,CAJA,CAAYA,IAASjvK,YAATivK,EAAS,KAMfG,EAAY,WAab,OAAAjvK,EAFD,SAAAivK,EAAY/rK,GAACjD,EAAAC,KAAA+uK,GACT/uK,KAAKgvK,QAAU,CAAC,aAAc,WAAY,eAC9C,EAAC,EAAA3tK,IAAA,OAAAC,MAED,SAAK2tK,GAAiB,GAAC,CAAA5tK,IAAA,QAAAC,MAEvB,SAAM4tK,GAAmB,GAAC,CAAA7tK,IAAA,UAAAC,MAE1B,SAAQiS,GAAe,GAAC,CAAAlS,IAAA,eAAAC,MAExB,SAAaiS,GAAe,IAAC,CArBf,GAwBL5T,qBAAqB,SAACwc,GAAc,IAAEgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtE,IAAImqK,EAAYlgJ,IAAA,GAAM1S,GAAUgzJ,GAAY,+KCvChD,IAEIv4I,EAFJt2B,EAAAzC,EAAA,OAIauxK,EAAa,WAWrB,OAAAtvK,EAFD,SAAAsvK,EAAYpsK,GAACjD,EAAAC,KAAAovK,GAPbpvK,KAAA0hC,OAA2C,UAE3C1hC,KAAAqvK,MAAgB,EAMZrvK,KAAKsvK,aAAYhvK,EAAAo+B,WAAU,MAC/B,EAAC,EAAAr9B,IAAA,SAAAC,MAED,WAAM,IAAAL,EAAAjB,KACFA,KAAK0hC,OAAS,UACd9K,EAAW6rD,YAAY,WACfxhF,EAAKquK,UAAY,GAAG51I,cAAc9C,GACtC31B,EAAKquK,UAAYruK,EAAKquK,UAAY,EAClCruK,EAAK8+C,QAAU9+C,EAAK8+C,QAAU,CAClC,EAAG,IACP,GAAC,CAAA1+C,IAAA,SAAAC,MAED,WACItB,KAAK0hC,OAAS,SACdhI,cAAc9C,EAClB,GAAC,CAAAv1B,IAAA,UAAAC,MAED,WACItB,KAAKuvK,QACT,GAAC,CAAAluK,IAAA,QAAAC,MAED,WACItB,KAAK0hC,OAAS,UACd1hC,KAAK+/C,QAAU,EACfrmB,cAAc9C,EAClB,IAAC,CAnCqB,GAA1Bj3B,gBAAAyvK,EAuCazvK,sBAAsB,SAACwc,GAAc,IAAEgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACvE,IAAIwqK,EAAavgJ,IAAA,GAAM1S,GAAUgzJ,GAAY,sKC5CjD,IAAA7uK,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,OACAiqK,EAAAjqK,EAAA,OAEM2xK,EAAiB,GAEjBC,EAAW,SAAC1gJ,EAAOnL,GAAG,OAAK,SAAC6xD,GAC9B,SAAOn1E,EAAA4rF,sBAAqBn9D,EAAOnL,EAAK6xD,EAAIi6F,aAAcj6F,EAAIi6F,aAClE,CAAC,EAEKC,EAAoB,WACL,OAAA7vK,EAAjB,SAAA6vK,EAAY3sK,GAACjD,EAAAC,KAAA2vK,EAAG,EAAC,EAAAtuK,IAAA,kBAAAC,MAEjB,SAAgBoF,EAAe+lB,EAAcsC,EAAenL,GAExD,GADK4rJ,EAAe9oK,KAAQ8oK,EAAe9oK,GAAS,IAChD8oK,EAAe9oK,GAAO1B,OACtB,OAAOwqK,EAAe9oK,GAAO8U,OAAOi0J,EAAS1gJ,EAAOnL,IAKxD,QAJMkQ,EAAS,GACT87I,KAAYj/I,EAAAoQ,SAAgB,IAARhS,GAAc,IAClC8gJ,KAASl/I,EAAAoQ,SAAc,IAANnd,EAAY,IAC/B/R,EAAO,IAAIiI,KAAK81J,IAAS,EACtBj/I,EAAA2a,UAASz5B,EAAMg+J,IAClB,IAAIrxI,SAAMl+B,EAAAo+B,WAAU,IACfD,KAAK,GACLnjB,IAAI,SAACtY,GAAC,MAAM,CACT8sK,eAAaxvK,EAAAs/B,cAAa,IAC1B8vI,gBAAc/+I,EAAA4C,gBACV5C,EAAA8a,UAAS55B,KAAMvR,EAAAo+B,WAAU,IAAM,IAEnC5sB,SAA0B,IAA1BA,EAAUxR,EAAAo+B,WAAU,IACpBwqF,SAAU4+C,EAAAW,cAAWnoK,EAAAo+B,WAAUopI,EAAAW,WAAWzjK,SAAS0B,MACtD,GACA2hB,QAAQ,SAACxE,GAAC,OAAKiQ,EAAOmF,KAAKpV,EAAE,GAClChS,KAAO8e,EAAAoQ,SAAQlvB,EAAM,GAEzB29J,SAAe9oK,GAASotB,EACjB07I,EAAe9oK,GAAO8U,OAAOi0J,EAAS1gJ,EAAOnL,GACxD,IAAC,CA3BqB,GA8BbjkB,6BAA6B,SACtCwc,GAAc,IACdgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI+qK,EAAoB9gJ,IAAA,GAAM1S,GAAUgzJ,GAAY,8KChDzD,IAAA7uK,EAAAzC,EAAA,OAmCMkyK,EAAU,WAyFX,OAAAjwK,EA1BD,SAAAiwK,EAAYppI,GAA0B,IAAAqpI,EAAA/uK,EAAAjB,KAAAD,EAAAC,KAAA+vK,GAjDtB/vK,KAAA66F,KAAO,CACnBA,KAAM,CACF15F,MAAO,OACPslB,QAAO,qwBAsBX,cAAe,CACX4H,KAAM,YACNltB,MAAO,gBACPslB,QAAO,aAIRzmB,KAAAiwK,KAAO,CACV,CACI5hJ,KAAM,SACN9a,KAAM,SACNX,KAAM,UAEV,CACIyb,KAAM,OACN9a,KAAM,KACN4L,OAAQ,CAAC,aACT07E,KAAM,eACNn3E,SAAU,qBAIX1jB,KAAAkwK,OAAS,EAGZlwK,KAAKuT,KAAOozB,EAAMpzB,MAAQ,cAC1BvT,KAAKotG,UAA2B,QAAlB4iE,EAAGrpI,EAAMymE,iBAAS,IAAA4iE,KAChChwK,KAAKmiC,OAASwE,EAAMxE,SAAU,EAC9BniC,KAAKmwK,WAAaxpI,EAAMwpI,WACxBnwK,KAAKowK,YAAczpI,EAAMypI,YACzBpwK,KAAKqwK,YAAc1pI,EAAM0pI,aAAe,GACxCrwK,KAAKmf,OAAS4J,OAAOC,KAAKhpB,KAAKmwK,YAAc,KAAO,GACpDnwK,KAAKof,QAAU2J,OAAOC,KAAKhpB,KAAKowK,aAAe,KAAO,GACtDpwK,KAAKswK,kBAAoBtwK,KAAKof,UACxBuwD,EAAQrvE,EAAAqvC,QAAO3vC,KAAKqwK,YAAY/0J,IAAI,SAACtY,GAAC,OAAKA,EAAE4P,IAAI,KAAM,IACvDyV,QACF,SAACiX,GAAC,OACGr+B,EAAI,GAAA8C,OAAIu7B,IAAOr+B,EAAKovK,YAChB70J,OAAO,SAACxY,GAAC,OAAKA,EAAE4P,OAAS0sB,CAAC,GAC1BhkB,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,EAAC,GAE7BrT,KAAKqwK,YAAYhoJ,QACb,SAACw/E,GAAM,OAAM5mG,EAAI,GAAA8C,OAAI8jG,EAAOj1F,KAAI,KAAA7O,OAAI8jG,EAAOx0F,KAAQw0F,CAAM,GAE7D7nG,KAAKmf,OAAOkJ,QACR,SAAChnB,GAAG,OAAMJ,EAAI,SAAA8C,OAAU1C,IAASJ,EAAKkvK,WAAW9uK,EAAI,GAEzDrB,KAAKof,QAAQiJ,QACT,SAAChnB,GAAG,OAAMJ,EAAI,UAAA8C,OAAW1C,IAASJ,EAAKmvK,YAAY/uK,EAAI,EAE/D,EAAC,EAAAA,IAAA,SAAAC,MAED,WACItB,KAAKmiC,SADGv9B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEZ,GACA,CAAAvD,IAAA,SAAAC,MACA,WAAU,GACV,CAAAD,IAAA,SAAAC,MAUA,SAAOuoE,EAAe2tB,GACdx3F,KAAKmf,OAAOvZ,SAASikE,IAAU7pE,KAAKof,QAAQxZ,SAAS4xF,KACrDx3F,KAAKuwK,aAAa1mG,EAAO,CACrBrrE,UAAQ8B,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EACNpiB,KAAKmwK,WAAWtmG,GAAOrrE,QAAU,IAAE,CACvCg5F,OAGRx3F,KAAKuwK,aAAa/4E,EAAQ,CACtBqQ,OAAQh+B,EACR2mG,UAAW3mG,IAGvB,GACA,CAAAxoE,IAAA,WAAAC,MAKA,WAAY,GACZ,CAAAD,IAAA,WAAAC,MAIA,WAAY,GACZ,CAAAD,IAAA,cAAAC,MACA,WAAe,GACf,CAAAD,IAAA,QAAAC,MAKA,WAAS,GACT,CAAAD,IAAA,SAAAC,MAIA,WAAU,GACV,CAAAD,IAAA,SAAAC,MACA,WAAU,GACV,CAAAD,IAAA,UAAAC,MAKA,WAAW,GACX,CAAAD,IAAA,UAAAC,MAMA,WAAW,GACX,CAAAD,IAAA,UAAAC,MAKA,SAAQA,GACW,SADIsD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,SAEhC5E,KAAKkwK,OAAS5uK,EAEtB,GACA,CAAAD,IAAA,QAAAC,MACA,WACItB,KAAKuwK,aADoB3rK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,MAChB,CAAE6rK,OAD1B7rK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,IAEN,GACA,CAAAvD,IAAA,UAAAC,MAIA,WACItB,KAAK0wK,OAAM,EADP9rK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,MAEzB,GACA,CAAAvD,IAAA,eAAAC,MAQA,SAAa+R,EAAYkqB,GACrB,IAAMsqE,EAAS7nG,KAAKqwK,YAAYnhJ,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOA,CAAE,GACnDw0F,IACA7nG,KAAI,GAAA+D,OAAI8jG,EAAOj1F,KAAI,KAAA7O,OAAI8jG,EAAOx0F,KAAKwb,IAAA,GAAQg5E,GAAM,IAAEtqE,UAE3D,GACA,CAAAl8B,IAAA,QAAAC,MACA,SAAMumG,GACF7nG,KAAKuwK,aAAa1oE,EAAQ,CAAE8oE,QAAQ,GACxC,GACA,CAAAtvK,IAAA,UAAAC,MACA,SAAQumG,GACJ7nG,KAAKuwK,aAAa1oE,EAAQ,CAAE8oE,QAAQ,GACxC,GAAC,CAAAtvK,IAAA,eAAAC,MAED,SAAaumG,EAAgBplG,GACrBzC,KAAI,SAAA+D,OAAU8jG,KACd7nG,KAAI,SAAA+D,OAAU8jG,IAASh5E,IAAA,GAAQ7uB,KAAI,SAAA+D,OAAU8jG,KAAcplG,GAC3DzC,KAAKmwK,WAAWtoE,GAAOh5E,IAAA,GAAQ7uB,KAAI,SAAA+D,OAAU8jG,KAAcplG,IACpDzC,KAAI,UAAA+D,OAAW8jG,MACtB7nG,KAAI,UAAA+D,OAAW8jG,IAASh5E,IAAA,GAAQ7uB,KAAI,UAAA+D,OAAW8jG,KAAcplG,GAC7DzC,KAAKowK,YAAYvoE,GAAOh5E,IAAA,GAAQ7uB,KAAI,UAAA+D,OAAW8jG,KAAcplG,GAErE,IAAC,CAnNW,GAsNV0tK,EAAsB,CACxBS,KAAM,CACFr9J,KAAM,cACNX,KAAM,aACNoiB,IAAK,gBAET67I,KAAM,CACFt9J,KAAM,YACNX,KAAM,aACNoiB,IAAK,gBAET87I,KAAM,CACFv9J,KAAM,eACNX,KAAM,aACNoiB,IAAK,gBAET+7I,IAAK,CACDx9J,KAAM,OACNX,KAAM,MAEVo+J,IAAK,CACDz9J,KAAM,OACNX,KAAM,MAEVq+J,IAAK,CACD19J,KAAM,OACNX,KAAM,MAEVs+J,IAAK,CACD39J,KAAM,OACNX,KAAM,MAEVu+J,KAAM,CACF59J,KAAM,cACNX,KAAM,UAEVw+J,IAAK,CACD79J,KAAM,aACNX,KAAM,UAEVy+J,QAAS,CACL99J,KAAM,cACNX,KAAM,SACNoiB,IAAK,YAETs8I,QAAS,CACL/9J,KAAM,eACNX,KAAM,SACNoiB,IAAK,YAETu8I,QAAS,CACLh+J,KAAM,gBACNX,KAAM,SACNoiB,IAAK,YAETw8I,QAAS,CACLj+J,KAAM,iBACNX,KAAM,SACNoiB,IAAK,YAETy8I,IAAK,CACDl+J,KAAM,SACNX,KAAM,KACNoiB,IAAK,UAET08I,IAAK,CACDn+J,KAAM,qBACNX,KAAM,KACNoiB,IAAK,cAIPo7I,EAAuB,CACzBuB,SAAU,CACNp+J,KAAM,WACNX,KAAM,UACNi1F,OAAQ,MACR7yE,IAAK,aAET48I,SAAU,CACNr+J,KAAM,WACNX,KAAM,UACNoiB,IAAK,aAET68I,SAAU,CACNt+J,KAAM,OACNX,KAAM,UACNoiB,IAAK,YACL6yE,OAAQ,QAIVwoE,EAAqB,CACvB,CACIh9J,GAAI,SACJE,KAAM,WACNX,KAAM,SACNk/J,OAAQ,CAAC,MAAO,eAAgB,UAAW,QAC3Cv0I,MAAO,OAEX,CACIlqB,GAAI,SACJE,KAAM,SACNX,KAAM,SACNk/J,OAAQ,CAAC,MAAO,eAAgB,WAChCv0I,MAAO,OAEX,CACIlqB,GAAI,UACJE,KAAM,SACNX,KAAM,SACNk/J,OAAQ,CAAC,KAAM,QACfv0I,MAAO,SAIF59B,qBAAqB,SAACwc,GAAc,IAAEgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtE,IAAImrK,EAAUlhJ,IAAA,GACP1S,GAAK,IACRg0J,aACAC,cACAC,eACGlB,GACL,sRCpXN,IAAA4C,EAAAl0K,EAAA,OACAyC,EAAAzC,EAAA,OACAkqK,EAAAlqK,EAAA,OACAiqK,EAAAjqK,EAAA,OAoBam0K,EAAwB,WAkBpC,OAAAlyK,EAlBD,SAAAkyK,IAAAjyK,EAAAC,KAAAgyK,GAEIhyK,KAAAiyK,SAAkC,GAElCjyK,KAAAqlJ,mBAAqB,CACjB,YAAayiB,EAAAW,WAAWjtJ,OACpB,SAACxY,GAAC,SAAK1C,EAAAytF,sBAAqB,MAAQ,GAAM,CAAC,GAE/C,cAAe+5E,EAAAW,WAAWjtJ,OACtB,SAACxY,GAAC,SAAK1C,EAAAytF,sBAAqB,MAAQ,GAAM,CAAC,GASvD,EAAC,EAAA1sF,IAAA,eAAAC,MALG,SAAaoF,EAAewiH,GAAmB,GAAC,CAAA7nH,IAAA,UAAAC,MAEhD,WACI4wK,EAAgBlyK,KAAM+nK,EAAAa,YAC1B,IAAC,CAjBgC,GAArCjpK,2BAAAqyK,EAoBA,IAAMG,EAAa,GA8FnB,SAAgBD,EACZl9I,EACAlT,GAAiB,IAEO2V,EAFPD,EAAAU,EAECpW,GAAM,QAAAsd,EAAA,WAAE,IAAfqwB,EAAGh4B,EAAAn2B,MACV0zB,EAAIy6B,EAAIp8C,IAAM,CACV/R,MAAO,IAAIk9B,SAAMl+B,EAAAytF,sBAAqB,KACjCtvD,KAAK,GACLnjB,IAAI,kBAAMuxJ,EAAiBp9G,EAAKz6B,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,cAAa,IACjE,IAC6CsrB,EAD7CO,EAAAhH,EACiBlD,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,WAAU/R,OAAK,IAA/C,IAAA49B,EAAA5W,MAAAqW,EAAAO,EAAA/G,KAAAC,MAAeuG,EAAAr9B,MACNsjC,SAAQtkC,EAAAo+B,WAAU,IAC1B,OAAApV,GAAA4V,EAAArb,EAAAyF,EAAA,SAAA4V,EAAA/F,GAAA,CACDnE,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,WAASwb,EAAA,GAAQmG,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,WAC/C,EAVA,IAAAmkB,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAAgH,GAUC,OAAA9V,GAAAkO,EAAA3T,EAAAyF,EAAA,SAAAkO,EAAA2B,GAAA,CACL,CAEA,SAAgB0zI,EACZp9G,EACAt7B,GACkB,IAAAluB,EAAA6B,EAAAsqK,EAAAC,EAAlBv6J,EAAKlT,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAGkjK,EAAAW,WAEF6J,KAAQhyK,EAAAytF,sBAAqB,MAAQ,GAAM,EAC3CwkF,EAAgE,QAA7DtsK,GAAI6R,GAAS,OAAIxX,EAAAytF,sBAAiC,QAAbjmF,EAAEgQ,GAAS,UAAE,IAAAhQ,OAAA,EAAZA,EAAe9C,gBAAQ,IAAAiB,OAAA,EAA1DA,EAA4DS,MACxE,OAAO4rK,EACD,CACI5sK,SAAU,OACVy0I,eAAa75I,EAAAytF,sBAAqB,MAAQ,GAAM,EAChDv6E,OAAQ2gB,KAAM7zB,EAAAytF,sBAAqB55D,EAAMnvB,SACzC82I,IAAQ,QAALs2B,EAAEL,EAAAS,WAAG,IAAAJ,OAAA,EAAHA,EAAKK,QAAQF,GAAO,IACzB/7J,MAAOi5C,EAAIp8C,GACXwC,SAAU45C,EAAI57C,WAElB,CACInO,SAAU,WACVm1I,iBAAkB,cAClBv1F,KAAGhlD,EAAAytF,sBAAqB,KAAQ,GAChCxoC,KAAGjlD,EAAAytF,sBAAqB,KAAQ,GAChCo/E,IAAK,kBACL7tD,IAAK,kBACLozD,WAAY,eACZ52B,IAAQ,QAALu2B,EAAEN,EAAAS,WAAG,IAAAH,OAAA,EAAHA,EAAKI,QAAQF,GAAO,IACzB91B,SAAU,iBACV/uB,UAAW11F,KAAK6I,WAAU/mB,MAAO4b,UAAY,KAC7CilH,UAAW,IACXC,WAAY,IAE1B,CA3IAj7I,6BAAuC,kBAAAG,EAAA,SAAA6yK,IAAA5yK,EAAAC,KAAA2yK,EAAA,IAAAtxK,IAAA,sBAAAC,MACnC,SAAoBwuK,GAChB,IAAKqC,EAAWrC,GAAc,CAC1B,IAAMzL,KACF/jK,EAAAo+B,WAAU,QAAW,GAAM,EACrBopI,EAAAW,cAAWnoK,EAAAo+B,WAAUopI,EAAAW,WAAWzjK,SAChC,CAAEuO,KAAM,IAClB4+J,EAAWrC,GAAe,CAAEz0H,YAAagpH,EAAM9wJ,KACnD,CACA,OAAO4+J,EAAWrC,EACtB,GAAC,CAAAzuK,IAAA,eAAAC,MAED,SAAaoF,EAAewiH,GACxB,MAAO,CAAC,CACJt2G,KAAM,WACN+yC,SAAU,CAAEL,EAAG,GAAKC,EAAG,IACvB/uC,MAAOuxJ,EAAAa,eAAYtoK,EAAAo+B,WAAUqpI,EAAAa,YAAY5jK,SAASqO,GAClDooI,SAAU,GAElB,IAAC,CAnBkC,GA8BvC97I,6BAAA,SAAgBizK,EACZz2J,GACuB,IAGMmb,EADvBtC,EAAM,IAAIg9I,EAA2B36I,EAAAa,EACzB6vI,EAAAa,aAAW,QAAAluI,EAAA,WAAE,IAApB+0B,EAAGn4B,EAAAh2B,MACV0zB,EAAIi9I,SAASxiH,EAAIp8C,IAAM,CACnBw/J,WAAY,IACZC,WAAY,EACZC,gBAAiB,IACjBC,aAAc,EACdC,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,KAEpBn+I,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,cAAe,IAAImrB,MAAMxJ,EAAIi9I,SAASxiH,EAAIp8C,IAAIw/J,YACtDp0I,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GAAG,eAAAlsC,OAAc0rD,EAAIw7G,OAAM,KAAAlnK,OAzBhD,SAASqvK,EAAQC,GAEb,QAFyBC,EAAA1uK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,EACnCo9E,EAAG,GAAAj+E,OAAMsvK,GACNrxF,EAAIh9E,OAASsuK,GAChBtxF,EAAM,IAAMA,EAEhB,OAAOA,CACX,CAmBoDoxF,CAAQnjI,GAAI,GACxDjb,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,KAAQ,CAAE/R,MAAO,IAC5B0zB,EAAG,GAAAjxB,OAAI0rD,EAAIp8C,GAAE,WAAY,CACrB/R,MAAO,CACH,CACIsrJ,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,KACjBnrB,KAAM,cAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,KACjBnrB,KAAM,cAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,IACjBnrB,KAAM,cAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,KACjBnrB,KAAM,cAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,KACjBnrB,KAAM,kBAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,KACjBnrB,KAAM,kBAEV,CACIq5I,QAAS,YACThoH,SAAOtkC,EAAAo+B,WAAU,IACjBnrB,KAAM,gBAItB,EArDA,IAAA8jB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAqDC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOnE,CACX,EAEAr1B,kBAAAuyK,EAiBAvyK,mBAAAktK,+JC1JA,IAAAvsK,EAAAzC,EAAA,OAEM01K,EAAa,WAcd,OAAAzzK,EAFD,SAAAyzK,EAAYvwK,GAACjD,EAAAC,KAAAuzK,GACTvzK,KAAKkwK,UAAS5vK,EAAAo+B,WAAU,IAC5B,EAAC,EAAAr9B,IAAA,QAAAC,MAVD,WACItB,KAAKywK,OADH7rK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEN,GAAC,CAAAvD,IAAA,UAAAC,MAED,SAAQA,GACJtB,KAAKkwK,OAAS5uK,CAClB,IAAC,CAVc,GAiBN3B,sBAAsB,SAACwc,GAAc,IAAEgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACvE,IAAI2uK,EAAa1kJ,IAAA,GAAM1S,GAAUgzJ,GAAY,iKCpBjD,IAAAx+I,EAAA9yB,EAAA,OAEAyC,EAAAzC,EAAA,OACA0rK,EAAA1rK,EAAA,OAEa21K,EAAiB,WA0B1B,OAAA1zK,EAFA,SAAA0zK,EAAYr3J,EAAOwqB,GAAiC5mC,EAAAC,KAAAwzK,GAtBpDxzK,KAAAyzK,UAAY,mBAEZzzK,KAAA0zK,kBAAmB,EAEnB1zK,KAAA2zK,qBAAsB,EAEtB3zK,KAAA61B,SAAsB,GACtB71B,KAAA4zK,eAAiB,EACjB5zK,KAAA6zK,eAAiB,EAEjB7zK,KAAA8zK,WAAa,GAEb9zK,KAAA+zK,YAAc,GAEd/zK,KAAAg0K,qBAAuB,EACvBh0K,KAAAi0K,gBAAkB,KAClBj0K,KAAAk0K,aAAe,KAEfl0K,KAAAm0K,WAAa,uBACbn0K,KAAA0hC,OAAS,OACT1hC,KAAA0uB,OAAS,KAE+C1uB,KAAK0uB,OAASvS,CAAM,EAE5E,EAAA9a,IAAA,iBAAAC,MACA,SAAeg+B,GACXt/B,KAAKg0K,qBAAuB10I,CAChC,GACA,CAAAj+B,IAAA,eAAAC,MACA,SAAag+B,GAAY,GACzB,CAAAj+B,IAAA,YAAAC,MACA,SAAUgyK,EAAah0I,EAAY/c,GAAa,GAAC,CAAAlhB,IAAA,iBAAAC,MAEjD,YAUJ,SAAS8yK,EAAej4J,EAAgB6Y,GAAY,IAAA/uB,EAC1C4vB,EACF0zI,EAAAM,YAAYruJ,OAAO,SAACsS,GAAK,IAAAumJ,EAAA,OACN,QADMA,EACrBvmJ,EAAM5X,iBAAS,IAAAm+J,OAAA,EAAfA,EAAiBnlJ,KACb,SAACozE,GAAC,IAAA96C,EAAA,OACE86C,EAAE57F,QAAUyV,EAAMzV,OAClB47F,EAAEjvF,KAAO8I,EAAM9I,KACH,QAAZm0C,EAAA15B,EAAMpV,cAAM,IAAA8uC,OAAA,EAAZA,EAAcn0C,MAAO8I,EAAM9I,EAAE,EACpC,IACA,GACTwiB,EAASrZ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEs4G,YAAcjtH,EAAEitH,WAAW,GACrDv2G,EAAIa,SAAWA,EACfb,EAAIi/I,gBAAkBp+I,EAAS3G,KAAK,SAAClsB,GAAC,SAClC1C,EAAA4rF,sBACIpyE,KAAKuX,MACLvX,KAAKuX,MACW,IAAhBruB,EAAEuoI,YACY,IAAdvoI,EAAEwoI,UACL,GAELx2G,EAAIk/I,aAAer+I,EAAS3G,KAAK,SAAClsB,GAAC,OAAqB,IAAhBA,EAAEuoI,YAAqBzxH,KAAKuX,KAAK,GACzE,IAAMxf,EAAO,IAAIiI,KACTm6J,EAAkCj/I,EAAlCi/I,gBACFllJ,EAAQ,IAAIjV,KAAqC,QAAjC7T,EAAEguK,GADkBj/I,EAAjBk/I,oBAC8B,IAAAjuK,OAAA,EAAhCA,EAAmCslI,aACpDqd,KAAUtoJ,EAAA4rF,sBACZr6E,EAAK6jB,UACL7jB,EAAK6jB,WAAO,EACZ/E,EAAA2jJ,YAAWvlJ,EAAOiG,EAAI6+I,gBAAgBn+I,WAAO,EAC7C/E,EAAAuiH,YAAWnkH,EAAOiG,EAAI4+I,gBAAgBl+I,WAE1CV,EAAI0M,OAAc,MAALvlB,KAAOi/B,SACd64H,EACI,OACArrB,EACA,UACA,OACJ,cACV,CA9CQwrB,CAAep0K,KAAK0uB,OAAQ1uB,KAChC,IAAC,CArCyB,GAA9BL,oBAAA6zK,EAwCa7zK,uBAAuB,SAChCwc,GAC0C,OACzC,IAAIq3J,EAAkBr3J,EADvBvX,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwC,GACA,2KC9CtC2vK,EAAqB,WACE,OAAAz0K,EAAzB,SAAAy0K,EAAY9xK,GAAS1C,EAAAC,KAAAu0K,EAAG,EAAC,EAAAlzK,IAAA,2BAAAC,MAEzB,WACI,MAAO,CACH,CACIoE,SAAU,SACV66C,QAAS,uCACThrB,UAAW,uCACXI,YAAa,QACb2oH,WAAW,EACXvjH,SAAU,wCAGtB,IAAC,CAdsB,GAiBdp7B,8BAA8B,SACvC+W,GAAiB,IACjBy4J,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAEvB,IAAI2vK,EAAqB1lJ,IAAA,GAClBnY,GACAy4J,GACL,uKCxBAqF,EAAiB,WAGM,OAAA10K,EAAzB,SAAA00K,EAAY/xK,GAAS1C,EAAAC,KAAAw0K,GAFdx0K,KAAAy0K,sBAAwB,eAEP,EAAC,EAAApzK,IAAA,YAAAC,MAEzB,WAA2B,IAAC,CALT,GAQV3B,0BAA0B,SACnC+W,GAAiB,IACjBy4J,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAEvB,IAAI4vK,EAAiB3lJ,IAAA,GACdnY,GACAy4J,GACL,kKCjBN,IAAA7uK,EAAAzC,EAAA,OAEM62K,EAAgB,WAcjB,OAAA50K,EAFD,SAAA40K,EAAY1xK,GAACjD,EAAAC,KAAA00K,GACT10K,KAAKkwK,UAAS5vK,EAAAo+B,WAAU,IAC5B,EAAC,EAAAr9B,IAAA,QAAAC,MAVD,WACItB,KAAKywK,OADH7rK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEN,GAAC,CAAAvD,IAAA,UAAAC,MAED,SAAQA,GACJtB,KAAKkwK,OAAS5uK,CAClB,IAAC,CAViB,GAiBT3B,yBAAyB,SAClCwc,GAAc,IACdgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI8vK,EAAgB7lJ,IAAA,GAAM1S,GAAUgzJ,GAAY,gKCtBrD,IAAA7uK,EAAAzC,EAAA,OAEMiO,EAAc,WA6BC,OAAAhM,EAAjB,SAAAgM,EAAY9I,GAACjD,EAAAC,KAAA8L,EAAG,EAAC,EAAAzK,IAAA,wBAAAC,MA3BjB,SAAsBsR,GAEtB,GAAC,CAAAvR,IAAA,sBAAAC,MAED,SAAoBsR,EAAc8D,GAElC,GAAC,CAAArV,IAAA,sBAAAC,MAED,SAAoB+R,EAAYo/B,GAC5B,MAAO,CAAC,KAAO,GACnB,GAAC,CAAApxC,IAAA,yBAAAC,MAED,SAAuBkgC,EAAgBqmE,GACnC,SAAOvnG,EAAAs/B,cAAa,GACxB,GAAC,CAAAv+B,IAAA,0BAAAC,MAED,SAAwB+R,GAExB,GAAC,CAAAhS,IAAA,yBAAAC,MAED,SAAuB+R,GACvB,GAAC,CAAAhS,IAAA,mBAAAC,MAED,WACI,gBAAAyC,UAAiBzD,EAAAo+B,WAAU,QAAW,KAC1C,IAAC,CA3Be,GAgCP/+B,uBAAuB,SAACwc,GAAc,IAAEgzJ,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACxE,IAAIkH,EAAc+iB,IAAA,GAAM1S,GAAUgzJ,GAAY,2KCA5CwF,EAAqB,WAiDN,OAAA70K,EAAjB,SAAA60K,EAAY3xK,GAACjD,EAAAC,KAAA20K,GAhDb30K,KAAA40K,UAAoB,EACpB50K,KAAA60K,UAAoB,EACpB70K,KAAA80K,aAA4B,OAC5B90K,KAAA+0K,kBAAiD,OAEjD/0K,KAAAg1K,MAA0C,CACtCtR,KAAM,CACFuR,OAAQ,aAyCA,EAAC,EAAA5zK,IAAA,mBAAAC,MArCjB,SAAiBqkH,GACb3lH,KAAK60K,SAAWlvD,CACpB,GAAC,CAAAtkH,IAAA,YAAAC,MAED,SAAUqkH,GACN3lH,KAAK40K,SAAWjvD,CACpB,GAAC,CAAAtkH,IAAA,qBAAAC,MACD,SAAmBi8B,GACfv9B,KAAK+0K,kBAAoBx3I,CAC7B,GAAC,CAAAl8B,IAAA,UAAAC,MACD,WAAW,GAAC,CAAAD,IAAA,sBAAAC,MACZ,WACI,QAAWD,KAAOrB,KAAKg1K,MACnB,GAAIh1K,KAAKg1K,MAAM3zK,GAAK4zK,OAGhB,OAFAj1K,KAAKg1K,MAAM3zK,GAAK4zK,OAAS,cACzBj1K,KAAKg1K,MAAKnmJ,EAAA,GAAQ7uB,KAAKg1K,OAInC,GAAC,CAAA3zK,IAAA,eAAAC,MACD,WACI,QAAWD,KAAOrB,KAAKg1K,MACnB,GAAIh1K,KAAKg1K,MAAM3zK,GAAK4zK,OAGhB,OAFAj1K,KAAKg1K,MAAM3zK,GAAK4zK,OAAS,YACzBj1K,KAAKg1K,MAAKnmJ,EAAA,GAAQ7uB,KAAKg1K,OAInC,GAAC,CAAA3zK,IAAA,gBAAAC,MACD,SAAc4zK,GACVl1K,KAAK80K,aAAeI,CACxB,GAAC,CAAA7zK,IAAA,aAAAC,MACD,SAAW6zK,GAAgB,GAAC,CAAA9zK,IAAA,QAAAC,MAC5B,SAAM8zK,GACF,OAAO,IAAIzxK,QAAc,SAAC2sC,GAAC,OAAKtD,WAAW,kBAAMsD,GAAG,EAAE,IAAK,EAC/D,IAAC,CA/CsB,GAoDd3wC,8BAA8B,WAAH,IAEpCwvK,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI+vK,EAAqB9lJ,IAAA,GAF1BjqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,IAEyBuqK,GAAY,2FC1F1D,IAAA9uK,EAAAxC,EAAA,OAGAw3K,EAAAx3K,EAAA,IACAiR,EAAAjR,EAAA,OACAy3K,EAAAz3K,EAAA,OAIA03K,EAAA13K,EAAA,OACA23K,EAAA33K,EAAA,OACA43K,EAAA53K,EAAA,OACA63K,EAAA73K,EAAA,OACA83K,EAAA93K,EAAA,OACA+3K,EAAA/3K,EAAA,OACAg4K,EAAAh4K,EAAA,OACAiM,EAAAjM,EAAA,OACAi4K,EAAAj4K,EAAA,OAEA8B,eAAA,SAAgB0sK,EAAalwJ,IACzB,EAAA9b,EAAA01K,gBAAe55J,EAAM9I,GAAI,CACrB2iK,OAAQ,IAACX,EAAAY,oBAAmB95J,IAC5B0uJ,SAAU,IAAC/7J,EAAAonK,sBAAqB/5J,IAChCg6J,eAAgB,IAACN,EAAAO,4BAA2Bj6J,IAC5Ck6J,eAAgB,IAACf,EAAA1C,4BAA2Bz2J,IAC5Cm6J,iBAAkB,CAAC,IAAIhB,EAAA3C,4BACvB4D,OAAQ,IAAI/3I,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,SAACtY,GAAC,SAAKuyK,EAAAiB,oBAAmBr6J,EAAM,GAClEs6J,QAAS,IAAIj4I,MAAM,IAAIC,KAAK,GAAGnjB,IAAI,SAACtY,GAAC,SAAKwyK,EAAAkB,qBAAoBv6J,EAAM,GACpEw6J,WAAY,IAAIn4I,MAAM,IACjBC,KAAK,GACLnjB,IAAI,SAACtY,GAAC,SAAKyyK,EAAAmB,wBAAuBz6J,EAAM,GAC7C06J,QAAS,IAACnB,EAAAoB,qBAAoB36J,IAC9B46J,YAAa,IAACpB,EAAAqB,4BACdC,QAAS,IAACrB,EAAAsB,gCACVC,QAAS,IAACrtK,EAAAstK,sBAAqBj7J,IAC/Bk7J,gBAAiB,IAACvB,EAAAwB,kCAGtB,IAAM5+J,KAASrY,EAAAuqK,YAAWzuJ,EAAM9I,IAEhCqF,EAAOmyJ,SAAS,GAAGC,iBACnBroF,YAAY,kBAAM/pE,EAAOmyJ,SAAS,GAAGC,gBAAgB,EAAE,KAEvDpyJ,EAAO29J,eAAe,GAAGkB,UACzB90F,YAAY,kBAAM/pE,EAAO29J,eAAe,GAAGkB,SAAS,EAAE,IAC1D,qEC7CA,IAAAj3K,EAAAzC,EAAA,OAEA25K,EAAA35K,EAAA,OACA45K,EAAA55K,EAAA,OACA65K,EAAA75K,EAAA,OACA85K,EAAA95K,EAAA,OACA+5K,EAAA/5K,EAAA,OACAg6K,EAAAh6K,EAAA,OACAi6K,EAAAj6K,EAAA,OACAk6K,EAAAl6K,EAAA,OAEA8B,UAAe,CACXq4K,WAAAR,EAAAQ,WACAC,WAAAR,EAAAQ,WACAC,aAAAR,EAAAQ,aACAC,YAAAR,EAAAQ,YACAC,eAAAR,EAAAQ,eACAC,cAAAR,EAAAQ,cACAC,YAAAR,EAAAQ,YACAC,aAAAR,EAAAQ,iBAGJj4K,EAAAqC,KAAI,QAAS,qHCtBbs3B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,wKCPA,IAAA+iI,EAAA7kI,EAAA,OA0DA8B,WAAqB,WA8JjB,OAAAG,EAjGA,SAAAqkI,IAAoD,IAAAljI,EAAAjB,KAAxCw4K,EAAA5zK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsC,GAAE7E,EAAAC,KAAAmkI,GAChDnkI,KAAKqT,GAAKmlK,EAASnlK,IAAM,GACzBrT,KAAK6T,UAAY2kK,EAAS3kK,WAAa,GACvC7T,KAAKuT,KAAOilK,EAASjlK,MAAQ,GAC7B,IAAMpO,EAAWqzK,EAASrzK,UAAY,GACtCnF,KAAKyV,aAAe+iK,EAAS/iK,aAC7BzV,KAAKoqB,OAASpqB,KAAKoqB,QAAU,GAC7B,IAAMquJ,EAAYtzK,EAASuzK,gBAAkBvzK,EAC7CnF,KAAKwoC,QAAUgwI,EAAShwI,SAAWgwI,EAAS5kK,KAC5C5T,KAAK24K,QAAUH,EAASG,QAAUF,EAAUE,QAAU,IAAIr9J,IAAI,SAAC8W,GAAC,MAAM,CAClE/e,GAAI+e,EAAEwmJ,UAAYxmJ,EAAE/e,GACpBE,KAAM6e,EAAEymJ,YAAczmJ,EAAE7e,KAC3B,GACDvT,KAAK84K,YACDN,EAASM,YACTL,EAAUK,YACV,IACFx9J,IAAI,SAAC8W,GAAC,MAAM,CACV/e,GAAI+e,EAAEwmJ,UAAYxmJ,EAAE/e,GACpBE,KAAM6e,EAAEymJ,YAAczmJ,EAAE7e,KAC3B,GACDvT,KAAK8hB,QAAU02J,EAAS12J,QAAU22J,EAAU32J,QAAU,IAAIxG,IACtD,SAAC8W,GAAC,OAAK,IAAIswG,EAAAwB,cAAar1G,IAAA,GAAMuD,GAAC,IAAEi5I,YAAapqK,EAAKoS,KAAK,GAE5DrT,KAAK+4K,OAASP,EAASlyB,OAASmyB,EAAUnyB,OAAS,GACnDtmJ,KAAK6wB,SACD2nJ,EAAS7jJ,SACT6jJ,EAASQ,kBACTP,EAAUO,kBACV,GACJh5K,KAAKi5K,SAAWT,EAAS5O,SAAW6O,EAAU7O,SAAW,GACzD5pK,KAAKk5K,eACDV,EAASW,eAAiBV,EAAUU,eAAiB,GACzDn5K,KAAK0F,SAAW8yK,EAAS9yK,UAAY+yK,EAAU/yK,UAAY,MAC3D1F,KAAKo5K,oBACDZ,EAASY,qBAAuBX,EAAUW,qBAAuB,GACrEp5K,KAAKq5K,WAAab,EAASa,YAAcZ,EAAUY,YAAc,GACjE,IAAMC,EAAc,GACpB,GAAId,EAASe,eACT,QAAW9pH,KAAO+oH,EAASe,eACvB,GAAI9pH,KAAO+oH,EAASe,eAAgB,CAChC,IAAMC,EAAehB,EAASe,eAAe9pH,IAAQ,GACrD,QAAWt0C,KAAWq+J,EACdr+J,KAAWq+J,GACXF,EAAYrgJ,KAAK,CACb5lB,GAAImmK,EAAar+J,GACjB5H,KAAM4H,EACNqa,SAAUi6B,GAI1B,CAGRzvD,KAAK0tK,SAAW8K,EAAS9K,UAAY,GACrC1tK,KAAKs5K,YAAcA,EACnBt5K,KAAKwT,OAASglK,EAAShlK,QAAU,GACjCxT,KAAK+iD,SACDy1H,EAASz1H,UAAY01H,EAAU11H,UAAY59C,EAAS49C,UAAY,GACpE/iD,KAAKy5K,eAAiBjB,EAASiB,gBAC3BhB,EAAUgB,gBACVt0K,EAASs0K,gBAAkB,CAAE1qJ,MAAO,EAAGnL,IAAK,IAChD5jB,KAAK05K,cACDlB,EAASkB,eACTjB,EAAUiB,eACVv0K,EAASu0K,eACT,GACJ15K,KAAK25K,YACDnB,EAASmB,aACTlB,EAAUkB,aACVx0K,EAASw0K,aACT,GACJ35K,KAAK8zE,KAAO0kG,EAAS1kG,MAAQ2kG,EAAU3kG,MAAQ3uE,EAAS2uE,MAAQ,GAChE9zE,KAAKmvB,QACDqpJ,EAASrpJ,SAAWspJ,EAAUtpJ,SAAWhqB,EAASgqB,SAAW,GACjEnvB,KAAK45K,aACDpB,EAASoB,cACTnB,EAAUmB,cACVz0K,EAASy0K,cACT,GACJ55K,KAAK65K,gBACDrB,EAASqB,iBACTpB,EAAUoB,iBACV10K,EAAS00K,iBACT,KACJ75K,KAAK85K,yBACDtB,EAASsB,0BACTrB,EAAUqB,0BACV30K,EAAS20K,2BACT,KACJ95K,KAAKisE,SACDusG,EAASvsG,UACTwsG,EAAUxsG,UACV9mE,EAAS8mE,UACT,KACR,EAEA,EAAA5qE,IAAA,OAAAC,MAIO,SAAKiS,GACR,OAAA6O,EAAYpiB,KAAK+4K,OAAOxlK,IAAS,GACrC,GACA,CAAAlS,IAAA,aAAAiE,IAGA,WAAqB,IAAAR,EAAA9E,KACjB,OAAO+oB,OAAOC,KAAKhpB,KAAK+4K,QAAQv9J,OAAO,SAAC4W,GAAC,OAAKA,KAAKttB,EAAKi0K,MAAM,EAClE,GACA,CAAA13K,IAAA,UAAAiE,IACA,WACI,OAAAupB,EAAA,GAAa7uB,KAAK6wB,UAAY,GAClC,GACA,CAAAxvB,IAAA,UAAAiE,IACA,WACI,OAAAupB,EAAA,GAAa7uB,KAAKi5K,UAAY,GAClC,GACA,CAAA53K,IAAA,gBAAAiE,IACA,WACI,OAAAupB,EAAA,GAAa7uB,KAAKk5K,gBAAkB,GACxC,GAEA,CAAA73K,IAAA,mBAAAC,MAIO,SAAiBk0B,GACpB,OAAQx1B,KAAKs5K,aAAe,IAAI99J,OAAO,SAAC4W,GAAC,OAAKA,EAAEoD,WAAaA,CAAQ,EACzE,IAAC,CA9LgB,+ICzDrB,IAAIukJ,EAAY,EACZC,EAAY,EA+EhB,SAAgBC,EAAkB5mK,EAAastC,GAC3C,OAAKttC,IACDA,EAAE,YAAAtP,OAAei2K,MAEd,CACHxkJ,SAAUniB,EACV6mK,WAAU,SAAAn2K,OAAWi2K,GACrBr5H,UAER,CAjFAhhD,uBAAA,SAAgBw6K,EAAqB9mK,GAC5BA,IACDA,EAAE,YAAAtP,OAAeg2K,MAErB,IAIwBziJ,EAJlBxV,EAAS0c,MAAM,IAChBC,KAAK,GACLnjB,IAAI,SAAC8W,GAAC,OAAK6nJ,GAAmB,GAC7BlxK,EAAgB,GAAGsuB,EAAAa,EACPpW,GAAM,IAAxB,IAAAuV,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAA0B,KAAfq3B,EAAGn4B,EAAAh2B,MACJsjC,EAAQ5M,KAAK6I,MAAsB,EAAhB7I,KAAKgxD,SAAe,GAC7CjgF,EAAS0mD,EAAIj6B,UAAY,GACzB,QAASpD,EAAI,EAAGA,EAAIwS,EAAOxS,IACvBrpB,EAAS0mD,EAAIj6B,UAAS,aAAAzxB,OAAcquB,EAAI,IAAI,WAAAruB,OAAcquB,EAAI,EAEtE,CAAC,OAAA9I,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,MAAO,CACH9lB,KACAm1B,QAASn1B,EACTslK,OAAQn6I,MAAM,IACTC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GACL,IAAM18B,EAAI,YAAAxP,OAAeksC,EAAM,GAC/B,MAAO,CACH2oI,SAAUrlK,EAAK5M,MAAM,KAAKkO,KAAK,KAAKme,cACpC6lJ,WAAYtlK,EAEpB,GACJulK,WAAYt6I,MAAM,IACbC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GACL,IAAM18B,EAAI,YAAAxP,OAAeksC,EAAM,GAC/B,MAAO,CACH2oI,SAAUrlK,EAAK5M,MAAM,KAAKkO,KAAK,KAAKme,cACpC6lJ,WAAYtlK,EAEpB,GACJuO,SACAwkI,MAAO,CACH,eAAgB9nH,MAAM,IACjBC,KAAK,GACLnjB,IAAI,SAAC8W,GAAC,MAAM,CAAE7e,KAAM,OAAQ,IAErCgmK,eAAgBxwK,EAChB5D,SAAU,CACNu+J,KAAM,CACF0W,OAAQ,CACJC,QAAQ,EACR7zG,KAAK,KAIjB4yG,oBAAqB,CACjB,CACI/lK,GAAI,YACJE,KAAM,YACNE,YAAa,uBAEjB,CACIJ,GAAI,WACJE,KAAM,WACNE,YAAa,uBAI7B,EAQA9T,oBAAAs6K,gJCjFA,IAAA55K,EAAAxC,EAAA,OAEMy8K,EAAc,CAAC,OAAQ,UAAW,UAExC36K,OAAiB,WAmCZ,OAAAG,EAbD,SAAAq5I,IAAoC,IAAAohC,EAAAt5K,EAAAjB,KAAxByC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,GAU9B,QAAWvD,KAVqBtB,EAAAC,KAAAm5I,GAwBpBn5I,KAAAsqI,OAAS,kBAAMrpI,EAAK43B,QAAQ,EAvBxC74B,KAAKqT,GAAK5Q,EAAK4Q,IAAM,GACrBrT,KAAKwT,OAAS/Q,EAAK+Q,QAAU/Q,EAAK4Q,IAAM,GACxCrT,KAAKuT,KAAO9Q,EAAK8Q,MAAQ,GACzBvT,KAAKo7C,SAAwB,QAAhBm/H,EAAG93K,EAAK24C,gBAAQ,IAAAm/H,KAC7Bv6K,KAAK4T,KAAOnR,EAAKmR,MAAQ,IAAIvT,EAAAm6K,UAC7Bx6K,KAAKk7C,OAASz4C,EAAKy4C,QAAU,GAC7Bl7C,KAAKi3I,QAAUx0I,EAAKw0I,SAAW,GAC/Bj3I,KAAK+I,SAAWtG,EAAKsG,UAAY,GACjC/I,KAAKoqB,OAAS3nB,EAAK2nB,QAAU,GACX3nB,EACRpB,KAAOrB,OAAOA,KAAKqB,GAAOoB,EAAKpB,GAE7C,EAAC,EAAAA,IAAA,SAAAC,MAEM,WAEH,QADMmB,EAAIosB,EAAA,GAAQ7uB,MAClBs2F,EAAA,EAAAmkF,EAAkBH,EAAWhkF,EAAAmkF,EAAAz1K,OAAAsxF,WAClB7zF,EADGg4K,EAAAnkF,IAGd,SAAAj2F,EAAA8rC,aAAY1pC,EAAM,MAACwC,EAAW,KAAM,KAC7BxC,CACX,IAAC,CA5CY,uICHjB9C,gBAA0BG,EAyBtB,SAAAokI,IAA8C,IAAAj+H,EAAlC0gC,EAAA/hC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgC,GAAE7E,EAAAC,KAAAkkI,GAP9BlkI,KAAAmF,SAAgC,GAQ5CnF,KAAKqT,GAAKszB,EAAMtzB,IAAM,GACtBrT,KAAK6T,UAAY8yB,EAAM9yB,WAAa,GACpC7T,KAAKuT,KAAOozB,EAAMpzB,MAAQ,GAC1BvT,KAAKyV,aAAekxB,EAAMlxB,cAAgB,GAC1CzV,KAAKwT,OAASmzB,EAAMnzB,QAAU,GAC9BxT,KAAKuf,SAAWonB,EAAMpnB,UAAY,EAClCvf,KAAK0F,SAAWihC,EAAMjhC,UAAY,GAClC1F,KAAKwlF,UAAY7+C,EAAM6+C,WAAa,GACpCxlF,KAAKgkD,KAAOrd,EAAMqd,MAAQ,GAC1BhkD,KAAKoqB,OAASuc,EAAMvc,QAAU,GAC9B,IAAMm6D,EAAQvkF,KAAKyV,aAAa9O,MAAM,KACtC3G,KAAKirK,SAGyB,QAF1BhlK,EAACs+E,EAAMv/E,QAAU,EACXu/E,EAAMA,EAAMv/E,OAAS,GACrBhF,KAAKyV,aAAa,UAAE,IAAAxP,OAAA,EAF1BA,EAGG69C,gBAAiB,IACtBsqC,UAAU,EAAG,EACnB,sIC5CJ,IAAAt4B,EAAAj4D,EAAA,OAMA8B,eAAyB,WA6BrB,OAAAG,EAXA,SAAA46K,IAAwD,IAA5ClC,EAAA5zK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0C,GAAE7E,EAAAC,KAAA06K,GACpD16K,KAAKqT,GAAKmlK,EAASnlK,IAAM,GACzBrT,KAAKuT,KAAOilK,EAASjlK,MAAQ,GAC7BvT,KAAKyT,YAAc+kK,EAAS/kK,aAAe,GAC3CzT,KAAKgkD,KAAOw0H,EAASx0H,MAAQ,GAC7BhkD,KAAK4kC,MAAQ4zI,EAAS5zI,OAAS,EAC/B5kC,KAAKuf,SAAWi5J,EAASj5J,UAAY,EACrCvf,KAAK0tK,SAAW8K,EAAS9K,UAAY,GACrC1tK,KAAKa,UAAY23K,EAASrzK,UAAY,EAC1C,EAEA,EAAA9D,IAAA,UAAAC,MAIO,SAAQD,GACX,IAAM2nB,EAAO3nB,EAAIsF,MAAM,KAEvB,OADMrF,EAAQw0D,EAAAk0B,iBAAgBhhE,EAAMhpB,KAAKa,UAE7C,IAAC,CArCoB,6PCLzBhD,EAAA,WACAwC,EAAAxC,EAAA,OAUAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MASAg4D,EAAAh4D,EAAA,OAIA4kI,GAHA5kI,EAAA,OAGAA,EAAA,QACA6kI,EAAA7kI,EAAA,OACA88K,EAAA98K,EAAA,OACA+8K,EAAA/8K,EAAA,OACAyC,EAAAzC,EAAA,OAEAg9K,EAAAh9K,EAAA,uCAEA8B,sBAGgC,eAAAm7K,EAAnBryK,EAAmB,WA+K5B,OAAA3I,EAZA,SAAA2I,EAAoB8H,EAAmCC,GAAe,IAAAvP,EAAAjB,KAAAD,EAAAC,KAAAyI,GAAlDzI,KAAAuQ,WAAmCvQ,KAAAwQ,UAjKpCxQ,KAAA+iF,aAAe,IAAI3pE,EAAAuB,iBAAyB,GAE/C3a,KAAA6C,YAAc7C,KAAK+iF,aAAajoE,eAC/B9a,KAAA+6K,SAAW,IAAI3hK,EAAAuB,gBAA0B,IACzC3a,KAAAg7K,eAAiB,IAAI5hK,EAAAuB,gBAAwB,MAC7C3a,KAAAi7K,WAAa,IAAI7hK,EAAAuB,gBAA4B,IAC7C3a,KAAAk7K,iBAAmB,IAAI9hK,EAAAuB,gBAA0B,MACjD3a,KAAAm7K,QAAU,IAAI/hK,EAAAuB,gBAAiC,IAC/C3a,KAAAo7K,aAAyB,GAE1Bp7K,KAAAq7K,QAAO,GAAAt3K,QACnB/D,KAAKuQ,SAASm5E,UAAY,aAC5B12D,cAAa,QAEChzB,KAAAsvD,YAActvD,KAAK+6K,SAASjgK,eAE5B9a,KAAA0X,cAAgB1X,KAAKi7K,WAAWngK,eAEhC9a,KAAA6kE,WAAa7kE,KAAKm7K,QAAQrgK,eAE1B9a,KAAAuvD,cAAgBvvD,KAAKg7K,eAAelgK,eAEpC9a,KAAAyX,gBAAkBzX,KAAKk7K,iBAAiBpgK,eAExC9a,KAAAqvD,oBAAmBj2C,EAAA2I,eAAc,CAC7C/hB,KAAKi7K,WACLj7K,KAAKg7K,iBACNl4K,QACC1C,EAAAkb,KAAI,SAAArV,GAAA,IAAKixC,EAALj1B,EAAAhc,EAAA,GAAW,UACXixC,EAASj2C,EAAK8jE,mBAAmB7tB,GAAUj2C,EAAK6U,SAAS,IAIjD9V,KAAAw8D,iBAAgBpjD,EAAA2I,eAAc,CAC1C/hB,KAAKm7K,QACLn7K,KAAKk7K,mBACNp4K,QACC1C,EAAAkb,KAAI,SAAA4G,GAAA,IAAK9J,EAAL6J,EAAAC,EAAA,GAAQ,UAAO9J,EAAMnX,EAAKohB,kBAAkBjK,GAAO,EAAE,IAAC,EAC1DhY,EAAAsyB,aAAY,IAKR1yB,KAAAa,UAAmC,GAEnCb,KAAAs7K,iBAAwD,GAExDt7K,KAAAu7K,mBAA0D,MAmH9Dl7K,EAAAmoG,eACK1lG,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnB+P,UAAU,kBAAMi6B,WAAW,kBAAM/rC,EAAKs3F,MAAM,EAAE,IAAK,MACxDn/E,EAAA2I,eAAc,CAAC/hB,KAAKuvD,cAAevvD,KAAKyX,kBACnC3U,QACG1C,EAAAob,QAAO,SAAAwsB,GAAQ,QAAR/lB,EAAA+lB,EAAA,GAAQ,EAAW,MAC1B5nC,EAAAmxB,cAAa,MAEhBxe,UAAU,kBAAM9R,EAAKu6K,yBAAyB,EACvD,EAEA,EAAAn6K,IAAA,WAAAiE,eA1HI,OAAOtF,KAAKa,SAChB,GAEA,CAAAQ,IAAA,kBAAAiE,IACA,WACI,OAAOtF,KAAKs7K,gBAChB,GAEA,CAAAj6K,IAAA,oBAAAiE,IACA,WACI,OAAOtF,KAAKu7K,kBAChB,GAEA,CAAAl6K,IAAA,iBAAAC,MACO,WAA8B,IAAf+R,EAAAzO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GACzBsyC,EAASl3C,KAAKg7K,eAAe7iK,WACnC,OAAK9E,GAAM6jC,IAAQ7jC,EAAK6jC,GAAQ7jC,IACzBrT,KAAKs7K,kBAAmBt7K,KAAKs7K,iBAAiBjoK,IAAY,EACrE,GAEA,CAAAhS,IAAA,mBAAAC,MACO,WAAoC,IACTm6K,EAAAC,EADVC,EAAA/2K,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAIrC,OAHK+2K,GAAU37K,KAAK6V,WAChB8lK,GAAsB,QAAbF,EAAAz7K,KAAK6V,gBAAQ,IAAA4lK,OAAA,EAAbA,EAAepoK,MAAuB,QAArBqoK,EAAI17K,KAAK8V,UAAU,UAAE,IAAA4lK,OAAA,EAAjBA,EAAmBroK,KAE9CrT,KAAKu7K,oBACNv7K,KAAKu7K,mBAAmBI,IACxB,EACV,GAEA,CAAAt6K,IAAA,eAAAiE,IACA,WACI,OAAOtF,KAAK47K,aAChB,GAEA,CAAAv6K,IAAA,UAAAiE,IACA,WACI,OAAOtF,KAAK+6K,SAAS5iK,UACzB,GAEA,CAAA9W,IAAA,SAAAiE,IACA,WACI,OAAOtF,KAAKg7K,eAAe7iK,UAC/B,EAAC+C,IACD,SAAkBO,GACdzb,KAAKuuD,UAAU9yC,EACnB,GAAC,CAAApa,IAAA,YAAAC,OAAAu6K,EAAAr6K,EAAAC,IAAAC,KAEM,SAAAC,EAAgB8Z,GAAY,IAAAqgK,EAAA,OAAAr6K,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1BsZ,EAAI,CAAAxZ,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACT,OAAAtD,KAAKg7K,eAAe74K,KAAKsZ,GAAMxZ,EAAAE,KAAA,EACzBnC,KAAK+7K,eAAetgK,GAAK,OAC/Bzb,KAAKg8K,4BAEY,QAAbF,EAAA97K,KAAK6V,gBAAQ,IAAAimK,OAAA,EAAbA,EAAejoK,aAAc4H,EAAKpI,IAClCrT,KAAK+kE,mBAAmBtpD,GAAMzW,OAE9BhF,KAAK6V,SAAW7V,KAAK+kE,mBAAmBtpD,GAAM,GAC3Czb,KAAKw7K,0BAA0B,wBAAAv5K,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACzC,SAAAuuD,EAAA5xC,GAAA,OAAAk/J,EAAAl3K,MAAA3E,KAAA4E,UAAA,IAED,CAAAvD,IAAA,YAAAiE,IACA,WACI,OAAOtF,KAAKi7K,WAAW9iK,YAAc,EACzC,GAEA,CAAA9W,IAAA,WAAAiE,IACA,WACI,OAAOtF,KAAKk7K,iBAAiB/iK,UACjC,EAAC+C,IACD,SAAoB9C,GAAa,IAAA6jK,EAAAn3K,EAAA9E,KACxBoY,IACLpY,KAAKk7K,iBAAiB/4K,KAAKiW,GAC3BpY,KAAKk8K,iBAAiB9jK,GAAKu9D,KAAK,kBAAM7wE,EAAK02K,yBAAyB,GAChEx7K,KAAKm3C,QAAQnyC,SAAqB,QAAXi3K,EAAAj8K,KAAKk3C,cAAM,IAAA+kI,OAAA,EAAXA,EAAa5oK,MAAO+E,EAAIvE,YAC/C7T,KAAKk3C,OAASl3C,KAAKm3C,QAAQjoB,KACvB,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOvO,EAAK+Q,SAAShC,SAAS,IAGnD,GAAC,CAAAxS,IAAA,WAAAiE,IAED,WACI,OAAO09C,KAAKC,iBAAiBC,kBAAkBC,QACnD,GAAC,CAAA9hD,IAAA,gBAAAiE,IAED,WAAwB,IAAA62K,EACpB,OACIn8K,KAAKuQ,SAASjL,IAAI,kBACL,QADoB62K,EACjCn8K,KAAK6V,gBAAQ,IAAAsmK,OAAA,EAAbA,EAAelwG,WACf,KAER,GAEA,CAAA5qE,IAAA,UAAAC,MACO,SAAQiS,GAAY,IAAA6oK,EAAAC,EACvB,OACiB,QAAbD,EAAAp8K,KAAK6V,gBAAQ,IAAAumK,OAAA,EAAbA,EAAe1O,SAASn6J,MAA2B,QAAtB8oK,EAAIr8K,KAAK47K,qBAAa,IAAAS,OAAA,EAAlBA,EAAoB3O,SAASn6J,GAEtE,GAEA,CAAAlS,IAAA,OAAAC,MACO,SAAK+R,GACR,OAAOrT,KAAK8V,UAAUoZ,KAAK,SAACkD,GAAC,OAAKA,EAAE/e,KAAOA,CAAE,EACjD,GAEA,CAAAhS,IAAA,SAAAiE,IACA,WACI,OAAOtF,KAAKm7K,QAAQhjK,UACxB,GAAC,CAAA9W,IAAA,cAAAC,MAkBM,SAAYwnB,GACf,OAAO9oB,KAAK8hB,OAAOoN,KAAK,SAACugC,GAAG,OAAK3mC,GAASljB,SAAS6pD,EAAIp8C,GAAG,EAC9D,GAEA,CAAAhS,IAAA,oBAAAC,MAIO,WAA+C,IAA7B8W,EAAAxT,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB5E,KAAK6V,SAC1C,OAAO7V,KAAK8hB,OAAOtG,OACf,SAACi0C,GAAG,OAAKA,EAAI57C,WAAa47C,EAAI57C,YAAcuE,GAAK/E,EAAE,EAE3D,GAEA,CAAAhS,IAAA,qBAAAC,MAIO,WAA+C,IAA5B41C,EAAAtyC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB5E,KAAKk3C,OAC5C,OAAOl3C,KAAK8V,UAAU0F,OAAO,SAACpD,GAAG,OAAKA,EAAIvE,YAAcqjC,GAAQ7jC,EAAE,EACtE,GAEA,CAAAhS,IAAA,kBAAAC,MAIO,WAA4C,IACzCg7K,EAAWt8K,KAAK+kE,mBADHngE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB5E,KAAKk3C,QAEzC,OAAOl3C,KAAK8hB,OAAOtG,OACf,SAACi0C,GAAG,OACAA,EAAI57C,WACJyoK,EAASptJ,KAAK,SAAC9W,GAAG,OAAKA,EAAI/E,KAAOo8C,EAAI57C,SAAS,EAAC,EAE5D,GAAC,CAAAxS,IAAA,UAAAC,MAEM,SAAQsS,GACX,GAAIA,EAAKowC,KAAKp+C,SAAS,UAAW,CAC9B,IAAMsxC,EAAS,IAAI0jI,EAAA2B,OAAO3oK,GACpBujC,EAAUn3C,KAAK+6K,SAChB5iK,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO6jC,EAAO7jC,EAAE,GACrC8jC,EAAQle,KAAKie,GACbl3C,KAAK+6K,SAAS54K,KAAKg1C,EACvB,SAAWvjC,EAAKowC,KAAKp+C,SAAS,YAAa,CACvC,IAAMwS,EAAM,IAAIqqH,EAAA0B,SAASvwH,GACrBkC,EAAY9V,KAAKi7K,WAChB9iK,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAO+E,EAAI/E,EAAE,GAClCyC,EAAUmjB,KAAK7gB,GACftC,EAAYA,EAAU0G,KAAK,SAACyW,EAAG3U,GAAC,OAC3B2U,EAAE1f,MAAQ,IAAI+0B,cAAchqB,EAAE/K,MAAQ,GAAG,GAE9CvT,KAAKi7K,WAAW94K,KAAK2T,EACzB,SAAWlC,EAAKowC,KAAKp+C,SAAS,SAAU,CACpC,IAAM6pD,EAAM,IAAIizE,EAAAwB,cAActwH,GAC1BkO,EAAS9hB,KAAKm7K,QAAQhjK,WAAWqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOo8C,EAAIp8C,EAAE,GAClEyO,EAAOmX,KAAKw2B,GACZ3tC,EAASA,EAAOtF,KAAK,SAACyW,EAAG3U,GAAC,OACrB2U,EAAE1f,MAAQ,IAAI+0B,cAAchqB,EAAE/K,MAAQ,GAAG,GAE9CvT,KAAKm7K,QAAQh5K,KAAK2f,EACtB,MACI1f,QAAQuxF,KACJ,wDACA//E,EAAKP,GAGjB,GAAC,CAAAhS,IAAA,aAAAC,MAEM,SAAWsS,GACd,GAAIA,EAAKowC,KAAKp+C,SAAS,UAAW,CAC9B,IAAMuxC,EAAUn3C,KAAK+6K,SAChB5iK,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOO,EAAKP,EAAE,GACnCrT,KAAK+6K,SAAS54K,KAAKg1C,EACvB,SAAWvjC,EAAKowC,KAAKp+C,SAAS,YAAa,CACvC,IAAMkQ,EAAY9V,KAAKi7K,WAElB9iK,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOO,EAAKP,EAAE,GACnCrT,KAAKi7K,WAAW94K,KAAK2T,EACzB,SAAWlC,EAAKowC,KAAKp+C,SAAS,SAAU,CACpC,IAAMkc,EAAS9hB,KAAKm7K,QACfhjK,WACAqD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOO,EAAKP,EAAE,GACnCrT,KAAKm7K,QAAQh5K,KAAK2f,EACtB,MACI1f,QAAQuxF,KACJ,2DACA//E,EAAKP,GAGjB,GAAC,CAAAhS,IAAA,OAAAC,MAAA,eAAAu3F,EAAAr3F,EAEO,eAAA0E,EAAAlG,KAAWg4I,EAAApzI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EAAC,OAAAnD,IAAAC,KAAA,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAChC+D,SAAK68E,aAAa5gF,MAAK,GAAOiD,EAAAjD,KAAA,EACxB+D,EAAK6+F,OAAM5gG,MAAO,SAACmlB,GACrB,QAAAusC,EAAAlhD,aAAY,gDACZq4B,WAAW,kBAAM9mC,EAAKqyF,KAAKy/C,EAAM,EAAEhgH,KAAKC,IAAI,IAAQ,MAAQ+/G,IACtD1uH,CACV,GAAE,OACFpjB,EAAK68E,aAAa5gF,MAAK,GACnBG,OAAOsnF,QACFtnF,OAAOy2F,cAAaz2F,OAAOy2F,YAAc,IAC9Cz2F,OAAOy2F,YAAYyjF,KAAOt2K,GAC7B,wBAAAd,EAAAX,OAAA,EAAAS,EAAA,EAX+BzD,EAW/B,GACJ,gBAAA82F,IAAA,OAAAM,EAAAl0F,MAAA3E,KAAA4E,UAAA,EAdA,IAgBD,CAAAvD,IAAA,OAAAC,MAAA,eAAA0jG,EAAAxjG,EAAAC,IAAAC,KAGQ,SAAAsE,IAAA,IAAAy2K,EAAAplJ,EAAAC,EAAA4f,EAAA4tB,EAAA,OAAArjE,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACEnC,KAAK08K,mBAAkB,OAAAv2K,SAAAhE,KAAA,EACvBnC,KAAK28K,cAAa,UACnB38K,KAAK+6K,SAAS5iK,WAAWnT,OAAM,CAAAmB,EAAAhE,KAAA,SAAAgE,SAAAjC,GAChClE,KAAKi7K,WAAU90K,EAAAhE,KAAA,EAAYnC,KAAK48K,gBAAe,OAAAz2K,EAAAkzB,GAAAlzB,EAAAtC,KAAAsC,EAAAjC,GAA/B/B,KAAIi9C,KAAAj5C,EAAAjC,GAAAiC,EAAAkzB,IAAAlzB,EAAAhE,KAAA,iBAAAk1B,EAAAa,EAECl4B,KAAK+6K,SAAS5iK,YAAUhS,EAAAjE,KAAA,GAAAm1B,EAAA/O,IAAA,YAAAgP,EAAAD,EAAAc,KAAAC,KAAA,CAAAjyB,EAAAhE,KAAA,SAAlC+0C,SAAM5f,EAAAh2B,MAAA6E,EAAAhE,KAAA,GACMnC,KAAK48K,cAAc1lI,EAAO7jC,IAAG,QAAtC,KAAJyxD,EAAI3+D,EAAAtC,MACDmB,OAAM,CAAAmB,EAAAhE,KAAA,SACX,OAAAnC,KAAKi7K,WAAW94K,KAAK2iE,GAAM3+D,EAAA7C,OAAA,oBAAA6C,EAAAhE,KAAA,iBAAAgE,EAAAhE,KAAA,iBAAAgE,EAAAjE,KAAA,GAAAiE,EAAA+4C,GAAA/4C,EAAAhC,MAAA,IAAAkzB,EAAAxT,EAAA1d,EAAA+4C,IAAA,QAAA/4C,SAAAjE,KAAA,GAAAm1B,EAAA8B,IAAAhzB,EAAAizB,OAAA,YAAAjzB,SAAAhE,KAAA,GAKjCnC,KAAK68K,eAAc,QACzB,OAA+B,QAA3BJ,EAACz8K,KAAKi7K,WAAW9iK,kBAAU,IAAAskK,GAA1BA,EAA4Bz3K,YAC7B1E,EAAAqC,KAAI,MAAO,qCACX3C,KAAKwQ,QAAQK,SAAS,CAAC,oBAC1B1K,EAAAhE,KAAA,GACKnC,KAAK88K,aAAY,QACvB98K,KAAKw7K,0BAA0B,yBAAAr1K,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,oBAClC,gBAAA+kG,IAAA,OAAAC,EAAArgG,MAAA3E,KAAA4E,UAAA,EAxBD,IA0BA,CAAAvD,IAAA,mBAAAC,MAAA,eAAAy7K,EAAAv7K,EAAAC,IAAAC,KAGO,SAAAmF,IAAA,IAAAm2K,EAAAC,EAAAx5K,EAAA+iE,EAAAknG,EAAA,OAAAjsK,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAAA4E,SAAA5E,KAAA,KACoB9B,EAAA6vJ,YAAW,CAAElsG,KAAM,QACrClhD,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE3vB,IAAI,IACtBQ,YAAW,OAFF,KAAR+5K,EAAQj2K,EAAAlD,MAGDmB,OAAM,CAAA+B,EAAA5E,KAAA,SACTsB,YAAOpD,EAAA2nG,aACPxhC,EACFw2G,EAAS9tJ,KACL,SAAClc,GAAI,IAAAkqK,EAAA,SAAK78K,EAAA0H,WAAYiL,EAAKK,MAAW,MAAJ5P,GAAY,QAARy5K,EAAJz5K,EAAMq7E,cAAM,IAAAo+F,OAAA,EAAZA,EAAcC,SAAQ,IACvDH,EAAS,GAAEj2K,EAAA5E,KAAA,KAEV9B,EAAAuoC,cAAa49B,EAAInzD,GAAI,YAAYpQ,YAAW,UAAA8D,EAAAsyB,GAAA4jJ,EAAAl2K,EAAAlD,KAAAkD,EAAA7C,GAAA,OAAA6C,EAAAsyB,GAAAtyB,EAAA7C,GAAA,CAAA6C,EAAA5E,KAAA,SAAA4E,EAAA7C,QAAA,IAAA+4K,EAAA,YAAAl2K,EAAA7C,GAAA,CAAA6C,EAAA5E,KAAA,SAAA4E,EAAAm4C,QAAA,EAAAn4C,EAAA5E,KAAA,iBAAA4E,EAAAm4C,GADhB+9H,EAEnCvmK,QAAO,QAFJg3J,EAAQ3mK,EAAAm4C,GAGdl/C,KAAK47K,cAAgB,IAAIjB,EAAAD,aAAY7rJ,IAAA,GAAM23C,GAAG,IAAEknG,cAAY3mK,EAAA5E,KAAA,kBAE5D,EAAA7B,EAAAqC,KAAI,MAAO,+BACX3C,KAAKwQ,QAAQK,SAAS,CAAC,mBAAmB,yBAAA9J,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IAEjD,gBAAA08K,IAAA,OAAAK,EAAAp4K,MAAA3E,KAAA4E,UAAA,EArBD,IAuBA,CAAAvD,IAAA,cAAAC,MAAA,eAAA87K,EAAA57K,EAAAC,IAAAC,KAGO,SAAAi+C,IAAA,IAAA09H,EAAA,OAAA57K,IAAAO,KAAA,SAAAg+C,GAAA,cAAAA,EAAA99C,KAAA89C,EAAA79C,MAAA,OAAA69C,SAAA79C,KAAA,KACgB9B,EAAA6vJ,YAAW,CAC1BlsG,KAAM,SACNnwC,WAA6B,QAAlBwpK,EAAAr9K,KAAK47K,qBAAa,IAAAyB,OAAA,EAAlBA,EAAoBhqK,KAAM,GACrC05B,MAAO,MAENjqC,QACG1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE3vB,KAAK6Y,IAAI,SAACtY,GAAC,OAAK,IAAI43K,EAAA2B,OAAOv5K,EAAE,EAAC,MAC3C5C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,IAE1B3W,YAAW,OAChBjD,KAAK+6K,SAAS54K,KAVJ69C,EAAAn8C,MAUe,wBAAAm8C,EAAAv7C,OAAA,EAAAk7C,EAAA3/C,KAAA,IAC5B,gBAAA28K,IAAA,OAAAS,EAAAz4K,MAAA3E,KAAA4E,UAAA,EAfD,IAeC,CAAAvD,IAAA,iBAAAC,MAAA,eAAAg8K,EAAA97K,EAAAC,IAAAC,KAEM,SAAAg/C,EAAqBxJ,GAAc,IAAAqmI,EAAAp4K,EAAAuoK,EAAA53J,EAAA,OAAArU,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,WAClCnC,KAAKo7K,aAAalkI,EAAO7jC,IAAG,CAAAytC,EAAA3+C,KAAA,eAAA2+C,EAAAx9C,OAAA,iBAAAw9C,SAAA3+C,KAAA,EACmBwB,QAAQslB,IAAI,IAC3D5oB,EAAAuoC,cAAasO,EAAO7jC,GAAIrT,KAAKq7K,SACxBv4K,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,GAAG0T,OAAO,IAC1BzT,aAAS,EACd5C,EAAAuoC,cAAasO,EAAO7jC,GAAI,YACnBvQ,QAAK1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,GAAG0T,OAAO,IAC1BzT,YACLjD,KAAK48K,cAAc1lI,EAAO7jC,MAC5B,OAAAkqK,EAAAt7J,EAAA6+B,EAAAj9C,KAAA,GARKsB,EAAQo4K,EAAA,GAAE7P,EAAQ6P,EAAA,GAAEznK,EAASynK,EAAA,GASpCv9K,KAAKi7K,WAAW94K,QACZ7B,EAAAqvC,QAAM,GAAA5rC,OAAAqe,EAAKpiB,KAAKi7K,WAAW9iK,YAAUiK,EAAKtM,IAAY,OAE1D9V,KAAKo7K,aAAalkI,EAAO7jC,KAAM,EAC9B6jC,EAAew2H,SAAWA,EAC3B1tK,KAAKs7K,iBAAiBpkI,EAAO7jC,IAAMlO,EAAS,yBAAA27C,EAAAr8C,OAAA,EAAAi8C,EAAA1gD,KAAA,IAC/C,gBAAA+7K,EAAAziJ,GAAA,OAAAgkJ,EAAA34K,MAAA3E,KAAA4E,UAAA,EAnBA,IAqBD,CAAAvD,IAAA,gBAAAC,MAAA,eAAAk8K,EAAAh8K,EAGO,eAAAi8K,EACH5pK,EAAAjP,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsC,QAAtC64K,EAAoBz9K,KAAK47K,qBAAa,IAAA6B,OAAA,EAAlBA,EAAoBpqK,GAAE,OAAA5R,IAAAC,KAAA,SAAA+8E,IAAA,OAAAh9E,IAAAO,KAAA,SAAA6+C,GAAA,cAAAA,EAAA3+C,KAAA2+C,EAAA1+C,MAAA,OAAA0+C,SAAA1+C,KAAA,KAEd9B,EAAA6vJ,YAAW,CACnClsG,KAAM,WACNnwC,YACAk5B,MAAO,MAENjqC,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE3vB,KAAK6Y,IAAI,SAACtY,GAAC,OAAK,IAAIy/H,EAAA0B,SAASnhI,EAAE,EAAC,IAClDC,YAAW,OANVyU,OAAampC,EAAAv9C,OAAA,SAAAu9C,EAAAh9C,MAOC,wBAAAg9C,EAAAp8C,OAAA,EAAAg6E,EAAA,EATsBh9E,EAStB,GACvB,gBAAAm7K,IAAA,OAAAY,EAAA74K,MAAA3E,KAAA4E,UAAA,EAdD,IAcC,CAAAvD,IAAA,mBAAAC,MAAA,eAAAo8K,EAAAl8K,EAAAC,IAAAC,KAEM,SAAAm9E,EAAuBzmE,GAAa,IAAAulK,EAAAx4K,EAAAuoK,EAAA7zH,EAAA+jI,EAAA,OAAAn8K,IAAAO,KAAA,SAAAg9E,GAAA,cAAAA,EAAA98E,KAAA88E,EAAA78E,MAAA,UAClCiW,IAAOpY,KAAKo7K,aAAahjK,EAAI/E,IAAG,CAAA2rE,EAAA78E,KAAA,eAAA68E,EAAA17E,OAAA,iBAAA07E,SAAA78E,KAAA,EAE3BwB,QAAQslB,IAAI,IACd5oB,EAAAuoC,cAAaxwB,EAAI/E,GAAIrT,KAAKq7K,SACrBv4K,QACG1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,GAAG0T,OAAO,MACrBtW,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,IAE1B3W,aAAS,EACd5C,EAAAuoC,cAAaxwB,EAAI/E,GAAI,YAChBvQ,QACG1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,GAAG0T,OAAO,MACrBtW,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,IAE1B3W,aAAS,EACd5C,EAAAuoC,cAAaxwB,EAAI/E,GAAI,iBAChBvQ,QACG1C,EAAAkb,KAAI,SAACtY,GAAC,OAAKA,GAAG0T,OAAO,MACrBtW,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,IAE1B3W,aAAS,EACd5C,EAAAw9K,eAAc,CAAEhqK,UAAWuE,EAAI/E,KAC1BvQ,QACG1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,CAAEnX,KAAM,IAAY,MACxCrC,EAAAkb,KAAI,SAACtY,GACD,IACI,OAAO63K,EAAK91E,KACR/hG,GAAGP,KAAKysB,KACJ,SAAClsB,GAAC,OACEA,EAAE86K,mBACFz9K,EAAA09K,gBAAgBC,IAAI,IACvB,CAAEC,gBAAiB,IAEhC,OACI,MAAO,EACX,CACJ,IAEHh7K,cACP,OAAA06K,EAAA17J,EAAA+8D,EAAAn7E,KAAA,GAtCCsB,EAAQw4K,EAAA,GAAEjQ,EAAQiQ,EAAA,GAAE9jI,EAAa8jI,EAAA,GAAEC,EAAeD,EAAA,GAuCzDv7K,QAAQO,IACJ,qBACAyV,EAAI3C,cAAgB2C,EAAI7E,KACxB6E,EAAI/E,GACJlO,GAEJnF,KAAKu7K,mBAAmBnjK,EAAI/E,IAAGwb,IAAA,GACvB+uJ,GAAmB,IACnBz4K,GAAY,IAEnBiT,EAAYs1J,SAAWA,EACvBt1J,EAAYyhC,cAAgBA,EAC7B75C,KAAKo7K,aAAahjK,EAAI/E,KAAM,EAC5BrT,KAAKw7K,0BAA0B,yBAAAx8F,EAAAv6E,OAAA,EAAAo6E,EAAA7+E,KAAA,IAClC,gBAAAk8K,EAAApiJ,GAAA,OAAA4jJ,EAAA/4K,MAAA3E,KAAA4E,UAAA,EAzDA,IA2DD,CAAAvD,IAAA,aAAAC,MAAA,eAAA48K,EAAA18K,EAAAC,IAAAC,KAGO,SAAA89E,IAAA,IAAA3a,EAAA/iD,EAAA,OAAArgB,IAAAO,KAAA,SAAA09E,GAAA,cAAAA,EAAAx9E,KAAAw9E,EAAAv9E,MAAA,OAAAu9E,SAAAv9E,KAAA,KACsB9B,EAAA6vJ,YAAW,CAChClsG,KAAM,QACNjX,MAAO,OAENjqC,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE3vB,IAAI,IACtBQ,YAAW,OAED,OAPT4hE,EAAU6a,EAAA77E,OAOXghE,EAAY7/D,QACbhF,KAAKwQ,QAAQK,SAAS,CAAC,mBAG3BiR,GADIA,EAAS+iD,EAAWvpD,IAAI,SAACm0C,GAAG,OAAK,IAAIizE,EAAAwB,cAAcz0E,EAAI,IAC3CjzC,KAAK,SAACyW,EAAG3U,GAAC,OACrB2U,EAAE1f,MAAQ,IAAI+0B,cAAchqB,EAAE/K,MAAQ,GAAG,GAE9CvT,KAAKm7K,QAAQh5K,KAAK2f,GAAQ,wBAAA49D,EAAAj7E,OAAA,EAAA+6E,EAAAx/E,KAAA,IAC7B,gBAAA88K,IAAA,OAAAoB,EAAAv5K,MAAA3E,KAAA4E,UAAA,EAnBD,IAmBC,CAAAvD,IAAA,yBAAAiE,IAED,WACI,OAAOtF,KAAK8V,UACPwF,IAAI,SAAC+mF,GAAC,OAAAjgF,EAASigF,EAAE+2E,oBAAmB,GACpC/5I,OAAO,SAACn9B,EAAMi8K,GAAI,OAAKj8K,EAAK6B,OAAOo6K,EAAK,EAAE,IAC1C3hK,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE1f,KAAK+0B,cAAchqB,EAAE/K,KAAK,EACpD,GAAC,CAAAlS,IAAA,eAAAC,MAAA,eAAA88K,EAAA58K,EAAAC,IAAAC,KAEM,SAAAm+E,IAAA,IAAAw+F,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAh9K,IAAAO,KAAA,SAAA+9E,GAAA,cAAAA,EAAA79E,KAAA69E,EAAA59E,MAAA,UACEnC,KAAK47K,cAAa,CAAA77F,EAAA59E,KAAA,eAAA49E,EAAAz8E,OAAA,iBAAAy8E,SAAA59E,KAAA,KAEb9B,EAAAuoC,cAA+B,QAAnB01I,EAACt+K,KAAK47K,qBAAa,IAAA0C,OAAA,EAAlBA,EAAoBjrK,GAAIrT,KAAKq7K,SAASp4K,YAAW,UAAA88E,EAAA1mD,GAAAglJ,EAAAt+F,EAAAl8E,KAAAk8E,EAAA77E,GAAA,OAAA67E,EAAA1mD,GAAA0mD,EAAA77E,GAAA,CAAA67E,EAAA59E,KAAA,QAAA49E,EAAA77E,QAAA,IAAAm6K,EAAA,WAAAt+F,EAAA77E,GAAA,CAAA67E,EAAA59E,KAAA,SAAA49E,EAAA7gC,QAAA,EAAA6gC,EAAA59E,KAAA,iBAAA49E,EAAA7gC,GADnDm/H,EAElB3nK,QAAO,QAFJ+nK,SAAY1+F,EAAA7gC,GAAA6gC,EAAA59E,KAAA,MAIR9B,EAAAuoC,cAA+B,QAAnB41I,EAACx+K,KAAK47K,qBAAa,IAAA4C,OAAA,EAAlBA,EAAoBnrK,GAAI,YAAYpQ,YAAW,WAAA88E,EAAAqJ,GAAAm1F,EAAAx+F,EAAAl8E,KAAAk8E,EAAA5gC,GAAA,OAAA4gC,EAAAqJ,GAAArJ,EAAA5gC,GAAA,CAAA4gC,EAAA59E,KAAA,SAAA49E,EAAA5gC,QAAA,IAAAo/H,EAAA,YAAAx+F,EAAA5gC,GAAA,CAAA4gC,EAAA59E,KAAA,SAAA49E,EAAAsJ,QAAA,EAAAtJ,EAAA59E,KAAA,iBAAA49E,EAAAsJ,GAD9Ck1F,EAErB7nK,QAAO,QAFJgoK,OAGN1+K,KAAKa,UAAY,CAHIk/E,EAAAsJ,GAGco1F,GACnCz+K,KAAKuQ,SAAS4+J,UAAS/sJ,EAAOpiB,KAAKa,WAAWk/E,EAAA59E,KAAA,GACxCnC,KAAK2+K,4BAA2B,QACtC3+K,KAAKw7K,0BAA0B,yBAAAz7F,EAAAt7E,OAAA,EAAAo7E,EAAA7/E,KAAA,IAClC,gBAAA68K,IAAA,OAAAuB,EAAAz5K,MAAA3E,KAAA4E,UAAA,EAdA,IAgBD,CAAAvD,IAAA,eAAAC,MACO,SAAa+R,GAAU,IAAAurK,EACpBC,EAE2B,QAFlBD,EAAG5+K,KAAKi7K,WAClB9iK,WACA+W,KAAK,SAAC9W,GAAG,OAAKA,EAAI/E,KAAOA,CAAE,UAAC,IAAAurK,OAAA,EAFfA,EAEiB/qK,UAC/BgrK,GAAaA,IAAc7+K,KAAK47K,cAAcvoK,IAC9CrP,eAAeC,QAAO,iBAAmB46K,GAE7C76K,eAAeC,QAAO,mBAAqBoP,EAC/C,GAAC,CAAAhS,IAAA,4BAAAC,MAEO,WAAyB,IAAAwF,EAAA9G,KAC7B,OAAO,IAAI2D,QAAc,SAACC,GAAW,IAAAk7K,EAC3BzrK,EAAKrP,eAAe4D,QAAO,oBACjC,GAAIyL,GAAMvM,EAAKgP,UAAUoZ,KAAK,SAAC9W,GAAG,OAAKA,EAAI/E,KAAOA,CAAE,GAChDvM,SAAK+O,SAAW/O,EAAKgP,UAAUoZ,KAAK,SAAC9W,GAAG,OAAKA,EAAI/E,KAAOA,CAAE,GACnDzP,IAEYkD,EAAKyJ,SAASjL,IAAI,wBACrB,gBAAiB2nF,UACjCA,UAAUy1B,YAAYI,mBAClB,SAACn9D,GAAY,IAAAo5H,EAGuBtnJ,EAFhCunJ,EAAgCr5H,EAASq9D,OAAjC1vD,EAAQ0rH,EAAR1rH,SAAUC,EAASyrH,EAATzrH,UACd0rH,EAAc,KAAKznJ,EAAAU,EACLpxB,EAAKgP,WAAS,IAAhC,IAAA0hB,EAAAlP,MAAAmP,EAAAD,EAAAW,KAAAC,MAAkC,KAAvBhgB,EAAGqf,EAAAn2B,MACV,GAAK8W,EAAI1S,UAA6B,QAAjB0S,EAAI1S,SAEzB,GAAKu5K,EACA,CACD,IAAA1sD,GACI0sD,EAAYv5K,UAAY,OAC1BiB,MAAM,KAAI6rH,EAAAvwG,EAAAswG,EAAA,GAFL2sD,EAAK1sD,EAAA,GAAE2sD,EAAM3sD,EAAA,GAGpB4sD,GACIhnK,EAAI1S,UAAY,OAClBiB,MAAM,KAAI04K,EAAAp9J,EAAAm9J,EAAA,GAFEE,EAAMD,EAAA,GAGLrnJ,KAAKiuB,KAChBjuB,KAAKunJ,IAAIjsH,GAJD+rH,EAAA,GAIoB,GACxBrnJ,KAAKunJ,IAAIhsH,GAAa+rH,EAAQ,IAEvBtnJ,KAAKiuB,KAChBjuB,KAAKunJ,IAAIjsH,GAAY4rH,EAAO,GACxBlnJ,KAAKunJ,IAAIhsH,GAAa4rH,EAAQ,MAEjBF,EAAc7mK,EACvC,MAjBkB6mK,EAAc7mK,CAkBpC,CAAC,OAAAkR,IAAAkO,EAAA3T,EAAAyF,GAAA,SAAAkO,EAAA2B,GAAA,CACG8lJ,IAAan4K,EAAK+O,SAAWopK,GACf,QAAdF,EAACj4K,EAAK+O,gBAAQ,IAAAkpK,GAAbA,EAAe1rK,IAAIvM,EAAK04K,sBAC7B57K,GACJ,EACA,WAAK,IAAA67K,EACiB,QAAdA,EAAC34K,EAAK+O,gBAAQ,IAAA4pK,GAAbA,EAAepsK,IAAIvM,EAAK04K,sBAC7B57K,GACJ,GAEiB,QAAdk7K,EAACh4K,EAAK+O,gBAAQ,IAAAipK,GAAbA,EAAezrK,KACvBvM,EAAK04K,sBACL57K,IAER,EACJ,GAAC,CAAAvC,IAAA,sBAAAC,MAAA,eAAAo+K,EAAAl+K,EAAAC,IAAAC,KAEO,SAAAw+E,IAAA,IAAA2+F,EAAAlD,EAAA,OAAAl6K,IAAAO,KAAA,SAAAm+E,GAAA,cAAAA,EAAAj+E,KAAAi+E,EAAAh+E,MAAA,UACCnC,KAAK8V,UAAU9Q,OAAM,CAAAm7E,EAAAh+E,KAAA,eAAAg+E,EAAA78E,OAAA,iBACpBu7K,SAAY76K,eAAe4D,QAAO,kBAAkBu4E,EAAAh+E,KAAA,EACnD08K,EACD7+K,KAAKuuD,UACDvuD,KAAK+6K,SAAS5iK,WAAW+W,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOwrK,CAAS,IAE3D7+K,KAAK2/K,yBAAwB,OACH,GAAhC3/K,KAAKg8K,4BACDh8K,KAAK6V,SAAQ,CAAAsqE,EAAAh+E,KAAA,eAAAg+E,EAAA78E,OAAA,kBACXq4K,EAAS37K,KAAKuQ,SAASjL,IAAI,2BAE7BtF,KAAK6V,SAAW7V,KAAK8V,UAAUoZ,KAAK,SAAA2D,GAAK,OAAAA,EAAFxf,KAAgBsoK,CAAM,IAE5D37K,KAAK6V,WAAU7V,KAAK6V,SAAW7V,KAAK8V,UAAU,IAAG,yBAAAqqE,EAAA17E,OAAA,EAAAy7E,EAAAlgF,KAAA,IACzD,gBAAAw/K,IAAA,OAAAE,EAAA/6K,MAAA3E,KAAA4E,UAAA,EAjBA,IAiBA,CAAAvD,IAAA,yBAAAC,MAAA,eAAAs+K,EAAAp+K,EAAAC,IAAAC,KAEO,SAAA4+E,IAAA,IAAAhxB,EAAAvM,EAAA7jB,EAAAP,EAAAuY,EAAA2oI,EAAAjiJ,EAAAD,EAAAmiJ,EAAA,OAAAr+K,IAAAO,KAAA,SAAAu+E,GAAA,cAAAA,EAAAr+E,KAAAq+E,EAAAp+E,MAAA,OAEE4gD,EAAW/iD,KAAK+iD,SAAQ7jB,EAAAhH,EADxBo3B,EAActvD,KAAKm3C,SAEOopC,EAAAr+E,KAAA,EAAAg9B,EAAA5W,IAAA,WAAAqW,EAAAO,EAAA/G,KAAAC,KAAA,CAAAmoD,EAAAp+E,KAAA,SAAf,IAAN+0C,EAAMvY,EAAAr9B,OACFyhD,WAAaA,EAAQ,CAAAw9B,EAAAp+E,KAAA,SAAAo+E,SAAAp+E,KAAA,GACfnC,KAAKuuD,UAAUrX,GAAO,eAAAqpC,EAAAj9E,OAAA,SAAAi9E,EAAA18E,MAAA,QAAA08E,EAAAp+E,KAAA,gBAAAo+E,EAAAp+E,KAAA,iBAAAo+E,EAAAr+E,KAAA,GAAAq+E,EAAAr8E,GAAAq8E,EAAAp8E,MAAA,GAAA+6B,EAAArb,EAAA08D,EAAAr8E,IAAA,QAAAq8E,SAAAr+E,KAAA,GAAAg9B,EAAA/F,IAAAonD,EAAAnnD,OAAA,YAGrCymJ,EAAW98H,EAASp8C,MAAM,KAAK,GAAEi3B,EAAA1F,EAClBo3B,GAAWixB,EAAAr+E,KAAA,GAAA07B,EAAAtV,IAAA,YAAAqV,EAAAC,EAAAzF,KAAAC,KAAA,CAAAmoD,EAAAp+E,KAAA,SAAf,KAAN+0C,EAAMvZ,EAAAr8B,OACFyhD,SAASu0C,WAAWuoF,GAAS,CAAAt/F,EAAAp+E,KAAA,SAAAo+E,SAAAp+E,KAAA,GACvBnC,KAAKuuD,UAAUrX,GAAO,eAAAqpC,EAAAj9E,OAAA,SAAAi9E,EAAA18E,MAAA,QAAA08E,EAAAp+E,KAAA,iBAAAo+E,EAAAp+E,KAAA,iBAAAo+E,EAAAr+E,KAAA,GAAAq+E,EAAAlnD,GAAAknD,EAAAp8E,MAAA,IAAAy5B,EAAA/Z,EAAA08D,EAAAlnD,IAAA,QAAAknD,SAAAr+E,KAAA,GAAA07B,EAAAzE,IAAAonD,EAAAnnD,OAAA,6BAAAmnD,EAAA97E,OAAA,EAAA67E,EAAAtgF,KAAA,iCAG9C,gBAAA2/K,IAAA,OAAAC,EAAAj7K,MAAA3E,KAAA4E,UAAA,EAhBA,IAgBA,CAAAvD,IAAA,2BAAAC,MAEO,WAAwB,IAKFy+K,EALErgI,EAAA1/C,KACtBs8K,EAAWt8K,KAAK8V,UAAU0F,OAC5B,SAACpD,GAAG,IAAA4nK,EAAA,OAAMtgI,EAAKxI,QAAU9+B,EAAIvE,aAAyB,QAAhBmsK,EAAKtgI,EAAKxI,cAAM,IAAA8oI,OAAA,EAAXA,EAAa3sK,GAAE,GAExD0vC,EAAW/iD,KAAK+iD,SAASk9H,EAAA/nJ,EACbokJ,GAAQ,IAA1B,IAAA2D,EAAA33J,MAAAy3J,EAAAE,EAAA9nJ,KAAAC,MAA4B,KAAjBhgB,EAAG2nK,EAAAz+K,MACV,GAAI8W,EAAI2qC,WAAaA,EAEjB,YADA/iD,KAAK6V,SAAWuC,EAGxB,CAAC,OAAAkR,GAAA22J,EAAAp8J,EAAAyF,EAAA,SAAA22J,EAAA9mJ,GAAA,CACD,IAC0B+mJ,EADpBL,EAAW98H,EAASp8C,MAAM,KAAK,GAAGw5K,EAAAjoJ,EACtBokJ,GAAQ,IAA1B,IAAA6D,EAAA73J,MAAA43J,EAAAC,EAAAhoJ,KAAAC,MAA4B,KAAjBhgB,EAAG8nK,EAAA5+K,MACV,GAAI8W,EAAI2qC,SAASu0C,WAAWuoF,GAExB,YADA7/K,KAAK6V,SAAWuC,EAGxB,CAAC,OAAAkR,GAAA62J,EAAAt8J,EAAAyF,EAAA,SAAA62J,EAAAhnJ,GAAA,CACL,GAAC,CAAA93B,IAAA,0BAAAC,MAEO,WAAuB,IAAAg9E,EAAAt+E,KAC3BgtC,WACI,eAAAozI,EAAAC,EAAA,OACK/hG,EAAK/tE,SAAS4+J,UAAS,CACpB7wF,EAAKgiG,iBAA8B,QAAdF,EAAC9hG,EAAKzoE,gBAAQ,IAAAuqK,OAAA,EAAbA,EAAe/sK,IACrCirE,EAAKiiG,eAA0B,QAAZF,EAAC/hG,EAAKpnC,cAAM,IAAAmpI,OAAA,EAAXA,EAAahtK,KAAGtP,OAAAqe,EACjCk8D,EAAKz9E,WACX,EACL,IAER,KAjgBC,IAAAg7K,CAigBA,CApmB2B,GAomB3Bf,SApmBQryK,0CAAmBL,EAAA4U,mBAAA1U,EAAAC,iBAAAH,EAAA4U,mBAAAxU,EAAA2E,QAAA,qDAAnB1E,EAAmBwU,QAAnBxU,EAAmByU,UAAAC,WAFhB,SAEH1U,CAAmB,8HCrChC,IAAApI,EAAAxC,EAAA,OACA2iL,EAAA3iL,EAAA,OAEI4iL,EAAY,EAEhB9gL,2BAAA,SAAgB+gL,IACZ,MAAO,CACHrtK,GAAE,YAAAtP,OAAc08K,KAChBltK,KAAI,gBAAAxP,OAAkB08K,GACtB3qK,UAAW0oB,MAAM,GACZC,KAAK,GACLnjB,IAAI,SAAC8W,GAAC,SAAKouJ,EAAArG,uBAAsB,GACtCh1K,SAAU,CACNu+J,KAAM,CACF0W,OAAQ,CACJ5zG,KAAK,KAKzB,EAMA7mE,qBAAA,SAAgBknJ,EACZvlJ,EACAq/K,GAEA,OAAKr/K,EACEA,aAAiBynB,UAClB1oB,EAAA2xB,WAAU1wB,EAAMyzB,UAAWzzB,EAAMszD,QAAU+rH,IAAc,EACzDtgL,EAAA2xB,WAAU1wB,EAAOq/K,GAHJ,IAIvB,+HClCAhhL,SAAmBG,EAgBf,SAAAy8K,EAAY51I,GAAsB5mC,EAAAC,KAAAu8K,GAC9Bv8K,KAAKqT,GAAKszB,EAAMtzB,IAAM,GACtBrT,KAAKuT,KAAOozB,EAAMpzB,MAAQ,GAC1BvT,KAAKyV,aAAekxB,EAAMlxB,cAAgB,GAC1CzV,KAAK+iD,SAAWpc,EAAMoc,UAAY,GAClC/iD,KAAKoqB,OAASuc,EAAMvc,QAAU,GAC9BpqB,KAAK0tK,SAAW/mI,EAAM+mI,UAAY,GAClC1tK,KAAKmvB,QAAUwX,EAAMxX,SAAW,EACpC,qFCxBJ8K,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,sNCFA,IAAAW,EAAAzC,EAAA,OACA+L,EAAA/L,EAAA,MACA0L,EAAA1L,EAAA,OAOAopB,EAAAppB,EAAA,OACA8yB,EAAA9yB,EAAA,uHAiCoBuK,EAAAkB,oBAAA,mDAEIlB,EAAA6I,qBAAA,sBAAAK,EAAAsvK,UAAA,OAAAx4K,EAAA05C,mDAyBI15C,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAA+qJ,EAAA,IAEA5zJ,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAA08I,EAAA,QAAAA,EAAA,mCAaJ5zJ,EAAAiF,yBAAA,mBAGKjF,EAAAmF,iBAAA,GAAUnF,EAAAkF,iDADXlF,EAAA6I,qBAAA,QAAA4vK,GACCz4K,EAAAoF,sBAAApF,EAAA+L,4BAAA0sK,IAtEjC,IAAMC,EAAa,CAAEC,YAAa,mBAAoBC,WAAY,GAAIC,IAAK,IACrEC,EAAY,IAAI5gL,EAAAmyG,SAAS,QAAS,IAExC9yG,0BAyGI,eAAAwhL,EADSC,EACT,SAAAC,GAzGJ,SAAAD,IAAA,IAAAngL,EAAAlB,SAAAC,KAAAohL,2BA4GW1qK,QAAU,IAAInN,EAAAqgC,UAAU,CAC3Bm3I,YAAa,IAAIx3K,EAAAsgC,YAAYrL,MAAM,IAAIC,KAAK,KAAK5pB,QACjDmsK,WAAY,IAAIz3K,EAAAsgC,YAAY,IAC5By3I,UAAW,IAAI/3K,EAAAsgC,YAAY,IAC3B03I,SAAU,IAAIh4K,EAAAsgC,YAAY,IAC1Bo3I,IAAK,IAAI13K,EAAAsgC,YAAY,GAAI,CACrBtgC,EAAAugC,WAAW03I,UAAU,GACrBj4K,EAAAugC,WAAW23I,UAAU,OAGtBxgL,EAAA27B,UAAW,EAEF37B,EAAAgjF,OAASzlD,MAAM,IAC1BC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GAAG,MAAK,CACbixI,EAAUh4J,aAAUyH,EAAA+wJ,UAAS5nK,KAAKuX,MAAO4e,GAAM,MAC/CixI,EAAUh4J,aAAUyH,EAAA+wJ,UAAS5nK,KAAKuX,MAAO4e,GAAM,OAClD,GACWhvC,EAAA0gL,MAAQnjJ,MAAM,IACzBC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GAAG,OACRixI,EAAUh4J,aAAUyH,EAAAmiH,UAASh5H,KAAKuX,MAAO4e,GAAM,OAAO,GAE9ChvC,EAAA2gL,OAASpjJ,MAAM,IAAIC,KAAK,GAChCx9B,EAAA4gL,OAAS,EA+GD5gL,EAAA47B,iBAAmB,SAACC,GAAmC,OAClE77B,EAAK87B,UAAYD,CAAE,EACR77B,EAAA+7B,kBAAoB,SAACF,GAAmC,OACnE77B,EAAKg8B,SAAWH,CAAE,EACP77B,EAAAi8B,iBAAmB,SAAC5U,GAAU,OAAMrnB,EAAK27B,SAAWtU,CAAC,EAAErnB,EAC1EG,SAAAggL,EAAAC,GAAAvhL,EAAAshL,EAAA,EAAA//K,IAAA,UAAAiE,IA5GG,WAAkB,IAAAw8K,EAEd,QAD6B,QAAlBA,EAAA9hL,KAAK0W,QAAQpV,aAAK,IAAAwgL,OAAA,EAAlBA,EAAoBf,cAAe,IACpCzpF,WAAW,IACzB,GAAC,CAAAj2F,IAAA,YAAAiE,IAED,WAAoB,IAAAy8K,EACV1O,GAAuB,QAAlB0O,EAAA/hL,KAAK0W,QAAQpV,aAAK,IAAAygL,OAAA,EAAlBA,EAAoBhB,cAAe,GAC9C,OAAI1N,EAAG/7E,WAAW,KAAa,OAC3B+7E,EAAG/7E,WAAW,KAAa,OAC3B+7E,EAAG/7E,WAAW,KAAa,aACxB,EACX,GAAC,CAAAj2F,IAAA,eAAAiE,IAED,WAAuB,IAAA08K,EACf3O,GAAuB,QAAlB2O,EAAAhiL,KAAK0W,QAAQpV,aAAK,IAAA0gL,OAAA,EAAlBA,EAAoBjB,cAAe,GAC5C,OAAI/gL,KAAKiiL,eACL5O,EACIA,EAAGjlF,UAAU,EAAGpuF,KAAK6hL,QACrB,SACAxO,EAAGjlF,UAAUpuF,KAAK6hL,OAAS,IAC5B7hL,KAAKkiL,QAAO,GAAAn+K,OACVsvK,EAAGjlF,UAAU,EAAG,GAAE,KAAArqF,OAAIsvK,EAAGjlF,UAAU,EAAG,IAAG,KAAArqF,OAAIsvK,EAAGjlF,UAAU,KAAG,GAAArqF,OAC7DsvK,EAAGjlF,UAAU,EAAG,GAAE,KAAArqF,OAAIsvK,EAAGjlF,UAAU,EAAG,GAAE,KAAArqF,OAAIsvK,EAAGjlF,UAC9C,EACA,IACH,KAAArqF,OAAIsvK,EAAGjlF,UAAU,IAC5B,GAAC,CAAA/sF,IAAA,eAAAiE,IAED,WACI,OACIkgD,SAAS28H,gBAAkBniL,KAAKktG,UAAUjF,eAC1CziD,SAAS28H,gBACLniL,KAAKktG,UAAUjF,cAAciwC,aAEzC,GAAC,CAAA72I,IAAA,WAAAC,MAEM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,UACA7S,KAAK0W,QAAQ5D,aAAaC,UAAU,SAAC2P,GAAC,OAClC5d,EAAKtB,QAAQ,SAAU,kBACnBsB,EAAK46B,SAAS56B,EAAK4R,QAAQsY,cAAc,EAC5C,GAGb,GAAC,CAAA3tB,IAAA,aAAAC,MAEM,WACHtB,KAAKktG,UAAUjF,cAAczhF,QAC7BxmB,KAAK6hL,OAAS7hL,KAAKktG,UAAUjF,cAAcg4B,gBAAkB,CACjE,GAAC,CAAA5+H,IAAA,UAAAC,MAEM,SAAQwsB,GACX,GAAKA,GAAU9tB,KAAKiiL,aACpB,KAAMhyI,EAAMjwC,KAAK6hL,OACjB,KAAI5xI,EAAM,GAAKA,EAAM,IACrB,KAAI8wI,EAAc/gL,KAAK0W,QAAQpV,MAAMy/K,YACrC,IACKjzJ,EAAMgmD,KAAKwjB,WAAW,UACnBxpE,EAAMgmD,KAAKwjB,WAAW,YAC1BrnD,GAAOjwC,KAAKkiL,QAAU,GAAK,IAE3BnB,EACIA,EAAY3yF,UAAU,EAAGn+C,GACzBniB,EAAMzsB,IACN0/K,EAAY3yF,UAAUn+C,EAAM,GAChCjwC,KAAK0W,QAAQjF,WAAW,CAAEsvK,gBAC1B/gL,KAAKoiL,aAAanyI,EAAK,QAAC,GACF,cAAfniB,EAAMgmD,MAAwB7jC,EAAM,EAAG,CAC9C,IAAI8wI,EAAc/gL,KAAK0W,QAAQpV,MAAMy/K,YACrCA,EACIA,EAAY3yF,UAAU,EAAGn+C,GACzB,IACA8wI,EAAY3yF,UAAUn+C,EAAM,GAChCjwC,KAAK0W,QAAQjF,WAAW,CAAEsvK,gBAC1B/gL,KAAKoiL,aAAanyI,GAAK,EAC3B,KAA0B,cAAfniB,EAAMgmD,KACb9zE,KAAKoiL,aAAanyI,GAAK,GACD,eAAfniB,EAAMgmD,MAA8C,MAArBitG,EAAY9wI,IAClDjwC,KAAKoiL,aAAanyI,EAAK,EAAC,EAEhC,GAAC,CAAA5uC,IAAA,eAAAC,MAEO,SAAa2uC,EAAag/H,GAC9BjvK,KAAK6hL,OAAS7pJ,KAAKC,IAAI,GAAID,KAAK8F,IAAI,EAAGmS,EAAMg/H,GACjD,GAEA,CAAA5tK,IAAA,WAAAC,MAIO,SAASg8B,GACRt9B,KAAK+8B,WAAW/8B,KAAK+8B,UAAUO,EACvC,GAEA,CAAAj8B,IAAA,aAAAC,MAIO,SAAWA,GACdtB,KAAK0W,QAAQjF,WAAWnQ,GAASw/K,EACrC,IAAC,CAxID,CAAQ75J,EAAA9e,cAAYg5K,SADXC,qGAAuB9hJ,GAAvB8hJ,EAAuB,qDAAvBA,EAAuBt4K,UAAA,uBAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,8JATrB,CACP,CACImD,QAAShD,EAAA22B,kBAETC,eAAav2B,EAAAw2B,YAAW,kBAAMghJ,CAAuB,GACrD/gJ,OAAO,KAEdj4B,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,+BAjGyCoiB,UAAAC,MAAAC,EAAA,4FAuBDF,UAAAG,MAAAD,EAAA,6FAQTF,UAAAI,MAAAF,EAAA,2GAKaF,UAAAM,MAAAJ,EAAA,6FAaTF,UAAAO,MAAAL,EAAA,yGAgBAF,UAAAyoB,MAAAvoB,EAAA,wGAYAF,UAAAugC,MAAArgC,EAAA,6jCA/EhCtnB,EAAAiF,yBAAA,YAA4BjF,EAAA4I,qBAAA,iBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAgBnI,EAAAg5K,QAAAlxK,GAAe,KAAA/I,EAAAwlH,2BAEnDxlH,EADJiF,yBAAA,UACIjF,CADuB,cACvBA,EAAAulB,iBAAA,KAAyCvlB,EAAAkF,yBACzClF,EAAAiF,yBAAA,YAGIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAAw1H,aAAY,GAErBz2H,EAAAiF,yBAAA,YAAoBjF,EAAAmF,iBAAA,GAAkBnF,EAAAkF,yBACtClF,EAAAiF,yBAAA,gBAKIjF,EAAA4I,qBAAA,qBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,uBAAY,EAAK,GALrBpJ,EAAAkF,yBAQAlF,EAAA4J,qBAAA,EAAAswK,EAAA,cAMRl6K,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD8B,eAC9BA,EAAAulB,iBAAA,MAAyCvlB,EAAAkF,yBACzClF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAMAlB,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAERvlB,EAFmDkF,wBAEnDlF,KAGQA,EAFRiF,yBAAA,YAEQjF,CAFiC,YAEjCA,CADoC,eACpCA,EAAAulB,iBAAA,MAAyCvlB,EAAAkF,yBAErClF,EADJiF,yBAAA,uBACIjF,CADiC,oBAK7BA,EAAA4J,qBAAA,GAAAuwK,EAAA,qBAMJn6K,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAERvlB,EAFgDkF,wBAEhDlF,KAEIA,EADJiF,yBAAA,YACIjF,CADoC,eACZA,EAAAmF,iBAAA,kBAAWnF,EAAAkF,yBAE/BlF,EADJiF,yBAAA,uBACIjF,CADiC,oBAK7BA,EAAA4J,qBAAA,GAAAwwK,EAAA,qBAKJp6K,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAERvlB,EAF+CkF,wBAE/ClF,KAEIA,EADJiF,yBAAA,WACIjF,CADuB,eACNA,EAAAmF,iBAAA,UAAGnF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,wBACIjF,EAAAkB,oBAAA,eAMAlB,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAIhBvlB,EAJqDkF,wBAIrDlF,eAnFMA,EAAA6I,qBAAA,YAAA5H,EAAAqN,SAQ0BtO,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAAo5K,cAKhBr6K,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAA5H,EAAAqN,QAAApV,MAAAy/K,YAAA,KAAA13K,EAAAqN,QAAApV,MAAAy/K,YAAA19H,QAKCj7C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAu3K,WA2BwBx4K,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,UAAA5H,EAAA46E,QAiBA77E,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAs4K,wYAuCpCP,CACT,yNChIJ,IAAAx3K,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,UAGAA,EAAA,mFAiCwBuK,EAAA8uD,6BAAA,8HACI9uD,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAiM,sBAAA,IAAA/C,EAAAoF,QAAA7E,KAAA,aAAAzJ,CAKJA,EAAAiM,sBAAA,IAAA/C,EAAAoF,QAAA7E,KAAA,GAAAP,EAAAoF,QAAA5E,SAAA,2GAhBZ1J,EAAAwY,kCAAA,GAIQxY,EAHJiF,yBAAA,YAGIjF,CADH,WACGA,EAAAulB,iBAAA,KAAqDvlB,EAAAkF,yBACrDlF,EAAAkB,oBAAA,YACAlB,EAAAiF,yBAAA,UAAAjF,EAAAqjD,sBAAA,kCAIIrjD,EAAA4J,qBAAA,EAAA0wK,EAAA,uBAOJt6K,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,MAA8CvlB,EAAAkF,yBAE1ClF,EADJiF,yBAAA,UACIjF,CADuC,aAC/BA,EAAAmF,iBAAA,sCAGZnF,EADMkF,wBACNlF,GACAA,EAAAiF,yBAAA,0BAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAqxK,aAAAxxK,KAAAG,EAAAqxK,aAAAxxK,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAER/I,EADKkF,wBACLlF,GAEIA,EADJiF,yBAAA,eACIjF,CADgB,gBAIZA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASF,EAAAsxK,iBAAgB,GAH7Bx6K,EAAAulB,iBAAA,MAQJvlB,EADIkF,wBACJlF,GAOIA,EANJiF,yBAAA,eAMIjF,CADH,WACsCA,EAAAmF,iBAAA,YACvCnF,EAD4CkF,wBAC5ClF,kFApCuBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAAK,EAAAoF,QAAA8Z,SAHfpoB,EAAAylB,oBAAAvc,EAAAoF,QAAA9D,KAAAxK,CAGAkJ,EAAAoF,QAAAknC,cAHAx1C,CAGAA,EAAAiM,sBAAA,IAAA/C,EAAAoF,QAAA7E,KAAA,0CAUQzJ,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,KAAA/C,EAAAoF,QAAA8qB,OAAA,IAAAlwB,EAAAwiE,OAMR1rE,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAAqxK,wCA9BhBv6K,EAAAiF,yBAAA,YAIIjF,EAAA4J,qBAAA,EAAA6wK,EAAA,yBAgDJz6K,EAAAkF,8FAhDmBlF,EAAAoF,sBAAgBpF,EAAhB6I,qBAAA,QAAAK,EAAAusC,QAAgBz1C,CAAA,WAAA06K,6BAkD/B16K,EAAAiF,yBAAA,YAGIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,iCACPnF,EAD4BkF,wBAC5BlF,2CADOA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAwN,sBAAA,IAAAtE,EAAAgR,oCAKHla,EADJiF,yBAAA,YACIjF,CADqD,WACrDA,EAAAulB,iBAAA,KAAwDvlB,EAAAkF,yBACxDlF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,sCAAyDvlB,EAAAkF,yBACzDlF,EAAAiF,yBAAA,OAAAjF,EAAAulB,iBAAA,KAA2CvlB,EAAAkF,yBAC3ClF,EAAAiF,yBAAA,QAAGjF,EAAAmF,iBAAA,kCAAuCnF,EAAAkF,yBAC1ClF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,kEAOJvlB,EADIkF,wBACJlF,GACAA,EAAAkB,oBAAA,aAEIlB,EADJiF,yBAAA,eACIjF,CADyC,gBACzCA,EAAAulB,iBAAA,OAGJvlB,EADIkF,wBACJlF,2CAlBQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,SAAA6D,EAAAyxK,eAAA,KAEI36K,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAiM,sBAAA,IAAA/C,EAAAoF,QAAA8qB,OAAA,IAAAlwB,EAAAwiE,kCACA1rE,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAvc,EAAAoF,QAAAknC,0CACLx1C,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,KAAA/C,EAAAoF,QAAA7E,KAAA,eAECzJ,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAiM,sBAAA,MAAA/C,EAAAoF,QAAA7E,KAAA,aAAAzJ,CAKJA,EAAAiM,sBAAA,MAAA/C,EAAAoF,QAAA7E,KAAA,GAAAP,EAAAoF,QAAA5E,SAAA,+CA/EhBnS,wBA2FkC,eAAAqjL,EAArBC,EAAqB,WAe1B,OAAAnjL,EAHJ,SAAAmjL,EACqCt8I,EACzB7lC,GAAyBf,EAAAC,KAAAijL,GADAjjL,KAAA2mC,QACzB3mC,KAAAc,OAbcd,KAAA8tB,MAAQ,IAAIlkB,EAAAoV,aACtBhf,KAAA0W,QAAU1W,KAAK2mC,MACf3mC,KAAAsiB,QAAUtiB,KAAK2mC,MAAMrkB,QAE9BtiB,KAAA69C,SAAU,EACV79C,KAAA+iL,eAAiB,UASrB,EAAC,EAAA1hL,IAAA,OAAAiE,IAPJ,WACI,OAAOtF,KAAKc,KAAK0qE,aACrB,GAAC,CAAAnqE,IAAA,iBAAAC,OAAA4hL,EAAA1hL,EAAAC,IAAAC,KAOM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACEnC,KAAK2iL,cAAiB3iL,KAAKmjL,oBAAmB,CAAAlhL,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACnD,OAAAtD,KAAK8tB,MAAM5O,KAAKlf,KAAK2iL,cAAc1gL,EAAAE,KAAA,EAC7BnC,KAAK2mC,MAAMgX,YAAY39C,KAAK2iL,cAAa,OAC/C3iL,KAAK69C,SAAU,EAAK,wBAAA57C,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACvB,SAAA4iL,IAAA,OAAAM,EAAAv+K,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,oBAAAC,MAEO,WAAiB,IAAA8hL,EAAAC,EACrB,QACsB,QAAjBD,EAAApjL,KAAK2iL,oBAAY,IAAAS,OAAA,EAAjBA,EAAmBpC,WAAWh8K,SAAU,GAAK,KAC5B,QAAjBq+K,EAAArjL,KAAK2iL,oBAAY,IAAAU,OAAA,EAAjBA,EAAmBpC,IAAIj8K,SAAU,IAAM,CAEhD,KAnBC,IAAAk+K,CAmBA,CA7B6B,GA6B7BF,SA7BQC,0CAAqB76K,EAAAC,4BAalByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAC,EAAAG,qBAAA,kDAblBw6K,EAAqBn6K,UAAA,oBAAAsW,QAAA,CAAA0O,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAAkE,OAAA,yDAhFwBoiB,UAAAC,MAAAC,EAAA,gGAEGF,UAAAG,MAAAD,EAAA,+RAChB,gBACrB,gBACA,gBACA,mCACY,kBACR,kBAIJ,sCAEoBF,UAAAI,MAAAF,EAAA,uGAiBvBF,UAAAM,MAAAJ,EAAA,+FAwBiCF,UAAAO,MAAAL,EAAA,mGAI9BF,UAAAyoB,MAAAvoB,EAAA,yHACAF,UAAAugC,MAAArgC,EAAA,2HAEAF,UAAAwgC,MAAAtgC,EAAA,4HACJ,gBACA,iBAQuDF,UAAAygC,MAAAvgC,EAAA,gjCAhFnEtnB,EAAA4J,qBAAA,EAAAsxK,EAAA,4CA6DAl7K,EARA4J,qBAAA,EAAAuxK,EAAA,yBAAAn7K,EAAA2c,iCAQA3c,CARyB,EAAAo7K,EAAA,2BAAAp7K,EAAA2c,yEAnDM3c,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAAsyH,OAsF1BuoD,CAAqB,yIC9GlC,IAAA3iL,EAAAzC,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACA0L,EAAA1L,EAAA,OACA+P,EAAA/P,EAAA,OACA8M,EAAA9M,EAAA,OACAoQ,EAAApQ,EAAA,OAEA4lL,EAAA5lL,EAAA,OACA6lL,EAAA7lL,EAAA,6DAIA8B,iBAe2B,eAAAgkL,EAAd73K,EAAchM,EAAA,SAAAgM,IAAA/L,EAAAC,KAAA8L,EAAA,GAAA63K,SAAd73K,yCAAc,iDAAdA,uDAZLxL,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACA8B,EAAAuB,mBACAtB,EAAAwB,eACA1B,EAAAuB,gBACAzB,EAAAuB,gBACAxE,EAAAkB,gBACAoC,EAAAwB,4BAIK3D,CAAc,oCAjBP23K,EAAAR,sBAAqB,CAAA36K,EAAA2oG,KAAAzoG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAAgpG,eAAA9oG,EAAA+oG,mBAAE+xE,EAAAtC,yBAAuB,CAAA94K,EAAAmpG,UAAAnpG,EAAAymI,aAAAzmI,EAAAmqG,6OCZlE50G,EAAA,WACAwC,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAGA85F,GADA95F,EAAA,OACAA,EAAA,QAGA4lL,GAFA5lL,EAAA,OAEAA,EAAA,mDAmBa8B,kBAAkB,qBAC/B,IAAMikL,EAAgB,UAEtBjkL,kBAG4B,eAAAkkL,EAAfziI,EAAe,WAwBpB,OAAAthD,EAJJ,SAAAshD,EACYtgD,EACAD,EACA2W,GAAkB,IAAAvW,EAAAjB,KAAAD,EAAAC,KAAAohD,GAFlBphD,KAAAc,OACAd,KAAAa,YACAb,KAAAwX,UAtBJxX,KAAAixB,SAAW,IAAI7X,EAAAuB,gBAAgB,IAC/B3a,KAAA8jL,aAAe,IAAI1qK,EAAAuB,gBAAgB,IAE3B3a,KAAAsiB,QAAUtiB,KAAKixB,SAASnW,eAExB9a,KAAA+jL,mBAAkB3qK,EAAAQ,IAAG,GAAG9W,QACpC1C,EAAAwxB,WAAU,WACN,IAAMoD,KAAM30B,EAAA2xB,WAAU/wB,EAAKy8C,eAAgBkmI,GAC3C,OAAK5uJ,EACEA,EAAIC,QAAQ,uBAAwB,CAAC,UAAO,EADlC7b,EAAAQ,IAAG,GAExB,IAAC,EACDxZ,EAAAyiB,KAAI,SAAC7f,GAAC,OAAMA,EAAE,GAAK/B,EAAK6iL,aAAa3hL,KAAKa,EAAE,GAAGqQ,IAAM,EAAE,IAAC,EACxDjT,EAAAsyB,aAAY,GAWb,EAAC,EAAArxB,IAAA,iBAAAiE,IARJ,WACI,OAAOtF,KAAKc,KAAKixB,QAAQ,WAC7B,GAAC,CAAA1wB,IAAA,cAAAC,OAAA0iL,EAAAxiL,EAAAC,IAAAC,KAQM,SAAAwD,EACHwR,GAAuB,IAAAutK,EAAAC,EAAAzxI,EAAA0xI,EAAA3iJ,EAAAp6B,EAAAu2C,EAAAl7C,EAAAmV,EAAA9S,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,UAElBnC,KAAK09C,eAAc,CAAAt4C,EAAAjD,KAAA,aAAQ,uBAAsB,OAAAiD,SAAAjD,KAAA,EACzBnC,KAAKokL,kBAC9B1tK,GAAS9D,MACZzO,MAAO,SAACnB,GAAC,MAAK,CAAC,EAAG,GAAG,GAAC,OACY,GADZihL,EAAAhiK,EAAA7c,EAAAvB,KAAA,GAFhBqgL,EAAID,EAAA,GAAExxI,EAAMwxI,EAAA,GAGnB7hL,QAAQO,IAAI,QAASuhL,EAAMzxI,KACvByxI,GAAQ,GAAC,CAAA9+K,EAAAjD,KAAA,gBAAAiD,EAAA9B,OAAA,kBAC6C,GAAtD6gL,EAAcnkL,KAAKa,UAAUyE,IAAI,sBACrB,CAAAF,EAAAjD,KAAA,SAAAiD,SAAAjD,KAAA,GAAsBnC,KAAKqkL,iBAAgB,QAAzCF,EAAW/+K,EAAAvB,KAAA,QAC7B,OAAA7D,KAAKa,UAAUm/B,gBAAgB,qBAAsBmkJ,GAC/C3iJ,EAAS0iJ,GAAQxtK,EAAQ5E,SAAW2gC,GACtCrrC,OAASnC,EACP04C,EAAW,eAAA13C,EAAAzE,EAAAC,IAAAC,KAAG,SAAAC,EAAO49B,GAAM,OAAA99B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACd2C,EAAKo+K,gBAAgB1hJ,EAAQ2iJ,EAAa5kJ,GAAEp7B,MACvD,SAAC0f,GACG/e,QAAKmsB,SAAS9uB,KAAK,IACb0hB,CACV,GACH,OALDzc,EAAMnF,EAAA4B,KAAA,wBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA,IAMT,gBAPgB23B,GAAA,OAAArzB,EAAAtB,MAAA3E,KAAA4E,UAAA,KAQXnC,EAAIosB,IAAA,GACHnY,GAAO,IACV4tK,KAAI,IAAAvgL,QAAOmgL,EAAO,KAAKrvH,QAAQ,GAAE,aACjCrzB,SACAmc,cACAr7B,QAAStiB,KAAKsiB,UAEZ1K,EAAM5X,KAAKwX,QAAQzC,KAAK0uK,EAAAR,sBAAuB,CAAExgL,SAAO2C,EAAAjD,KAAA,GACxDyV,EAAII,cAAc/U,YAAW,eAAAmC,EAAA9B,OAAA,SAC5B8D,GAAM,yBAAAhC,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IAChB,SAAA29C,EAAAhhC,GAAA,OAAAqnK,EAAAr/K,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,oBAAAC,MAAA,eAAAijL,EAAA/iL,EAAAC,IAAAC,KAEO,SAAAsE,EAAwBw+K,GAAwB,IAAAxvJ,EAAAyvJ,EAAA,OAAAhjL,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACK,GAAnD6yB,KAAM30B,EAAA2xB,WAAUhyB,KAAK09C,eAAgBkmI,GACnC,CAAAz9K,EAAAhE,KAAA,aAAQ,wBAAuB,OAAAgE,SAAAhE,KAAA,EACV6yB,EAAIC,QAAQ,qBAAsB,CAC3D,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAuvJ,IACF,OAdIC,OAAct+K,EAAA7C,OAAA,UAAdmhL,EAAct+K,EAAAtC,MAeEwP,IAAMoxK,GAAc,wBAAAt+K,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAC7C,gBAAA0kL,EAAA5qJ,GAAA,OAAAyqJ,EAAA5/K,MAAA3E,KAAA4E,UAAA,EArBA,IAqBA,CAAAvD,IAAA,oBAAAC,MAAA,eAAAqjL,EAAAnjL,EAAAC,IAAAC,KAEO,SAAAmF,EAAwB+L,GAAY,IAAAgyK,EAAA5vJ,EAAA6vJ,EAAA,OAAApjL,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAEiB,GADrDyiL,EAA0B,CAAC,EAAG,IAC5B5vJ,KAAM30B,EAAA2xB,WAAUhyB,KAAK09C,eAAgBkmI,GACnC,CAAA78K,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,SAASshL,GAAK,OAAA79K,SAAA5E,KAAA,EACK6yB,EAAIC,QAAQ,qBAAsB,CACzD,KACA,KACAriB,IACF,OAJgB,IAAZiyK,EAAY99K,EAAAlD,MAKAmB,OAAM,CAAA+B,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,SAASshL,GAAK,cAAA79K,EAAAzD,OAAA,SAC/BuhL,GAAY,yBAAA99K,EAAAtC,OAAA,EAAAoC,EAAA7G,KAAA,IACtB,gBAAAokL,EAAAnjI,GAAA,OAAA0jI,EAAAhgL,MAAA3E,KAAA4E,UAAA,EAbA,IAaA,CAAAvD,IAAA,kBAAAC,MAAA,eAAAwjL,EAAAtjL,EAAAC,IAAAC,KAEO,SAAAi+C,EACJne,EACA2iJ,EACAxB,GAAiC,IAAA76K,EAAA+/F,EAAA7yE,EAAA3hB,EAAA,OAAA5R,IAAAO,KAAA,SAAAg+C,GAAA,cAAAA,EAAA99C,KAAA89C,EAAA79C,MAAA,OAGQ,GADzCnC,KAAKixB,SAAS9uB,KAAK,8BACnBC,QAAQO,IAAI,8BACGggL,EAAY,CAAA3iI,EAAA79C,KAAA,QAAA69C,SAAA79C,KAAA,EACfnC,KAAK0kL,kBAAkB/B,GAAa,OAAA3iI,EAAA97C,GAAA87C,EAAAn8C,KAAAm8C,EAAA79C,KAAA,eAAA69C,EAAA97C,GAC1ClE,KAAK8jL,aAAa3rK,WAAU,OAFtB,GAAN0vF,EAAM7nD,EAAA97C,GAGD,CAAA87C,EAAA79C,KAAA,cAAQ,6BAA4B,QAGU,GAFzDnC,KAAKixB,SAAS9uB,KAAK,yBACnBC,QAAQO,IAAI,yBACNqyB,KAAM30B,EAAA2xB,WAAUhyB,KAAK09C,eAAgBkmI,GACnC,CAAA5jI,EAAA79C,KAAA,cAAQ,wBAAuB,QAAA69C,SAAA79C,KAAA,GACtB6yB,EAAIC,QAAgB,wBAAyB,CAC1DuM,EACAxhC,KAAKc,KAAK+U,SAASo2D,UAAY,MAC/B,KACA,KACAk4G,EACA,KACA,KACA,KACa,QADTr8K,KACJ6vF,EAAAnxF,sBAAa,IAAAsB,OAAA,EAAbA,EAAepB,QACjB,QAVM,GAAF2M,EAAE2sC,EAAAn8C,KAWD,CAAAm8C,EAAA79C,KAAA,cAAQ,2BAA0B,QACzCC,eAAQO,IAAI,yBAAyBq9C,EAAA79C,KAAA,GAC/B6yB,EAAIC,QAAQ,yBAA0B,CAAC5hB,EAAIw0F,IAAQ,QACzD,OAAA7nG,KAAKixB,SAAS9uB,KAAK,IAAI69C,EAAA18C,OAAA,SAChB,CACHu6C,SAAS,EACTtgB,MAAO,WACPwgB,WAAY1qC,EACZmuB,OAAQA,EACRwH,WAAYlvB,KAAKuX,MACjB4X,WAAYnvB,KAAKuX,QACpB,yBAAA2uB,EAAAv7C,OAAA,EAAAk7C,EAAA3/C,KAAA,IACJ,gBAAAkjL,EAAAhiI,EAAAC,EAAAw9B,GAAA,OAAAmmG,EAAAngL,MAAA3E,KAAA4E,UAAA,EAxCA,IAwCA,CAAAvD,IAAA,iBAAAC,MAAA,eAAAyjL,EAAAvjL,EAAAC,IAAAC,KAEO,SAAAg/C,IAAA,IAAA1rB,EAAAvI,EAAA,OAAAhrB,IAAAO,KAAA,SAAA8+C,GAAA,cAAAA,EAAA5+C,KAAA4+C,EAAA3+C,MAAA,OACqD,GAAnD6yB,KAAM30B,EAAA2xB,WAAUhyB,KAAK09C,eAAgBkmI,GACnC,CAAA9iI,EAAA3+C,KAAA,aAAQ,wBAAuB,OACjCsqB,YAAOkrE,EAAAnxF,eAAas6C,EAAA3+C,KAAA,EACT6yB,EAAIC,QAAgB,kBAAmB,CACpD,EACA,KACA,KACA,KAAI,GAAAlxB,OACD0oB,EAAKpZ,GAAE,KAAAtP,OAAI0oB,EAAKlZ,KAAI,gBACvBkZ,EAAK/lB,QACP,OAPI2M,OAAEytC,EAAAx9C,OAAA,SAAAw9C,EAAAj9C,MAQC,wBAAAi9C,EAAAr8C,OAAA,EAAAi8C,EAAA1gD,KAAA,IACZ,gBAAAqkL,IAAA,OAAAU,EAAApgL,MAAA3E,KAAA4E,UAAA,EAfA,MAlHA,IAAAo/K,CAiIA,CAnJuB,GAmJvBH,SAnJQziI,0CAAeh5C,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAAH,EAAA4U,mBAAAtU,EAAA4P,WAAA,qDAAf8oC,EAAenkC,QAAfmkC,EAAelkC,UAAAC,WAFZ,SAEHikC,CAAe,sFCnC5BnnB,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,qMCDA,IAAAmO,EAAAjQ,EAAA,UACAA,EAAA,OACAA,EAAA,8GAwDoBuK,EAAAiF,yBAAA,mBAMIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAaua,EAAA2P,gBAAAvqB,GAAuB,EACpC/I,CADqC,oBAAA+I,GAAA/I,EAAAgJ,wBAAA6gC,GAAA,IAAAlmB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAGxC/I,EAAAkF,mEAJGlF,EAFA6I,qBAAA,eAAA8a,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,GAEAjL,CAFwB,WAAA2jB,EAAA8a,aAExBz+B,CADyB,YAAA2jB,EAAA6P,yEAuBjCxzB,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA0Z,GAAA,IAAAiB,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAqB,KAAI,GAN7Br+B,EAAAulB,iBAAA,KAUAvlB,EAAAkF,uFAuDJlF,EAAAiF,yBAAA,kBAKIjF,EAAA4I,qBAAA,oBAAAG,GAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAgW,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAAua,EAAA0a,UAAAt1B,EAAA,GAEJ/I,EAAAkF,mEAHIlF,EAFA6I,qBAAA,WAAA8a,EAAA8a,aAEAz+B,CAFyB,iBAAA2jB,EAAA0a,UAEzBr+B,CAD4B,eAAA2jB,EAAA0a,UAAA,KAAA1a,EAAA0a,UAAApzB,KAhJ5C1T,+BAyJyC,eAAAqlL,EAA5B9lB,EAA4B,WA2BpC,OAAAp/J,EAbD,SAAAo/J,EACYtrG,EACA/yD,EACAstB,EAEAwY,GAIP5mC,EAAAC,KAAAk/J,GAROl/J,KAAA4zD,cACA5zD,KAAAa,YACAb,KAAAmuB,cAEAnuB,KAAA2mC,QAjBL3mC,KAAA8e,SAAoB,GACpB9e,KAAA4tD,KAAO,OACE5tD,KAAAi/J,WAAaj/J,KAAK2mC,MAAMs4H,SAqBpCj/J,KAAK8e,SAAQsD,EAAQukB,EAAMzqB,QAAU,IACrClc,KAAKmuB,YAAYxb,WAAWg0B,EAAM3kB,QACtC,EAAC,EAAA3gB,IAAA,eAAAiE,IArBD,WACI,OAAOtF,KAAK8e,SAASxD,IAAI,SAACtY,GAAC,OAAKA,EAAEqQ,EAAE,GAAEwB,KAAK,IAC/C,GAAC,CAAAxT,IAAA,YAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAc,qBAAuB,EAC/D,GAAC,CAAAjE,IAAA,aAAAC,MAiBM,SAAW+R,GACd,OAAOA,GAAMrT,KAAK6mC,aAAajhC,SAASyN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYma,EAAa8hB,GAC5B,IAAMvqB,EAAOhT,KAAK8e,SAAStD,OAAO,SAACxY,GAAC,OAAKA,EAAEqQ,KAAOoI,EAAKpI,EAAE,GACrDkqB,GAAOvqB,EAAKimB,KAAKxd,GACrBzb,KAAK8e,SAAW9L,GACXhT,KAAKa,UAAUyE,IAAI,qCAAuCi4B,IAC3Dv9B,KAAK8e,SAAW,CAACrD,GACjBzb,KAAK4zD,YAAYlsD,MAAM,CAAC+T,IAEhC,GAAC,CAAApa,IAAA,kBAAAC,MAEM,SAAgBma,GACnB,IAAMqkB,EAAW9/B,KAAK47B,UAChBmE,GAAaD,EAASl6B,SAAS6V,EAAKpI,IAEtCrT,KAAKa,UAAUm/B,gBAAgB,mBAD/BD,EACiD,GAAAh8B,OAAAqe,EAC1C0d,GAAQ,CACXrkB,EAAKpI,KAKLysB,EAAStkB,OAAO,SAACxY,GAAC,OAAKA,IAAMyY,EAAKpI,EAAE,GAGhD,IAAC,CAzDoC,GAyDpC2xK,SAzDQ9lB,0CAA4B92J,EAAAC,4BAAAC,EAAAurD,cAAAzrD,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAA2M,kBAAAjN,EAAAC,4BAkBzByF,EAAAg5B,iBAAe,kDAlBlBo4H,EAA4Bp2J,UAAA,6BAAAG,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kCA/IhBoiB,UAAAC,MAAAC,EAAA,2FAqFRF,UAAAG,MAAAD,EAAA,4FAgBwCF,UAAAI,MAAAF,EAAA,4FAGNF,UAAAM,MAAAJ,EAAA,kHAC/B,iBA/BHF,UAAAO,MAAAL,EAAA,4tEA5EGtnB,EALZiF,yBAAA,UAKYjF,CAHX,aAGWA,CAF2C,aAE3CA,CADwD,cAC9CA,EAAAmF,iBAAA,WACdnF,EADmBkF,wBACnBlF,GACAA,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,KAAmBvlB,EAAAkF,yBAEflF,EADJiF,yBAAA,UACIjF,CADwD,eAOpDA,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,MAAK,GAErBxlD,EAAAmF,iBAAA,WACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAukD,KAAgB,OAAM,GAEtBxlD,EAAAmF,iBAAA,aAGZnF,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,cAGIjF,EAAAkB,oBAAA,uBASIlB,EAHJiF,yBAAA,YAGIjF,CADH,+BAGOA,EAAAiV,2BAAA,sBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAukD,KAAAz8C,KAAA9H,EAAAukD,KAAAz8C,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACH/I,EAAAkF,yBACDlF,EAAA4J,qBAAA,GAAAizK,EAAA,qBASJ78K,EAAAkF,yBACAlF,EAAAiF,yBAAA,uBAUIjF,EAHA4I,qBAAA,wBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAgBnI,EAAA09B,YAAA19B,EAAAo9B,UAAAt1B,GAA8B,EAG9C/I,CAH+C,uBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAElCnI,EAAAqyB,gBAAAryB,EAAAo9B,WAA0B,EACvCr+B,CADwC,mBAAAA,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAAnI,EAAAo9B,UACnB,KAAI,GAEjCr+B,EADKkF,wBACLlF,GACAA,EAAAiF,yBAAA,gBAGIjF,EAAA4J,qBAAA,GAAAkzK,EAAA,iBAWA98K,EAAAiF,yBAAA,gBAAAjF,EAAAulB,iBAAA,MAWJvlB,EADIkF,wBACJlF,GAYYA,EAXZiF,yBAAA,eAWYjF,CATX,eASWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,MAERvlB,EAFqDkF,wBAErDlF,KACAA,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,MAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,mBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAASnI,EAAA09B,YAAA19B,EAAAo9B,WAAwBp9B,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAA0B,GAGvDjL,EADJiF,yBAAA,YACIjF,CAD2B,kBACDA,EAAAmF,iBAAA,IAExBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IASpBnF,EAJgBkF,wBAIhBlF,SACAA,EAAA4J,qBAAA,GAAAmzK,EAAA,yBAAA/8K,EAAA2c,4EA3HgB3c,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAUAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAYJxlD,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,WAAA5H,EAAA41J,SAEA72J,CAFqB,uBAAAiB,EAAAukD,KAErBxlD,CAD+B,sBAAAiB,EAAAukD,MAQ3BxlD,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,OAAApU,EAAAukD,MAGCxlD,EAAAoF,sBAAuBpF,EAAvB6I,qBAAA,gBAAA5H,EAAAukD,KAAuBxlD,CAAA,WAAA6rD,GAY5B7rD,EAAAoF,sBACApF,EADAiX,sBAAA,UAAAhW,EAAAo9B,UACAr+B,CAD2B,UAAAiB,EAAAo9B,WAK3Br+B,EAPA6I,qBAAA,QAAA5H,EAAAo9B,UAOAr+B,CAPmB,mBAAAiB,EAAAukD,KAOnBxlD,CAH2B,SAAAiB,EAAAw9B,aAAAjhC,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAG3BjL,CAF+C,MAAAiB,EAAAo9B,WAAAp9B,EAAAuyB,UAAAh2B,SAAA,MAAAyD,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KAe9CjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAo9B,WAWDr+B,EAAAoF,sBAAApF,EAAAiX,sBAAA,OAAAhW,EAAAo9B,WADAr+B,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UAeA1W,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,mBAAA5H,EAAAyV,UASA1W,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAxkB,EAAAyV,SAAA9Z,oCAOAoD,EAAAoF,sBAAApF,EAAAiX,sBAAA,UAAAhW,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,KADAjL,EAAA6I,qBAAA,YAAA5H,EAAAo9B,WAK8Br+B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA9K,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,gBAItBjL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAA69B,WAAA,MAAA79B,EAAAo9B,UAAA,KAAAp9B,EAAAo9B,UAAApzB,IAAA,gDAuBf6rJ,CAA4B,4KClKzC,IAAAt1J,EAAA/L,EAAA,MAOA63C,EAAA73C,EAAA,UACAA,EAAA,OAEAA,EAAA,wGAegBuK,EAAAkB,oBAAA,+DACIlB,EAAA6I,qBAAA,SAAAK,EAAA6K,MAAAiO,kCAqEIhiB,EALJiF,yBAAA,WAKIjF,CAFH,OAEGA,EAAAulB,iBAAA,KACJvlB,EADyBkF,wBACzBlF,2BADYA,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAA45H,wDANZr/I,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,KAAoDvlB,EAAAkF,yBACpDlF,EAAA4J,qBAAA,EAAAozK,EAAA,cAOJh9K,EAAAkF,kEAL4BlF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA6K,MAAApT,oCAM5BX,EAAAiF,yBAAA,gBAKIjF,EAAAkB,oBAAA,wBAOJlB,EAAAkF,kEALQlF,EAAAoF,sBAGApF,EAHA6I,qBAAA,MAAAK,EAAAqvC,QAGAv4C,CAHe,QAAAkJ,EAAA6K,MAAA3I,OAGfpL,CAFsB,WAAAkJ,EAAAvI,SAEtBX,CADqB,UAAAA,EAAAuJ,0BAAA,EAAAC,kEA5FrCxJ,EAAAwY,kCAAA,GACIxY,EAAAiF,yBAAA,eASIjF,EAAA4J,qBAAA,EAAAqzK,EAAA,wBAKAj9K,EAAAiF,yBAAA,cAIIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA5J,MAAAwX,OAAY,GAGrB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,gBACdnF,EADwBkF,wBACxBlF,GACAA,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA2wB,UAAA/iB,OAAgB,GAGzB9W,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,GAIlBnF,EAFUkF,wBAEVlF,KAGQA,EAFRiF,yBAAA,WAEQjF,CAF8C,gBAE9CA,CADyB,YAErBA,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAAkB,oBAAA,SAEIlB,EADJiF,yBAAA,gBACIjF,CAD+B,YAC/BA,EAAAulB,iBAAA,MAA4CvlB,EAAAkF,yBAExClF,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAChBlF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MACJvlB,EADuCkF,wBACvClF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,mBAAYnF,EAAAkF,yBACtBlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CADqC,eAC3BA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACflF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAOZnF,EAFQkF,wBAERlF,KACAA,EAAAkB,oBAAA,SAeAlB,EAdA4J,qBAAA,GAAAszK,EAAA,iBAcAl9K,CAVC,GAAAm9K,EAAA,kBAuBLn9K,EAAAkF,yBAIIlF,EAHJiF,yBAAA,YAGIjF,CADH,gBAOOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAD,SAAA6wB,QAAA7wB,EAAA6wB,OAAA/5B,EAAAoJ,sBAA2BF,EAAA8wB,aAAAljB,KAAA5N,EAAA6wB,QAAyB,GAGhD/5B,EADJiF,yBAAA,YACIjF,CAD0C,kBACfA,EAAAmF,iBAAA,IAEzBnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,QACIjF,EAAAmF,iBAAA,IAIhBnF,EAHYkF,wBAGZlF,qFAjHIA,EAAAoF,sBAIApF,EAJAiX,sBAAA,gBAAA/N,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,OAIAoD,CAJsC,aAAAkJ,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,OAItCoD,CAHmC,iBAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAGnCoD,CAFsC,eAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAEtCoD,CADoC,0BAAAkJ,EAAA6K,MAAAiO,QAAA9Y,EAAA6K,MAAAiO,OAAAplB,SAK/BoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,aAAAK,EAAA6K,MAAAiO,OAAA,KAAA9Y,EAAA6K,MAAAiO,OAAAplB,QAgBDoD,EAAAoF,oBAAA,GACApF,EADAiX,sBAAA,cAAA/N,EAAA+wB,IACAj6B,CADyB,gBAAAkJ,EAAA+wB,KAKfj6B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA+wB,IAAA,8BAQNj6B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6K,MAAA1G,cAAAnE,EAAA6K,MAAA5I,KAAA,KAQQnL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAvc,EAAA6K,MAAAoD,sCAKJnX,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAf,gBAAA,MAAAnE,EAAAkF,MAAA,KAAAlF,EAAAkF,MAAAjD,MAAA,KAMAnL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,WAAA6D,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAsZ,WAAA,MAAA7d,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAJ,gBAAA,MAAAnE,EAAAuE,SAAA,KAAAvE,EAAAuE,SAAAtC,MAAA,KAYPnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,aAAAK,EAAA6K,MAAApT,SAAA,KAAAuI,EAAA6K,MAAApT,SAAA/D,QAcAoD,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA0lC,UAkBD5uC,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,UAAA/N,EAAA6wB,QAK+B/5B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA6wB,OAAA,gBAIvB/5B,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,EAAA6wB,OAAA,+DAWZ/5B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,IAlIZzI,wBAmJkC,eAAA6lL,EAArBC,EAAqB,WAuBmB,OAAA3lL,EAAjD,SAAA2lL,EAAoB3kL,GAAyBf,EAAAC,KAAAylL,GAAzBzlL,KAAAc,OArBJd,KAAAqiC,KAAe,EACfriC,KAAAmiC,QAAkB,EAClBniC,KAAAg3C,UAAoB,EAEnBh3C,KAAAoiC,aAAe,IAAIx4B,EAAAoV,aACnBhf,KAAA0H,MAAQ,IAAIkC,EAAAoV,aACZhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aAE1Bhf,KAAA2gD,QAAU,GACV3gD,KAAA+I,SAA4B,EAYa,EAAC,EAAA1H,IAAA,QAAAiE,IAVjD,WAAgB,IAAA65D,EAAAC,EACZ,OAAOp/D,KAAKc,KAAKmuB,YAAsB,QAAXkwC,EAACn/D,KAAKmc,aAAK,IAAAgjD,OAAA,EAAVA,EAAYxrD,SAAoB,QAAdyrD,EAAIp/D,KAAKmc,aAAK,IAAAijD,OAAA,EAAVA,EAAY5oD,MACnE,GAAC,CAAAnV,IAAA,WAAAiE,IAED,WAAmB,IAAArE,EAAAjB,KACf,OAAOA,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,IAAAq8D,EAAA,OACpB,QADoBA,EAC9Bp+D,EAAKkb,aAAK,IAAAkjD,OAAA,EAAVA,EAAY1rD,MAAM/N,SAAS5C,EAAEqQ,GAAG,EAExC,GAAC,CAAAhS,IAAA,cAAAC,MAIM,SAAY87B,GACXA,EAAQjhB,OAASnc,KAAKmc,OACtBnc,KAAKu/D,gBAEb,GAAC,CAAAl+D,IAAA,iBAAAC,MAEO,WAAc,IAAA4xD,EAAAoM,EAClBt/D,KAAK2gD,QAAoB,QAAbuS,EAAGlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,OAC3BxT,KAAK+I,SAAW,CACZ,CACIrD,SAAoB,QAAZ45D,EAAEt/D,KAAKmc,aAAK,IAAAmjD,OAAA,EAAVA,EAAY9rD,OACtBiT,QAASivB,EAAAhvB,iBAGrB,IAAC,CAvC6B,GAuC7B8+J,SAvCQC,0CAAqBr9K,EAAAC,4BAAAC,EAAAG,qBAAA,kDAArBg9K,EAAqB38K,UAAA,oBAAAqW,OAAA,CAAAhD,MAAA,QAAAkmB,IAAA,MAAAF,OAAA,SAAA6U,SAAA,YAAA53B,QAAA,CAAAgjB,aAAA,eAAA16B,MAAA,QAAAu6B,UAAA,aAAAl5B,SAAA,CAAAX,EAAAk4B,gCAAAr3B,MAAA,EAAAC,KAAA,EAAAkE,OAAA,qCAlGuBoiB,UAAAC,MAAAC,EAAA,wFAGzBF,UAAAG,MAAAD,EAAA,0HAyByBF,UAAAI,MAAAF,EAAA,gGAMzBF,UAAAM,MAAAJ,EAAA,mHA4CuBF,UAAAO,MAAAL,EAAA,kgDAL/CtnB,EAvHA4J,qBAAA,EAAA0zK,EAAA,uBAuHAt9K,CAvH8C,EAAAu9K,EAAA,yBAAAv9K,EAAA2c,wEAAlB3c,EAAb6I,qBAAA,OAAA5H,EAAA8S,MAAa/T,CAAA,WAAAkkB,+NAgJvBm5J,CAAqB,8QC/JlC,IAAA77K,EAAA/L,EAAA,MAEAyC,GADAzC,EAAA,OACAA,EAAA,QAGAuC,GAFAvC,EAAA,OACAA,EAAA,OACAA,EAAA,OACA+nL,EAAA/nL,EAAA,2JA6CYuK,EAAAiF,yBAAA,eAMIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAu0K,oBAAmB,GAE5Bz9K,EAAAmF,iBAAA,qBACJnF,EAAAkF,mDACAlF,EAAAiF,yBAAA,YAMIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6D,EAAA5L,SAAA,+BAMA0C,EAAAwY,kCAAA,GACIxY,EAAAmF,iBAAA,yIAAAnF,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAA/C,EAAAyd,MAAAzd,EAAAqd,aAAA,WAAAvmB,EAAAiM,sBAAA,IAAA/C,EAAAsS,IAAAtS,EAAAqd,aAAA,4BAGJvmB,EAAAwY,kCAAA,GAA8BxY,EAAAmF,iBAAA,+GAM9BnF,EADJiF,yBAAA,WACIjF,CAD8D,UAC1CA,EAAAmF,iBAAA,GAAUnF,EAAAkF,yBAC9BlF,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,uBAAA80K,EAAA19K,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAAsuD,cAAAkmH,GAAmB,GAE5B19K,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,+BAVwBA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA2xK,IA3EpCnmL,+BAkH0C,eAAAomL,EAA7BC,EAA6B,SAAAplL,GA0BtC,SAAAolL,EACYr4H,EACAx/B,EACArtB,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAgmL,IAElC/kL,EAAAC,EAAAlB,KAAAgmL,IALQr4H,UACA1sD,EAAAktB,cACAltB,EAAAH,OACAG,EAAAJ,YA7BII,EAAA2sD,KAAuB,OACtB3sD,EAAA4sD,WAAa,IAAIjkD,EAAAoV,aAClB/d,EAAA+gB,QAAU/gB,EAAKktB,YAAYnM,QACpC/gB,EAAAyE,SAAmB,GAmBVzE,EAAA8+D,YAAc,kBAC1B9+D,EAAK0sD,QAAQ54C,KAAK6wK,EAAAK,sBAAsB,EAAChlL,CAS7C,CAACG,SAAA4kL,EAAAplL,GAAAd,EAAAkmL,EAAA,EAAA3kL,IAAA,UAAAiE,IA3BD,WACI,OAAOtF,KAAKmuB,YAAYzd,KAAKpP,MAAMkvB,OACvC,GAAC,CAAAnvB,IAAA,QAAAiE,IAED,WACI,OAAOtF,KAAKmuB,YAAYzd,KAAKpP,MAAMuQ,IACvC,GAAC,CAAAxQ,IAAA,MAAAiE,IAED,WACI,IAAA26D,EAA2BjgE,KAAKmuB,YAAYzd,KAAKpP,MACjD,OADY2+D,EAAJpuD,KACiB,GADHouD,EAARnuD,SACgB,GAClC,GAAC,CAAAzQ,IAAA,cAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAU8tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAC,MAcM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,OACA7S,KAAKgiB,QAAQjP,UAAU,SAAA9M,GAAW,OAC9BnB,EAAKo7D,gBADyBj6D,EAARisD,SACQ,GAG1C,GAAC,CAAA7wD,IAAA,gBAAAC,OAAA6+D,EAAA3+D,EAAAC,IAAAC,KAEM,SAAAC,EAAoBy+D,GAAY,IAAA9+D,EAAA,OAAAG,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACfnC,KAAKmuB,YAAYnM,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OACtEjD,KAAKmuB,YAAYxb,WAAUkc,IAAA,GADrBvtB,EAAKW,EAAA4B,MAEC,IACRkF,UAAWzH,EAAMyH,UAAY,IAAIyS,OAAO,SAACxY,GAAC,OAAKA,IAAMo9D,CAAI,MAC1D,wBAAAn+D,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACN,SAAA4/D,EAAAjjD,GAAA,OAAAwjD,EAAAx7D,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,oBAAAC,MAAA,eAAA4kL,EAAA1kL,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACiBnC,KAAKmuB,YAAYnM,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OACtEjD,KAAKmuB,YAAYxb,WAAUkc,IAAA,GADhBzpB,EAAAvB,MAEC,IACRkF,SAAU,MACX,wBAAA3D,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACN,gBAAA6lL,IAAA,OAAAK,EAAAvhL,MAAA3E,KAAA4E,UAAA,EARA,IAQA,CAAAvD,IAAA,kBAAAC,MAEO,WAAuC,IAErCma,EADQzb,KAAKc,KAAKmuB,YADJrqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,KAEnB5E,KAAKc,KAAK+U,SAChC7V,KAAK0F,SAAW+V,GAAMhG,cAAgBgG,GAAMlI,MAAQ,EACxD,KAtBC,IAAA4sD,CAsBA,CAhEqC,CAAQ7/D,EAAA6H,cAAY49K,SAAjDC,0CAA4B59K,EAAAC,4BAAAC,EAAAgN,gBAAAlN,EAAAC,4BAAAG,EAAA6M,kBAAAjN,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAA,kDAA5By9K,EAA4Bl9K,UAAA,4BAAAqW,OAAA,CAAAyuC,KAAA,QAAAxuC,QAAA,CAAAyuC,WAAA,cAAA9kD,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAAkE,OAAA,kBAvG5BoiB,UAAAC,MAAAC,EAAA,0FAYIF,UAAAG,MAAAD,EAAA,sFAWAF,UAAAI,MAAAF,EAAA,uFAqCwDF,UAAAM,MAAAJ,EAAA,gHACpD,qqCApETtnB,EADJiF,yBAAA,cACIjF,CAD+D,cAM3DA,EAAA4I,qBAAA,0BAAS3H,EAAA02D,aAAa,GAL1B33D,EAAAulB,iBAAA,KASAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CAD2B,cAOvBA,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,MAAOvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANhDxlD,EAAAulB,iBAAA,KAUAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,cAMIjF,EAAA4I,qBAAA,mBAAA3H,SAAAukD,KAAgB,OAAQvkD,EAAAwkD,WAAA3uC,KAAA7V,EAAAukD,KAAqB,GANjDxlD,EAAAulB,iBAAA,KAYRvlB,EAFQkF,wBAERlF,KACAA,EAAAiF,yBAAA,eAIIjF,EAAA4J,qBAAA,EAAAm0K,EAAA,gDAUA/9K,EAAA4J,qBAAA,GAAAo0K,EAAA,cAQAh+K,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,kCACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAKIjF,EAJA4J,qBAAA,GAAAq0K,EAAA,sBAIAj+K,CAJ+B,GAAAk+K,EAAA,uBAKnCl+K,EAAAkF,yBACAlF,EAAAiF,yBAAA,aAAAjF,EAAAulB,iBAAA,qCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAu0K,EAAA,6CAYJn+K,EAAAkF,gCAlEYlF,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,kBAAAhW,EAAAukD,MAWAxlD,EAAAoF,oBAAA,GAAApF,EAAAiX,sBAAA,mBAAAhW,EAAAukD,MAiBHxlD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAA8M,EAAA3V,EAAAwN,sBAAA,MAAAvM,EAAA2Y,WAAA,MAAAjE,EAAAhV,SAAA,KAAAgV,EAAAhV,SAAA/D,QAAA,GASAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAA3D,UAKD0C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,MAAAhL,EAAA0lB,MAAA,mBAGe3mB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,EAAAmnB,SAIApoB,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAmnB,SAGfpoB,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAA2yC,EAAAp4D,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAAw+C,EAAAjhD,WAAA,+BAE8BnX,EAAAoF,sBAAApF,EAAA6I,qBAAA,iBAAA6rD,EAAA10D,EAAAwN,sBAAA,MAAAvM,EAAA2Y,UAAA,KAAA86C,EAAA/zD,klBAwCjCi9K,CAA6B,mPCzH1CnoL,EAAA,WACAyC,EAAAzC,EAAA,OAMA8yB,EAAA9yB,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,SAEAA,EAAA,OACAA,EAAA,OAEAA,EAAA,yKAQgBuK,EAAAiF,yBAAA,eAKIjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GAEhBU,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,yBACdnF,EADiCkF,wBACjClF,gCA0BYA,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,mDAHIlF,EAAA6I,qBAAA,QAAAq9C,GAEAlmD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA6gD,EAAA74C,cAAA64C,EAAA/6C,KAAA,sEAZRnL,EALJiF,yBAAA,sBAKIjF,CADH,mBAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAC,GAAA,IAAAC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAi9C,UAAAp9C,IAAiB,GAKlC/I,EAAA4J,qBAAA,EAAAw0K,EAAA,mDAORp+K,EADIkF,wBACJlF,8CAbQA,EAAAoF,sBAEApF,EAFA6I,qBAAA,UAAAK,EAAA4lC,OAEA9uC,CAFkB,iBAAAA,EAAAuJ,0BAAA,EAAAC,IAOExJ,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAA6lC,uCAsBpB/uC,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,mDAHIlF,EAAA6I,qBAAA,QAAAw9C,GAEArmD,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAghD,EAAAh5C,cAAAg5C,EAAAl7C,KAAA,sEAdRnL,EALJiF,yBAAA,sBAKIjF,CADH,6GAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA2E,GAAA,IAAAzE,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAoE,YAAAvE,IAAmB,GAOpC/I,EAAA4J,qBAAA,EAAAy0K,EAAA,mDAORr+K,EADIkF,wBACJlF,iDAfQA,EAAAoF,sBAGApF,EAHA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAuE,UAGAzN,CAH4B,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAG5BxJ,CADuC,sBAAA4V,EAAA5V,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAmI,EAAAvI,gBAAA,OAAAuI,EAAA5V,EAAAwN,sBAAA,IAAAtE,GAAAuE,WAAA,KAAAmI,EAAAzK,OAOnBnL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,KAAAtE,GAAAwE,yCA0BZ1N,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,oCAIAnF,EAAAiF,yBAAA,aAAyBjF,EAAAmF,iBAAA,SAC7BnF,EAD+BkF,wBAC/BlF,wDALIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA2E,EAAAhK,EAAAwN,sBAAA,IAAA+4C,EAAA96C,YAAA,KAAAzB,EAAAqD,aAAA,kCALRrN,EAJJiF,yBAAA,kBAIIjF,CADH,YAEOA,EAAA4J,qBAAA,EAAA00K,EAAA,cAUAt+K,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,8DAjBIA,EAAA6I,qBAAA,QAAA09C,EAAAt7C,IAKSjL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2uC,YASD73C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAkhD,EAAAl5C,cAAAk5C,EAAAp7C,KAAA,sEAzBhBnL,EALJiF,yBAAA,sBAKIjF,CADH,iDAIOA,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAy9C,GAAA,IAAAv9C,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAqB,WAAW,CAAAu/C,SAAA/gD,KAAqB,GAMjD/I,EAAA4J,qBAAA,EAAA20K,EAAA,mDAqBRv+K,EADIkF,wBACJlF,iDA5BQA,EAAAoF,sBAKApF,EALA6I,qBAAA,iBAAA89C,EAAA3mD,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAA+sC,EAAAmD,SAKA9pD,CALuC,iBAAAA,EAAAuJ,0BAAA,EAAAC,GAKvCxJ,CAHuC,eAMnBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,GAAAwQ,0EAsCxB1Z,EADJiF,yBAAA,WACIjF,CADuD,cAEnDA,EAAAmF,iBAAA,qCAAiCnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAC3CnF,EAD4CkF,wBAC5ClF,GACAA,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA8P,GAAA,IAAA5P,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBACqCF,GAAAZ,KAAAe,WACtD,CAAAgf,SAAAtf,KACT,GAK0B/I,EAAAmF,iBAAA,qCAERnF,EADIkF,wBACJlF,8CAfQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,yBAIAxN,EAAAoF,oBAAA,GAOApF,EAPA6I,qBAAA,UAAAK,EAAAZ,KAAAse,cAAAyB,SAOAroB,CAPuC,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAOvCxJ,CAHuC,OAAAkJ,EAAAskJ,WAGvCxtJ,CAFmB,KAAAkJ,EAAAw/C,SAEnB1oD,CADe,YAGfA,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,sDAMRxN,EADJiF,yBAAA,WACIjF,CAD2D,qBAC3DA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,oEAkBQA,EADJiF,yBAAA,WACIjF,CADuC,cAEnCA,EAAAmF,iBAAA,qCAAiCnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAC3CnF,EAD4CkF,wBAC5ClF,GACAA,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAylC,GAAA,IAAAvlC,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBACqCF,GAAAZ,KAAAe,WACtD,CAAAgf,SAAAtf,KACT,GAIkB/I,EADKkF,wBACLlF,kDAZQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,yBAIAxN,EAAAoF,oBAAA,GAMApF,EANA6I,qBAAA,UAAAK,GAAAZ,KAAApP,MAAAmvB,SAMAroB,CAN+B,iBAAAA,EAAAuJ,0BAAA,EAAAC,GAM/BxJ,CAFuC,aAAAkJ,GAAAZ,MAAA,OAAAiQ,EAAArP,GAAAZ,KAAAse,eAAA,KAAArO,EAAA9O,KAEvCzJ,CADkC,WAAAkJ,GAAAqyB,uCAKtCv7B,EADJiF,yBAAA,WACIjF,CADwC,cAEpCA,EAAAmF,iBAAA,qCAAiCnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAC3CnF,EAD4CkF,wBAC5ClF,GACAA,EAAAkB,oBAAA,yBAOJlB,EAAAkF,qEATQlF,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,yBAKAxN,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,aAAAK,EAAAZ,MAAA,OAAAsN,EAAA1M,EAAAZ,KAAAse,eAAA,KAAAhR,EAAAnM,KAEAzJ,CAFkC,MAAAkJ,EAAA4F,aAElC9O,CADoB,WAAAkJ,EAAAqyB,2EAlCxBv7B,EALRiF,yBAAA,WAKQjF,CAFP,WAEOA,CADsB,cACtBA,EAAAqjD,sBAAA,KACcrjD,EAAAkB,oBAAA,UACdlB,EAAAsjD,sBAAAtjD,EAAAkF,yBACAlF,EAAAiF,yBAAA,qBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAulC,GAAA,IAAArlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAZ,KAAAe,WAAgB,CAAAI,KAAAV,KAAiB,GAI1D/I,EADKkF,wBACLlF,GAgBAA,EAfA4J,qBAAA,EAAA40K,EAAA,aAeAx+K,CAf2C,EAAAy+K,EAAA,cA2B/Cz+K,EAAAkF,oEAjCYlF,EAAAoF,oBAAA,GAGApF,EAHA6I,qBAAA,UAAAK,EAAAZ,KAAAse,cAAAnd,KAGAzJ,CAHmC,iBAAAA,EAAAuJ,0BAAA,EAAAC,GAGnCxJ,CADuC,WAAAkJ,EAAAqyB,UAIpBv7B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAK,EAAA2tJ,UAeA72J,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA2tJ,2EAmB/B72J,EALJiF,yBAAA,eAKIjF,CADH,WACGA,EAAAulB,iBAAA,uCAEAvlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CAD2B,YAC3BA,EAAAulB,iBAAA,uCAEAvlB,EAAAkF,yBACAlF,EAAAiF,yBAAA,mDAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAA0lC,GAAA,IAAAxlC,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,GAAAqB,WAAW,CAAA66C,SAAAr8C,KAAqB,GAK7D/I,EAFQkF,wBAERlF,mDAdQA,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,qDAIIxN,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,yDAIAxN,EAAAoF,sBAEApF,EAFA6I,qBAAA,iBAAA0P,EAAAvY,EAAAwN,sBAAA,IAAAtE,GAAA0Q,UAAA,KAAArB,EAAA6sC,SAEAplD,CAFuC,iBAAAA,EAAAuJ,0BAAA,GAAAC,qEAqBvCxJ,EAJJiF,yBAAA,WAIIjF,CADH,YAEOA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,mDAKIjF,EAAA4I,qBAAA,yBAAAG,IAAA/I,EAAAgJ,wBAAAmwD,GAAA,IAAAD,GAAAl5D,EAAAmJ,0BAAAgM,UAAAjM,GAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAiBF,GAAAkwD,cAAAF,GAAAnwD,IAA2B,GAGpD/I,EADKkF,wBACLlF,2FAVQA,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6D,GAAAw1K,gBAAAxlH,QAAA,KAIAl5D,EAAAoF,sBAIApF,EAJA6I,qBAAA,iBAAA0P,EAAAvY,EAAAwN,sBAAA,IAAAtE,GAAA0Q,WAAA,MAAArB,EAAA5X,SAAA,KAAA4X,EAAA5X,SAAAnD,SAAA07D,IAIAl5D,CAFC,iBAAAA,EAAAuJ,0BAAA,EAAAC,iCAZbxJ,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAA+0K,EAAA,2GAEK3+K,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAAK,EAAA01K,cAAAphL,SAAA07D,kCAJTl5D,EARJiF,yBAAA,eAQIjF,CADH,WACGA,EAAAulB,iBAAA,KAA+CvlB,EAAAkF,yBAC/ClF,EAAA4J,qBAAA,EAAAi1K,EAAA,qDAkBJ7+K,EAAAkF,kEAlBmClF,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAvI,6EAwBnCX,EAJJiF,yBAAA,WAIIjF,CADH,eAMOA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAomD,GAAA,IAAAlmD,GAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,GAAA5J,QAAO,GALpBU,EAAAulB,iBAAA,MAUJvlB,EADIkF,wBACJlF,IAhQRzI,wBA6QkC,eAAAunL,GAArBjB,GAAqB,WAwG7B,OAAAnmL,EAVD,SAAAmmL,EAEY92H,EACAtuD,GACAstB,GACArtB,GACAwgB,GACAklG,IAA8B,IAAAvlH,GAAAjB,KAAAD,EAAAC,KAAAimL,GAL9BjmL,KAAAmvD,cACAnvD,KAAAa,aACAb,KAAAmuB,eACAnuB,KAAAc,QACAd,KAAAshB,WACAthB,KAAAwmH,eAjGLxmH,KAAAovD,WAAY,EACHpvD,KAAAgiB,QAAUhiB,KAAKmuB,YAAYnM,QAE3BhiB,KAAA6V,SAAW7V,KAAKc,KAAK2W,gBACrBzX,KAAA8V,UAAY9V,KAAKc,KAAKuuD,iBAEtBrvD,KAAA8hB,UAAS1I,EAAA2I,eAAc,CACnC/hB,KAAKc,KAAKyuD,cACVvvD,KAAKc,KAAK2W,kBACX3U,QACC1C,EAAAkb,KAAI,SAAArV,IAAkB,IAAA6B,GAAAma,EAAAhc,GAAA,GAARmS,GAAGtQ,GAAA,GAOb,OANmB7G,GAAKg/C,WAClBh/C,GAAKH,KAAK0uD,gBAFR1nD,GAAA,IAGF7G,GAAKH,KAAKuhB,kBAAkBjK,KACCoD,OAC/B,SAACi0C,IAAG,OAAMA,GAAIzL,KAAKp+C,SAAS,UAAU,GAEnB4W,KACnB,SAACyW,GAAG3U,IAAC,OACD2U,GAAEpf,UAAUy0B,cAAchqB,GAAEzK,aAC3Bof,GAAExd,cAAgB,IAAI6yB,cAAchqB,GAAE7I,cAAgB,GAAG,EAEtE,IAGYzV,KAAAm3C,QAAUn3C,KAAKc,KAAKwuD,YAEpBtvD,KAAAmnL,iBAAmBnnL,KAAKwmH,YAAY3zB,WAEpC7yF,KAAA+I,YAAWqQ,EAAA2I,eAAc,CACrC/hB,KAAKshB,QAAQvY,SACb/I,KAAKmuB,YAAY1T,mBAClB3X,QACC1C,EAAAkb,KAAI,SAAA4G,IAAA,IAAAC,GAAAF,EAAAC,GAAA,GAAkB,SAClB5hB,EAAAqvC,QADUxtB,GAAA,GACMpe,UAAOzD,EAAAmyB,SADLtQ,GAAA,GACoB7G,IAAI,SAACtY,IAAC,OAAKA,GAAE+F,QAAQ,KAAI,IAYvD/I,KAAA0H,MAAQ,kBAAMzG,GAAKkuD,YAAY5wC,SAAS,EACxCve,KAAA2S,WAAa,SAAC4P,IAAC,OAAKthB,GAAKktB,YAAYxb,WAAW4P,GAAE,EAoD9DviB,KAAKovD,YAAcpvD,KAAKmvD,WAC5B,EAAC,EAAA9tD,IAAA,gBAAAiE,IA9DD,WACI,QAAStF,KAAKa,UAAUyE,IAAI,2BAChC,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,iBAChC,GAAC,CAAAjE,IAAA,MAAAiE,IAKD,WACI,OAAOtF,KAAKc,KAAK+U,QACrB,GAAC,CAAAxU,IAAA,SAAAiE,IAED,WACI,OAAOtF,KAAKc,KAAKo2C,MACrB,GAAC,CAAA71C,IAAA,OAAAiE,IAED,WACI,OAAOtF,KAAKmuB,YAAYzd,IAC5B,GAAC,CAAArP,IAAA,eAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAjE,IAAA,kBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,mCAAqC,EACnE,GAAC,CAAAjE,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,6BAA+B,EAC7D,GAAC,CAAAjE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKa,UAAUyE,IAAI,uBAC9B,GAAC,CAAAjE,IAAA,aAAAiE,IAED,WACI,SAAOqrB,EAAA6C,YAAWxzB,KAAK0Q,KAAKse,cAAcnd,MAAM6jB,SACpD,GAAC,CAAAr0B,IAAA,WAAAiE,IAED,WACI,SAAOqrB,EAAA+C,aACH/C,EAAAoQ,SACIjnB,KAAKuX,MACLrxB,KAAKa,UAAUyE,IAAI,mCAAqC,KAGpE,GAAC,CAAAjE,IAAA,cAAAC,MAcM,SAAY8W,IACfpY,KAAKc,KAAK+U,SAAWuC,EACzB,GAAC,CAAA/W,IAAA,YAAAC,MAEM,SAAU41C,IACbl3C,KAAKc,KAAKo2C,OAASA,EACvB,GAAC,CAAA71C,IAAA,gBAAAC,OAAAsgE,EAAApgE,EAAAC,IAAAC,KAEM,SAAAC,GAAoBy+D,GAAc7iC,IAAc,IAAAskC,GAAA,OAAApgE,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACxBnC,KAAKgiB,QAAQlf,QAAK1C,EAAAsb,MAAK,IAAIzY,YAAW,OAC3D4+D,IAD2D5/D,GAAA4B,KAAzDkF,UACsB,IAAIyS,OAAO,SAACxY,IAAC,OAAKo9D,KAASp9D,EAAC,GACtDu6B,IAAOskC,GAAS5oC,KAAKmnC,IACzBpgE,KAAK2S,WAAW,CAAE5J,SAAU84D,KAAY,wBAAA5/D,GAAAwC,OAAA,EAAA9C,GAAA3B,KAAA,IAC3C,SAAAwhE,GAAA7kD,GAAA2c,IAAA,OAAAsoC,EAAAj9D,MAAA3E,KAAA4E,UAAA,MAPA,IAAAg9D,CAOA,CAvH6B,GAuH7BslH,UAvHQjB,4CAAqB79K,EAAAC,4BAAAC,EAAAmW,kBAAA,GAAArW,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAA2M,kBAAAjN,EAAAC,4BAAAO,EAAAH,qBAAAL,EAAAC,4BAAA+b,EAAAD,eAAA/b,EAAAC,4BAAAG,EAAAo7D,mBAAA,mDAArBqiH,GAAqBn9K,UAAA,oBAAAqW,OAAA,CAAA8/I,SAAA,WAAAnvG,YAAA,cAAAs3H,YAAA,eAAAn+K,MAAA,GAAAC,KAAA,GAAAkE,OAAA,eAAAmiB,6BA9P0BC,UAAAC,MAAAC,EAAA,iGAQFF,UAAAG,MAAAD,EAAA,2FAEXF,UAAAI,MAAAF,EAAA,2FAoFAF,UAAAM,MAAAJ,EAAA,2HAAI,kBAAO,uBASjCF,UAAAO,MAAAL,EAAA,oGACG,oBAnFaF,UAAAyoB,MAAAvoB,EAAA,8FA4CAF,UAAAugC,MAAArgC,EAAA,yGA+DwBF,UAAAwgC,MAAAtgC,EAAA,yFASZF,UAAAygC,MAAAvgC,EAAA,kIACf,iBAAO,mBA4CQF,UAAA0gC,MAAAxgC,EAAA,oGACjC,iBAGyCF,UAAA2gC,MAAAzgC,EAAA,oGACrC,iBAmB6BF,UAAA4gC,MAAA1gC,EAAA,2FAgCxCF,UAAA6gC,MAAA3gC,EAAA,6oFAzPDtnB,EADJiF,yBAAA,WACIjF,CADmE,YAE/DA,EAAA4J,qBAAA,EAAAq1K,EAAA,iBASJj/K,EAAAkF,yBACAlF,EAAAiF,yBAAA,WAAAjF,EAAAulB,iBAAA,KAA6DvlB,EAAAkF,yBAC7DlF,EAAAkB,oBAAA,YACJlB,EAAAkF,yBAMQlF,EALRiF,yBAAA,YAKQjF,CAFP,eAEOA,CADa,WACbA,EAAAulB,iBAAA,KAAiDvlB,EAAAkF,yBAE7ClF,EADJiF,yBAAA,YACIjF,CAD2C,eAC3CA,EAAAulB,iBAAA,MAAmCvlB,EAAAkF,yBACnClF,EAAA4J,qBAAA,GAAAs1K,EAAA,wDAqBAl/K,EAAA4J,qBAAA,GAAAu1K,EAAA,yDAuBAn/K,EAAA4J,qBAAA,GAAAw1K,EAAA,yBAoCJp/K,EAAAkF,yBAGQlF,EAFRiF,yBAAA,YAEQjF,CAF8C,YAE9CA,CAD6B,eAC7BA,EAAAqjD,sBAAA,MAA2BrjD,EAAAkB,oBAAA,WAAclB,EAAAsjD,sBAAAtjD,EAAAkF,yBACzClF,EAAAiF,yBAAA,sBAGIjF,EAAA4I,qBAAA,yBAAAG,IAAA,OAAiB9H,GAAAqH,KAAAe,WAAgB,CAAAI,KAAAV,IAAiB,GAHtD/I,EAAAulB,iBAAA,yCAWJvlB,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAAy1K,EAAA,eAkBJr/K,EAAAkF,yBAOAlF,EALA4J,qBAAA,GAAA01K,EAAA,aAKAt/K,CAL+D,GAAAu/K,EAAA,cAiDnEv/K,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA41K,EAAA,mDAqBAx/K,EAAA4J,qBAAA,GAAA61K,GAAA,gFA4BJz/K,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA81K,GAAA,qBAzOa1/K,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,WAWThnD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAA5H,GAAAqH,MASatI,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA42C,aAAA,OAAAliC,GAAA3V,EAAAwN,sBAAA,MAAAvM,GAAA8tC,UAAA,KAAAp5B,GAAA/Y,SAqBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAA42C,aAAA,OAAAjiC,GAAA5V,EAAAwN,sBAAA,MAAAvM,GAAAyM,YAAA,KAAAkI,GAAAhZ,QAAA,GAuBAoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,QAAA5H,GAAAymD,aAuCG1nD,EAAAoF,oBAAA,GAKApF,EALA6I,qBAAA,UAAA5H,GAAAqH,KAAAse,cAAAnd,KAKAzJ,CALmC,iBAAAA,EAAAuJ,0BAAA,GAAAC,GAKnCxJ,CAHuC,KAAAiB,GAAAynD,SAGvC1oD,CADe,YAGfA,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAzlB,EAAAwN,sBAAA,sDAGmCxN,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAA41J,UAoBzC72J,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,GAAAgJ,eAODjK,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,GAAAqH,KAAApP,MAAAkvB,SA8CJpoB,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,GAAA+9K,cAAAh/K,EAAAwN,sBAAA,MAAAvM,GAAA89K,mBAqBA/+K,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,eAAA+/C,GAAA5oD,EAAAwN,sBAAA,MAAAvM,GAAAN,WAAA,KAAAioD,GAAAhsD,WAAAqE,GAAA+9K,cAAAh/K,EAAAwN,sBAAA,MAAAvM,GAAA89K,oBA4BJ/+K,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,GAAA+lD,0LAyBA62H,EAAqB,uKC/RlC,IAAAr8K,EAAA/L,EAAA,SACAA,EAAA,OACAA,EAAA,4DAmCgCuK,EAJJiF,yBAAA,WAIIjF,CADH,cACaA,EAAAmF,iBAAA,UACdnF,EADkBkF,wBAClBlF,4BACAA,EAAAkB,oBAAA,6DAOIlB,EAAA6I,qBAAA,SAAAmxD,EAAAh4C,OAAA,0BAGAhiB,EAAAkB,oBAAA,yEAzBZlB,EANJiF,yBAAA,UAMIjF,CADH,eAKOA,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAs2C,YAAAD,GAAkB,GAE3Bh6D,EAAAiF,yBAAA,YAkBIjF,EAfA4J,qBAAA,EAAA+1K,EAAA,aAeA3/K,CAZC,EAAA4/K,EAAA,aAYD5/K,CADE,EAAA6/K,EAAA,yBAAA7/K,EAAA2c,kCAON3c,EAAAkF,yBAEIlF,EADJiF,yBAAA,WACIjF,CADmB,YAEfA,EAAAmF,iBAAA,GAKJnF,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,YAAKnF,EAAAkF,yBACjClF,EAAAiF,yBAAA,WACIjF,EAAAmF,iBAAA,IAMRnF,EADIkF,wBACJlF,GAEIA,EADJiF,yBAAA,YACIjF,CAD6C,kBACjBA,EAAAmF,iBAAA,aAAMnF,EAAAkF,yBAClClF,EAAAiF,yBAAA,QAAAjF,EAAAulB,iBAAA,MAQZvlB,EAHYkF,wBAGZlF,OACAA,EAAAiF,yBAAA,gBAMIjF,EAAA4I,qBAAA,uBAAAoxD,EAAAh6D,EAAAgJ,wBAAAW,GAAAwL,UAAAwO,EAAA3jB,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAASua,EAAAkW,UAAA/iB,KAAAkjD,GAAqB,GAE9Bh6D,EAAAiF,yBAAA,eAAUjF,EAAAmF,iBAAA,IAMlBnF,EAFUkF,wBAEVlF,6FA7EIA,EAAAiX,sBAAA,eAAA0M,EAAAoW,SAAAigC,EAAA/uD,IAcajL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA8a,EAAAjN,SAAAlZ,SAAAw8D,EAAA/uD,KAMAjL,EAAAoF,sBAGnBpF,EAHmB6I,qBAAA,aAAAmxD,EAAAh4C,OAAA,KAAAg4C,EAAAh4C,OAAAplB,OAGnBoD,CAAA,WAAA8/K,GAakB9/K,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA3sD,cAAA2sD,EAAA7uD,MAAA,qBASInL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA20D,EAAA18D,WAAA,OAAAyiL,EAAAp8J,EAAAvV,MAAA4rD,EAAAzuD,QAAA,KAAAw0K,EAAA1yK,gBAAA,OAAA0yK,EAAAp8J,EAAAvV,MAAA4rD,EAAAzuD,QAAA,KAAAw0K,EAAA50K,MAAA,KAUAnL,EAAAoF,oBAAA,GAAApF,EAAAylB,oBAAAu0C,EAAA7iD,SAAA,IAAA6iD,EAAA7iD,sCAaZnX,EAAAoF,sBAAApF,EAAAiX,sBAAA,YAAA0M,EAAAwZ,YAAA68B,EAAA/uD,KAGUjL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA4X,EAAAwZ,YAAA68B,EAAA/uD,IAAA,wDA9EtBjL,EAAAiF,yBAAA,WAIIjF,EAAA4J,qBAAA,EAAAo2K,EAAA,6CAiFJhgL,EAAAkF,kEA/E0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAmW,EAAAtR,6CAP9BrS,EAAAwY,kCAAA,GACIxY,EAAA4J,qBAAA,EAAAq2K,EAAA,sJAEKjgL,EAAAoF,sBAA0CpF,EAA1C6I,qBAAA,cAAA+M,EAAA5V,EAAAwN,sBAAA,IAAAmW,EAAAtR,mBAAA,KAAAuD,EAAAhZ,OAA0CoD,CAAA,WAAAs9B,0BA0F3Ct9B,EAJJiF,yBAAA,WAIIjF,CADH,UACGA,EAAAulB,iBAAA,KAGJvlB,EADIkF,wBACJlF,0BAGAA,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,UAAAjF,EAAAulB,iBAAA,KACJvlB,EAD0DkF,wBAC1DlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBA9G7BtR,qBA8H+B,eAAA2oL,EAAlBC,EAAkB,WAavB,OAAAzoL,EAHJ,SAAAyoL,EACYp6J,EACArtB,GAAyBf,EAAAC,KAAAuoL,GADzBvoL,KAAAmuB,cACAnuB,KAAAc,OAXId,KAAAmiC,OAAiB,GACjBniC,KAAA8e,SAAmB,GACnB9e,KAAA47B,UAAsB,GACrB57B,KAAA+lC,SAAW,IAAIn8B,EAAAoV,aACfhf,KAAAiiC,UAAY,IAAIr4B,EAAAoV,aACjBhf,KAAAsiB,QAAUtiB,KAAKmuB,YAAY7L,QAE3BtiB,KAAAya,iBAAmBza,KAAKmuB,YAAY1T,gBAKjD,EAAC,EAAApZ,IAAA,QAAAC,MAEG,SAAMqS,GACT,OAAO3T,KAAKc,KAAKmuB,YAAYtb,EACjC,GAAC,CAAAtS,IAAA,WAAAC,MAEM,WACHtB,KAAKmuB,YAAY/Y,QAAQ,OAC7B,GAAC,CAAA/T,IAAA,cAAAC,MAEM,SAAYuhE,GACf,OAAO7iE,KAAK47B,UAAUh2B,SAASi9D,EACnC,GAAC,CAAAxhE,IAAA,cAAAC,MAEM,SAAY6a,GACfnc,KAAK+lC,SAAS7mB,KAAK/C,EACvB,IAAC,CA7B0B,GA6B1BmsK,SA7BQC,0CAAkBngL,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAAC,qBAAA,kDAAlB8/K,EAAkBz/K,UAAA,iBAAAqW,OAAA,CAAAgjB,OAAA,SAAArjB,SAAA,WAAA8c,UAAA,aAAAxc,QAAA,CAAA2mB,SAAA,WAAA9D,UAAA,aAAAh5B,MAAA,GAAAC,KAAA,EAAAkE,OAAA,gFA1HuBoiB,UAAAC,MAAAC,EAAA,oHAC1C,iBAgE4BF,UAAAG,MAAAD,EAAA,2GACJ,iBA8BmBF,UAAAI,MAAAF,EAAA,uIAWZF,UAAAM,MAAAJ,EAAA,krDA5GnCtnB,EAAAiF,yBAAA,UAAsBjF,EAAAmF,iBAAA,aAAOnF,EAAAkF,yBAC7BlF,EAAAiF,yBAAA,SAAAjF,EAAAulB,iBAAA,mCAEAvlB,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAAw2K,EAAA,oDAkGApgL,EAVA4J,qBAAA,EAAAy2K,EAAA,yBAAArgL,EAAA2c,iCAUA3c,CAV0B,EAAAsgL,EAAA,yBAAAtgL,EAAA2c,4EA1FtB3c,EAAAoF,oBAAA,GAAApF,EAAAylB,qBAAA,OAAA9P,EAAA3V,EAAAwN,sBAAA,IAAAvM,EAAAoR,mBAAA,KAAAsD,EAAA/Y,SAAA,8BAEWoD,EAAAoF,sBAA0BpF,EAA1B6I,qBAAA,QAAA7I,EAAAwN,sBAAA,IAAAvM,EAAAiZ,SAA0Bla,CAAA,WAAAo+B,oKAuHpC+hJ,CAAkB,oJCnI/B,IAAArqL,EAAAL,EAAA,4DAiEgBuK,EAAAkB,oBAAA,kCAIAlB,EAAAiF,yBAAA,iBAIIjF,EAAAmF,iBAAA,YACJnF,EAAAkF,0BAxEhB3N,4BA8EsC,eAAAgpL,EAAzBC,EAAyB,WAO0B,OAAA9oL,EAA5D,SAAA8oL,EAA8CjiJ,GAAU5mC,EAAAC,KAAA4oL,GAAV5oL,KAAA2mC,QAN9B3mC,KAAA8e,UAAmC,IAAxB9e,KAAK2mC,MAAM7nB,SACtB9e,KAAAmiC,QAA+B,IAAtBniC,KAAK2mC,MAAMxE,MAKuB,EAAC,EAAA9gC,IAAA,QAAAiE,IAH5D,WACI,OAAOtF,KAAKmiC,OAAS,UAAYniC,KAAK8e,SAAW,UAAY,SACjE,IAAC,CANiC,GAMjC6pK,SANQC,0CAAyBxgL,EAAAC,4BAOdnK,EAAAilE,kBAAgB,kDAP3BylH,EAAyB9/K,UAAA,yBAAAG,MAAA,GAAAC,KAAA,EAAAkE,OAAA,ygEAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3E9BhB,EAAAiF,yBAAA,wCAQQjF,EAPJiF,yBAAA,UAOIjF,CADH,SAEOA,EAAAkB,oBAAA,YAMJlB,EAAAkF,yBAEIlF,EADJiF,yBAAA,SACIjF,CADE,cAgCEA,EAtBAkB,oBAAA,cAsBAlB,CAnBE,oBAmBFA,CAbE,eAaFA,CAZmB,qBAYnBA,CAXmC,mBAWnCA,CAV8C,sBAU9CA,CANE,gBAMFA,CADE,iBASdA,EAFQkF,wBAERlF,mCACAA,EAAAiF,yBAAA,aAOIjF,EAJA4J,qBAAA,GAAA62K,EAAA,aAIAzgL,CADC,GAAA0gL,EAAA,mBAQT1gL,EADIkF,wBACJlF,UA5DgBA,EAAAoF,oBAAA,2CAmDHpF,EAAAoF,oBAAA,IAAApF,EAAA6I,qBAAA,QAAA5H,EAAAyV,UAIA1W,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAyV,oEASR8pK,CAAyB,gPCjFtC,IAAAh/K,EAAA/L,EAAA,MACAyC,EAAAzC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MAEAi0D,EAAAj0D,EAAA,OAIAkrL,GAHAlrL,EAAA,OACAA,EAAA,OAEAA,EAAA,kJAyB4BuK,EAAAiF,yBAAA,YACIjF,EAAAmF,iBAAA,oCACAnF,EAAAiF,yBAAA,aAAyBjF,EAAAmF,iBAAA,SAC7BnF,EAD+BkF,wBAC/BlF,uDAFIA,EAAAoF,sBAAApF,EAAAqF,6BAAA,WAAA2E,EAAAhK,EAAAwN,sBAAA,IAAAo8C,EAAAn+C,YAAA,KAAAzB,EAAAqD,aAAA,+BAFRrN,EAJJiF,yBAAA,iBAIIjF,CADH,WAEOA,EAAA4J,qBAAA,EAAAg3K,EAAA,aAIA5gL,EAAAiF,yBAAA,SACIjF,EAAAmF,iBAAA,GAGZnF,EAFQkF,wBAERlF,4DAXIA,EAAA6I,qBAAA,QAAA+gD,GAGqC5pD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAA2uC,YAK7B73C,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAAukD,EAAAv8C,cAAAu8C,EAAAz+C,KAAA,mEAlBhBnL,EALJiF,yBAAA,qBAKIjF,CADH,kBAGOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAAnJ,SAAAoV,6BAAAlM,EAAAkF,MAAArF,KAAAG,EAAAkF,MAAArF,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAiBF,EAAAqB,WAAW,CAAAu/C,SAAA,CAAA/gD,EAAAkC,MAA0B,GAKtDjL,EAAA4J,qBAAA,EAAAi3K,EAAA,kDAeR7gL,EADIkF,wBACJlF,6CArBQA,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAkF,OAEApO,EAAA6I,qBAAA,iBAAA7I,EAAAuJ,0BAAA,EAAA2E,IAKoBlO,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,IAAAtE,EAAAwQ,UAlBxCniB,0BA6DqC,eAAAupL,EAAxBC,EAAwB,SAAAvoL,GA+FjC,SAAAuoL,EACYh7J,EACArtB,EACAD,GAA0B,IAAAI,EAAAlB,SAAAC,KAAAmpL,IAElCloL,EAAAC,EAAAlB,KAAAmpL,IAJQh7J,cACAltB,EAAAH,OACAG,EAAAJ,YAjGII,EAAA6d,SAAqB,GAErB7d,EAAAqxD,cAAwB,EACvBrxD,EAAA8kC,SAAW,IAAIn8B,EAAAoV,aAEzB/d,EAAA2lB,KAAO,EACP3lB,EAAAsxD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,IACtBtkD,EAAAuxD,iBAAcvtD,EAEbhE,EAAAyiE,cAAgB,SAACp7C,GAAC,OAAK,WAC3BrnB,EAAK8kC,SAAS7mB,KAAKoJ,GACnBrnB,EAAKwxD,QAAQtwD,KAAK2X,KAAKuX,MAC3B,CAAC,EACMpwB,EAAAuV,MAAuB,KACtBvV,EAAAwxD,QAAU,IAAIr5C,EAAAuB,gBAAgB,GAMtB1Z,EAAA6gB,UAAS1I,EAAA2I,eAAc,CACnC9gB,EAAKH,KAAKyuD,cACVtuD,EAAKH,KAAK2W,kBACX3U,QACC1C,EAAAkb,KAAI,SAAArV,GAAkB,IAAA6B,EAAAma,EAAAhc,EAAA,GAARmS,EAAGtQ,EAAA,GAOb,OANmB7G,EAAKg/C,WAClBh/C,EAAKH,KAAK0uD,gBAFR1nD,EAAA,IAGF7G,EAAKH,KAAKuhB,kBAAkBjK,IACCoD,OAC/B,SAACi0C,GAAG,OAAMA,EAAIzL,KAAKp+C,SAAS,UAAU,GAEnB4W,KACnB,SAACyW,EAAG3U,GAAC,OACD2U,EAAEpf,UAAUy0B,cAAchqB,EAAEzK,aAC3Bof,EAAExd,cAAgB,IAAI6yB,cAAchqB,EAAE7I,cAAgB,GAAG,EAEtE,IAGYxU,EAAA0R,WAAa,SAAC4P,GAAC,OAAKthB,EAAKktB,YAAYxb,WAAW4P,EAAE,EAElDthB,EAAA8H,YAAWqQ,EAAA2I,eAAc,CACrC9gB,EAAKktB,YAAY1T,iBACjBxZ,EAAKwxD,UACN3vD,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAkb,KAAI,SAAA4G,GAAG,OAAHD,EAAAC,EAAA,GAAG,GACD5G,IAAI,SAACa,GAAK,MAAM,CACdzW,SAAUyW,EAAM3I,OAChBiT,QAASsiK,EAAAH,0BACTnmL,KAAIosB,IAAA,GACG1S,GAAK,IACRgmB,OAAQlhC,EAAKkhC,SAAWhmB,EAAM9I,GAC9ByL,SAAU7d,EAAK6d,SAASlZ,SAASuW,EAAM9I,MAE9C,EAAE,IAIKpS,EAAAyxD,QAAUzxD,EAAKktB,YAAY1T,iBAAiB3X,QACxD1C,EAAAkb,KAAI,SAACq0C,GAAC,OACFA,EAAEr0C,IAAI,SAACa,GAAK,MAAM,CACd9I,GAAI8I,EAAM3I,OACVuS,OAAQ,CAAC,WAAY,WACrBC,SAAU/kB,EAAKyiE,cAAcvnD,GAChC,EAAE,IAIKlb,EAAA4lB,UAASzN,EAAA2I,eAAc,CACnC9gB,EAAKktB,YAAYjS,OACjBjb,EAAKktB,YAAY1T,mBAClB3X,QACC1C,EAAAkb,KAAI,SAAA0sB,GAAA,IAAApV,EAAA3Q,EAAA+lB,EAAA,GAAUohJ,EAAWx2J,EAAA,UAAbA,EAAA,GACDyM,OAAO,SAACxY,EAAQ1K,GACnB,IAAM62C,EAAU/xD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtDo8B,EAAS0nJ,EAAYl6J,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAO8I,EAAM9I,EAAE,GAClD,OACA,OACNwT,SAAM,IAAA9iB,OAAKoY,EAAM3I,QAAU2I,EAAM9I,KAAQ,CACrCorB,KACIu0B,EAAO,SAAAjvD,OAAU29B,KACjBsxB,EAAO,GAAAjvD,OAAI29B,KACXowB,EAAAmB,gBAAe,GAAAlvD,OAAI29B,KAEpB7a,CACX,EAAG,GAAG,IAEZ5lB,CAYF,CAACG,SAAA+nL,EAAAvoL,GAAAd,EAAAqpL,EAAA,EAAA9nL,IAAA,UAAAiE,IApFD,WAAkB,IAAA4tD,EACd,OAAiB,QAAVA,EAAAlzD,KAAKwW,aAAK,IAAA08C,OAAA,EAAVA,EAAY1/C,SAAU,EACjC,GAAC,CAAAnS,IAAA,aAAAiE,IAwED,WACI,QAAStF,KAAKa,UAAUyE,IAAI,iBAChC,GAAC,CAAAjE,IAAA,WAAAC,MAUM,WAAQ,IAAAwD,EAAA9E,KACXA,KAAK6S,aACD,gBACA7S,KAAKmuB,YAAYnM,QAAQjP,UAAU,SAAA8f,GAAiB,IAC1Crc,EAAQ1R,EAAKhE,KAAKmuB,YADkB4D,EAARq/B,UAE9B17C,IAAO1R,EAAK0R,MAAQA,EAC5B,GAER,GAAC,CAAAnV,IAAA,WAAAC,MAEM,SAASkV,GACZpU,QAAQO,IAAI,YAAa6T,GACzBxW,KAAK2S,WAAW,CAAEu/C,SAAU,CAAC17C,GAAOnD,MACpC,IAAM+E,EAAMpY,KAAKc,KAAKgV,UAAUoZ,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOmD,GAAO3C,SAAS,GACrE,GAAIuE,EAAK,CACL,IAAAixK,GAA+B7yK,EAAM9Q,UAAY0S,EAAI1S,UAChDiB,MAAM,KACN2U,IAAI,SAACtY,GAAC,OAAKowD,WAAWpwD,EAAE,GAACsmL,EAAArnK,EAAAonK,EAAA,GAC9BrpL,KAAKwyD,YAAc,CAAEc,SAHNg2H,EAAA,GAGgB/1H,UAHL+1H,EAAA,GAI9B,CACAtpL,KAAKwW,MAAQA,CACjB,GAAC,CAAAnV,IAAA,UAAAC,MAEM,SAAQkyD,GACXxzD,KAAK4mB,KAAOoR,KAAK8F,IAAI,GAAK9F,KAAKC,IAAI,GAAIu7B,GAC3C,GAAC,CAAAnyD,IAAA,WAAAC,MAEM,WACHtB,KAAK4mB,KAAO,EACZ5mB,KAAKuyD,OAAS,CAAEjN,EAAG,GAAKC,EAAG,GAC/B,IAAC,CArIgC,CAAQjlD,EAAA6H,cAAY+gL,SAA5CC,0CAAuB/gL,EAAAC,4BAAAC,EAAA+M,kBAAAjN,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAH,iBAAA,kDAAvB4gL,EAAuBrgL,UAAA,gBAAAqW,OAAA,CAAAL,SAAA,WAAAqjB,OAAA,SAAAmwB,aAAA,gBAAAlzC,QAAA,CAAA2mB,SAAA,YAAAh9B,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,GAAAkE,OAAA,uUA/CHoiB,UAAAC,MAAAC,EAAA,0UAXzBtnB,EAAAiF,yBAAA,WACIjF,EAAA4J,qBAAA,EAAAu3K,EAAA,sDA6BJnhL,EAAAkF,yBAEIlF,EADJiF,yBAAA,UACIjF,CADgC,iHAI5BA,EADAiV,2BAAA,sBAAAlM,GAAA/I,SAAAoV,6BAAAnU,EAAAud,KAAAzV,KAAA9H,EAAAud,KAAAzV,IAAA,EACA/I,CADe,wBAAA+I,GAAA/I,SAAAoV,6BAAAnU,EAAAkpD,OAAAphD,KAAA9H,EAAAkpD,OAAAphD,IAAA,GAOvB/I,EADKkF,wBACLlF,UArCSA,EAAAoF,sBAAApF,EAAA6I,qBAAA,cAAAyiD,EAAAtrD,EAAAwN,sBAAA,IAAAvM,EAAAyY,SAAA,KAAA4xC,EAAA1uD,QA6BDoD,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,MAAA5H,EAAAs3C,SAEAv4C,EADAqV,2BAAA,OAAApU,EAAAud,KACAxe,CADe,SAAAiB,EAAAkpD,QAKfnqD,EAHA6I,qBAAA,SAAA7I,EAAAwN,sBAAA,KAAAvM,EAAAwd,QAGAze,CAHyB,WAAAA,EAAAwN,sBAAA,KAAAvM,EAAAN,UAGzBX,CAF6B,UAAAA,EAAAwN,sBAAA,KAAAvM,EAAAqpD,SAE7BtqD,CAD2B,UAAAA,EAAAuJ,0BAAA,GAAAC,qOAoB9Bu3K,CAAwB,gICxErC,IAAAzmD,EAAA7kI,EAAA,OAUA8B,QAAkB,WAmDb,OAAAG,EAjBD,SAAAimE,IAAqC,IAAzBtjE,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,GAAE7E,EAAAC,KAAA+lE,GACjC/lE,KAAKqT,GAAK5Q,EAAK4Q,IAAM,GACrBrT,KAAKuT,KAAO9Q,EAAK8Q,MAAQ,GACzBvT,KAAKyV,aAAehT,EAAKgT,cAAgB,GACzCzV,KAAK0G,OAASjE,EAAKiE,OAAS,IAAIssB,cAChChzB,KAAKuf,SAAW9c,EAAK8c,WAAY,EACjCvf,KAAKqc,aAAe5Z,EAAK4Z,cAAiB5Z,EAAKsG,UAAoB,GACnE/I,KAAKo7C,WAAa34C,EAAK24C,SACvBp7C,KAAK2T,MAAQlR,EAAKkR,OAAS,GAC3B3T,KAAKwpL,YAAc/mL,EAAK+mL,aAAe,GACvCxpL,KAAKwT,OAAS/Q,EAAK+Q,QAAU,GAC7BxT,KAAKoqB,OAAS3nB,EAAK2nB,QAAU,GAC7BpqB,KAAKypL,eAAiBhnL,EAAKgnL,gBAAkB,GAC7CzpL,KAAK+I,SAAWtG,EAAKsG,UAAY,GACjC/I,KAAKqkI,gBAAkB5hI,EAAK4hI,gBAC5BrkI,KAAKwW,MAAQ/T,EAAK+T,OAAS,IAAIksH,EAAAwB,cAC/BlkI,KAAKgmE,aAAevjE,EAAKujE,cAAgB,EAC7C,EAAC,EAAA3kE,IAAA,UAAAC,MAEM,SAAQytB,EAAejd,GAC1B,IAAM8R,EAAMmL,EAAmB,GAAXjd,EAAgB,IACpC,OACI9R,KAAKgmE,aAAaxqD,OACd,SAAC4W,GAAC,OACEA,EAAEvgB,MAAQkd,GACVqD,EAAEvgB,KAAoB,GAAbugB,EAAEtgB,SAAgB,KAAQ8R,GACtB,SAAbwO,EAAEsP,MAAiB,GACzB18B,OAAS,CAEnB,IAAC,CA/Da,mPCVlB,IAAA3E,EAAAxC,EAAA,OAGA8nE,GADA9nE,EAAA,OACAA,EAAA,QACAuC,EAAAvC,EAAA,2BAEM6rL,EAAsB,GACtBC,EAAwC,GAExCC,EAAc,IAAIjkH,EAAAI,MAAM,CAAEr/D,MAAO,yBAEvC,SAAgBmjL,EAAgBjoK,GAAmB,IACjB0V,EADiBD,EAAAa,EAC3BtW,GAAU,QAAA8Y,EAAA,WAAE,IAArBve,EAAKmb,EAAAh2B,MACPooL,EAAWx6J,KAAK,SAAAjpB,GAAK,OAAAA,EAAFoN,KAAgB8I,EAAM9I,EAAE,IAC5Cq2K,EAAWzwJ,KAAK9c,EAExB,EAJA,IAAAkb,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAAsC,GAIC,OAAApR,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACL,CANAx5B,kBAAAkqL,EAQApnG,YAAY,WACR,QAAWpvE,KAAMs2K,EACbA,EAAct2K,GAAMs2K,EAAct2K,GAAM,EACpCs2K,EAAct2K,IAAO,UACds2K,EAAct2K,EAGjC,EAAG,KAEH1T,YAGsB,eAAAmqL,EAAT5+K,EAAS,WAElB,OAAApL,EADA,SAAAoL,EAAgCpK,GAA0Bf,EAAAC,KAAAkL,GAA1BlL,KAAAc,MAA6B,EAC7D,EAAAO,IAAA,YAAAC,OAAAw5B,EAAAt5B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBkhE,GAAgB,IAAAknH,EAAAC,EAAA7tK,EAAAzD,EAAAuxK,EAAArgB,EAAAsgB,EAAA,OAAAzoL,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAC/BnC,KAAKc,KAAI,CAAAmB,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACHnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAEzB,GAAlC+mL,EAAWnnH,GAAUj9D,SAAS,KAC/Bi9D,EAAQ,CAAA5gE,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASsmL,GAAW,OAGhC,KAFGztK,EAAQutK,EAAWx6J,KACnB,SAAApnB,GAAY,OAAPA,EAAFuL,KAAuBwvD,GAAd/6D,EAALpB,QAAyCm8D,CAAQ,IAEnD,CAAA5gE,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS6Y,GAAK,WACnBwtK,EAAc9mH,GAAS,CAAA5gE,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAASsmL,GAAW,WAC1CI,EAAQ,CAAA/nL,EAAAE,KAAA,SAAAF,SAAAE,KAAA,MACY9B,EAAA8pL,YAAWtnH,GAC3B5/D,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,QAFX,KAAN0V,EAAMzW,EAAA4B,MAGF,CAAA5B,EAAAE,KAAA,SACNga,SAAQ,IAAIwpD,EAAAI,MAAKl3C,IAAA,GACTnW,GAAc,IAClBlC,MAAgB,QAAXyzK,EAAEjqL,KAAKc,YAAI,IAAAmpL,OAAA,EAATA,EAAWh7J,YAAW7M,EAAK1J,EAAO/E,WAE7C+1K,EAAWzwJ,KAAK9c,GAAOla,EAAAqB,OAAA,SAChB6Y,GAAK,QAAAla,SAAAE,KAAA,MAIV9B,EAAA+pL,wBAAuB,CACzBC,GAAIxnH,EACJr6B,QAAkB,QAAXuhJ,EAAE/pL,KAAKc,YAAI,IAAAipL,OAAA,EAATA,EAAWxvI,aAAalnC,KAClCpQ,YAAW,QACZ,GACiB,KANjB2mK,EAAO3nK,EAAA4B,KAKXpB,MACUuC,OAAY,CAAA/C,EAAAE,KAAA,SACpBga,SAAQ,IAAIwpD,EAAAI,MAAKl3C,IAAA,GACT+6I,EAAQ,IAAU,IACtBpzJ,MAAgB,QAAX0zK,EAAElqL,KAAKc,YAAI,IAAAopL,OAAA,EAATA,EAAWj7J,YAAW7M,EAAKwnJ,EAAQ,GAAGj2J,WAEjD+1K,EAAWzwJ,KAAK9c,GAAOla,EAAAqB,OAAA,SAChB6Y,GAAK,eAAAla,EAAAqB,OAAA,SAETsmL,GAAW,yBAAA3nL,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACrB,SAAAkpB,EAAAvM,GAAA,OAAAme,EAAAn2B,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,kBAAAC,MAEM,SAAgBsgB,GACnBioK,EAAgBjoK,EACpB,KA/CA,IAAAkZ,CA+CC,CAjDiB,GAiDjBgvJ,SAjDQ5+K,0CAAS9C,EAAAC,4BAAAC,EAAAG,oBAAA,+DAATyC,EAASiwB,MAAA,IAATjwB,CAAS,uMChCtB,IAAA5K,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,MACA0C,EAAA1C,EAAA,OACA8nE,EAAA9nE,EAAA,OACA2M,EAAA3M,EAAA,OACA0L,EAAA1L,EAAA,OAOMysL,EAA2D,GAEpD3qL,aAAa,SAAC+N,GACvB,IAAKA,EAAK,OAAO,EACjB,IACI,IAAImvF,IAAInvF,EACZ,OACI,OAAO,CACX,CACA,OAAO,CACX,EAEa/N,cAAc,SAAC4qL,GAAqB,SAC7C5qL,EAAA6qL,YAAWD,GAAMjpL,OAAS,KAAO,CAAEoM,IAAK,UAAW,EAEvD/N,4BAAA,SAAgB8qL,EAA0B/xK,GACtC,IAAM6oG,EAAS,CACXluG,GAAI,IAAI9J,EAAAsgC,YAAYnxB,GAAQrF,IAAM,IAClCE,KAAM,IAAIhK,EAAAsgC,YAAYnxB,EAAOnF,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WACrDt0B,aAAc,IAAIlM,EAAAsgC,YAAYnxB,EAAOjD,cAAgB,IACrD/O,MAAO,IAAI6C,EAAAsgC,YAAYnxB,EAAOhS,OAAS,GAAI,CAAC6C,EAAAugC,WAAWpjC,QACvDotE,KAAM,IAAIvqE,EAAAsgC,YAAYnxB,EAAOo7D,MAAQ,IACrC01G,YAAa,IAAIjgL,EAAAsgC,YAAYnxB,EAAO8wK,aAAe,GAAI,CAAC7pL,EAAA+qL,cACxDC,qBAAsB,IAAIphL,EAAAsgC,YACtBnxB,EAAOiyK,sBAAwB,EAC/B,CAACphL,EAAAugC,WAAWxZ,QAAQ,YAExBvnB,SAAU,IAAIQ,EAAAsgC,aACkB,iBAApBnxB,EAAO3P,SACR2P,EAAO3P,SAAiBpC,MAAM,KAC/B+R,EAAO3P,WAAa,IAE9BwW,SAAU,IAAIhW,EAAAsgC,YAAYnxB,EAAO6G,UAAY,EAAG,CAC5ChW,EAAAugC,WAAWxZ,QAAQ,YAEvB8qB,SAAU,IAAI7xC,EAAAsgC,YAAYnxB,EAAO0iC,WAAY,GAC7C4kD,OAAQ,IAAIz2F,EAAAsgC,YAAYnxB,EAAMsnF,SAAW,GACzCvsF,YAAa,IAAIlK,EAAAsgC,YAAYnxB,EAAOjF,aAAe,IACnD2W,OAAQ,IAAI7gB,EAAAsgC,YAAYnxB,EAAO0R,QAAU,IACzC5W,OAAQ,IAAIjK,EAAAsgC,YAAYnxB,EAAOlF,QAAU,IACzCuvC,SAAU,IAAIx5C,EAAAsgC,YAAYnxB,EAAOqqC,UAAY,IAC7CnvC,KAAM,IAAIrK,EAAAsgC,YAA8B,KAAM,CAACtgC,EAAAugC,WAAWC,WAC1Dp2B,MAAO,IAAIpK,EAAAsgC,YAAYnxB,EAAO/E,MAAO,CAACpK,EAAAugC,WAAWC,WACjD86D,QAAS,IAAIt7F,EAAAsgC,YAAYnxB,EAAOmsF,UAEpC,OAAKnsF,EAAOrF,UAIEkuG,EAAO3tG,KAHjB2tG,EAAO3tG,KAAKd,aAAaC,UAAU,SAACzR,GAAgB,OAChDigH,EAAO5tG,MAAM+rB,SAAS,CAACp+B,EAAM+R,IAAI,GAGlC,IAAI9J,EAAAqgC,UAAU23E,EACzB,EAEA5hH,uBAAA,SAAgBkyB,EAAqBxe,GACjC,OAAKA,GACDi3K,EAAoBj3K,KACxBi3K,EAAoBj3K,IAAE,EAAIhT,EAAAslJ,cAAa,CAAEn9G,QAASn1B,EAAI05B,MAAO,MAAOjqC,QAChE1C,EAAAkb,KAAI,SAACtY,GAAC,OAAMA,EAAEP,MAAQ,IAAI6Y,IAAI,SAACtY,GAAC,OAAK,IAAI2iE,EAAAI,MAAM/iE,EAAS,EAAC,MACzD5C,EAAAyiB,KAAI,SAAC7f,GAAC,SAAKwH,EAAAq/K,iBAAgB7mL,EAAE,MAC7B5C,EAAAsyB,aAAY,KAET43J,EAAoBj3K,KAAE,EAPb+F,EAAAQ,IAAG,GAQvB,EAEA,IAAIgxK,EAAsB,EAE1BjrL,oBAAA,SAAgBwrK,IAAyC,IAAvBgE,EAAAvqK,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAC7CyO,EAAE,SAAAtP,OAAY6mL,KACdr3K,EAAI,cAAAxP,OAAiB6mL,GACrBC,KAASvqL,EAAAytF,sBAAqB,OAAS,GAAM,GAAK68F,EAAc,EAChEzuK,EAAK0S,EAAA,CACPxb,KACAE,OACAu3K,UAAS,GAAA/mL,OAAKwP,EAAI,sBAClBC,OAAM,GAAAzP,OAAK6mL,GACXrrK,SAAwC,GAAxCA,EAAUjf,EAAAytF,sBAAqB,GAAI,GACnCrnF,MAAK,GAAA3C,OAAKwP,EAAKyf,cAAcrsB,MAAM,KAAKkO,KAAK,KAAI,KAAA9Q,OAAIxD,EAAA2kK,aACrDtyJ,KAAM,GACNm4K,cAAYzqL,EAAAytF,sBAAqB,OAAS,GAAM,EAChDi9F,eAAa1qL,EAAAytF,sBAAqB,OAAS,GAAM,EACjD3yC,YAAU96C,EAAAytF,sBAAqB,OAAS,GAAM,EAC9Ck9F,UAAuC,KAAvCA,EAAW3qL,EAAAytF,sBAAqB,KAChC+G,MAAiC,GAAjCA,EAAOx0F,EAAAytF,sBAAqB,GAC5Bq7C,UAAqC,GAArCA,EAAW9oI,EAAAytF,sBAAqB,GAChCp6E,MAAO,CAAC,cACR61K,YAAW,oBAAAzlL,OAAsBsP,GACjCwiB,SAAU,GACVq1J,aAAcL,EACR,UAAA9mL,UAAUzD,EAAAytF,sBAAqB68F,EAAc,KAC7C,GACNO,MAAO,IACJhc,GAEP,OAAIhzJ,EAAMstK,gBAAqBttK,EAAMstK,eAAkBzkL,OAAS,IAC5DmX,EAAMstK,eAAkBphK,QACpB,SAACy2D,GAAM,OACFA,EAAOv/D,YAAWjf,EAAAytF,sBAAqB5xE,EAAMoD,UAAY,CAAC,GAEnEpD,EAAMstK,eAAkB,GAAGlqK,SAAWpD,EAAMoD,UAEzCpD,CACX,2ICnHA,IAAA7b,EAAAzC,EAAA,OAEA0L,GADA1L,EAAA,MACAA,EAAA,QACAiQ,EAAAjQ,EAAA,OACA+a,EAAA/a,EAAA,OACAuQ,EAAAvQ,EAAA,OAEA6rD,EAAA7rD,EAAA,OACA8rD,EAAA9rD,EAAA,OACA8gK,EAAA9gK,EAAA,OAEAutL,EAAAvtL,EAAA,OACAwtL,EAAAxtL,EAAA,OACA+nL,EAAA/nL,EAAA,OACAytL,EAAAztL,EAAA,OACA0tL,EAAA1tL,EAAA,UAEAA,EAAA,OACAA,EAAA,yMAeA8B,qBAe+B,eAAA6rL,EAAlBxhI,EAAkBlqD,EAAA,SAAAkqD,IAAAjqD,EAAAC,KAAAgqD,EAAA,GAAAwhI,SAAlBxhI,yCAAkB,iDAAlBA,uDAZL1pD,EAAAyY,aACAjL,EAAAuB,gBACAq6C,EAAAx6C,iBACAy6C,EAAA39C,iBACA4M,EAAAM,qBACA9K,EAAA2B,kBACAxG,EAAAmC,YACAnC,EAAA0C,uBAKK+9C,CAAkB,oCA3B3B20G,EAAAO,6BAA4B,CAAA52J,EAAA2oG,KAAAzoG,EAAAkpG,eAAAhpG,EAAA4oG,cAAA1oG,EAAAwoG,UAE5Bg6E,EAAA3F,sBACA4F,EAAA9C,mBACA3C,EAAAK,sBACAqF,EAAAtF,6BACAuF,EAAApC,yBAAuB,oCAJvBiC,EAAA3F,sBAAqB,CAAAn9K,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA4oG,cAAAltF,EAAA+sF,wBAAA9sF,EAAAutF,uBAAAhpG,EAAAwoG,WAAA,oCACrBi6E,EAAA9C,mBAAkB,CAAAjgL,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA4oG,cAAA/sF,EAAAojF,4BAAA/+F,EAAAwoG,UAAA3sF,EAAAktF,oBAAA,CAAArpG,EAAAmpG,4CAClBm0E,EAAAK,sBAAqB,CAAA39K,EAAAupG,QAAAvpG,EAAA2oG,KAAAvoG,EAAA4oG,cAAA1oG,EAAAgvJ,UAAAhlD,EAAAg7C,aAAA/e,EAAA+pB,UAAAhwJ,EAAAwoG,UAAA09B,EAAAqqB,YAAAnqB,EAAAgkB,mBAAA9jB,EAAAgf,uBAAA/e,EAAA0xB,mBAAAlI,EAAAD,mBAAAC,EAAAxmD,gBAAAwmD,EAAA5K,qBAAA4K,EAAAvmD,QAAAumD,EAAA3K,mBAAA2K,EAAA1K,iBAAA,CAAA3lJ,EAAAmpG,UAAAonD,EAAAhuD,aAAAquD,EAAAnmD,gDAErBw4E,EAAApC,wBAAuB,CAAA7gL,EAAAupG,QAAAvpG,EAAA2oG,KAAA7sF,EAAA+sF,wBAAAvoG,EAAAgvJ,UAAAhlD,EAAAg7C,aAAA/e,EAAA+pB,UAAAD,EAAAxmD,gBAAAwmD,EAAAvmD,SAAA,CAAA9pG,EAAAmpG,UAAAonD,EAAAhuD,6NC1B3B,IAUI4gF,EAVJprL,EAAAxC,EAAA,OACAuC,EAAAvC,EAAA,MACAub,EAAAvb,EAAA,OAIA8nE,GAFA9nE,EAAA,OAEAA,EAAA,QACAyC,EAAAzC,EAAA,OACA2M,EAAA3M,EAAA,uCAIA8B,gBAG0B,eAAA+rL,EAAbvnK,EAAa,WA4BrB,OAAArkB,EAND,SAAAqkB,EACYrjB,EACAD,GAA0B,IAAAI,EAAAjB,KAAAD,EAAAC,KAAAmkB,GAD1BnkB,KAAAc,OACAd,KAAAa,YAtBJb,KAAA2rL,MAAQ,IAAIvyK,EAAAuB,gBAAyB,IAE1B3a,KAAA+iF,aAAe,IAAI3pE,EAAAuB,iBAAyB,GAE/C3a,KAAA6C,YAAc7C,KAAK+iF,aAAajoE,eAEhC9a,KAAAgT,KAAOhT,KAAK2rL,MAAM7wK,eAElB9a,KAAA+I,SAAW/I,KAAKgT,KAAKlQ,QACjC1C,EAAAkb,KAAI,SAACtY,GAAC,SAAK1C,EAAAqvC,WAAOrvC,EAAAmyB,SAAQzvB,EAAEsY,IAAI,SAAC8W,GAAC,OAAKA,EAAErpB,QAAQ,IAAG,IAG9C/I,KAAA4rL,SAAW,SAACzvK,GAAY,OAC9BA,EAAMxI,MAAM/N,SAAS3E,EAAKH,KAAK+U,SAASxC,GAAG,EAW3Co4K,EAAa,IAAIjhL,EAAAU,UAAUpK,GAC3Bd,KAAK64F,OACT,EAAC,EAAAx3F,IAAA,aAAAiE,eATG,OAAOtF,KAAK2rL,MAAMxzK,UACtB,GAAC,CAAA9W,IAAA,QAAAC,OAAAuqL,EAAArqL,EAAAC,IAAAC,KAUO,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACEnC,KAAKc,KAAK+B,YAAYC,QAAK1C,EAAA2C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OACxDjD,KAAKa,UAAUyE,IAAI,0BACnBtF,KAAK+iF,aAAa5gF,MAAK,GADuBnC,KAAK8rL,aACtB,wBAAA7pL,EAAAwC,OAAA,EAAA9C,EAAA3B,KAAA,IACrC,SAAA64F,IAAA,OAAAgzF,EAAAlnL,MAAA3E,KAAA4E,UAAA,IAED,CAAAvD,IAAA,SAAAC,MAIO,WAAuD,IAAhDyqL,EAAAnnL,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmC5E,KAAK4rL,SAClD,OAAO5rL,KAAK2rL,MAAMxzK,WAAWqD,OAAO,SAACxY,GAAC,OAAK+oL,EAAU/oL,EAAE,EAC3D,GAAC,CAAA3B,IAAA,YAAAC,MAAA,eAAA0qL,EAAAxqL,EAAAC,IAAAC,KAEM,SAAAwD,EAAgB29D,GAAgB,IAAAnqD,EAAAyD,EAAA,OAAA1a,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,KACd9B,EAAA8pL,YAAWtnH,GAAU5/D,YAAW,OAC/CkZ,EAAQ,IAAIwpD,EAAAI,MAAKl3C,IAAA,GADjBnW,EAAMtT,EAAAvB,MAEU,IAClB2S,MAAOxW,KAAKc,KAAKmuB,YAAW7M,EAAK1J,EAAO/E,WAE5C83K,EAAW5B,gBAAgB,CAAC1tK,IAAQ,wBAAA/W,EAAAX,OAAA,EAAAS,EAAAlF,KAAA,IACvC,gBAAAisL,EAAAtvK,GAAA,OAAAqvK,EAAArnL,MAAA3E,KAAA4E,UAAA,EATA,IAWD,CAAAvD,IAAA,OAAAC,MAIO,SAAKuhE,GACR,OAAO7iE,KAAK2rL,MAAMxzK,WAAW+W,KAAK,SAAAjpB,GAAK,OAAO48D,IAAP58D,EAAFoN,EAAwB,EACjE,GAAC,CAAAhS,IAAA,aAAAC,MAAA,eAAA4qL,EAAA1qL,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAA4b,EAAAuqK,EAAArnL,EAAA9E,KAAA,OAAAyB,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACkB9B,EAAAslJ,cAAa,CAC/Bn9G,QAASxoC,KAAKc,KAAKy5C,aAAalnC,GAChC05B,MAAO,MAENjqC,QAAK1C,EAAAkb,KAAI,SAAC8W,GAAC,OAAKA,EAAE3vB,IAAI,IACtBQ,YAAW,OACV2e,EANOzb,EAAAtC,KAMcyX,IACvB,SAACyuF,GAAG,OACA,IAAIpkC,EAAAI,MAAKl3C,IAAA,GACDk7E,GAAW,IACfvzF,MAAO1R,EAAKhE,KAAKmuB,YAAW7M,EAAK2nF,EAAIp2F,UACvC,GAGJw4K,EAAevqK,EAAWpG,OAAO,SAACW,GAAK,OAAKA,EAAM3I,MAAM,GAC9DxT,KAAK2rL,MAAMxpL,KAAKgqL,GAChBV,EAAW5B,gBAAgBsC,GAC3BnsL,KAAK+iF,aAAa5gF,MAAK,GAAM,wBAAAgE,EAAA1B,OAAA,EAAAuB,EAAAhG,KAAA,IAChC,gBAAA8rL,IAAA,OAAAI,EAAAvnL,MAAA3E,KAAA4E,UAAA,EArBA,MAvCA,IAAAinL,CA4DA,CAhFqB,GAgFrBH,SAhFQvnK,0CAAa/b,EAAA4U,mBAAA1U,EAAAG,qBAAAL,EAAA4U,mBAAAxU,EAAAD,iBAAA,qDAAb4b,EAAalH,QAAbkH,EAAajH,UAAAC,WAFV,SAEHgH,CAAa,sFChB1B8V,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,qFCJAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,OAAA8B,GACAs6B,EAAAC,aAAAr8B,EAAA,MAAA8B,qPCTA9B,EAAA,UAOAiQ,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,OACA8yB,EAAA9yB,EAAA,OASAsvI,EAAAtvI,EAAA,KACAub,EAAAvb,EAAA,OACAuC,EAAAvC,EAAA,2FAwDoBuK,EAAAiF,yBAAA,YAOIjF,EAAAmF,iBAAA,GAEJnF,EAAAkF,2EAJIlF,EAAAkxD,sBAAA,QAAAvtC,EAAAqgK,SAAA,oEAEAhkL,EAAAoF,sBAAApF,EAAAkX,6BAAA,IAAA+sK,EAAA,WAAAA,EAAA,MAAAA,GAAA,gFAoBJjkL,EAAAiF,yBAAA,YAMIjF,EAAAkB,oBAAA,sBAIAlB,EAAAiF,yBAAA,YAGIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAGIjF,EAAA4I,qBAAA,uBAAAs7K,EAAAlkL,EAAAgJ,wBAAA0Z,GAAAvN,UAAAwO,EAAA3jB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASua,EAAAg3I,WAAAupB,GAAgB,GAEzBlkL,EAAAiF,yBAAA,cAAUjF,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,6DAnBIA,EAAAkxD,sBAAA,OAAAvtC,EAAAwgK,SAAA,MAKInkL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAq7K,GAKAlkL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAA6+K,EAAA/4K,MAAAwY,EAAAtX,KAAA/N,MAAA,8BAaJ0B,EAAAkB,oBAAA,6DAGIlB,EAAAkxD,sBAAA,SAAAvtC,EAAAqgK,SAAA,iGAoCAhkL,EAAAiF,yBAAA,YAIIjF,EAAAmF,iBAAA,gCACJnF,EAAAkF,iEADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAiM,sBAAA,IAAA0X,EAAAla,KAAA,4CAoBRzJ,EAAAkB,oBAAA,iJAKIlB,EAFA6I,qBAAA,OAAAkyJ,EAEA/6J,CAFa,OAAA2jB,EAAAla,KAEbzJ,CADa,eAAAA,EAAAwN,sBAAA,IAAAmW,EAAAi6C,cAAA59D,EAAAwN,sBAAA,IAAAmW,EAAAi6C,cAAAm9F,EAAAz8J,MAAAssB,eAAA5qB,EAAAuJ,0BAAA,EAAA2E,KA9JzC3W,iCA4M4C,eAAA6sL,EAA/B30K,EAA+B,SAAAjX,GA4ExC,SAAAiX,EACqC8uB,EACzBmjE,EACAl2C,GAAyD,IAAA3yD,EAAAlB,SAAAC,KAAA6X,IAEjE5W,EAAAC,EAAAlB,KAAA6X,IAJiC8uB,QACzB1lC,EAAA6oG,YACA7oG,EAAA2yD,cA9EI3yD,EAAA6W,MAAQ,IAAIsB,EAAAuB,gBAAgB,IACrC1Z,EAAAgjC,OAAS,GACThjC,EAAA4Q,KAAO5Q,EAAK0lC,MAAM90B,MAAQiI,KAAKuX,MAC/BpwB,EAAA6Q,SAAW7Q,EAAK0lC,MAAM70B,UAAY,GAElC7Q,EAAAsrL,SAAW,EACXtrL,EAAAmrL,SAAW,EAEFnrL,EAAAwT,KAAOxT,EAAK0lC,MAAMlyB,KAClBxT,EAAA2/B,MAAQ,IAAIpC,MAAM,IAAIC,KAAK,GAC3Bx9B,EAAA8gK,UAAY,IAAI3oJ,EAAAuB,gBAAgB,GAEhC1Z,EAAA+kE,gBAAe5sD,EAAA2I,eAAc,CACzC9gB,EAAK6W,MACL7W,EAAK8gK,YACNj/J,QACC1C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAA3rB,GAAY,IAAA6B,EAAAma,EAAAhc,EAAA,GAClB,SAAOknI,EAAAxmE,mBAAkB,CACrB8lH,UAAW,CACPxrL,EAAKwT,KAAK/N,OAAK3C,OAAAqe,EAHVta,EAAA,GAIIwT,IAAI,SAACtY,GAAC,OAAKA,EAAE0D,MAAMssB,aAAa,KAC3Cne,KAAK,KACPye,gBAAc3C,EAAA4C,gBAAY5C,EAAA6C,YAAWvyB,EAAK4Q,OAC1C4hB,cAAY9C,EAAA4C,gBAAY5C,EAAA+C,UAASzyB,EAAK4Q,SACvC/O,QAAK1C,EAAAkyB,YAAW,oBAAMlZ,EAAAQ,IAAG,GAAG,GACnC,IAAC,EACDxZ,EAAAkb,KAAI,SAACoxK,GACD,IACoCp1J,EAD9Bq1J,EAAwD,GAAGt1J,EAAAa,EAC9Cw0J,GAAiB,IAApC,IAAAr1J,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAsC,KAA3B3c,EAAI6b,EAAAh2B,MACXqrL,EAAiBlxK,EAAKpI,GAAG2f,eAAiBvX,EAAKuqD,aAC1CxqD,OAAO,SAACxY,GAAC,MAAkB,SAAbA,EAAE0+B,MAAiB,GACjCpmB,IAAI,SAAC63H,GACF,IAAMthI,KAAO8e,EAAAi8J,cAAaz5C,EAAMltE,WAC1Bn0D,KAAW6e,EAAA+H,wBACb/H,EAAAi8J,cAAaz5C,EAAMjtE,UAAO,EAC1Bv1C,EAAAi8J,cAAaz5C,EAAMltE,YAEvB,MAAO,CACHp0D,OACAC,WACAid,OACMld,EAAKmtB,WAAantB,EAAKotB,aAAe,IACpC,GACJ,IACJs6B,KAAOznD,EAAW,GAAK,GAAM,IAErC,EACR,CAAC,OAAAwX,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CACD,OAAOwzJ,CACX,IAAC,EACDvsL,EAAAysL,gBAAe,KAAE,EACjBzsL,EAAAsyB,aAAY,IA+ETzxB,EAAA6rL,WAAY,EACX7rL,EAAA8rL,YAAc,EACd9rL,EAAA+rL,WAAa,EACb/rL,EAAAgsL,WAAa,KArDjBhsL,EAAK6W,MAAM3V,KAAIigB,EAAKnhB,EAAK0lC,MAAM7uB,QAAQ7W,CAC3C,CAACG,SAAAyW,EAAAjX,GAAAd,EAAA+X,EAAA,EAAAxW,IAAA,QAAAiE,IAxBD,WACI,SAAOqrB,EAAAoC,WAAU/yB,KAAK6R,KAAMiI,KAAKuX,MACrC,GAAC,CAAAhwB,IAAA,eAAAiE,IAED,WACI,WAAWwU,MAAOklB,UACtB,GAAC,CAAA39B,IAAA,iBAAAiE,IAED,WACI,IAAMuM,EAAO,IAAIiI,KAAK9Z,KAAK6R,MAC3B,OAAoD,GAA5CA,EAAKmtB,WAAantB,EAAKotB,aAAe,GAClD,GAAC,CAAA59B,IAAA,kBAAAiE,IAED,WACI,OAAQtF,KAAK8R,SAAW,GAAM,CAClC,GAAC,CAAAzQ,IAAA,UAAAC,MAWM,SAAQmrB,GACXzsB,KAAK8X,MAAM3V,KAAI,GAAA4B,OAAAqe,EACRpiB,KAAK8X,MAAMK,WAAWqD,OAAO,SAAC8mF,GAAC,OAAKA,EAAE57F,QAAU+lB,EAAK/lB,KAAK,IAAC,CAC9D+lB,KAEJzsB,KAAKysB,KAAO,IAChB,GAAC,CAAAprB,IAAA,aAAAC,MAEM,SAAWmrB,GACdzsB,KAAK8X,MAAM3V,KACPnC,KAAK8X,MAAMK,WAAWqD,OAAO,SAAC8mF,GAAC,OAAKA,EAAE57F,QAAU+lB,EAAK/lB,KAAK,IAE9D1G,KAAKysB,KAAO,IAChB,GAAC,CAAAprB,IAAA,iBAAAC,MAEM,WACHtB,KAAK4zD,YAAYlsD,OAAM,EAC3B,GAAC,CAAArG,IAAA,kBAAAC,MAEM,WAAe,IAAAwD,EAAA9E,KACZ6R,EAAO,IAAIiI,KAAK9Z,KAAK6R,MAC3B7R,KAAKwD,QACD,OACA,WACI,IAAMymF,EAAKnlF,EAAKyoG,cAActF,cAAclb,cAAa,UAAAhpF,OAC3C8N,EAAKmtB,WAAU,OAE7B,GAAIirD,EAAI,CACJ,IAAMqmC,EACFxrH,EAAKyoG,cAActF,cAAcuP,wBAC/B01E,EAAUjjG,EAAGutB,wBACnB1yG,EAAKyoG,cAActF,cAAcklF,SAC7BD,EAAQ/0C,KAAO,IAAM7nB,EAAK6nB,KAC1B,EAER,CACArzI,EAAKsoL,UACT,EACA,IAER,GAAC,CAAA/rL,IAAA,WAAAC,MAEM,WACHtB,KAAKosL,SAAWpsL,KAAKutG,cAActF,cAAcolF,WACjDrtL,KAAKusL,SAAWvsL,KAAKutG,cAActF,cAAcuF,SACrD,GAAC,CAAAnsG,IAAA,kBAAAC,MAOM,SAAgBwsB,GAA8B,IAAA5nB,EAAAlG,KACjD8tB,EAAMyjE,iBACNzjE,EAAMk4I,kBACNhmK,KAAKgtL,WACDl/J,aAAiBw/J,WACXx/J,EAAMy/J,QACNz/J,EAAM0/J,QAAQ,GAAGD,QAC3BvtL,KAAK8sL,WAAY,EACjB9sL,KAAK+sL,YAAc/sL,KAAK6R,KACxBic,aAAiBw/J,WACXttL,KAAK6S,aACD,UACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,YAAa,SAACrO,GAAC,OAC3C3d,EAAKunL,cAAc5pK,EAAE,IAG7B7jB,KAAK6S,aACD,UACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,YAAa,SAACrO,GAAC,OAC3C3d,EAAKunL,cAAc5pK,EAAE,IAGnCiK,aAAiBw/J,WACXttL,KAAK6S,aACD,cACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,UAAW,kBACvChsB,EAAKwnL,YAAY,IAGzB1tL,KAAK6S,aACD,cACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,WAAY,kBACxChsB,EAAKwnL,YAAY,GAGnC,GAAC,CAAArsL,IAAA,oBAAAC,MAEM,SAAkBwsB,GAA8B,IAAAhnB,EAAA9G,KACnD8tB,EAAMyjE,iBACNzjE,EAAMk4I,kBACNhmK,KAAKgtL,WACDl/J,aAAiBw/J,WACXx/J,EAAMy/J,QACNz/J,EAAM0/J,QAAQ,GAAGD,QAC3BvtL,KAAK+sL,YAAc/sL,KAAK8R,SACxBgc,aAAiBw/J,WACXttL,KAAK6S,aACD,UACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,YAAa,SAACrO,GAAC,OAC3C/c,EAAK6mL,gBAAgB9pK,EAAE,IAG/B7jB,KAAK6S,aACD,UACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,YAAa,SAACrO,GAAC,OAC3C/c,EAAK6mL,gBAAgB9pK,EAAE,IAGrCiK,aAAiBw/J,WACXttL,KAAK6S,aACD,cACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,UAAW,kBACvCprB,EAAK4mL,YAAY,IAGzB1tL,KAAK6S,aACD,cACA7S,KAAK8pG,UAAU53E,OAAO,SAAU,WAAY,kBACxCprB,EAAK4mL,YAAY,GAGnC,GAAC,CAAArsL,IAAA,gBAAAC,MAEO,SAAcwsB,GAClB,IAAM8/J,EACF5tL,KAAKgtL,YACJl/J,aAAiBw/J,WACZx/J,EAAMy/J,QACNz/J,EAAM0/J,QAAQ,GAAGD,SAErBM,GADMD,EAAY,GAAI,EAAK,GAG7B51J,KAAK6I,MAAM7I,KAAK8qB,IAAK8qI,EAAY5tL,KAAKitL,WAAc,GAAK,IAAM,GAC/D,EACJ,GAAIY,EAAY,CACZ,IAAMp6B,EAAWzzJ,KAAK6R,KACtB7R,KAAK6R,QAAO8e,EAAA2H,YAAWt4B,KAAK+sL,YAAac,GAAYn4J,UACjD11B,KAAK6R,KAAOiI,KAAKuX,QAAOrxB,KAAK6R,KAAO4hJ,EAC5C,CACJ,GAAC,CAAApyJ,IAAA,kBAAAC,MAEO,SAAgBwsB,GACpB,IAAM8/J,EACF5tL,KAAKgtL,YACJl/J,aAAiBw/J,WACZx/J,EAAMy/J,QACNz/J,EAAM0/J,QAAQ,GAAGD,SAErBM,GADMD,EAAY,GAAI,EAAK,GAG7B51J,KAAK6I,MAAM7I,KAAK8qB,IAAK8qI,EAAY5tL,KAAKitL,WAAc,GAAK,IAAM,GAC/D,EACAY,IACA7tL,KAAK8R,SAAWkmB,KAAK8F,IAAI,GAAI99B,KAAK+sL,YAAcc,GAExD,GAAC,CAAAxsL,IAAA,aAAAC,MAEO,WACJtB,KAAKijF,MAAM,WACXjjF,KAAKijF,MAAM,eACXjjF,KAAKgtL,WAAa,EAClBhtL,KAAK8sL,WAAY,CACrB,IAAC,CAzPuC,CAAQxsL,EAAA6H,cAAYqkL,SAAnD30K,0CAA8BzP,EAAAC,4BA6E3ByF,EAAAg5B,iBAAe1+B,EAAAC,4BAAAD,EAAAkiG,WAAAliG,EAAAC,4BAAAC,EAAAurD,cAAA,kDA7ElBh8C,EAA8B/O,UAAA,8BAAA4kG,UAAA,SAAAtkG,EAAAC,SAAA,EAAAD,y6GAxM/BhB,EADJiF,yBAAA,aACIjF,CAD0D,UAClCA,EAAAmF,iBAAA,uBAAiBnF,EAAAkF,yBAOrClF,EANJiF,yBAAA,aAMIjF,CADH,cACaA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAOQA,EANRiF,yBAAA,WAMQjF,CAJP,UAIOA,CADH,oBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAwI,KAAAV,KAAA9H,EAAAwI,KAAAV,GAAA/I,EAAAoJ,sBAAAL,EAAA,GAEA/I,EAAA4I,qBAAA,2BAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAA04J,UAAA5/J,KAAekH,EAAA04J,UAAA5pJ,WAAuB,GAAE,GAC5D/P,EAAAkF,yBACDlF,EAAAiF,yBAAA,2BACIjF,EAAAiV,2BAAA,yBAAAlM,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoV,6BAAAnU,EAAAojB,KAAAtb,KAAA9H,EAAAojB,KAAAtb,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,yBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAiBnI,EAAA+5J,QAAAjyJ,GAAe,GAGxC/I,EADKkF,wBACLlF,GAIIA,EAHJiF,yBAAA,WAGIjF,CADH,YAKOA,EAAA4J,qBAAA,GAAA87K,EAAA,aAUJ1lL,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CADgD,aAM5CA,EAAAkB,oBAAA,uBAIAlB,EAAAiF,yBAAA,aAGIjF,EAAAmF,iBAAA,IAERnF,EADIkF,wBACJlF,GACAA,EAAA4J,qBAAA,GAAA+7K,EAAA,6CAuBJ3lL,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CADqD,aAEjDA,EAAA4J,qBAAA,GAAAg8K,EAAA,cAOA5lL,EAAAiF,yBAAA,aAYIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAanI,EAAA4kL,gBAAA98K,GAAuB,EACpC/I,CADqC,sBAAA+I,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBACvBnI,EAAA4kL,gBAAA98K,GAAuB,GAKrC/I,EAHAkB,oBAAA,YAGAlB,CADO,aAKPA,EAAAiF,yBAAA,aAIIjF,EADA4I,qBAAA,qBAAAG,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAanI,EAAA6kL,kBAAA/8K,GAAyB,EACtC/I,CADuC,sBAAA+I,GAAA/I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBACzBnI,EAAA6kL,kBAAA/8K,GAAyB,GAC1C/I,EAAAkF,yBACDlF,EAAAiF,yBAAA,aAGIjF,EAAAmF,iBAAA,sCACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAAm8K,EAAA,cAOR/lL,EADIkF,wBACJlF,GACAA,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,oBAAA5I,SAAAgJ,wBAAAW,GAAA3J,EAAAoJ,sBAAUnI,EAAA+jL,WAAU,GAEpBhlL,EAAAkB,oBAAA,8FAUAlB,EAAA4J,qBAAA,GAAAo8K,EAAA,gEAgBhBhmL,EAHYkF,wBAGZlF,OAWYA,EAVZiF,yBAAA,eAUYjF,CARX,eAQWA,CAFP,YAEOA,CAD2B,kBACDA,EAAAmF,iBAAA,iBAAUnF,EAAAkF,yBACpClF,EAAAiF,yBAAA,aAA4BjF,EAAAmF,iBAAA,mBAGxCnF,EAHoDkF,wBAGpDlF,aApKYA,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAApU,EAAAwI,MAKAzJ,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAApU,EAAAojB,MAckBrkB,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAu3B,OAadx4B,EAAAoF,oBAAA,GAAApF,EAAAkxD,sBAAA,OAAAjwD,EAAAkjL,SAAA,MAIInkL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAA5H,EAAAoL,MAKArM,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAApE,EAAAoL,KAAAlB,MAAAlK,EAAAoL,KAAA/N,MAAA,KAOa0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAyO,QA2BC1P,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAAu3B,OAKdx4B,EAAAoF,sBAOApF,EAPAkxD,sBAAA,eAAAjwD,EAAAglL,eAAA,SAAAhlL,EAAA+iL,SAAA,MAOAhkL,CADC,QAAAiB,EAAAilL,gBAAA,OAqBGlmL,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,MAAAvM,EAAAyI,UAAA,KAGC1J,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAA5H,EAAAyjL,WAeL1kL,EAAAoF,oBAAA,GAEApF,EAFA6I,qBAAA,OAAA5H,EAAAoL,KAEArM,CAFa,OAAAiB,EAAAwI,KAEbzJ,CADa,eAAAA,EAAAwN,sBAAA,MAAAvM,EAAA28D,cAAA59D,EAAAwN,sBAAA,MAAAvM,EAAA28D,cAAA38D,EAAAoL,KAAA/N,OAAA0B,EAAAuJ,0BAAA,GAAA2E,IASIlO,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA7I,EAAAwN,sBAAA,MAAAvM,EAAAyO,QAqB7B1P,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,8bA2BH4G,CAA+B,oJChP5Cha,EAAA,yDAsBgBuK,EAPJiF,yBAAA,UAOIjF,CADH,WAEOA,EAAAmF,iBAAA,6DAMRnF,EADIkF,wBACJlF,2BATIA,EADAkxD,sBAAA,OAAAi1H,EAAAx/J,MAAA,IACA3mB,CADgC,QAAAmmL,EAAAh1H,KAAA,KAI5BnxD,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,IAAAlX,EAAAiM,sBAAA,IAAAk6K,EAAA18K,KAAA,mBAAAzJ,EAAAiM,sBAAA,IAAAk6K,EAAA18K,KAAA6jB,UAAA,GAAA64J,EAAAz8K,SAAA,uBAdpBnS,4BA+BsC,eAAA6uL,EAAzBC,EAAyB3uL,EA/BtC,SAAA2uL,IAAA1uL,EAAAC,KAAAyuL,GAiCoBzuL,KAAAgmE,aAAoC,GACpChmE,KAAA6R,KAAeiI,KAAKuX,QACvCm9J,SAJYC,yCAAyB,kDAAzBA,EAAyB3lL,UAAA,6BAAAqW,OAAA,CAAAsN,KAAA,OAAAu5C,aAAA,eAAAn0D,KAAA,QAAA5I,MAAA,EAAAC,KAAA,EAAAkE,OAAA,wXAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA5B9BhB,EAAAiF,yBAAA,WAGIjF,EAAA4J,qBAAA,EAAA08K,EAAA,cAeJtmL,EAAAkF,gCAb0BlF,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAA5H,EAAA28D,qLAuBrByoH,CAAyB,8LC1CtC,IAAApuL,EAAAxC,EAAA,OACAuC,EAAAvC,EAAA,MAEA2C,EAAA3C,EAAA,MACA+tC,EAAA/tC,EAAA,OACA8pD,EAAA9pD,EAAA,OAGM8wL,EAAiB,uBAiBvBhvL,eAAA,SAAgBykK,EAAar4H,GACzB,IAAM1Y,KAAQuY,EAAAI,eAAc,CAAED,MAC9B,SAAO1rC,EAAAiF,KAAG,GAAAvB,OAAI4qL,GAAc5qL,OAAGgoC,EAAI,IAAM1Y,EAAQ,KAAMvwB,QACnD1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,EAAC,GAE7D,EAMA9b,cAAA,SAAgBivL,EAAY7iJ,GACxB,IAAM1Y,KAAQuY,EAAAI,eAAand,EAAA,GAAMkd,IACjC,SAAO1rC,EAAAiF,KAAG,GAAAvB,OAAI4qL,GAAc5qL,OAAGsvB,EAAQ,IAAMA,EAAQ,KAAMvwB,QACvD1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,EAAC,GAE7D,EAMA9b,YAAA,SAAgBkvL,EAAUx7K,GACtB,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI4qL,EAAc,KAAA5qL,OAAIgkD,mBAAmB10C,KAAOvQ,QACtD1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAEzC,EAOA9b,cAAA,SAAgBmvL,EAAYz7K,EAAY5Q,GACpC,SAAOpC,EAAAynD,OAAK,GAAA/jD,OAAI4qL,EAAc,KAAA5qL,OAAIgkD,mBAAmB10C,IAAO5Q,GAAMK,QAC9D1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAAmB,UAAUrtC,EAAK,GAEzC,EAMA9b,cAAA,SAAgBovL,EAAY17K,GACxB,SAAOhT,EAAAqsC,KAAG,GAAA3oC,OAAI4qL,EAAc,KAAA5qL,OAAIgkD,mBAAmB10C,IAAO,CACtD20C,cAAe,QAEvB,EAMAroD,oBAAA,SAAgBqvL,EAAkB37K,GAC9B,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAI4qL,EAAc,KAAA5qL,OAAIgkD,mBAAmB10C,GAAG,cAAavQ,QAC/D1C,EAAAkb,KAAI,SAACtI,GAAI,OAAKA,EAAKsI,IAAI,SAACG,GAAI,OAAK,IAAIjb,EAAAssB,cAAcrR,EAAK,EAAC,GAEjE,oICjFA,IAAAkV,EAAA9yB,EAAA,OAEA8B,cAAwBG,EAsBpB,SAAAyhJ,IAA+B,IAAnB56G,EAAA/hC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAAE7E,EAAAC,KAAAuhJ,GAC3BvhJ,KAAK4S,KAAO+zB,EAAM/zB,MAAQ+zB,EAAMjhC,UAAY,QAC5C1F,KAAK2lD,SAAWhf,EAAMgf,UAClBhf,EAAMnzB,QAAUmzB,EAAMz1B,UAAY,CAC9Bo0C,EAAG3e,EAAM2e,EAAI3e,EAAMg0G,WAAa,EAChCp1F,EAAG5e,EAAM4e,EAAI5e,EAAMi0G,YAAc,GAEzC56I,KAAKy8I,SAAW91G,EAAM81G,UAAY,EAClCz8I,KAAK0tH,UAAY/mF,EAAM+mF,cAAa/8F,EAAA4C,aAAY,IAAIzZ,MACpD9Z,KAAKwW,MAAQmwB,EAAMnwB,MACnBxW,KAAK6V,SAAW8wB,EAAM9wB,SACtB7V,KAAKm6I,cAAgBxzG,EAAMwzG,YAC3Bn6I,KAAK66I,iBAAmBl0G,EAAMk0G,kBAAoB,UACtD,uMCtCJ,IAAAjxI,EAAA/L,EAAA,MACAiQ,EAAAjQ,EAAA,OACAyC,EAAAzC,EAAA,OAEA8pD,EAAA9pD,EAAA,OACA0C,EAAA1C,EAAA,2GAcQuK,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,iBACJlB,EAAAkF,iEADelF,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,oEAMXtI,EAJJiF,yBAAA,aAIIjF,CADH,cAEOA,EAAAmF,iBAAA,cACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,eAAsBjF,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAA6gC,GAAA,IAAA9nB,EAAA/hB,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAAS2Y,EAAA8+C,cAAa,GAAE7gE,EAAAmF,iBAAA,UAClDnF,EADsDkF,wBACtDlF,0BAEIA,EAAAiF,yBAAA,aACIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,wBACPnF,EADyBkF,wBACzBlF,IA/BZzI,wBA+CmC,eAAAsvL,EAAtB5pB,EAAsB,SAAAzkK,GAU/B,SAAAykK,EAA6C1+H,GAAU,IAAA1lC,EAAAlB,SAAAC,KAAAqlK,IACnDpkK,EAAAC,EAAAlB,KAAAqlK,IADyC1+H,QAR5B1lC,EAAA6sB,MAAQ,IAAIlkB,EAAAoV,aAEtB/d,EAAAyP,QAAOnQ,EAAA2uL,kBAAiBjuL,EAAKwrB,MAAQ,IAAIk7B,EAAA6Q,MAIzCv3D,EAAAqhB,SAAU,EAIbrhB,EAAKwrB,KAAOxrB,EAAK0lC,MAAMla,MAAQ,GAC/BxrB,EAAKyP,QAAOnQ,EAAA2uL,kBAAiBjuL,EAAKwrB,MAAMxrB,CAC5C,CAACG,SAAAikK,EAAAzkK,GAAAd,EAAAulK,EAAA,EAAAhkK,IAAA,WAAAC,MAEM,WAAkB,GAAC,CAAAD,IAAA,cAAAC,MAEnB,WACH,GAAKtB,KAAK0Q,OACV1Q,KAAK0Q,KAAKiX,mBACN3nB,KAAK0Q,KAAKgE,OAAO,CACjB,IAAMuvJ,EAAW,IAAIt8G,EAAA6Q,KAAI3pC,IAAA,GAClB7uB,KAAK0Q,KAAKpP,OAAK,IAClB2oI,aAAa,KAEjBjqI,KAAK8tB,MAAM5O,KAAK,CAAEoP,OAAQ,OAAQ+xB,SAAU4jH,GAChD,CACJ,IAAC,CA5B8B,CAAQ3jK,EAAA6H,cAAY8mL,SAA1C5pB,0CAAqBj9J,EAAAC,4BAUVyF,EAAAg5B,iBAAe,kDAV1Bu+H,EAAqBv8J,UAAA,qBAAAsW,QAAA,CAAA0O,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAAkE,OAAA,qmBAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA3CtBhB,EADJiF,yBAAA,WACIjF,CADI,WAEAA,EAAAmF,iBAAA,GACJnF,EAAAkF,yBACAlF,EAAAkB,oBAAA,WAEIlB,EADJiF,yBAAA,aACIjF,CAD0B,cAChBA,EAAAmF,iBAAA,WAElBnF,EAFuBkF,wBAEvBlF,KAgBAA,EAfA4J,qBAAA,EAAAm9K,EAAA,aAeA/mL,CAZC,EAAAgnL,EAAA,eAYDhnL,CANC,EAAAinL,EAAA,yBAAAjnL,EAAA2c,0EAhBO3c,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,UAAApE,EAAAojB,MAAApjB,EAAAojB,KAAApZ,GAAA,oCASHjL,EAAAoF,oBAAA,GAAgBpF,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAA0/D,GAMhB1/D,EAAAoF,sBAAApF,EAAA6I,qBAAA,QAAA5H,EAAAiZ,wWA2BA+iJ,CAAsB,qHCtDnC,IAAAhlK,EAAAxC,EAAA,OACA+tC,EAAA/tC,EAAA,OAEAuC,EAAAvC,EAAA,MACA8pD,EAAA9pD,EAAA,OAEMyxL,EAAiB,uBAMvB3vL,cAAA,SAAgBinJ,EAAY76G,GACxB,IAAM1Y,KAAQuY,EAAAI,eAAc,CACxBD,IACAw1E,OAAQ,CACJ,KACA,OACA,QACA,WACA,eACA,cACF1sG,KAAK,OAEX,SAAOxU,EAAAiF,KAAG,GAAAvB,OAAIurL,GAAcvrL,OAAGgoC,EAAI,IAAM1Y,EAAQ,KAAMvwB,QACnD1C,EAAAkb,KAAI,SAACtI,GAAI,OACLA,EAAKsI,IAAI,SAACG,GAAyB,OAAK,IAAIksC,EAAA25C,UAAU7lF,EAAK,EAAC,GAGxE,EAMA9b,YAAA,SAAgBihJ,EAAUvtI,GACtB,SAAOhT,EAAAiF,KAAG,GAAAvB,OAAIurL,EAAc,KAAAvrL,OAAIgkD,mBAAmB10C,KAAOvQ,QACtD1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAA25C,UAAU7lF,EAAK,GAEzC,EAMA9b,cAAA,SAAgB4vL,EAAY7oL,GACxB,SAAOrG,EAAAiF,KAAG,GAAAvB,OAAIurL,EAAc,KAAAvrL,OAAI2C,IAAS5D,QACrC1C,EAAAkb,KAAI,SAACG,GAAI,OAAK,IAAIksC,EAAA25C,UAAU7lF,EAAK,GAEzC,yIChDA5d,EAAA,8GAOgBuK,EADJiF,yBAAA,UACIjF,CADyD,aAErDA,EAAAmF,iBAAA,WAAInF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACtBnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBACIjF,EAAAkB,oBAAA,aAMAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,sBAEnBnF,EAFmCkF,wBAEnClF,8CAZsBA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAqlK,SAAA,mCAclBpnL,EADJiF,yBAAA,UACIjF,CAD0D,aAEtDA,EAAAmF,iBAAA,YAAKnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACvBnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBACIjF,EAAAkB,oBAAA,aAMAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,+BAEnBnF,EAF4CkF,wBAE5ClF,8CAZuBA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAqlK,SAAA,oCAiBnBpnL,EAJJiF,yBAAA,UAIIjF,CADH,aAEOA,EAAAmF,iBAAA,qCAAuCnF,EAAAiF,yBAAA,UAAMjF,EAAAmF,iBAAA,OAACnF,EAAAkF,yBAAOlF,EAAAmF,iBAAA,QACzDnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBACIjF,EAAAkB,oBAAA,cAMAlB,EAAAiF,yBAAA,eACIjF,EAAAmF,iBAAA,uCAGZnF,EAFQkF,wBAERlF,8CAdqBA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAqlK,SAAA,iBACbpnL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,+BAUIxN,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,IAAArF,EAAAwN,sBAAA,uEAKRxN,EADJiF,yBAAA,UACIjF,CAD0D,cAEtDA,EAAAmF,iBAAA,cACJnF,EAAAkF,yBACAlF,EAAAiF,yBAAA,sBACIjF,EAAAkB,oBAAA,cAOAlB,EAAAiF,yBAAA,eAAWjF,EAAAmF,iBAAA,6BAEnBnF,EAF0CkF,wBAE1ClF,8CAbuBA,EAAAoF,sBAAApF,EAAAiX,sBAAA,QAAA8K,EAAAqlK,SAAA,iCAkBnBpnL,EAJJiF,yBAAA,UAIIjF,CADH,qBAMOA,EAAAmF,iBAAA,2BAERnF,EADIkF,wBACJlF,0BAKIA,EAJJiF,yBAAA,UAIIjF,CADH,qBAMOA,EAAAmF,iBAAA,sBAERnF,EADIkF,wBACJlF,6BAtFJA,EAAAiF,yBAAA,YA2EIjF,EA1EA4J,qBAAA,EAAAy9K,EAAA,aA0EArnL,CA1E6D,EAAAsnL,EAAA,aA0E7DtnL,CA5D8D,EAAAunL,EAAA,aA4D9DvnL,CA3CC,EAAAwnL,EAAA,YA2CDxnL,CA3B8D,EAAAynL,EAAA,YA2B9DznL,CATC,EAAA0nL,EAAA,aAqBL1nL,EAAAkF,iEAvF6BlF,EAAA6I,qBAAA,YAAAkZ,EAAAzZ,MACUtI,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAnQ,MAcAnL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAhd,OAgB9B0B,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAA62B,cAiB8BnyC,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAy6B,OAiB9B/1C,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAAqsK,qBAYA3nL,EAAAoF,sBAAApF,EAAA6I,qBAAA,OAAAkZ,EAAAzZ,KAAAgT,SAAA8mH,iBAhFjB7qI,oBAqG8B,eAAAqwL,EAAjBC,EAAiB,kBAAAnwL,EAAA,SAAAmwL,IAAAlwL,EAAAC,KAAAiwL,EAAA,IAAA5uL,IAAA,WAAAC,MAInB,SAASiS,GAAY,IAAAgQ,EACxBtd,GAAsC,QAATsd,EAAAvjB,KAAK0Q,YAAI,IAAA6S,OAAA,EAATA,EAAWG,SAASnQ,KAAS,GAC1D,OADetN,EAAP+hE,SAAgB/hE,EAAPgiE,OAErB,IAAC,CAPyB,GAOzB+nH,SAPQC,yCAAiB,kDAAjBA,EAAiBnnL,UAAA,gBAAAqW,OAAA,CAAAzO,KAAA,QAAAzH,MAAA,EAAAC,KAAA,EAAAkE,OAAA,swBAAAjE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlGtBhB,EAAA4J,qBAAA,EAAAk+K,EAAA,mBAAiB9nL,EAAA6I,qBAAA,OAAA5H,EAAAqH,qXAkGZu/K,CAAiB,4LCxG9B,IAAAn6H,EAAAj4D,EAAA,OAEA0C,EAAA1C,EAAA,OAEA8yB,EAAA9yB,EAAA,OAuBa26D,EAAI14D,EA4Cb,SAAA04D,IAA4C,IAAA23H,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9rI,EAAhChiD,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA8B,GAAE7E,EAAAC,KAAAw4D,GACxCx4D,KAAKqT,GAAK5Q,EAAK4Q,IAAM5Q,EAAKiE,OAAK,SAAA3C,UAAa+xD,EAAAl2B,cAAa,IACzD5/B,KAAKuT,KAAO9Q,EAAK8Q,MAAQ,GACzBvT,KAAK0G,MAAQjE,EAAKiE,OAAS,GAC3B1G,KAAKglK,WAAaviK,EAAKuiK,YAAcviK,EAAK8Q,MAAQ,GAClDvT,KAAKilK,UAAYxiK,EAAKwiK,WAAa,GACnCjlK,KAAKm+C,MAAQ17C,EAAK07C,OAAS,GAC3Bn+C,KAAKu6C,aAAe93C,EAAK83C,cAAgB,GACzCv6C,KAAK6hC,MAAQp/B,EAAKo/B,OAAS,GAC3B7hC,KAAKm8H,MAAQ15H,EAAK05H,OAAS,GAC3Bn8H,KAAKkpH,SAAWzmH,EAAKymH,UAAY,GACjClpH,KAAKy2I,YAAch0I,EAAKg0I,UACxBz2I,KAAKu4B,aAAe91B,EAAK81B,WACzBv4B,KAAK+pC,SAAwB,QAAhBomJ,EAAG1tL,EAAKsnC,gBAAQ,IAAAomJ,KAC7BnwL,KAAKqyB,SAAwB,QAAhB+9J,EAAG3tL,EAAK4vB,gBAAQ,IAAA+9J,KAC7BpwL,KAAKqkI,gBAAkB5hI,EAAK4hI,iBAAmB,GAC/C,IAAMnpF,EAASz4C,EAAKy4C,QAAU,GAY9B,QAAW75C,KAXXrB,KAAKo+C,WAA4B,QAAlBiyI,EAAG5tL,EAAK27C,kBAAU,IAAAiyI,IAAI,GACjC5tL,EAAK+pK,WAAWtxH,EAAOjiB,KAAK,iBAC5Bx2B,EAAK+tL,SAASt1I,EAAOjiB,KAAK,mBAC1Bx2B,EAAK27C,YAAYlD,EAAOjiB,KAAKx2B,EAAK27C,YACtCp+C,KAAKk7C,OAASA,EACdl7C,KAAK41B,eAAiBnzB,EAAKmzB,gBAAkB,GAC7C51B,KAAK41B,eAAem6J,oBAChBttL,EAAKstL,qBAAuB/vL,KAAK41B,eAAem6J,oBACpD/vL,KAAKiqI,cAAyB,QAAXqmD,EAACtwL,KAAK0G,aAAK,IAAA4pL,GAAVA,EAAYlrB,SAAQ,GAAArhK,OAAIxD,EAAA2kK,eAC5CllK,KAAKwqI,eAAoC,QAAtB+lD,EAAG9tL,EAAK+nI,sBAAc,IAAA+lD,KACzCvwL,KAAK+vL,sBAA2C,QAApBtrI,EAACzkD,KAAK41B,sBAAc,IAAA6uB,IAAnBA,EAAqBsrI,qBAChCttL,EACRpB,KAAOrB,OAAOA,KAAK41B,eAAev0B,GAAOoB,EAAKpB,GAE5D,GA3EJ1B,OAAA64D,EA8EA74D,YAAuB,SAAA8wL,GAYnB,SAAA3nI,IAAyC,IAAA7nB,EAAAyvJ,EAAAC,EAAAxvJ,EAAAlgC,EAA7BwB,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA2B,GAAE7E,SAAAC,KAAA8oD,IACrC7nD,EAAAC,EAAAlB,KAAA8oD,EAAA,CAAMrmD,KACDmuL,mBAAqBnuL,EAAKmuL,oBAAsB,GACrD3vL,EAAK4vL,0BACDpuL,EAAKouL,4BAA6B,EACtC5vL,EAAKurI,aACkB,QAAnBvrG,EAAAx+B,EAAKmzB,sBAAc,IAAAqL,OAAA,EAAnBA,EAAqBurG,cAAe/pI,EAAK+pI,aAAe,GAC5DvrI,EAAKygC,OAAqB,QAAZgvJ,EAAAjuL,EAAKi1B,eAAO,IAAAg5J,GAAZA,EAAchhJ,SACtB,WACY,QAAZihJ,EAAAluL,EAAKi1B,eAAO,IAAAi5J,GAAZA,EAAcn4J,SACd,YACmB,QAAnB2I,EAAA1+B,EAAKmzB,sBAAc,IAAAuL,OAAA,EAAnBA,EAAqBO,SAAUj/B,EAAKi/B,QAAU,UACpDzgC,EAAKy2B,QAAUj1B,EAAKi1B,QACpBz2B,EAAK20B,eAAe9H,MAASrrB,EAAaquL,eAAe7vL,CAC7D,CAACG,SAAA0nD,EAAA2nI,GAAA3wL,EAAAgpD,EAAA,CA1BkB,CAAQ0P,GAwC/B74D,YAAuB,SAAAoxL,GAkFnB,SAAAzvF,IAAyC,IAAAx8F,EAA7BrC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA2B,GAAE7E,SAAAC,KAAAshG,IACrCx8F,EAAA5D,EAAAlB,KAAAshG,EAAA,CAAM7+F,KACDs+K,YAAct+K,EAAKs+K,aAAe,GACvCj8K,EAAKggK,SAAWriK,EAAKqiK,UAAY,GACjChgK,EAAKkD,eAAiBvF,EAAKuF,aAC3BlD,EAAKksL,iBAAmBvuL,EAAKuuL,kBAAoB,GACjDlsL,EAAKmsL,eAAiBxuL,EAAKwuL,gBAAmB,GAAWnsL,CAC7D,CAAC1D,SAAAkgG,EAAAyvF,GAAAjxL,EAAAwhG,EAAA,EAAAjgG,IAAA,WAAAiE,IA7ED,WACI,OAAOtF,KAAKkxL,cAAcp3K,KAAKuX,MACnC,GAAC,CAAAhwB,IAAA,gBAAAC,MAEM,SAAc6vL,GAAgB,IAAAC,EAAAC,EAC5BF,IAAUA,EAAWr3K,KAAKuX,OAC/B,IAAMxf,EAAO,IAAIiI,KAAKq3K,GAChBxsJ,EAAM9yB,EAAK4jI,SACX67C,KAAc3gK,EAAAkI,QAAOhnB,EAAM,cACjC,OACoC,QAAhCu/K,EAAApxL,KAAKixL,eAAeK,UAAY,IAAAF,OAAA,EAAhCA,EAAkC1rL,YACsB,QADd2rL,EAC1CrxL,KAAKgxL,iBAAiB9hK,KAAK,SAAClsB,GAAC,OAAKA,EAAE85J,cAAgBn4H,CAAG,UAAC,IAAA0sJ,OAAA,EAAxDA,EACM3rL,WACN,KAER,GAAC,CAAArE,IAAA,gBAAAiE,IAED,WACI,OAAOtF,KAAK6iK,mBAAmB/oJ,KAAKuX,MACxC,GAAC,CAAAhwB,IAAA,qBAAAC,MAEM,SAAmB6vL,GACjBA,IAAUA,EAAWr3K,KAAKuX,OAC/B,IAAM3rB,EAAW1F,KAAKkxL,cAAcC,GAC9BI,EAAWvxL,KAAKwxL,cAAcL,GACpC,GAAIzrL,EAASE,SAAS,OAAS2rL,EAC3B,MAAO,wBAEX,OAAQ7rL,GACJ,IAAK,MACD,MAAO,oBACX,IAAK,MACD,MAAO,sBACX,IAAK,MACD,MAAO,gBACX,IAAK,MACD,MAAO,gBACX,QACI,MAAO,UAEnB,GAAC,CAAArE,IAAA,WAAAiE,IAED,WACI,OAAOtF,KAAKwxL,cAAc13K,KAAKuX,MACnC,GAAC,CAAAhwB,IAAA,gBAAAC,MAEM,SAAc6vL,GACZA,IAAUA,EAAWr3K,KAAKuX,OAC/B,IAAM3rB,EAAW1F,KAAKkxL,cAAcC,GAC9BI,EAAWvxL,KAAKwxL,cAAcL,GACpC,MAAiB,QAAbzrL,GAAsB6rL,EAAiB,OAC1B,QAAb7rL,GAAsB6rL,EAAiB,WACpC,YACX,GAAC,CAAAlwL,IAAA,gBAAAC,MAEM,SAAc6vL,GACZA,IAAUA,EAAWr3K,KAAKuX,OAC/B,IAAMxf,EAAO,IAAIiI,KAAKq3K,GAChBxsJ,EAAM9yB,EAAK4jI,SACX67C,KAAc3gK,EAAAkI,QAAOhnB,EAAM,cAC3B4/K,EACFzxL,KAAKixL,eAAeK,IACpBtxL,KAAKgxL,iBAAiB9hK,KAAK,SAAClsB,GAAC,OAAKA,EAAE85J,cAAgBn4H,CAAG,GAC3D,IAAK8sJ,EAAM,OAAO,EAClB,IAAM1iK,EAAQ0iK,EAAK3nK,WACblG,EAAM6tK,EAAK1nK,SACXsH,EAAMxf,EAAKmtB,WAAantB,EAAKotB,aAAe,GAClD,OAAOlQ,GAASsC,GAAOA,EAAMzN,CACjC,IAAC,CAhFkB,CAAQ40C,uKChJ/B,IAAAoqG,EAAA/kK,EAAA,OACAmnJ,EAAAnnJ,EAAA,MACA8pD,EAAA9pD,EAAA,iBAEM0+J,EAAoB,GAEpBl7D,EAAa,IAAI15C,EAAA6Q,KAEvB74D,WAGqB,eAAA+xL,EAARC,EAAQ,kBAAA7xL,EAAA,SAAA6xL,IAAA5xL,EAAAC,KAAA2xL,EAAA,IAAAtwL,IAAA,YAAAC,OACjBw5B,EAAAt5B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBu8C,GAAe,IAAAzxB,EAAA,OAAAhrB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC7B+7C,EAAO,CAAAj8C,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS+9F,GAAU,OAG9B,KAFG50E,EAAO8vI,EAAUrtI,KACjB,SAAAjpB,GAAY,OAAPA,EAAFoN,KAAuB6qC,GAAdj4C,EAALS,QAAwCw3C,CAAO,IAElD,CAAAj8C,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASmpB,GAAI,OAAAxqB,SAAAE,KAAA,KACR6iJ,EAAApE,WAAU1iG,GAClBj7C,YAAWkB,MACL,kBAAM,IAAI,GAAC,OAFlB,KAAJsoB,EAAIxqB,EAAA4B,MAGI,CAAA5B,EAAAE,KAAA,SACJo6J,SAAUtjI,KAAKxM,GAAMxqB,EAAAqB,OAAA,SACdmpB,GAAI,QAAAxqB,SAAAE,KAAA,MAEFygK,EAAAisB,WAAU3wI,GAClBj7C,YAAWkB,MACL,kBAAM,IAAI,GAAC,QAFlB,KAAJsoB,EAAIxqB,EAAA4B,MAGI,CAAA5B,EAAAE,KAAA,SACJo6J,SAAUtjI,KAAKxM,GAAMxqB,EAAAqB,OAAA,SACdmpB,GAAI,eAAAxqB,EAAAqB,OAAA,SAER+9F,GAAU,yBAAAp/F,EAAAwC,OAAA,EAAA9C,EAAA,IACpB,SAAAunB,EAAAvM,GAAA,OAAAme,EAAAn2B,MAAA3E,KAAA4E,UAAA,MAzBD,IAAAk2B,CAyBC,CA1BgB,GA0BhB42J,SA1BQC,yCAAQ,0DAARA,EAAQx2J,MAAA,IAARw2J,CAAQ,8KCZrB,IAAApoL,EAAA1L,EAAA,OACAi4D,EAAAj4D,EAAA,OAEA8pD,EAAA9pD,EAAA,OAEI+zL,EAAa,EAINjyL,cAAc,cAEzBA,wBAAA,SAAgB8G,EAAsB2tF,GAClCz0F,cAAcy0F,CAClB,EAEA,IAAMy9F,EAAwB,GAQ9BlyL,mBAAA,SAAgBmyL,EACZz+K,EACAE,EACAw+K,GAEK1+K,IACDA,EAAE,QAAAtP,OAAW6tL,MAEZr+K,IACDA,EAAI,QAAAxP,OAAW6tL,SAEF3sL,IAAb8sL,IACAA,KAAW,EAAEj8H,EAAAi4B,sBAAqB,OAAS,IAQ/C,QANMxzC,EAAew3I,EAAQ,WAAgBpyL,EAAAulK,YAAYv+J,MAAM,KAAK,GAChEqrL,EAAsB,GACpBC,EAAiBj6J,KAAKC,OACxB69B,EAAAi4B,sBAAqB,GAAK,EAC1B8jG,EAAY7sL,QAEPotB,EAAI,EAAGA,EAAI6/J,EAAgB7/J,IAChC4/J,EAAU/4J,KAAK44J,KAAY/7H,EAAAi4B,sBAAqB8jG,EAAY7sL,UAEhEgtL,KAAYl8H,EAAAnmB,QAAOqiJ,GACnB,IAAMtrL,EAAK,GAAA3C,OAAMwP,EAAK5M,MAAM,KAAKkO,KAAK,KAAKme,cAAa,KAAAjvB,OACpDguL,EAAW,OAAS,IACxBhuL,OAAGpE,EAAAulK,aACH2sB,SAAY54J,KAAKvyB,GACV,CACH2M,KACAE,OACAyxJ,WAAYzxJ,EAAK5M,MAAM,KAAK,GAC5Bs+J,UAAW1xJ,EAAK5M,MAAM,KAAK,GAC3BD,QACAy3C,MAAK,iBACL+zI,QAASH,EACTx3I,aAAc,CACVlnC,GAAIknC,EAAa5zC,MAAM,KAAKkO,KAAK,KAAKme,cACtCzf,KAAMgnC,GAEV6D,WAAU,cAAAr6C,UAAgB+xD,EAAAi4B,sBAAqB,KAC/CokG,cAAYr8H,EAAAi4B,sBAAqB,QACjCikG,YACA7G,MAAK,GAAApnL,OAAKsP,EAAE,QAEpB,EAMA1T,mBAAA,SAAgBuvL,EAAiBziK,GAAW,IAAA2lK,EACxC,IAAK3lK,EACD,MAAM22D,MAAM,kBAGhB,IAAMm+B,EAAS,CACXhuG,KAAM,IAAIhK,EAAAsgC,YAAYpd,EAAKlZ,MAAQ,GAAI,CAAChK,EAAAugC,WAAWC,WACnDrjC,MAAO,IAAI6C,EAAAsgC,YAAYpd,EAAK/lB,OAAS,GAAI,CACrC6C,EAAAugC,WAAWpjC,MACX6C,EAAAugC,WAAWC,WAEfwQ,aAAc,IAAIhxC,EAAAsgC,YACdpd,EAAK8tB,cAAgB,GACrBhxC,EAAAugC,WAAWC,UAEfoU,MAAO,IAAI50C,EAAAsgC,YACPpd,EAAK0xB,OAAS,GACd50C,EAAAugC,WAAWxZ,QAAQ,kCAEvBy/J,oBAAqB,IAAIxmL,EAAAsgC,YAAYpd,EAAKsjK,sBAAuB,GACjEvlD,eAAgB,IAAIjhI,EAAAsgC,YAA+B,QAApBuoJ,EAAC3lK,EAAK+9G,sBAAc,IAAA4nD,OAKvD,OADa,IAAI7oL,EAAAqgC,UAAU23E,EAE/B,EAEA5hH,oBAAA,SAAgB0yL,IAEK,IADjB5lK,EAAA7nB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB,IAAI+iD,EAAAmB,UACtBr0C,EAAA7P,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,GAET28G,EAAS,CACXhuG,KAAM,IAAIhK,EAAAsgC,YAAYpd,EAAKlZ,MAAQ,IACnC7M,MAAO,IAAI6C,EAAAsgC,YAAYpd,EAAK/lB,OAAS,GAAI,CACrC6C,EAAAugC,WAAWpjC,MACX6C,EAAAugC,WAAWC,WAEfwQ,aAAc,IAAIhxC,EAAAsgC,YACdpd,EAAK8tB,cAAgB,GACrBhxC,EAAAugC,WAAWC,UAEfoU,MAAO,IAAI50C,EAAAsgC,YAAYpd,EAAK0xB,OAAS,IACrC1pC,KAAM,IAAIlL,EAAAsgC,YAAYp1B,GAAQ,GAAI,CAAClL,EAAAugC,WAAWC,YAIlD,OADa,IAAIxgC,EAAAqgC,UAAU23E,EAE/B,0IC1HA,IAAAjhH,EAAAzC,EAAA,OAEA0L,EAAA1L,EAAA,OAEAoQ,EAAApQ,EAAA,OACAsQ,EAAAtQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAuQ,EAAAvQ,EAAA,OAEA6rD,EAAA7rD,EAAA,OACA8rD,EAAA9rD,EAAA,OAKA2+H,GAHA3+H,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,QACAy0L,EAAAz0L,EAAA,OACA00L,EAAA10L,EAAA,0KAWA8B,oBAe8B,eAAA6yL,EAAjBvoI,EAAiBnqD,EAAA,SAAAmqD,IAAAlqD,EAAAC,KAAAiqD,EAAA,GAAAuoI,SAAjBvoI,yCAAiB,iDAAjBA,uDAZL3pD,EAAAyY,aACAxP,EAAAmC,YACAnC,EAAA0C,oBACA6B,EAAAuB,gBACAs6C,EAAA39C,iBACA09C,EAAAx6C,iBACAd,EAAA2B,kBACA9B,EAAAwB,yBACAtB,EAAA2B,iBAIKm6C,CAAiB,oCArB1BuyE,EAAAsB,0BAAyB,CAAAx1H,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAAgpG,eAAA9oG,EAAAi4J,mBAAAz8I,EAAAktF,cAAAjtF,EAAA2sF,oBAAAzsF,EAAAqzI,UAAAnzI,EAAAiqH,QAAAjqH,EAAAkqH,YAAAlqH,EAAAmqH,eAAAh8B,EAAAg7C,aAAA/e,EAAA+pB,UAAAr0I,EAAA6sF,UAAA09B,EAAAn9B,oBAAA,CAAArpG,EAAAmqG,2CAEzB6/E,EAAAz6K,+BAA8B,CAAAvP,EAAAupG,QAAAvpG,EAAA2oG,KAAAzoG,EAAA2pG,gBAAA3pG,EAAA4pG,QAAA1pG,EAAAgpG,eAAAs9B,EAAAgkB,mBAAA9jB,EAAAif,yBAAA/pI,EAAAktF,cAAAjtF,EAAA2sF,oBAAAzsF,EAAA6sF,UAC9BmhF,EAAA9D,2BAAyB,CAAAnmL,EAAAmpG,UAAAnpG,EAAAmqG,SAAA08B,EAAAz0B,0OCxB7B78G,EAAA,WACAyC,EAAAzC,EAAA,OACA8yB,EAAA9yB,EAAA,OAEAwC,EAAAxC,EAAA,qDA2CwBuK,EAAAiF,yBAAA,UACKjF,EAAAmF,iBAAA,GACyCnF,EAAAkF,kEADzClF,EAAAoF,sBAAApF,EAAAqF,6BAAA,gBAAA6D,EAAA+6D,OAAA,8CAuCDjkE,EAAAiF,yBAAA,mBAIIjF,EAAAmF,iBAAA,GACJnF,EAAAkF,iDAHIlF,EAAA6I,qBAAA,QAAAwhL,EAAAp/K,IAEAjL,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAAglL,EAAAl/K,KAAA,mEA1BZnL,EAJJiF,yBAAA,WAIIjF,CADH,cACmCA,EAAAmF,iBAAA,gCAE9BnF,EAAAkF,yBACFlF,EAAAiF,yBAAA,qBAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAuhL,EAAAtqL,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAqhL,YAAAD,GAAAvhL,KAAAG,EAAAqhL,YAAAD,GAAAvhL,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,2BAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAAg9B,SAA2B,EAAI,GAClClmC,EAAAkF,yBACDlF,EAAAiF,yBAAA,qBAEIjF,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAuhL,EAAAtqL,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAshL,UAAAF,GAAAvhL,KAAAG,EAAAshL,UAAAF,GAAAvhL,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,2BAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAAg9B,SAA2B,EAAI,GAElClmC,EAAAkF,yBAKGlF,EAJJiF,yBAAA,sBAIIjF,CADH,mBAEOA,EAAAiV,2BAAA,yBAAAlM,GAAA,IAAAuhL,EAAAtqL,EAAAgJ,wBAAAC,GAAAkM,UAAAjM,EAAAlJ,EAAAmJ,wBAAA,GAAAnJ,SAAAoV,6BAAAlM,EAAAnM,SAAAutL,GAAAhtL,SAAAyL,KAAAG,EAAAnM,SAAAutL,GAAAhtL,SAAAyL,GAAA/I,EAAAoJ,sBAAAL,EAAA,GACA/I,EAAA4I,qBAAA,2BAAA5I,EAAAgJ,wBAAAC,GAAA,IAAAC,EAAAlJ,EAAAmJ,wBAAA,UAAAnJ,EAAAoJ,sBAAAF,EAAAg9B,SAA2B,EAAI,GAE/BlmC,EAAA4J,qBAAA,EAAA6gL,EAAA,qBAQZzqL,EAFQkF,wBAERlF,8DA9BoCA,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA/L,EAAAiM,sBAAA,IAAA/C,EAAA8yE,KAAAsuG,GAAA,SAK5BtqL,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAAqhL,YAAAD,IAKAtqL,EAAAoF,sBAAApF,EAAAqV,2BAAA,UAAAnM,EAAAshL,UAAAF,IAEAtqL,EAAA6I,qBAAA,OAAAK,EAAAqhL,YAAAD,IAOItqL,EAAAoF,oBAAA,GAAApF,EAAAqV,2BAAA,UAAAnM,EAAAnM,SAAAutL,GAAAhtL,UAIqB0C,EAAAoF,sBAAApF,EAAA6I,qBAAA,UAAAK,EAAA0Q,uEA3ErC5Z,EAJJiF,yBAAA,UAIIjF,CADH,WAIOA,EAAAkB,oBAAA,qBACAlB,EAAAiF,yBAAA,SAAKjF,EAAAmF,iBAAA,GAAenF,EAAAkF,yBACpBlF,EAAAiF,yBAAA,WAAgCjF,EAAAmF,iBAAA,GAAgBnF,EAAAkF,yBAChDlF,EAAAiF,yBAAA,WAAgCjF,EAAAmF,iBAAA,GACpCnF,EADoDkF,wBACpDlF,GAEIA,EADJiF,yBAAA,UACIjF,CAD4D,WAExDA,EAAAmF,iBAAA,iCACJnF,EAAAkF,yBASQlF,EARRiF,yBAAA,eAQQjF,CAFP,YAEOA,CADkD,aACxBA,EAAAmF,iBAAA,IAAiBnF,EAAAkF,yBAC3ClF,EAAAiF,yBAAA,kBAA2BjF,EAAAmF,iBAAA,sBAEnCnF,EAFkDkF,wBAElDlF,KAKQA,EAJRiF,yBAAA,YAIQjF,CAJ8C,YAI9CA,CADH,eACaA,EAAAmF,iBAAA,IAGdnF,EADMkF,wBACNlF,GACAA,EAAAiF,yBAAA,aACIjF,EAAAmF,iBAAA,IACAnF,EAAA4J,qBAAA,GAAA8gL,EAAA,eAIA1qL,EAAAmF,iBAAA,WAAGnF,EAAAkB,oBAAA,SACHlB,EAAAmF,iBAAA,IAIZnF,EAFQkF,wBAERlF,KAEIA,EADJiF,yBAAA,YACIjF,CADkC,WAE9BA,EAAAmF,iBAAA,4BACJnF,EAAAkF,yBACAlF,EAAA4J,qBAAA,GAAA+gL,EAAA,cAmCJ3qL,EAAAkF,yBAEIlF,EADJiF,yBAAA,YACIjF,CADiD,gBAM7CA,EAAA4I,qBAAA,mBAAA5I,EAAAgJ,wBAAAW,GAAA,IAAAT,EAAAlJ,EAAAmJ,0BAAA,OAAAnJ,EAAAoJ,sBAASF,EAAA23D,cAAa,GAEtB7gE,EAAAmF,iBAAA,eAERnF,EADIkF,wBACJlF,GAOIA,EANJiF,yBAAA,eAMIjF,CADH,eACaA,EAAAmF,iBAAA,YAElBnF,EAFuBkF,wBAEvBlF,4EApGuBA,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,OAAAK,EAAAmb,MACVrkB,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAmb,KAAAlZ,MAC2BnL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAmb,KAAA/lB,OACA0B,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAAmb,KAAA0xB,OAW5B/1C,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,oBAAAghI,GAG8B7pI,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA7C,EAAA0hL,aAQhB5qL,EAAAoF,oBAAA,GAAApF,EAAA+L,4BAAA,QAAA7C,EAAA+6D,OAAA,iBAKVjkE,EAAAoF,oBAAA,GAAApF,EAAAqF,6BAAA,uBAAA6D,EAAA+6D,OAAA,uBACOjkE,EAAAoF,sBAAApF,EAAA6I,qBAAA,eAAAK,EAAA+6D,QAKPjkE,EAAAoF,oBAAA,GAAApF,EAAAkX,6BAAA,YAAAhO,EAAA+6D,OAAA,0CAAA/6D,EAAA+6D,OAAA,0BAWYjkE,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAAK,EAAA2hL,oBAuChB7qL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,YAAAK,EAAAg9B,uEAgBRlmC,EAAAiF,yBAAA,eAIIjF,EAAA4I,qBAAA,uBAAAw1F,EAAAp+F,EAAAgJ,wBAAAy9C,GAAAtxC,UAAAjM,EAAAlJ,EAAAmJ,0BAAAD,SAAA+6D,OAAAm6B,EAAAnzF,GAAAjL,EAAAoJ,sBAAAF,EAAAg9B,SAAqC,EAAI,GAEzClmC,EAAAmF,iBAAA,GACJnF,EAAAkF,sFADIlF,EAAAoF,sBAAApF,EAAAqF,6BAAA,IAAA+4F,EAAAjzF,KAAA,4BAIJnL,EAAAiF,yBAAA,YAIIjF,EAAAkB,oBAAA,oBACAlB,EAAAiF,yBAAA,OAAGjF,EAAAmF,iBAAA,iDACPnF,EADkDkF,wBAClDlF,UAFiBA,EAAAoF,sBAAApF,EAAA6I,qBAAA,gBA9H7BtR,4BAqIsC,eAAAuzL,EAAzBp1D,EAAyB,WAsB0C,OAAAh+H,EAA5E,SAAAg+H,EAAoBlqE,GAAoD7zD,EAAAC,KAAA89H,GAApD99H,KAAA4zD,cArBJ5zD,KAAAgiB,QAAU,CACtB,CAAE3O,GAAI,MAAOE,KAAM,uBACnB,CAAEF,GAAI,MAAOE,KAAM,qBACnB,CAAEF,GAAI,MAAOE,KAAM,kBAEhBvT,KAAAqsE,OAASrsE,KAAKgiB,QAAQ,GAAG3O,GACzBrT,KAAAmF,SAAiC,GACjCnF,KAAAk1J,SAAW,GACXl1J,KAAAsuC,SAAU,EACVtuC,KAAAsiB,SAAU,EACDtiB,KAAAizL,mBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,GAClCjzL,KAAAokF,KAAO,IAAI5lD,MAAM,GAC5BC,KAAK,GACLnjB,IAAI,SAACtY,EAAGitC,GAAG,SAAKtf,EAAAoQ,YAAQpQ,EAAA2hI,gBAAY3hI,EAAAoQ,SAAQjnB,KAAKuX,MAAO,KAAM4e,EAAI,GAChEjwC,KAAA2yL,YAAwB,GACxB3yL,KAAA4yL,UAAsB,EAM8C,EAAC,EAAAvxL,IAAA,cAAAiE,IAJ5E,WAAsB,IAAA6tL,EAAAlyL,EAAAjB,KAClB,OAAqD,QAA9CmzL,EAAAnzL,KAAKgiB,QAAQkN,KAAK,SAAClsB,GAAC,OAAKA,EAAEqQ,KAAOpS,EAAKorE,MAAM,UAAC,IAAA8mH,OAAA,EAA9CA,EAAgD5/K,OAAQ,EACnE,GAAC,CAAAlS,IAAA,WAAAC,MAIM,WAAQ,IAAA8xL,EAAAtuL,EAAA9E,KACLysB,KAAOnsB,EAAAkG,eACbxG,KAAKmF,SAAWsnB,EAAKukK,iBACrBhxL,KAAKqsE,OAAS5/C,EAAK/mB,UAAY,OACd,QAAb0tL,EAAApzL,KAAKmF,gBAAQ,IAAAiuL,OAAA,EAAbA,EAAepuL,QAAS,IACxBhF,KAAKmF,SAAW,IAAIq5B,MAAM,GAAGC,KAAK,IAAInjB,IAAI,SAACtY,EAAGitC,GAAG,MAAM,CACnD6sH,YAAa7sH,EACbnmB,WAAY,EACZC,SAAU,GACVrkB,SAAU,MACb,IAEL1F,KAAK2yL,YAAc3yL,KAAKmF,SAASmW,IAAI,SAACtY,EAAGitC,GACrC,IAAMrP,EAAQ5I,KAAK6I,MAAM79B,EAAE8mB,YACrBgX,EAAU9I,KAAK41D,MAA+B,IAAxB5qF,EAAE8mB,WAAa8W,IAC3C,SAAOjQ,EAAAzV,KAAIpW,EAAKs/E,KAAKn0C,GAAM,CAAErP,QAAOE,YAAWpL,SACnD,GACA11B,KAAK4yL,UAAY5yL,KAAKmF,SAASmW,IAAI,SAACtY,EAAGitC,GACnC,IAAMrP,EAAQ5I,KAAK6I,MAAM79B,EAAE+mB,UACrB+W,EAAU9I,KAAK41D,MAA6B,IAAtB5qF,EAAE+mB,SAAW6W,IACzC,SAAOjQ,EAAAzV,KAAIpW,EAAKs/E,KAAKn0C,GAAM,CAAErP,QAAOE,YAAWpL,SACnD,GACA11B,KAAKqzL,eACT,GAAC,CAAAhyL,IAAA,OAAAiE,IAED,WACI,SAAOhF,EAAAkG,cACX,GAAC,CAAAnF,IAAA,cAAAC,OAAAgyL,EAAA9xL,EAEM,eAAA0E,EAAAlG,KAAkB0H,IAAK9C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAAO,OAAAnD,IAAAC,KAAA,SAAAC,IAAA,IAAA4xL,EAAA3hC,EAAAud,EAAA93I,EAAAC,EAAAqN,EAAA5V,EAAAnL,EAAA6I,EAAA,OAAAhrB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjC+D,EAAKoc,SAAU,EACfpc,EAAK0tD,YAAYs/C,cAAe,EAC1BqgF,OAAUz5K,MAAO27H,SACjBmc,KAAQjhI,EAAAkI,QAAO/e,KAAKuX,MAAO,eAC7B89I,EAAY,IACNvd,GAAS,CACfkL,YAAay2B,EACbzpK,WAAY,EACZC,SAAU,GACVrkB,SAAUQ,EAAKmmE,QACjBh1C,EAAAa,EACgBhyB,EAAKf,UAAQ,IAA/B,IAAAkyB,EAAA/O,MAAAgP,EAAAD,EAAAc,KAAAC,MAAWuM,EAAGrN,EAAAh2B,MACJytB,EAAQ,IAAIjV,KAAK5T,EAAKysL,YAAYhuJ,EAAIm4H,cACtCl5I,EAAM,IAAI9J,KAAK5T,EAAK0sL,UAAUjuJ,EAAIm4H,cACxCn4H,EAAI7a,WAAaiF,EAAMiQ,WAAajQ,EAAMkQ,aAAe,GACzD0F,EAAI5a,SAAWnG,EAAIob,WAAapb,EAAIqb,aAAe,GAC/C0F,EAAIm4H,cAAgBy2B,IACpBpkB,EAAUvd,GAAO9nI,WAAa6a,EAAI7a,WAClCqlJ,EAAUvd,GAAO7nI,SAAW4a,EAAI5a,SAEvC,OAAAT,GAAA+N,EAAAxT,EAAAyF,EAAA,SAAA+N,EAAA8B,GAAA,CAAAl3B,SAAAE,KAAA,MACkB9B,EAAAmhG,UAAS,WAAWv+F,YAAW,QAA5CwpB,SAAIxqB,EAAA4B,KAAA5B,EAAAE,KAAA,MACJ9B,EAAAmzL,YAAW/mK,EAAKpZ,GAAEwb,IAAA,GACjBpC,GAAI,IACPukK,iBAAkB9qL,EAAKf,SACvB8rL,eAAgB9hB,KACjBlsK,YAAW,QACdiD,EAAKoc,SAAU,EACfpc,EAAK0tD,YAAYs/C,cAAe,EAC5BxrG,IACAhC,SAASwC,SACThC,EAAK0tD,YAAYlsD,SACpB,yBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA,EAjCgCF,EAiChC,GACJ,SAAAwnE,IAAA,OAAAqqH,EAAA3uL,MAAA3E,KAAA4E,UAAA,KAAAvD,IAAA,gBAAAC,MAEO,WACJ,IAAIqjC,EAAM,IAAI7qB,KACd9Z,KAAKk1J,SAAWl1J,KAAKizL,mBAAmB33K,IAAI,SAACtY,GAAC,SAC1C2tB,EAAA8iK,QAAO9uJ,EAAK3hC,GAAG0yB,SAAS,EAEhC,KA3CC,IAAA49J,CA2CA,CA9FiC,GA8FjCJ,SA9FQp1D,0CAAyB11H,EAAAC,4BAAAC,EAAAurD,cAAA,kDAAzBiqE,EAAyBh1H,UAAA,yBAAAG,MAAA,EAAAC,KAAA,EAAAkE,OAAA,syDAAAjE,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAlI9BhB,EAAA4J,qBAAA,EAAA0hL,EAAA,eA4GAtrL,EAAAiF,yBAAA,qBACIjF,EAAA4J,qBAAA,EAAA2hL,EAAA,gBAQJvrL,EAAAkF,yBACAlF,EAAA4J,qBAAA,EAAA4hL,EAAA,yBAAAxrL,EAAA2c,yEApHqB3c,EAAhB6I,qBAAA,QAAA5H,EAAAiZ,QAAgBla,CAAA,WAAAyrL,GA6GIzrL,EAAAoF,oBAAA,GAAApF,EAAA6I,qBAAA,UAAA5H,EAAA2Y,aAmBpB87G,CAAyB","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_AppRoutingModule","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","_AppComponent","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","_AppModule","AppModule","bootstrap","SpacePipe","provideHttpClient","withInterceptorsFromDi","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","_NotFoundComponent","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","_SharedComponentModule","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_DeskBookingComponent","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ɵɵpureFunction0","_c0","date","duration","_r1","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","tmp_4_0","allow_all_day","can_book_lockers","allow_assets","_DeskBookingFormComponent","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","_DeskBookingSuccessComponent","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_MeetingBookingComponent","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r4","display_name","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","building","buildings","_r5","findAvailableTime","hide_block","attendees","_r6","catering","ɵɵpureFunction3","_c1","resources","level","has_catering","details","MeetingBookingFormComponent_div_0_div_12_Template","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","MeetingBookingFormComponent_div_0_section_60_Template","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","_MeetingBookingFormComponent","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","_MeetingBookingSuccessComponent","system","button_toggle_1","bottom_sheet_1","ROUTES","_BookModule","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_BookingConfirmedComponent","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","_FeaturesFilterService","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","ɵɵtwoWayListener","feature_r6","$implicit","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","applyFilters","tmp_2_0","tmp_3_0","minDate","_FilterSpaceComponent","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","_FindSpaceItemComponent","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r4","handleBookEvent","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","map_r6","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r7","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_5_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","empty_state_r8","_r9","openRoomDetails","_FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","load_state_r10","room_tile_component_1","_MapService","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","_RoomBookingComponent","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_RoomConfirmService","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_RoomConfirmComponent","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","ctx_r0","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r2","RoomDetailsComponent_section_21_div_3_Template","back","_r4","_RoomDetailsComponent","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","_RoomTileComponent","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r1","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","ctx_r2","isEvent","booking_card_r2","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","empty_state_r4","_UpcomingBookingsComponent","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","load_state_r5","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r3","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","s_r4","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_MeetingFlowConfirmComponent","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_1","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_ScheduleStateService","_lockers","_parking","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","include_deleted","group_events","_ref18","lockers","lockers$","_ref20","_ref21","system_id","mod","execute","my_lockers","_ref23","_ref24","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref25","_ref26","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref27","_ref28","filters","_filters$shown_types","_filters$shown_types2","_ignore_cancel","_checkCancel","interval","startWith","_ref29","_ref31","_ref32","_auto_release$resourc","is_home","auto_release","time_before","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","close_after","wording","time_after","Math","min","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","differenceInMilliseconds","getTime","format","confirm_text","cancel_text","close_delay","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","ParkingService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_loop","assetgroup","_AssetGroupPipe","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r2","item_r5","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","_AssetListFieldComponent","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","_AssetDetailsComponent","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","empty_state_r3","_AssetFiltersDisplayComponent","AssetFiltersDisplayComponent","day_r4","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r6","toggleCategory","category","_AssetFiltersComponent","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r2","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","empty_state_r5","_AssetListComponent","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","load_state_r6","displayed","_AssetSelectModalComponent","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_AssetStateService","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","groups_cache","queryAssetGroupsExtended","has","forkJoin","limit","setTimeout","delete","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","products","_booking$asset_ids2","_removeAssetRequests","requests","_$asset_ids","removeBooking","differenceBetweenAssetRequests","new_assets","old_assets","changed","match","_validateAssetRequestsForResource","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref19","_available_groups$fin","idx","_assets$find","_request$items","createBooking","user_email","r","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","validateAssetRequestsForResource","_AssetsModule","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","ɵɵpureFunction1","period","desk_icon_r3","raw_description","for_current_user","is_reserved_parking_space","_BookingCardComponent","BookingCardComponent","_async_handler_class_","_route","edit","remove","assigned_space","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","desk_settings_modal_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","menu_r5","item_r8","request_r7","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r10","setDeskHeight","_r11","_r12","_BookingDetailsModalComponent","hide_map","has_assets","region","regions","_this$booking6","ts","booking_start","booking_end","_this$booking15","_this$booking16","_this$booking17","_toggleCheckedIn","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","DeskSettingsModalComponent","_templateObject6","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","booking_status","can_edit","is_checked_in","desk_height_enabled","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_BookingFormService","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","mapping","available_resources","merge","timer","_this$_org$building","restrictions","_this$form$getRawValu","bookedResourceList","organisation","booked_ids","_asset$zone","_asset$zone2","_asset$groups","_options$features","_asset$zone3","_asset$zone4","is_restricted","rulesForResource","hidden","groups","grp","bookable","assigned_to","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone5","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","_this3$_org$building","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_name","user_id","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_asset$zone6","_asset$zone7","_unavailable$map","_getNearbyResources","t2","t3","call","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","active_bookings","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_BookingLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","RecurrenceDays","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","_data$title","_data$extension_data5","_b_valid_asset_cache","_b_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","process_state","recurrence_type","recurrence_days","recurrence_nth_of_month","recurrence_interval","recurrence_end","removeEmptyFields","_this$extension_data","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","endInFuture","company","featured","other_asset_type","attendance_type","plate_number","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","setBookingState","utm_source","queryBookingGuests","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","_SharedBookingsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","_DeskConfirmModalComponent","DeskConfirmModalComponent","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r3","ctx_r3","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","placeholder_r6","_DeskListFieldComponent","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","_DeskQuestionsModalComponent","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","_DeskDetailsComponent","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","desk_filters_component_1","show_fav","_DeskFiltersDisplayComponent","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_DeskFiltersComponent","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","lvl","setLevel","l","reg","allow_time_changes","hide_levels","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","end_date","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_DeskListComponent","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","_DeskMapComponent","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","_DeskSelectModalComponent","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","_DeskSettingsModalComponent","sitting_height","standing_height","last_height","parseInt","localStorage","preset","new_height","_setDeskHeight","sys_id","module","toFixed","setPreset","updatePreset","formatLabel","desk_confirm_modal_component_1","_DesksService","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","_InviteVisitorFormComponent","InviteVisitorFormComponent","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","ɵɵstyleProp","size","_LockerGridComponent","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","_LockerListFieldComponent","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r2","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_LockerBankListComponent","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","_LockerFiltersDisplayComponent","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r6","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r8","LockerFiltersComponent_section_39_div_3_Template","_LockerFiltersComponent","active_levels","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_18_0","tmp_20_0","explore_locker_bank_info_component_1","lvl_r1","_LockerMapComponent","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","_this2$level","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","_r8","_LockerSelectModalComponent","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","_LockersService","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_ParkingSpaceDetailsComponent","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","_ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_ParkingSpaceFiltersComponent","_form","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","_ParkingSpaceListComponent","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","_ParkingSpaceLocationPinComponent","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","_ParkingSpaceSelectMapComponent","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","_ParkingSpaceSelectModalComponent","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","_ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","_ParkingService","level_list","blds","buildingsForRegion","bld_ids","_blds$find","_lvls$","_$assigned_to","_email","user_details","_$email","_email2","deny_parking_access","deny","booked_space","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","_CateringImportMenuModalComponent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","load_state_r3","keycodes_1","invalid","touched","auto_r3","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","saveChanges","dirty","option_r9","_CateringItemModalComponent","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r4","duplicateOrder","editOrder","removeOrder","optionList","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","_CateringListFieldComponent","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","row_r2","row","setEnabled","isEnabled","data_r4","symbol","row_r6","addOption","editItem","show_children","menu_r7","row_r10","editOption","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","_CateringMenuComponent","CateringMenuComponent","_catering","_orders","menu","deleteOption","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringOrdersService","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","active_template_r12","_c2","_c3","price_template_r13","_c4","actions_template_r14","child_template_r15","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r4","_CateringItemOptionModalComponent","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","_CateringOrderItemComponent","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","catering_vars_1","data_r1","CateringOrderListComponent_ng_template_6_span_2_Template","CateringOrderListComponent_ng_template_8_span_3_Template","data_r5","status_r7","row_r8","updateStatus","colour","CateringOrderListComponent_ng_template_10_button_8_Template","tmp_11_0","data_r9","menu_r10","statuses","row_r12","CateringOrderListComponent_ng_template_12_ng_template_4_Template","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_14_ul_0_li_1_Template","CateringOrderListComponent_ng_template_14_ul_0_Template","_CateringOrderListComponent","CateringOrderListComponent","CATERING_STATUSES","CateringOrderListComponent_ng_template_2_Template","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","utilities_1","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template","_CateringOrderModalComponent","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","tag_r3","opt_r6","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r5","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r8","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","multi_options_r9","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","_CateringItemDetailsComponent","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","empty_state_r10","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","_CateringItemFiltersComponent","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","_CateringItemListItemComponent","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","placeholder_r3","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","empty_state_r6","_CateringItemListComponent","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","load_state_r7","_CateringOrderStateService","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_NewCateringOrderModalComponent","_order","NewCateringOrderModalComponent_button_14_Template","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r2","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","_CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","events_fn_1","_CateringOrdersService","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_CateringStateService","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","_SharedCateringModule","i_r2","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","_ChargeCodeListModalComponent","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_AsyncHandler","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","_FeatureAvailableGuard","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","degreesToRadians","degrees","PI","hexToRgb","hex","interpolateColors","rgb1","rgb2","fraction","round","rgbToHex","componentToHex","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","shiftColorTowards","hex1","hex2","resultRgb","_GoogleAnalyticsService","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","_HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_KeepAliveService","KeepAliveService","_system_id","_delay","_bindTo","GoogleMaps","Mapbox","_MapsPeopleService","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","_RemoteLoggingService","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_SettingsService","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","ENDPOINT","queryShortURLs","showShortURL","QR_STORE","_getShortUrlQRCode","response","cookie","apiKey","fetch","URL","createObjectURL","createShortURL","updateShortURL","getShortUrlQRCode","saveShortURL","patchShortURL","deleteShortURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","_UploadsService","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","cloud_uploads_1","blobUtil","Observable","observer","arrayBufferToBlob","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","_UserIdleTimeService","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","p","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","_VorlonService","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","_AccessibilityTooltipComponent","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","_ActionIconComponent","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r8","rule_r7","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r9","set_r4","rule_types","show_rules","i_r5","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","_AttachedResourceConfigModalComponent","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","_AuthenticatedImageDirective","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ElementRef","_AuthorisedAdminGuard","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_AuthorisedUserGuard","_access","_this$_access","space_utilities_1","space_r5","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","_AvailableRoomsStateModalComponent","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","_BindingDirective","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r2","_BuildingSelectComponent","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","_BuildingPipe","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","_ChangelogModalComponent","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","_ChatComponent","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_ChatService","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","_ComponentsModule","useValue","UserAvatarComponent","NgIf","SafePipe","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","i9","MatSlider","MatSliderThumb","TranslatePipe","onConfirm","_ConfirmModalComponent","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r3","display_column","column_r2","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r7","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","cell_outlet_r8","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","index_outlet_r9","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r11","row_clicked","empty","_CustomTableComponent","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_CustomTooltipData","_CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","_DateFromPipe","DateFromPipe","direction","json_display_component_1","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_DebugConsoleComponent","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","_DurationPipe","DurationPipe","shorten","_FixedPipe","FixedPipe","_GlobalBannerComponent","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","_GlobalLoadingComponent","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","_HelpTooltipComponent","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","_IconComponent","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","ImageCarouselComponent_div_5_button_1_Template","_ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","_ImageViewerComponent","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_IndoorMapsComponent","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","get_location","custom_coordinates","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","locate","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","getZoom","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_JsonDisplayComponent","_updateFormatting","formatted_json","lang_r2","setLocale","flag","_LanguageSelectComponent","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","_LevelPipe","LevelPipe","ALLOWED_NUMBERS","ALLOWED_DECIMALS","ALLOWED_LETTERS","ALLOWED_ALPHANUMERIC","_LimitInputDirective","LimitInputDirective","_el","restriction","custom_list","ctrlKey","metaKey","hostBindings","onKeyDown","logo","toPassword","login","username_r3","_LoginComponent","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","loading_state_r5","_MapCanvasComponent","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_MapLocateModalComponent","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_MapPinComponent","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","_MapPolygonComponent","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","_MapRadiusComponent","MapRadiusComponent","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","i_r4","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_MapRendererComponent","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","_MapsIndoorsComponent","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_updateMapStyling2","_this$metadata2","id_simple","_$properties","_$properties2","_setResource","extrusionHeight","extrusionVisible","_focusOnLocation2","_item$properties2","_item$properties3","_$properties3","_this9","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","_MediaDurationPipe","MediaDurationPipe","_MisconfiguredComponent","MisconfiguredComponent","_PopoutMenuComponent","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","_PrintableComponent","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","_RedirectComponent","RedirectComponent","_RegionSelectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","_SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","_SanitizePipe","sanitize","selectAll","checked","data_view$","column_r4","setSort","SimpleTableComponent_button_2_app_icon_3_Template","selectable","sortable","active_columns","i_r7","active_row","column_r9","SimpleTableComponent_ng_container_3_div_2_div_3_span_2_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_ng_container_1_Template","tmp_8_0","SimpleTableComponent_ng_container_3_div_2_div_3_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_Template","j_r12","columnType","SimpleTableComponent_ng_container_3_div_3_ng_container_1_Template","child_template","ɵɵpureFunction4","SimpleTableComponent_ng_container_3_div_1_Template","SimpleTableComponent_ng_container_3_div_2_Template","SimpleTableComponent_ng_container_3_div_3_Template","empty_message","setPage","total_pages","total_count","_SimpleTableComponent","SimpleTableComponent","rowClicked","_data$","_filter$","_sort$","_JSON$stringify","a_value","b_value","column","_selectAll","SimpleTableComponent_div_1_Template","SimpleTableComponent_button_2_Template","SimpleTableComponent_ng_container_3_Template","SimpleTableComponent_div_6_Template","SimpleTableComponent_div_8_Template","column_template","link_r1","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","error_msg_r3","links","_StatusOverlayComponent","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","load_state_r4","_StatusPillComponent","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","_ThumbnailPipe","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","_UnauthorisedComponent","_UploadPermissionsModalComponent","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","image_state_r2","_UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","building_select","help_tooltip","openWfhModal","desk_height_tooltip_r4","desk_sitting_height","saveSetting","desk_standing_height","language_tooltip","newSupportTicket","reloadPage","_UserControlsComponent","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","disable_building_select","desk_height","has_new_version","focusInput","key_r3","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","_VirtualKeyboardComponent","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_7_div_5_Template","_AttendeeListComponent","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_div_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","_EventCardComponent","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","menu_r4","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r7","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r6","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r9","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","no_edit_message","act_r15","_r14","EMPTY_ACTIONS","_EventDetailsModalComponent","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","_EventFormService","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","_this$last_success","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_this$_org$building6","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","ignore_space_check","ignore_owner","_this7$event","_form$get3","_spaces$","_this7$event2","_this7$event3","_this7$event4","_value$organiser","_value$organiser2","_ref22","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_spaces$6","_this7$_org$building","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","_EventLinkModalComponent","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","_$extension_data","view_access","_this$recurrence","_this$system","parseRecurrence","all_day_date","_arr","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","addEventGuest","removeEventGuest","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","group_event_card_component_1","_SharedEventsModule","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","i13","i14","GroupEventCardComponent","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","is_onsite","has_space","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","_GroupEventCardComponent","space_pipe","group_event_calendar","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_span_13_Template","GroupEventDetailsModalComponent_div_99_span_14_Template","showing_map","_GroupEventDetailsModalComponent","_this$event$attendees","guest_details","_this$guest_details","_this$event$attendees2","_toggleInterest","toggleInterest","_toggleAttendance","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","is_online","attendance","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","_SetupBreakdownModalComponent","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","shared_event","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","_ExploreBookQrComponent","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","_ExploreBookingModalComponent","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","_ExploreDeskInfoComponent","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","_ExploreDesksService","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_ExploreDeviceInfoComponent","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","device_tooltip_r4","explore_locker_bank_modal_component_1","in_use_count","_ExploreLockerBankInfoComponent","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","_ExploreLockerBankModalComponent","_ExploreLockersService","ExploreLockersService","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r5","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","_ExploreMapControlComponent","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r3","ExploreMapViewComponent_div_8_div_3_Template","_ExploreMapViewComponent","ExploreMapViewComponent","_s","_desks","_zones","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","_ExploreParkingInfoComponent","ExploreParkingInfoComponent","ExploreParkingInfoComponent_div_8_Template","is_concierge","explore_parking_info_component_1","_ExploreParkingService","on_book","user_events","active_spaces","_plate_numbers","assigned","_updateParkingSpaces","_updateParkingSpaces2","_space$groups","_this3$_options$getVa","_this3$_options$getVa2","_space$zone3","_space$zone4","_space$zone","_space$zone2","_yield$_this3$_setBoo","active_level","option_r2","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","_ExploreSearchComponent","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkClick","_this$_el","_this$_input_el","checkButtonPosition","_this$_input_el2","_this$_input_el3","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r5","origin_r4","staff_fn_1","organisation_1","_ExploreSearchService","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties4","_$properties5","_$properties6","_$properties7","_points_of_interest","points_of_interest","poi","roled_contacts","mapspeople_items","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","_ExploreSensorInfoComponent","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","feature_r3","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","_ExploreSpaceInfoComponent","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_ExploreSpacesService","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_i2","_arr2","_ExploreStateService","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_ExploreZonesService","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","setLabels","polygons","_ExploreZoomControlComponent","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","_SharedExploreModule","OverlayModule","MatFormField","MatError","MatInput","NgControlStatusGroup","FormGroupDirective","FormControlName","DurationFieldComponent","UserSearchFieldComponent","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","_SetDatetimeModalComponent","SetDatetimeModalComponent_main_6_Template","_ActionFieldComponent","ActionFieldComponent","show_tooltip","performAction","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","_BookingRulesFormComponent","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","render_fn","_CounterComponent","CounterComponent","step","focused","ctrl_key","shift_key","CounterComponent_span_5_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","_DateCalendarComponent","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","_DateFieldComponent","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","calendar_picker_r3","has_error","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","_DateRangeCalendarComponent","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","start_date","_DateRangeFieldComponent","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","DurationFieldComponent_mat_option_4_ng_container_1_Template","_DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","_FormFieldsModule","UserListFieldComponent","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","MatPrefix","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","ɵNgNoValidate","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r1","_HostSelectFieldComponent","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r3","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","view_space","_ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","chipList_r11","item_r3","addChipItem","removeChipItem","_ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","USER_LIST","_PlaceUserPipe","formatted_value","_RecurrenceFieldComponent","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","_RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","_RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","_SpaceListFieldComponent","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_5","SpaceListFieldComponent_div_15_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","_SupportTicketModalComponent","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","_TimeFieldComponent","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","_UploadFileFieldComponent","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","_UploadListFieldComponent","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","location_name_time","location_icon","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","_UserListFieldComponent","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","search_valid_email","blurInput","stopPropagation","empty_fn","_UserSearchFieldComponent","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","auto_r7","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_OrganisationService","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","_region_settings","_building_settings","_updateSettingOverrides","_this$building","_this$buildings$","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","bld_list","Region","orgs","_this$_buildings$getV","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","driver_settings","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","_this5$region","_iterator5","_step6","_iterator6","_this6$building","_this6$region","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","item_r4","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","_CardInputFieldComponent","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","success_state_r3","transaction_id","_PaymentModalComponent","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","_PaymentsModule","STRIPE_MODULE","_PaymentsService","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","_NewSpaceSelectModalComponent","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","_SpaceDetailsComponent","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r4","_SpaceFiltersDisplayComponent","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_SpaceFiltersComponent","using_mapspeople","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","tmp_12_0","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","_SpaceListComponent","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","_SpaceLocationPinComponent","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_SpaceSelectMapComponent","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","support_url","configurations","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","updateSpaceList","_SpacePipe","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","_SharedSpacesModule","SPACE_PIPE","_SpacesService","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","hour_r2","user_r5","offset_y","_FindAvailabilityModalComponent","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","_UserAvailabilityComponent","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","_NewUserModalComponent","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","_UserFormComponent","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","work_preferences","work_overrides","location_time","datetime","_this$work_overrides$","_this$work_preference","date_string","in_hours","in_hours_time","pref","_UserPipe","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","_SharedUsersModule","type_r5","idx_r4","start_times","end_times","WFHSettingsModalComponent_div_0_div_31_mat_option_8_Template","WFHSettingsModalComponent_div_0_span_24_Template","WFHSettingsModalComponent_div_0_div_31_Template","option_name","available_weekdays","_WFHSettingsModalComponent","_this$options$find","_this$settings","_initWeekdays","_saveChanges","dow","updateUser","setDay","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template","load_state_r9"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/simple-table.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/group-event-card.component.ts","./libs/events/src/lib/group-event-details-modal.component.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { invalidateToken, isMock, setToken, token } from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({ declarations: [\n        AppComponent,\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        })], providers: [SpacePipe, provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event'\n                    )\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of group event bookings for the selected date */\n    public readonly group_events: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'group-event',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event'\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            }\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now()\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        console.log('Requests:', value);\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled'\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id))\n                        )\n                ),\n            }));\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id)\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id)\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id))\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration)\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id)\n    ).toPromise();\n    console.log('Used IDs:', used_ids);\n    console.log('Changed Assets:', changed_assets);\n    console.log('Requests:', requests);\n    console.log('Bookings:', bookings);\n    console.log('Filtered:', filtered);\n    console.log('Unchanged:', unchanged);\n    console.log('Available Groups:', available_groups);\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            })\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id))\n            )\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        return createBooking(\n            new Booking({\n                type: 'asset-request',\n                booking_type: 'asset-request',\n                date,\n                duration,\n                all_day,\n                description: location_name,\n                user_email: host,\n                asset_id: asset_ids[0],\n                asset_ids,\n                asset_name: request.items.map((_) => _.name).join(', '),\n                title: request.items.map((_) => _.name).join(', '),\n                approved:\n                    !reset_state && booking?.approved && !request._changed,\n                rejected:\n                    !reset_state && booking?.rejected && !request._changed,\n                extension_data: {\n                    parent_id: id,\n                    request_id: request.id,\n                    location_id,\n                    request: new AssetRequest({ ...request, event: null }),\n                },\n                zones: zones || [],\n            }),\n            { ical_uid, event_id: from_booking ? '' : id }\n        );\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise())\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n\nexport * from './lib/parking.service';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'cancelled' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id\n            )\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find((region) =>\n                (this.booking?.zones || []).includes(region.id)\n            );\n            if (region) return region;\n        }\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        console.log('Booked:', booked_ids);\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    []\n                            ).hidden;\n                            console.log(\n                                'Booked:',\n                                asset.id,\n                                booked_ids.includes(asset.id)\n                            );\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport enum RecurrenceDays {\n    SUNDAY = 1 << 6,\n    MONDAY = 1 << 5,\n    TUESDAY = 1 << 4,\n    WEDNESDAY = 1 << 3,\n    THURSDAY = 1 << 2,\n    FRIDAY = 1 << 1,\n    SATURDAY = 1 << 0,\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n    /** Unix epoch for the start time of the reccurence instance in seconds */\n    public readonly instance?: number;\n    /** Type of recurrence instance */\n    public readonly recurrence_type: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Bit flags for the recurrence days of the week */\n    public readonly recurrence_days?: number;\n    /** Week of the month to recur on */\n    public readonly recurrence_nth_of_month?:\n        | 1\n        | 2\n        | 3\n        | 4\n        | 5\n        | -1\n        | -2\n        | -3\n        | -4\n        | -5;\n    /** How often to recur */\n    public readonly recurrence_interval?: number;\n    /** Unix epoch for the end time of the recurrence in seconds */\n    public readonly recurrence_end?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    private _b_valid_asset_cache = [];\n    private _b_valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._b_valid_cache_expiry > Date.now() &&\n            this._b_valid_asset_cache.length\n        ) {\n            return this._b_valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._b_valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._b_valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._b_valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction =\n            (data.induction ||\n                data.extension_data?.induction ||\n                data.process_state === 'inducted') ??\n            false;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected || this.deleted\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        this.process_state = data.process_state || 'pending';\n\n        this.recurrence_type = data.recurrence_type || 'none';\n        this.recurrence_days = data.recurrence_days;\n        this.recurrence_nth_of_month = data.recurrence_nth_of_month;\n        this.recurrence_interval = data.recurrence_interval;\n        this.recurrence_end = data.recurrence_end;\n        this.instance = data.instance;\n\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        user_name: new FormControl(booking.user_name),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY'\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n        plate_number: new FormControl(\n            booking.extension_data.plate_number || ''\n        ),\n        recurrence_type: new FormControl(booking.recurrence_type || 'none'),\n        recurrence_days: new FormControl(booking.recurrence_days),\n        recurrence_nth_of_month: new FormControl(\n            booking.recurrence_nth_of_month\n        ),\n        recurrence_interval: new FormControl(booking.recurrence_interval),\n        recurrence_end: new FormControl(booking.recurrence_end),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user: user || booker,\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.email,\n                      name: user?.name || booker?.name,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response (can be set to apply to only recurring bookings) */\n    include_deleted?: 'all' | 'recurring';\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List resources that are booked within the given parameters\n * @param q Parameters to pass to the API request\n */\nexport function bookedResourceList(\n    q: BookingsQueryParams\n): Observable<string[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}/booked${query ? '?' + query : ''}`).pipe(\n        map((list) => list as string[]),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    return id ? updateBooking(id, data) : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {}\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/attendee/${encodeURIComponent(guest.email)}`\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise())\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        placeholder=\"No selected preset\"\n                        [(ngModel)]=\"preset\"\n                        (ngModelChange)=\"setPreset($event)\"\n                    >\n                        <mat-option value=\"\">None</mat-option>\n                        <mat-option value=\"standing\">Standing</mat-option>\n                        <mat-option value=\"sitting\">Seated</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { ca } from 'date-fns/locale';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking')\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking')\n            );\n        })\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[]\n                        )\n                    )\n                )\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny)\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id\n                            )\n                        )\n                        .filter((space) => !!space)\n                )\n            )\n        ),\n        map((_) => _[0]),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <!-- <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar> -->\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice'\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|')\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg'\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    console.log('Token:', tkn);\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=30;path=/api/engine/v2/short_url/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"7cd1991\",\n    \"hash\": \"7cd1991\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"7cd1991\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1721780989086\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        console.log('Image Token:', tkn);\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n    /** Delay before closing the modal */\n    close_delay?: number;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent extends AsyncHandler {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.close_delay) {\n            this.timeout(\n                'close',\n                () => this._dialog_ref.close(),\n                this._data.close_delay\n            );\n        }\n    }\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            console.log('View Options:', view_options);\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        console.log('Pairs:', pairs, building);\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                console.log(\n                    'Locations:',\n                    locations,\n                    this.map_instance.getZoom()\n                );\n                this.search_result_items = locations;\n            }\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Using custom coordinates:', this.coordinates);\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_)\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn'\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        console.log('Directions Service:', this.directions_service);\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        console.log('Route Parameters:', routeParameters);\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn'\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            console.log('Map Token:', tkn);\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP)\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        console.log('Resource:', this._services.mapsindoors);\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e)\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e)\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e)\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e)\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this._services.directions_renderer.setRoute(null);\n            this._focusOnLocation();\n            this.viewing_directions = false;\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates || [0, 0];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                const distance = calculateDistance(\n                    d_lat,\n                    d_lng,\n                    position.coords.latitude,\n                    position.coords.longitude\n                );\n                const routeParameters = {\n                    origin: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    destination: { lat: d_lat, lng: d_lng },\n                    travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n                };\n                console.log('Route Parameters:', routeParameters, distance);\n                const result = await this._services.directions\n                    .getRoute(routeParameters)\n                    .catch((e) => {\n                        log(\n                            'MapsIndoors',\n                            'Error fetching route: ',\n                            e.message || e,\n                            'warn'\n                        );\n                        const origin_error =\n                            e instanceof TypeError &&\n                            e.message?.includes('origin');\n                        this.loading_directions = false;\n                        if (!origin_error) return;\n                        notifyError(\n                            'Error: Origin location is outside of map area.'\n                        );\n                    });\n                if (!result) return;\n                console.log('Route:', result);\n                this._services.directions_renderer.setRoute(result);\n                this.viewing_directions = true;\n                this.loading_directions = false;\n            },\n            () => notifyError('Failed to get your current location.'),\n            options\n        );\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50\n                );\n            },\n            100\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const [lng, lat] = item.properties?.anchor?.coordinates || [0, 0];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (!this._services || !this.zone) return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            this._services.map.setCenter({\n                lat: parseFloat(lat),\n                lng: parseFloat(long),\n            });\n            this._setFloorFromZone();\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id || _.externalId === map_id || _.id === map_id\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\n\nexport interface TableColumn {\n    key: string;\n    name: string;\n    sortable?: boolean;\n    filterable?: boolean;\n    content?: string | TemplateRef<any> | Component;\n    size?: string;\n    show?: boolean;\n    empty?: string;\n}\n\n@Component({\n    selector: 'simple-table',\n    template: `\n        <div\n            role=\"table\"\n            class=\"grid border border-base-300\"\n            [style.gridTemplateColumns]=\"column_template\"\n            (click)=\"active_row >= 0 ? rowClicked.emit(active_row) : null\"\n            (touchend)=\"active_row = -1\"\n            (mouseleave)=\"active_row = -1\"\n        >\n            <div\n                *ngIf=\"selectable\"\n                id=\"column-selector\"\n                class=\"sticky top-0 flex items-center justify-between px-2 border-r border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"'1 / 2'\"\n            >\n                <mat-checkbox\n                    [checked]=\"selected.length === (data_view$ | async)?.length\"\n                    [indeterminate]=\"\n                        selected.length > 0 &&\n                        selected.length < (data_view$ | async)?.length\n                    \"\n                    (change)=\"selectAll($event.checked)\"\n                ></mat-checkbox>\n            </div>\n            <button\n                header\n                matRipple\n                *ngFor=\"let column of active_columns; let i = index\"\n                [id]=\"'column-' + column.key\"\n                class=\"sticky top-0 flex items-center justify-between p-4 border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"\n                    1 +\n                    i +\n                    (selectable ? 1 : 0) +\n                    ' / ' +\n                    (2 + i + (selectable ? 1 : 0))\n                \"\n                [class.pointer-events-none]=\"\n                    !sortable || column.sortable === false\n                \"\n                (click)=\"setSort(column.key)\"\n                [class.active]=\"sort?.key === column.key\"\n                [class.border-r]=\"i !== active_columns.length - 1\"\n                [class.width]=\"column.size\"\n            >\n                <div class=\"font-medium\">{{ column.name || column.key }}</div>\n                <app-icon\n                    class=\"text-[1.25em]\"\n                    *ngIf=\"sortable && column.sortable !== false\"\n                >\n                    {{\n                        sort?.key === column.key && sort?.reverse\n                            ? 'arrow_upward'\n                            : 'arrow_downward'\n                    }}\n                </app-icon>\n            </button>\n            <ng-container\n                *ngFor=\"\n                    let row of data_view$\n                        | async\n                        | slice\n                            : page * (page_size || 9999)\n                            : (page + 1) * (page_size || 9999);\n                    let i = index\n                \"\n            >\n                <div\n                    *ngIf=\"selectable\"\n                    id=\"column-selector\"\n                    class=\"flex items-center justify-between px-2 border-r border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"'1 / 2'\"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <mat-checkbox\n                        [checked]=\"selected.includes(i)\"\n                        (change)=\"select(i, $event.checked)\"\n                    ></mat-checkbox>\n                </div>\n                <div\n                    *ngFor=\"let column of active_columns; let j = index\"\n                    class=\"flex items-center justify-between border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"\n                        1 +\n                        j +\n                        (selectable ? 1 : 0) +\n                        ' / ' +\n                        (2 + j + (selectable ? 1 : 0))\n                    \"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    [class.border-r]=\"j !== active_columns.length - 1\"\n                    [class.width]=\"column.size\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <ng-container [ngSwitch]=\"columnType(column)\">\n                        <div class=\"p-4\" *ngSwitchDefault>\n                            {{ row[column.key] }}\n                            <span\n                                *ngIf=\"\n                                    row[column.key] == null ||\n                                    row[column.key] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                {{ column.empty || 'N/A' }}\n                            </span>\n                        </div>\n                        <ng-container *ngSwitchCase=\"'template'\">\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    column.content;\n                                    context: {\n                                        first: i === 0,\n                                        last:\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1 ||\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1,\n                                        index: i,\n                                        data: row[column.key],\n                                        row: row,\n                                        key: column.key,\n                                        name: column.name || column.key\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div\n                    child-node\n                    *ngIf=\"show_children[row.id] && child_template\"\n                    [style.gridColumn]=\"'span ' + active_columns.length\"\n                    class=\"border-b last:border-t last:border-b-0 border-base-200\"\n                >\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            child_template;\n                            context: {\n                                first: i === 0,\n                                last:\n                                    i === (data_view$ | async)?.length - 1 ||\n                                    i === (data_view$ | async)?.length - 1,\n                                index: i,\n                                row: row,\n                            }\n                        \"\n                    ></ng-container>\n                </div>\n            </ng-container>\n            <div\n                *ngIf=\"!(data_view$ | async)?.length\"\n                [style.gridColumnStart]=\"'span ' + active_columns.length\"\n                class=\"flex items-center justify-center p-8 opacity-30\"\n            >\n                {{ empty_message }}\n            </div>\n            <!-- TODO: Add pagination -->\n        </div>\n        <div\n            *ngIf=\"page_size\"\n            class=\"sticky bottom-0 w-full flex items-center justify-end space-x-2 p-2 bg-base-200\"\n        >\n            <div class=\"px-4 py-2\">\n                {{ page * (page_size || 9999) + 1 }} &ndash;\n                {{\n                    (page + 1) * (page_size || 9999) > total_count\n                        ? total_count\n                        : (page + 1) * (page_size || 9999)\n                }}\n                of {{ total_count }}\n            </div>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === 0\"\n                (click)=\"setPage(page - 1)\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(page + 1)\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <button icon matRipple [disabled]=\"page === 0\" (click)=\"setPage(0)\">\n                <app-icon>first_page</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(total_pages - 1)\"\n            >\n                <app-icon>last_page</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            :host > button {\n                min-width: 100%;\n            }\n\n            [header] app-icon {\n                opacity: 0;\n            }\n            [header]:hover app-icon {\n                opacity: 0.3;\n            }\n            [header]:hover.pointer-events-none app-icon {\n                opacity: 0;\n            }\n            [header].active app-icon {\n                opacity: 1;\n            }\n        `,\n    ],\n})\nexport class SimpleTableComponent<T extends {} = any> extends AsyncHandler {\n    @Input() public data: T[] | Observable<T[]>;\n    @Input() public columns: TableColumn[] = [];\n    @Input() public selectable = false;\n    @Input() public filter: string = '';\n    @Input() public sortable = false;\n    @Input() public selected: number[] = [];\n    @Input() public page_size = 0;\n    @Input() public empty_message = 'No data to list';\n    @Input() public child_template: TemplateRef<any> = null;\n    @Input() public show_children: Record<string, boolean> = {};\n    @Output() public selectedChange = new EventEmitter<number[]>();\n    @Output() public rowClicked = new EventEmitter<number>();\n\n    public page = 0;\n    public total_count = 0;\n    public total_pages = 0;\n    public active_row = -1;\n    public active_columns = [];\n\n    private _data$ = new BehaviorSubject<T[]>([]);\n    private _filter$ = new BehaviorSubject<string>('');\n    private _sort$ = new BehaviorSubject<{ key: string; reverse: boolean }>(\n        null\n    );\n\n    public data_view$?: Observable<T[]> = null;\n\n    public get sort() {\n        return this._sort$.getValue();\n    }\n\n    public get data$(): Observable<T[]> {\n        return this.data instanceof Array ? this._data$ : this.data;\n    }\n\n    public get column_count() {\n        return this.active_columns.length + (this.selectable ? 1 : 0);\n    }\n\n    public get column_template() {\n        const template = this.active_columns\n            .map((_) => _.size || 'auto')\n            .join(' ');\n        return this.selectable ? `3.5rem ${template}` : template;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.filter) {\n            this._filter$.next(this.filter);\n        }\n        if (changes.columns) {\n            this.active_columns = this.columns.filter((_) => _.show !== false);\n        }\n        if (changes.data) {\n            this.data_view$ = combineLatest([\n                this.data$,\n                this._filter$,\n                this._sort$,\n            ]).pipe(\n                debounceTime(300),\n                map(([data, filter, sort]) => {\n                    data = [...data];\n                    if (filter) {\n                        data = data.filter((_) =>\n                            Object.values(_).some((i) =>\n                                JSON.stringify(i)\n                                    ?.toLowerCase()\n                                    .includes((filter || '').toLowerCase())\n                            )\n                        );\n                    }\n                    if (sort && data.length) {\n                        const type = typeof data[0][sort.key];\n                        if (type === 'number') {\n                            data = data.sort((a, b) => {\n                                const result = a[sort.key] - b[sort.key];\n                                return sort.reverse ? -result : result;\n                            });\n                        } else {\n                            data = data.sort((a, b) => {\n                                const a_value = JSON.stringify(\n                                    a[sort.key] || ''\n                                );\n                                const b_value = JSON.stringify(\n                                    b[sort.key] || ''\n                                );\n                                const result = a_value.localeCompare(b_value);\n                                return sort.reverse ? -result : result;\n                            });\n                        }\n                    }\n                    this.selected = [];\n                    this.page = 0;\n                    if (this.page_size) {\n                        this.total_count = data.length;\n                        this.total_pages = Math.ceil(\n                            this.total_count / this.page_size\n                        );\n                    }\n                    return data;\n                }),\n                shareReplay(1)\n            );\n        }\n    }\n\n    public columnType(column: TableColumn) {\n        return column.content instanceof TemplateRef ? 'template' : 'raw';\n    }\n\n    public gridSquare(row: number, column: number) {\n        return `${row} / ${column} / ${row + 1} / ${column + 1}`;\n    }\n\n    public select(index: number, state: boolean) {\n        if (state) this.selected.push(index);\n        else this.selected = this.selected.filter((i) => i !== index);\n    }\n\n    public async selectAll(state: boolean) {\n        const list = await this.data_view$.pipe(take(1)).toPromise();\n        if (state) this.selected = list.map((_, i) => i);\n        else this.selected = [];\n    }\n\n    public setSort(key: string) {\n        const sort = this._sort$.getValue();\n        if (!sort || sort.key !== key) {\n            this._sort$.next({ key, reverse: false });\n        } else if (!sort.reverse) {\n            this._sort$.next({ key, reverse: true });\n        } else {\n            this._sort$.next(null);\n        }\n    }\n\n    public setPage(page: number) {\n        this.timeout('set_page', () => (this.page = page), 100);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <div class=\"relative p-4 bg-base-100 rounded shadow w-64\">\n                    <div class=\"text-lg\" i18n>Desk Height</div>\n                    <div class=\"text-xs opacity-60 mb-4\" i18n>\n                        Set your desk height for the best experience\n                    </div>\n                    <div class=\"flex flex-col mt-2\">\n                        <label>Sitting Height</label>\n                        <div class=\"flex items-center space-x-2\">\n                            <mat-slider\n                                min=\"60\"\n                                max=\"80\"\n                                step=\"0.5\"\n                                discrete\n                                class=\"flex-1\"\n                                [displayWith]=\"formatLabel\"\n                            >\n                                <input\n                                    matSliderThumb\n                                    [(ngModel)]=\"desk_sitting_height\"\n                                    (ngModelChange)=\"\n                                        saveSetting(\n                                            'desk_sitting_height',\n                                            $event\n                                        )\n                                    \"\n                                />\n                            </mat-slider>\n                            <div class=\"text-sm w-12 text-right\">\n                                {{ desk_sitting_height.toFixed(1) }}cm\n                            </div>\n                        </div>\n                        <label>Standing Height</label>\n                        <div class=\"flex items-center space-x-2  mr-2\">\n                            <mat-slider\n                                min=\"90\"\n                                max=\"120\"\n                                step=\"0.5\"\n                                discrete\n                                class=\"flex-1\"\n                                [displayWith]=\"formatLabel\"\n                            >\n                                <input\n                                    matSliderThumb\n                                    [(ngModel)]=\"desk_standing_height\"\n                                    (ngModelChange)=\"\n                                        saveSetting(\n                                            'desk_standing_height',\n                                            $event\n                                        )\n                                    \"\n                                />\n                            </mat-slider>\n                            <div class=\"text-sm w-12 text-right mr-2\">\n                                {{ desk_standing_height.toFixed(1) }}cm\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public desk_standing_height = 101;\n    public desk_sitting_height = 71;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        console.log('Save setting', name, value);\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\nexport * from './lib/group-event-details-modal.component';\nexport * from './lib/group-event-card.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                            ? 'Attendee'\n                            : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div\n                            class=\"opacity-60 text-sm\"\n                            *ngIf=\"host === user.email\"\n                        >\n                            Host\n                        </div>\n                    </div>\n                    <div class=\"p-2\">\n                        <div\n                            class=\"h-3 w-3 rounded-full\"\n                            [class.bg-success]=\"user.checked_in\"\n                            [class.bg-pending]=\"!user.checked_in\"\n                            [matTooltip]=\"\n                                user.checked_in\n                                    ? 'Checked in'\n                                    : 'Not checked in'\n                            \"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get options_value() {\n        return this._options.getValue();\n    }\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'booking_rules').toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.building?.parent_id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || []\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid)\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || []\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || []\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event })\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id]\n                        ) || []\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(\n        force: boolean = false,\n        ignore_space_check: string[] = [],\n        ignore_owner: boolean = false\n    ) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            let spaces = form.get('resources')?.value || [];\n            if (ignore_space_check.length) {\n                spaces = spaces.filter(\n                    (_) =>\n                        !ignore_space_check.includes(_.email) &&\n                        !ignore_space_check.includes(_.id)\n                );\n            }\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id)\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            spaces = form.get('resources')?.value || [];\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource')\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner && !ignore_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time'\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.level?.parent_id\n                            ? [spaces[0]?.level?.parent_id]\n                            : [this._org.building?.id],\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get view_access() {\n        return this.extension_data.view_access || 'PRIVATE';\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        for (const key of [\n            'catering',\n            'date',\n            'date_end',\n            'duration',\n            'status',\n            'linked_bookings',\n            '_valid_asset_cache',\n            '_valid_cache_expiry',\n            'type',\n        ]) {\n            if (key in obj) delete obj[key];\n        }\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function addEventGuest(id: string, guest: GuestUser) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function removeEventGuest(id: string, guest: GuestUser) {\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/attendee/${encodeURIComponent(guest.email)}`\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        SharedSpacesModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { CalendarEvent } from './event.class';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email\n        );\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { CalendarEvent } from './event.class';\nimport {\n    addEventGuest,\n    checkinEventGuest,\n    removeEventGuest,\n} from './events.fn';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.extension_data?.images?.length\"\n                    auth\n                    [source]=\"event.extension_data?.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ event.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"event.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            Event by\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ event.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ event.date | date: time_format }} -\n                                {{\n                                    event.date + event.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ event.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span [innerHTML]=\"event.body | sanitize\"></span>\n                        <span\n                            *ngIf=\"!raw_description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\" p-4 space-y-2\">\n                                <div>\n                                    {{\n                                        (system_id | space | async)\n                                            ?.display_name\n                                    }}\n                                    <span\n                                        *ngIf=\"\n                                            !(system_id | space | async)\n                                                ?.display_name\n                                        \"\n                                        class=\"opacity-30\"\n                                    >\n                                        Remote Event\n                                    </span>\n                                </div>\n                                <div class=\"opacity-30 text-sm\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"event.attendees\"\n                    [host]=\"event.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public event: CalendarEvent = this._data.event;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n    public raw_description = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.event as any).featured || this.event.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.event.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.event.attendees?.filter((_: any) => _.checked_in)?.length || 0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.space?.id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.event.attendees?.find((_) => _.email === user.email);\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { event: CalendarEvent; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email\n        );\n        const map_id = (this.event.extension_data as any)?.map_id;\n        const id = this.space?.map_id || map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        const zones = (this.space?.zones as any) || [];\n        this.level = this._org.levelWithID(zones);\n        this.building =\n            this._org.buildings.find((_) => zones.includes(_.id)) ||\n            this._org.building;\n        this.locate = map_id || '';\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await removeEventGuest(\n                this.event.id,\n                currentUser() as any\n            ).toPromise();\n            (this.event as any).attendees = (this.event.attendees || []).filter(\n                (_: any) => _.email !== user.email\n            );\n        } else {\n            user = await addEventGuest(\n                this.event.id,\n                currentUser() as any\n            ).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await addEventGuest(\n                this.event.id,\n                currentUser() as any\n            ).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinEventGuest(\n            this.event.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.event.attendees.find((_) => _.email === user.email);\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    LOCAL_TIMEZONE,\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { time } from 'console';\nimport { share } from 'rxjs/operators';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n        attendance_type: new FormControl(\n            event.extension_data?.attendance_type || 'ONSITE'\n        ),\n        timezone: new FormControl(event.timezone || LOCAL_TIMEZONE),\n        shared_event: new FormControl(\n            event.extension_data?.shared_event || false\n        ),\n        view_access: new FormControl(\n            event.extension_data?.view_access || 'PRIVATE'\n        ),\n        images: new FormControl(event.extension_data?.images || []),\n        featured: new FormControl(event.extension_data?.featured || false),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('parking_poll', this._parking.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => void = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find((e) => e.asset_id === _.id);\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase()\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] = user?.plate_number || undefined;\n                return !assigned;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[]\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${space.map_id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) return this.on_book(space);\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base space-x-2 p-2\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                decrease\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-error text-error rounded h-10 w-10\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div\n                value\n                class=\"relative p-1 flex items-center justify-center w-16 h-10 rounded border border-base-300\"\n            >\n                <span *ngIf=\"!focused\">\n                    {{ (render_fn ? render_fn(value) : value) || '0' }}\n                </span>\n                <input\n                    type=\"text\"\n                    class=\"absolute inset-0 opacity-0 focus:opacity-100 p-2\"\n                    [(ngModel)]=\"value\"\n                    (focus)=\"focused = true\"\n                    (blur)=\"setValue(+value); focused = false\"\n                    limitInput\n                />\n            </div>\n            <button\n                increase\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-success text-success rounded h-10 w-10\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 999;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n    public focused = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        if (new_value < this.min) new_value = this.min;\n        if (new_value > this.max) new_value = this.max;\n        if ((new_value / this.step) % 1 !== 0) {\n            new_value =\n                Math.round(new_value * (1 / this.step)) / (1 / this.step);\n        }\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: string[]) {\n        this.list = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert(value);\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1)\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300)\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id)\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None\n                                    ) || { settings_string: '' }\n                                );\n                            } catch {\n                                return {};\n                            }\n                        })\n                    )\n                    .toPromise(),\n            ]);\n        console.log(\n            'Building Settings:',\n            bld.display_name || bld.name,\n            bld.id,\n            settings\n        );\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300\n        );\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Address of the region */\n    public readonly address: string;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n        this.address = _data.address || '';\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        console.log('Set Level', level);\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string): Observable<Space[]> {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public location_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        return (\n            this.work_overrides[date_string]?.location ||\n            this.work_preferences.find((_) => _.day_of_week === day)\n                ?.location ||\n            'wfo'\n        );\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        const pref =\n            this.work_overrides[date_string] ||\n            this.work_preferences.find((_) => _.day_of_week === day);\n        if (!pref) return false;\n        const start = pref.start_time;\n        const end = pref.end_time;\n        const now = date.getHours() + date.getMinutes() / 60;\n        return start <= now && now < end;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { addDays, format, set, setDay, startOfWeek } from 'date-fns';\nimport { WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[40rem] max-w-full\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-[20rem] max-w-[calc(100%-2rem)] mx-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"flex-1 w-1/2\">{{ option_name }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2 mx-auto\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>{{\n                            option === 'wfh' ? 'home' : 'domain'\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a {{ option === 'aol' ? 'leave' : 'working' }}\n                        <span *ngIf=\"option !== 'aol'\"\n                            >from\n                            {{ option === 'wfh' ? 'home' : 'office' }}</span\n                        >\n                        day<br />\n                        {{ option === 'aol' ? 'Unavailable' : 'Available' }} for\n                        {{ option === 'wfh' ? 'online' : '' }} meetings\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Office Day Defaults\n                </h3>\n                <div\n                    class=\"flex items-center space-x-2 w-full overflow-hidden even:bg-base-200 rounded p-2\"\n                    *ngFor=\"let idx of available_weekdays\"\n                >\n                    <label class=\"w-24 min-w-0 m-0\">{{\n                        days[idx] | date: 'EEEE'\n                    }}</label>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"start_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                    ></a-time-field>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"end_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                        [from]=\"start_times[idx]\"\n                    ></a-time-field>\n                    <mat-form-field\n                        class=\"flex-2 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            [(ngModel)]=\"settings[idx].location\"\n                            (ngModelChange)=\"changed = true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of options\"\n                                [value]=\"type.id\"\n                            >\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Working from office' },\n        { id: 'wfh', name: 'Working from home' },\n        { id: 'aol', name: 'Away on Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n    public start_times: number[] = [];\n    public end_times: number[] = [];\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.option = user.location || 'wfo';\n        if (this.settings?.length < 7) {\n            this.settings = new Array(7).fill({}).map((_, idx) => ({\n                day_of_week: idx as any,\n                start_time: 9,\n                end_time: 17,\n                location: 'wfo',\n            }));\n        }\n        this.start_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.start_time);\n            const minutes = Math.round((_.start_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this.end_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.end_time);\n            const minutes = Math.round((_.end_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this._initWeekdays();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const dow = new Date().getDay();\n        const today = format(Date.now(), 'yyyy-MM-dd');\n        var overrides = {};\n        overrides[today] = {\n            day_of_week: dow,\n            start_time: 9,\n            end_time: 17,\n            location: this.option,\n        };\n        for (const day of this.settings) {\n            const start = new Date(this.start_times[day.day_of_week]);\n            const end = new Date(this.end_times[day.day_of_week]);\n            day.start_time = start.getHours() + start.getMinutes() / 60;\n            day.end_time = end.getHours() + end.getMinutes() / 60;\n            if (day.day_of_week === dow) {\n                overrides[today].start_time = day.start_time;\n                overrides[today].end_time = day.end_time;\n            }\n        }\n        const user = await showUser('current').toPromise();\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: this.settings,\n            work_overrides: overrides,\n        }).toPromise();\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            location.reload();\n            this._dialog_ref.close();\n        }\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n}\n"],"x_google_ignoreList":[]}