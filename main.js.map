{"version":3,"file":"main.js","mappings":"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,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKpB,GAAUmB,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,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","names":["AsyncHandler","constructor","this","_timers","_intervals","_subscriptions","_initialised","BehaviorSubject","initialised","asObservable","is_initialised","getValue","ngOnDestroy","destroy","key","clearTimeout","clearInterval","unsub","timeout","name","fn","delay","Function","Error","setTimeout","interval","setInterval","subscription","hasSubscription","Subscription","unsubscribe","unsubWith","contains","subs","Object","keys","filter","k","includes","static","__ngFactoryType__","core","jDH","factory","ɵfac","providedIn","SafePipe","sanitizer","transform","value","type","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","i0","i1","EJ8","pure","ctx_r0","icon","class","className","content","src","IconComponent","VBU","selectors","inputs","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","IconComponent_i_1_Template","IconComponent_img_2_Template","_app_name","setAppName","log","msg","args","stream","force","app_name","window","jest","debug","colors","console","padLength","length","character","str","getItemWithKeys","map","slice","unique","array","el","id","exists","push","randomInt","ceil","floor","Math","random","padString","randomString","chars","i","flatten","an_array","stack","res","next","pop","Array","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","a","b","c","d","t","xmur3","h","imul","charCodeAt","seed","predictableRandomInt","getInvalidFields","form","prefix","invalid","controls","FormGroup","valid","removeEmptyFields","obj","capitalizeFirstLetter","word","toUpperCase","substring","degreesToRadians","degrees","PI","GoogleAnalyticsService","title","enabled","timers","init","tracking_id","gtag","dataLayer","w","s","l","Date","getTime","event","f","getElementsByTagName","j","createElement","async","parentNode","insertBefore","document","service","load","page","setUser","send","category","action","label","screen","appName","screenName","route","origin","last_route","url","location","timing","variable","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","addEventListener","code","mapKey","toLowerCase","last_down","indexOf","preventDefault","listen","combo","combination","split","validCombination","last_key","updateCombinationEndList","subscribe","count","presses","state","reduce","v","replace","non_meta","DEFAULT_SETTINGS","composer","domain","protocol","port","use_domain","local_login","app","description","short_name","logo_light","logo_dark","diagnostics","default_animation_time","VERSION","dirty","raw","hash","distance","tag","semver","suffix","semverString","version","time","USER_DOMAIN","generateUserForm","user","fields","FormControl","Validators","required","email","organisation","phone","pattern","assistance_required","visit_expected","User","data","first_name","last_name","notes","photo","username","organizer","checked_in","resource","response_status","groups","department","sys_admin","support","extension_data","is_external","endsWith","GuestUser","super","preferred_beverage","accepted_terms_conditions","attachments","status","booking","approved","rejected","event_metadata","StaffUser","location_time","now","work_preference","datetime","date","day","getDay","date_string","format","work_overrides","blocks","block","end","end_time","start_time","getHours","getMinutes","pref","work_preferences","day_of_week","location_name","location_name_time","in_hours","in_hours_time","outsideHours","location_icon","card_number","staff_id","is_logged_in","EMPTY_USER","_current_user","_change","current_user","reloadUserData","_asyncToGenerator","showUser","toPromise","currentUser","combineLatest","pipe","retry","SettingsService","overrides","_overrides","_applyCssVariables","_observables","_subjects","post","_title","getTitle","setTitle","get","_analytics","_user_settings","_pending_settings","built","isSameDay","_this","pathname","trim","join","application","settings","_","_applyUserSettings","first","showMetadata","details","_initDarkMode","_applyTheme","_setFontSize","time_format","override_settings","override","saveUserSetting","setTheme","_savePendingChanges","overrideCssVariable","important","element","getElementById","head","appendChild","innerText","theme","variable_map","css_string","_this2","updateMetadata","class_list","body","classList","item","startsWith","remove","add","i2","Organisation","raw_data","tags","capacity","bindings","_settings","setting","_service","_disable_logging","notify","message","on_action","config","warn","snackbar_ref","open","panelClass","duration","dismiss","onAction","notifySuccess","notifyError","error","notifyInfo","BuildingLevel","_data","parent_id","display_name","map_id","locations","images","parts","number","Building","disc_info","discovery_info","zone_id","zone","extras","extra_id","extra_name","loan_items","levels","building_id","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","timezone","catering_hours","start","visitor_space","holding_bay","address","orientations","booking_details","catering_restricted_from","currency","role","role_names","featuresForLevel","Region","OrganisationService","region_settings","_region_settings","building_settings","_building_settings","regionSettings","region","_active_region","buildingSettings","bld_id","building","buildings","_organisation","regions","_regions","setRegion","loadRegionData","_setBuildingFromTimezone","buildingsForRegion","_updateSettingOverrides","_buildings","_active_building","bld","loadBuildingData","then","find","Intl","DateTimeFormat","resolvedOptions","timeZone","currency_code","binding","_levels","_router","_loaded_data","app_key","region_list","building_list","level_list","active_region","active_building","active_buildings","active_levels","levelsForBuilding","shareReplay","onlineState","debounceTime","levelWithID","id_list","levelsForRegion","bld_list","addZone","sort","localeCompare","removeZone","tries","catch","err","min","orgs","_this3","loadOrganisation","loadRegions","blds","loadBuildings","loadSettings","loadLevels","_this4","org_list","queryZones","auth","authority","org","list","isMock","org_zone","of","navigate","_this5","limit","catchError","_this6","load_metadata","settings_request","PlaceMetadata","bindings_request","Promise","all","_this7","booking_rules","driver_settings","querySettings","yaml","encryption_level","EncryptionLevel","None","settings_string","_this8","authority_id","available_room_configs","m","prev","curr","concat","_this9","app_settings","global_settings","_initialiseActiveBuilding","saveBuilding","region_id","sessionStorage","setItem","resolve","getItem","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","closest_bld","c_lat","c_long","b_lat","b_long","sqrt","pow","_setDefaultBuilding","_this10","_setRegionFromTimezone","_this11","tz_start","MapService","GoogleMaps","Mapbox","MapsPeopleService","map_keys","use_service","map_service","_map_service","map_token","_map_token","is_ready","_ready","_org","_injected","_custom_zone","available$","tap","_injectMapsApiKeys","mapsindoors","setCustomZone","google","mapbox","script","undefined","styles","rel","href","ANIMATION_SHOW_ENTER_LEAVE","trigger","transition","style","opacity","height","animate","ANIMATION_SHOW_CONTRACT_EXPAND","IGNORE_VALUES","toQueryString","encodeURIComponent","_timer","_new_version","hasNewVersion","setupCache","cache","isEnabled","activateUpdate","_x","_activateUpdate","apply","arguments","checkForUpdate","reload","_setupPlace","host","hostname","mock","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","abbr","offset","isdst","text","utc","uploadFile","file","pub","permissions","Observable","observer","fileReader","FileReader","e","blob","blobUtil","target","result","upload","uploadFiles","file_name","public","upload_details","progress","link","formatted_size","humanReadableByteCount","size","takeWhile","access_url","complete","readAsArrayBuffer","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","call","DEVICE_ID","RemoteLoggingService","setMetadata","metadata","_disable_handling","_system_id","_events","Subject","_event_history","_metadata","_logging_bindings","switchMap","_bindTo","_ref","getModule","execute","history","_patchConsoleMethods","setSystem","types","_handleEvent","event_type","device_id","subtype","timestamp","mod","module","bind","LOCAL_TIMEZONE","getTimezoneOffsetString","tz","getTimezoneOffsetInMinutes","tzOffsetPart","hour12","timeZoneName","formatToParts","part","offsetMatch","match","parseInt","hours","abs","minutes","DURATION_MAP","month","months","week","weeks","days","hour","minute","DEFAULT_RULES","auto_approve","hidden","stringToMinutes","addToDate","addMinutes","filterResourcesFromRules","resources","ruleset_list","rulesForResource","ruleset","zones","checkRulesMatch","rules","date_obj","matches","conditions","every","is_before","isBefore","is_after","isAfter","min_length","is_between","is_period","max_length","resource_ids","$event","_r1","ctx_r1","UploadPermissionsModalComponent","_dialog_ref","is_public","close","MAT_DIALOG_DATA","UploadPermissionsModalComponent_div_15_Template","UploadsService","_dialog","_upload_list","upload_list","JSON","parse","clearList","in_progress_list","uploadFileWithPermissions","reject","afterClosed","resolved","update_fn","_updateUploadHistory","done_list","forEach","stringify","_wake_lock","_requestScreenWakeLock","release","wakeLock","request","visibilityState","BindingDirective","_element","_renderer","sys","index","exec","on_event","params","ignore","model","modelChange","EventEmitter","_binding","_old_model","ngOnInit","bindVariable","ngOnChanges","changes","nativeElement","emit","FsC","outputs","features","initials","UserAvatarComponent_div_0_div_1_Template","image_state_r2","UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","Space","feature_list","bookable","support_url","configurations","level","availability","inUseAt","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","updateSpaceList","space_list","space","SPACE_PIPE","SpacePipe","space_id","is_email","system","showSystem","querySystemsWithEmails","in","SpacesService","_list","_compare","_init","loadSpaces","predicate","loadSpace","valid_spaces","querySystems","ExploreStateService","positions","_positions","active_level","_level","_spaces","zoom","center","x","y","_styles","_features","_actions","_labels","_options","disable","_message","spaces","map_url","map_positions","map_features","options","disable_features","map_actions","actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","display","disable_styles","setLevel","setOptions","old_options","reset","setPositions","setStyles","style_map","setFeatures","feature_map","setActions","actions_map","setLabels","labels_map","has","exclude","styles_map","group","i3","zoomChange","mapInfo","_r3","onLevelChange","focus","_r4","MAP_FEATURE_DATA","InjectionToken","InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_r2","fill","stroke","MapPinComponent","_details","show","show_message","attrs","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","SanitizePipe","sanitize","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","CustomTooltipData","CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","provide","useValue","parent","viewQuery","CdkPortal","CustomTooltipComponent_ng_template_1_Template","focusInput","key_r3","$implicit","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","max","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","GlobalLoadingComponent","online","isOnline","loading","token","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","banner","GlobalBannerComponent","has_viewed","GlobalBannerComponent_div_0_Template","MapLocateModalComponent","processFeature","processStyles","track_id","z_index","MapLocateModalComponent_div_6_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","i_r5","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","DurationPipe","shorten","formatDuration","JsonDisplayComponent","json","_updateFormatting","formatted_json","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","trackByFn","tmp_4_0","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","tmp_3_0","empty_state_r5","tmp_6_0","tmp_7_0","logs","_r6","onStart","onEnd","COLOR_MAP","network","dom","info","URL_STARTS","DebugConsoleComponent","can_activate","_logs","_hotkey","splice","i4","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","changelog","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","BuildingPipe","day_r2","ctx_r2","weekdays_enabled","initialiseDay","type_r7","block_r5","day_r6","setStartTime","setEndTime","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_mat_option_5_Template","i_r8","addBlock","removeBlock","timeFrom","tmp_11_0","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_Template","WFHSettingsModalComponent_main_4_mat_checkbox_4_Template","WFHSettingsModalComponent_main_4_ng_container_7_Template","WFHSettingsModalComponent_main_4_ng_template_8_Template","has_working_days","empty_state_r9","_r10","saveChanges","WFHSettingsModalComponent","some","option_name","option","startOfMinute","changed","available_weekdays","idx","addDays","startOfWeek","set","fromTime","cleanupBlocks","disableClose","new_settings","updateUser","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_main_4_Template","WFHSettingsModalComponent_footer_5_Template","WFHSettingsModalComponent_ng_template_6_Template","load_state_r11","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","can_change_dark_mode","accessible","n","i18n_0","$localize","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","bld_r2","setBuilding","BuildingSelectComponent","BuildingSelectComponent_mat_radio_button_12_Template","tmp_0_0","tmp_1_0","tile_r1","HelpTooltipComponent","tiles","HelpTooltipComponent_a_6_Template","lang_r2","setLocale","flag","LanguageSelectComponent","locales","_translation","use","LanguageSelectComponent_button_10_Template","item_r2","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","submit","SupportTicketModalComponent","touched","support_email","issue_type","patchValue","markAllAsTouched","updateValueAndValidity","stmp_system","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","load_state_r5","loc_r3","i_r4","ctx_r4","setLocation","WorkLocationTooltipComponent_div_10_div_1_button_12_Template","WorkLocationTooltipComponent_div_10_div_1_div_17_Template","block_r6","menu_r7","WorkLocationTooltipComponent_div_10_div_1_Template","active_preference","WorkLocationTooltipComponent","seconds","milliseconds","editSettings","new_overrides","key_date","startOfDay","WorkLocationTooltipComponent_div_10_Template","WorkLocationTooltipComponent_ng_template_11_Template","empty_state_r8","region_select","building_select","help_tooltip","work_location_tooltip","desk_height_tooltip_r3","language_tooltip","newSupportTicket","_r5","reloadPage","UserControlsComponent","desk_height","use_region","disable_building_select","has_new_version","accessibility_tooltip","logout","openWfhModal","viewChangelog","fetch","saveSetting","formatLabel","toFixed","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","IMAGE_STORE","Map","AuthenticatedImageDirective","_image_el","source","_loadImage","tkn","cookie","apiKey","response","ok","createObjectURL","ChatService","connected","_socket","_chat_messages","_progress_message","_chat_system","biniding","_chat_id","chat_hint","_chat_pipe","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","messages","setBinding","system_id","startChat","endChat","sendMessage","chat_id","user_id","_timeoutSocket","msg_list","function","task_id","DateFromPipe","diff","differenceInMinutes","direction","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","icons","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","ChatComponent_div_0_div_4_Template","ChatComponent","can_show","_chat","list_function_schemas","call_function","task_complete","scrollToBottom","_input_el","scrollHeight","_container_el","scrollTop","ChatComponent_div_0_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","SPACE_LIST_REQUESTS","SPACE_COUNT","MediaDurationPipe","period_length","show_ms","MapRendererComponent_ng_container_2_mat_spinner_1_Template","viewer","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","MapRendererComponent","onResize","updateDisplay","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","applyGlobalStyles","removeViewer","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","updateView","ngAfterViewInit","getViewer","updateFeatureList","updateViewer","desired_zoom","desired_center","simp_url","_outlet_el","createViewer","listenToViewerChanges","mappings","rect","_feature_list","toArray","old_injectors","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","MapsIndoorsComponent","_maps_people","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","setZoom","_addFloorSelector","_setResource","lat","long","view_options","_container","parseFloat","lng","maxZoom","view_instance","mapView","GoogleMapsView","accessToken","MapboxView","notifyWarn","provider","directions","GoogleMapsProvider","MapboxProvider","maps_indoors","MapsIndoors","view","getMap","services","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","addListener","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","Event","clearDirections","setRoute","items","_search","d_lng","d_lat","properties","anchor","coordinates","_last_position","setDirectionsFromLocation","enableHighAccuracy","from","to","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","radius","routeParameters","destination","travelMode","getRoute","origin_error","TypeError","externalId","floors","_setFloorFromZone","defaultFloor","_last_building","take","new_level","roomId","ignore_actions","callback","query","LocationsService","getLocations","q","id_simple","setDisplayRule","extrusionHeight","extrusionVisible","polygonVisible","polygonFillColor","setCenter","setFloor","highlight","FloorSelector","maps","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","MapsIndoorsComponent_button_2_Template","ImageViewerComponent","onClose","DeskHeightPresetsComponent","show_close","not_set","desk_sitting_height","desk_standing_height","DeskHeightPresetsComponent_div_5_Template","DeskHeightPresetsComponent_button_23_Template","PlaceZone","MAT_MODULES","MatAutocompleteModule","MatMenuModule","MatFormFieldModule","MatSelectModule","MatRippleModule","MatDialogModule","MatDatepickerModule","MatInputModule","ClipboardModule","MatProgressSpinnerModule","MatChipsModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatTooltipModule","MatCheckboxModule","MatRadioModule","MatSliderModule","MatSlideToggleModule","MatButtonToggleModule","ComponentsModule","$C","G2t","provideHttpClient","withInterceptorsFromDi","imports","CommonModule","FormsModule","ReactiveFormsModule","TranslateModule","forChild","i5","i6","i7","i8","UnauthorisedComponent","option_r3","active_display","BootstrapComponent_main_4_mat_option_7_Template","bootstrapKiosk","displays","STORE_PREFIX","STORE_DISPLAY_KEY","STORE_BUILDING_KEY","BootstrapComponent","_route","rotations","signage","r","queryParamMap","removeItem","checkBootstrap","display_id","BootstrapComponent_main_4_Template","BootstrapComponent_ng_template_5_Template","load_state_r4","STORE_KEY","cacheStatus","on_change","MediaCacheService","_cache_index","_file_cache_index","indexedDB","onerror","onsuccess","_cache_db","onupgradeneeded","createObjectStore","keyPath","_loadCacheMetadata","_saveCacheMetadata","requestFilesToCache","url_list","failures","existing","cache_item","requestAndCacheFile","_applyAuthenticationCookie","File","transaction","objectStore","availableFiles","getFile","invalidateStore","clear","invalidateFile","delete","metadata_string","DISPLAY_KEY","SignageService","setDisplay","_display","_media_cache","_poll","_retry","_last_modified","showSignage","headers","toUTCString","responseHeaders","valueOf","distinctUntilKeyChanged","playlist_media","SignageMedia","playlist","playlists","playlist_mappings","media_list","playlist_config","media","media_id","playlist_id","shuffleArray","flat","media_ref","media_url","animation","default_animation","playlist_name","media_type","play_time","video_length","default_duration","getURL","startWith","_ref2","available_media","extra_media","has_failures","$index_r4","$index","setPlaylistItem","MediaPlayerComponent_Conditional_12_div_23_For_8_span_3_Template","item_r5","MediaPlayerComponent_Conditional_12_div_23_For_8_Template","playlist_items","MediaPlayerComponent_Conditional_12_div_3_Template","previousItem","togglePause","nextItem","toggleMuted","toggleLoop","toggleShuffle","MediaPlayerComponent_Conditional_12_div_23_Template","show_playlist","in_animation","muted","loop","shuffle","MediaPlayerComponent","animation_time","stateChange","indexChange","mutedChange","hold_over_item","_item_playlist","_item_urls","_item_start","_item_progress","active_item","_updateItem","current_item","current_exists","documentElement","setProperty","_video_element","pause","play","shift","next_index","shuffleArrayWithFirstItem","first_index","firstItem","unshift","findIndex","_processURLs","_image_element","toString","_transition","current_index","item_count","item_list","revokeObjectURL","MediaAnimation","Cut","_onTransitionEnd","img_el","_previous_img_element","video_el","_previous_video_element","prev_container_el","_previous_container","container_el","requestAnimationFrame","SlideTop","SlideLeft","SlideRight","SlideBottom","CrossFade","MediaPlayerComponent_Conditional_12_Template","SignagePanelComponent","_signage","paramMap","routes","path","component","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","MOCK_MENU","unit_price","generateCateringOrder","event_start","event_end","mx","event_id","invoice_number","charge_code","deliver_at","quantity","DOMAIN","PREDEF_USERS","ACTIVE_USER","MOCK_STAFF","MOCK_GUESTS","vaccination_proof","id_data","MOCK_ORGS","created_at","updated_at","triggers","MOCK_BUILDINGS","MOCK_ZONES","MOCK_LEVELS","mockLevel","num","p","MOCK_METADATA","current","contacts","PARKING_SPACES","LOCKERS","ZONE_MOCKS","registerMocks","registerMockEndpoint","method","query_params","area_management","location_services","contact_tracing","catering","route_params","generateParkingSpaces","generateLockers","generateMockDeskMetadata","charge_codes","map_regions","areas","label_location","geometry","DESK_FEATURES","desks","assignee","assigned_to","assigned_name","idx2","date_format","start_of_day","range","end_of_day","DateFieldComponent_div_5_span_1_Template","DateFieldComponent_div_5_span_2_Template","DateFieldComponent_div_5_span_3_Template","setValue","until","week_start","TimezoneDiffRange","Both","Start","End","DateFieldComponent","short","use_24hr","endOfDay","has_error","_control","from_date","to_date","addYears","NgControl","new_value","old_date","new_date","_onChange","_tooltip","writeValue","registerOnChange","registerOnTouched","_onTouch","setDisabledState","disabled","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DateFieldComponent_Conditional_3_Template","DateFieldComponent_Conditional_4_Template","DateFieldComponent_div_5_Template","DateFieldComponent_span_10_Template","DateFieldComponent_ng_template_11_Template","calendar_picker_r3","selected","DurationFieldComponent_mat_option_10_ng_container_1_div_5_Template","DurationFieldComponent_mat_option_10_ng_container_1_Template","DurationFieldComponent","step","custom_options","duration_options","generateDurationOptions","_updateOption","zero","DurationFieldComponent_div_9_Template","DurationFieldComponent_mat_option_10_Template","active_time","force_time","TimeFieldComponent_mat_option_9_div_5_Template","TimeFieldComponent_mat_option_10_div_5_Template","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","time_options","roundToNearestMinutes","nearestTo","showSelect","select_field","openedChange","datestamp","show_past","TimeFieldComponent_div_8_Template","TimeFieldComponent_mat_option_9_Template","TimeFieldComponent_mat_option_10_Template","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","UserFormComponent","UserFormComponent_form_0_Template","NewUserModalComponent","new_user","reason","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","load_state_r3","CateringItem","custom_id","option_list","in_order","discount_cap","accept_points","has_options","active","hide_for_zones","unit_price_with_options","total_cost","options_string","deliverAtTime","order","_time","deliver_time","deliver_day_offset","all_day","deliver_offset","CateringOrder","_status","amount","deliver_at_time","DAYS_OF_WEEK","AssetRequest","conflict","_changed","asset_ids","linked_bookings","request_id","_booking","ref_id","toJSON","category_id","item_ids","_default_user","CalendarEvent","is_all_day","view_access","ext","_valid_asset_cache","_valid_cache_expiry","getUnixTime","calendar","creator","host_email","attendees","u","private","date_end","associated_id","meeting_url","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring","recurring_event_id","organiser","from_bookings","master","mailbox","ical_uid","update_master","recurrence","range_start","range_end","occurrences","days_of_week","old_system","is_system_event","eventStatus","setup_time","breakdown_time","simple_event","linked_assets","booking_type","asset_requests","assets","guests","is_today","valid_catering","valid_assets","_pattern","parseRecurrence","addWeeks","addMonths","all_day_date","can_check_in","searchGuests","searchStaff","item_r3","ctx_r3","tmp_8_0","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","_r8","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","UserListFieldComponent","queryUsers","search_valid_email","guests_only","hide_actions","custom_template","separatorKeysCodes","ENTER","COMMA","user_list$","staff","visitors_list","visitors","company","active_list","validFn","emptyClick","updateSearch","visitor_details","old_visitors","_search_el","a_user","files","reader","readAsText","evt","processCsvData","srcElement","csvToJson","csv","objPattern","RegExp","arrMatches","arrData","row","internal_emails","downloadFile","filename","contents","setAttribute","click","removeChild","displayFn","ref","width","componentInstance","UserListFieldComponent_mat_chip_row_6_Template","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","blurInput","stopPropagation","search_str","empty_fn","UserSearchFieldComponent","query_fn","search_results$","distinctUntilChanged","forkJoin","search","cancelReset","user_list","resetSearchString","active_user","ElementRef","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","placeholder","auto_r7","ItemListFieldComponent","separators","addChipItem","control","input","removeChipItem","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","IGNORE_EXT_KEYS","Booking","asset_id","asset_name","booking_start","booking_end","user_email","user_name","deleted","booked_by_id","booked_by_name","booked_by_email","approver_id","approver_email","approver_name","access","permission","members","induction","checked_out_at","checked_in_at","linked_event","process_state","recurrence_type","recurrence_days","recurrence_nth_of_month","recurrence_interval","recurrence_end","instance","is_done","addHours","checked_out","BOOKINGS_ENDPOINT","queryBookings","createBooking","removeBooking","removeBookingInstance","del","response_type","queryResourceAvailability","ignore_period","period_start","period_end","_createBookingsForEvent","bookings","location_id","Calendar","primary","summary","can_edit","starts_at","ends_at","CALENDAR_ENDPOINT","queryCalendarAvailability","calendarsToSpaces","cal","querySpaceFreeBusy","EVENTS_ENDPOINT","showEvent","saveEvent","updateEvent","patch","put","createEvent","addEventGuest","guest","querySpaceAvailability","system_ids","ignore_check","short_list","endInFuture","BOOKING_DATE","setMinutes","setHours","validateCateringField","catering_control","catering_field","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","resource_name","PaymentModalComponent_div_0_ng_container_1_Template","success","success_state_r3","transaction_id","PaymentModalComponent","_validCardDetails","makePayment","cardholder","cvv","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","STRIPE_MODULE","PaymentsService","payment_module","_loading","_active_card","payment_sources","cost","period","_getCostOfProduct","customer_id","_newCustomerID","_processPayment","rate","_addPaymentMethod","card","payment_method","price","product_list","invoice_id","formatUTC","utc_date","localToTimezone","offset_diff","getTimezoneOffset","addMilliseconds","formatAllDay","formatCalFileText","EventLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","rru","startdt","toISOString","enddt","subject","allday","emails","google_link","generateGoogleCalendarLink","fmt","trp","dates","ical_link","generateCalendarFileLink","chunks","has_actioned","BASE_ENDPOINT","groups_cache","queryAssetGroupsExtended","queryAssets","type_id","queryGroupAvailability","products","product","asset","validateAssetRequestsForResource","_x2","_x3","_validateAssetRequestsForResource","from_booking","reset_state","new_assets","force_create","requests","booking_id","booking_list","differenceBetweenAssetRequests","old_assets","has_state","unchanged","changed_requests","changed_assets","used_ids","req","available_groups","processed_requests","asset_data","ASSET_GROUP_LIST","AssetGroup","assign","RULE_REQUESTS","AssetStateService","_category","getAssetRulesForZone","fresh","asset_list","asset_bookings","endOfMinute","updateAssetGroupList","assetgroup_list","assetgroup","category_list","queryAssetCategories","filtered_assets","assetAvailable","current_date","event_date","isRuleMatch","rule","countMatches","condition","subHours","disabled_rooms","setSearch","toggleCategory","categories","getOptions","BOOKING_URLS","EventFormService","options_value","is_multiday","_view","_form","favorite_spaces","has_calendar","_payments","_assets","zone_ids","generateEventForm","catering_notes","catering_charge_code","visitor_type","needs_space","needs_parking","attendance_type","shared_event","featured","valueChanges","o","setCateringTime","getRawValue","emitEvent","enable","roundingMethod","setValidators","clearValidators","setErrors","_date","last_success","building_rules","mapping","requestSpacesForZone","filtered_spaces","show_fav","limit_map","limited_zones","zone_limit","_space_bookings","obs","current_available_spaces","merge","timer","periodInFreeTimeSlot","min_size","getFreeTimeSlots","slots","bkn_start","bkn_end","isSameMinute","blk","future_available_spaces","available_spaces","differenceInDays","cancelPostForm","_space_pipe","events","NavigationEnd","clearForm","previous","storeForm","listenForStatusChanges","setView","newForm","resetForm","has_catering","loadForm","form_data","openEventLinkModal","postForm","ignore_space_check","ignore_owner","changed_times","changed_spaces","checkSelectedSpacesAreAvailable","is_owner","receipt","invoice","breakdown","overflow","processed_assets","_makeBooking","host_override","creating_assets","on_error","removeEvent","createBookingsForEvent","_x4","_x5","_x6","_updateVisitorList","saveBooking","updateBookingInstance","updateBooking","newBookingFromCalendarEvent","newCalendarEventFromBooking","toggleFavourite","displayed","selected_ids","favorites","NewSpaceSelectModalComponent","_event_form","multiday","isSelected","setSelected","fav_list","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","map_view_r6","space_r2","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","placeholder_r4","EMPTY_FAVS","SpaceListFieldComponent","room_size","i18n_5","SpaceListFieldComponent_div_15_Template","RichTextInputComponent","readonly","images_allowed","_updateFn","_editor","root","innerHTML","_initialiseEditor","delta","clipboard","convert","html","setContents","_editor_el","toolbarOptions","font","header","align","Quill","bounds","modules","toolbar","container","handlers","image","_embedImage","_embedAttachment","readOnly","on","off","getSelection","file_input","onchange","insertEmbed","insertText","setSelection","url_r3","copyLink","viewImage","removeImage","item_r6","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","_r7","view_space","item_r10","_r9","ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","box","_list_el","addImageUrl","copy","addImage","chipInput","inputElement","resume","uploadImages","_file_input","new_list","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","chipList_r11","toggleDayOfWeek","RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","changeMonth","change","startOfMonth","weekStartsOn","is_past","isSameMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","save","rulesetChange","building_zones","firstChange","condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","USER_LIST","PlaceUserPipe","setStartDate","setEndDate","start_date","DateRangeFieldComponent","end_date","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","nextMonth","previousMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","FormFieldsModule","i9","i10","i11","i12","i13","i14","i15","i16","i17","feature_r3","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","activeChange","fav","hide_map","SpaceDetailsComponent","_updateFeature","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","empty_state_r4","selectSpace","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","tmp_12_0","isFavourite","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","onSelect","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","tmp_2_0","load_state_r6","reg_r4","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","_r11","tmp_5_0","max_duration","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","_r12","_r13","feat_r14","toggleFeature","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_r15","SpaceFiltersComponent","allow_all_day","_bsheet_ref","can_close","using_mapspeople","feat","hide_levels","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","tmp_17_0","removeAllFeatures","feat_r4","removeFeature","SpaceFiltersDisplayComponent","_bsheet","viewChange","editFilters","_updateLocation","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_9_0","available_until","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","VanillaQR","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","g","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","toImage","Image","toDataURL","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","SpaceLocationPinComponent","color","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","lvl_r3","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_c1","SpaceSelectMapComponent","is_displayed","_seletedSpace","free_spaces","colours","new_zoom","resetMap","SpaceSelectMapComponent_mat_form_field_1_Template","SharedSpacesModule","MatBottomSheetModule","randomSpaceFeatures","numFeatures","MOCK_SPACES","generateMockSpace","linked","long_name","searchable","controlable","cost_hour","linked_rooms","EVENT_TIME","dayjs","startOf","nextEventTime","unix","event_status","randomStatus","rnd","MOCK_EVENTS","PEOPLE","event_spaces","USER_MOCKS","person","decodeURIComponent","generateLocation","LOCATION_TYPES","level_spaces","meeting","last_seen","subMinutes","geo","lon","RoomModule","help","tabs","volume","input_list","output_list","env_sources","available_outputs","$power","$share","$route","output","$updateState","following","$unroute","$connect","$disconnect","$link","$merge","$split","$notify","$preset","$volume","$mute","mute","$unmute","$environment","$lock","locked","$unlock","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","createSystemModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","_space","$start_meeting","$end_meeting","$book_now","len","$poll_bookings","updateBookings","subSeconds","addSeconds","createBookingsModule","MockAreaManagementModule","overview","emergency_contacts","$locate_user","$update","updateLocations","area","MAC_LOOKUP","MockLocationServicesModule","$check_ownership_of","mac_address","priority","padZero","no","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","area_id","users","fixed","usr","at_location","mac","Md5","hashStr","coordinates_from","s2_cell_id","variance","map_width","map_height","CameraModule","presets","$pan","dir","$tilt","tilt","$recall","$save_preset","DisplayModule","MicrophoneModule","CaptureModule","live","remaining","$start","$pause","$resume","$stop","createCaptureModule","MeetingPushModule","supported_meeting_url","$econtrol","createMeetingPushModule","VideoConferenceModule","$show_camera_pip","visible","selfview","$mic_mute","mic_mute","$presentation_mode","presentation_mode","$hangup","$call_place_on_hold","calls","Status","$call_resume","$video_layout","layout","video_layout","$dtmf_send","digit","$dial","dial_number","createVideoConferenceModule","CONTACT_EVENTS","filterFn","itm","contact_time","ContactTracingModule","$close_contacts","beginning","ending","createContactTracingModule","PaymentsModule","$list_payment_methods","$add_payment_method","$get_product_prices","$create_payment_intent","$confirm_payment_intent","$cancel_payment_intent","$create_customer","createPaymentsModule","LockerLocationsModule","$lockers_allocated_to_me","bank_id","locker_id","locker_name","allocated","group_id","createLockerLocationsModule","SYSTEM_MOCKS","createSystem","registerSystem","System","Bookings","ContactTracing","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","MeetingPush","VidConf","Payment","LockerLocations","mockSystem","EVENT_MOCKS","new_event","CALENDAR_MOCKS","user2","user3","handleSpaceAvailability","MOCK_CATEGORIES","MOCK_PRODUCTS","brand","barcode","MOCK_ASSETS","model_number","serial_number","identifier","other_data","purchase_order_id","MOCK_PURCHASE_ORDERS","order_number","purchase_date","expected_service_start_date","expected_service_end_date","subDays","TYPES","TRACKING","MOCK_BOOKINGS","lvls","lvl_spaces","approver","asset_count","plate_number","tracking","BOOKING_MOCKS","BASE_PATH","ASSET_MOCKS","update","dataset","SURVEY_MOCKS","MOCK_SURVEYS","survey_id","MOCK_SURVEY_ANSWERS","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","mocks","START_QUERY","AppComponent","has_chat","_cache","_snackbar","_maps","_translate","MOCKS","refreshToken","readText","_pasteToken","pasteToken","locale","setAPI_Key","setNotifyOutlet","snackbar","disable_logging","convertPairStringToMap","relativeTo","queryParams","setupPlace","onInitError","_initLocale","setInternalUserDomain","_initAnalytics","initSentry","dsn","sample_rate","Sentry","integrations","maskAllText","blockAllMedia","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","isMobileSafari","platform","userAgent","setCustomHeaders","Authorization","initialiseUploadService","auto_start","endpoint","worker_url","Amazon","Azure","Google","OpenStack","isFixedDevice","_checkReload","requestScreenWakeLock","invalidateToken","addLangs","languages","lang","clientId","AppComponent_global_chat_3_Template","AppComponent_debug_console_5_Template","AttendeeListComponent_ng_container_7_div_1_div_5_Template","user_r3","AttendeeListComponent_ng_container_7_div_1_Template","show_host","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_ng_container_7_Template","period_tz","checkin","room_status","menu_r4","EventDetailsModalComponent_div_14_button_1_Template","EventDetailsModalComponent_div_14_button_2_Template","allow_edit","optionList","item_r7","EventDetailsModalComponent_ng_container_70_div_5_div_13_span_4_Template","order_r6","show_order","EventDetailsModalComponent_ng_container_70_div_5_div_13_Template","EventDetailsModalComponent_ng_container_70_div_5_Template","EventDetailsModalComponent_div_73_div_3_Template","request_r9","show_request","EventDetailsModalComponent_ng_container_74_div_5_div_13_Template","EventDetailsModalComponent_ng_container_74_div_5_Template","show_attendees","edit","no_edit_message","act_r15","_r14","EMPTY_ACTIONS","EventDetailsModalComponent","custom_actions","hide_edit","has_assets","accept_count","declined_count","pending_count","DatePipe","_load","formattedTime","tz_format","getEventMetadata","viewLocation","maxWidth","maxHeight","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_13_Template","EventDetailsModalComponent_div_14_Template","EventDetailsModalComponent_div_31_Template","EventDetailsModalComponent_ng_container_36_Template","EventDetailsModalComponent_div_38_Template","EventDetailsModalComponent_ng_container_70_Template","EventDetailsModalComponent_ng_container_72_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_ng_container_74_Template","EventDetailsModalComponent_div_78_Template","EventDetailsModalComponent_button_81_Template","EventDetailsModalComponent_button_88_Template","EventDetailsModalComponent_button_89_Template","is_interested","is_going","is_onsite","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_div_5_Template","GroupEventDetailsModalComponent_div_99_div_6_Template","GroupEventDetailsModalComponent_div_99_span_8_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_a_10_Template","showing_map","has_space","is_online","GroupEventDetailsModalComponent","remove_blocks","last","lastIndexOf","attendance","guest_details","group_event_calendar","concierge","locate","raw_description","space_pipe","removeHtmlTags","DOMParser","parseFromString","textContent","toggleInterest","removeEventGuest","toggleAttendance","checkinEventGuest","guest_id","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","EventCardComponent_h4_0_span_1_Template","show_day","EventCardComponent_a_1_div_29_div_1_Template","EventCardComponent_a_1_div_29_div_3_Template","viewDetails","EventCardComponent_a_1_div_9_Template","EventCardComponent_a_1_div_21_Template","EventCardComponent_a_1_div_29_Template","tmp_10_0","EventCardComponent","getLocationString","zone_list","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","SetupBreakdownModalComponent","updateEventMetadata","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","GroupEventCardComponent","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","SharedEventsModule","setDefaultCreator","MatButtonModule","offset_x","hour_r2","user_r5","offset_y","FindAvailabilityModalComponent","current_hour","selection_left","selection_width","queryUserFreeBusy","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","closeAndUpdate","querySelector","el_rect","scrollTo","left","onScroll","scrollLeft","startMovePeriod","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","startMoveDuration","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","SharedUsersModule","SharedBookingsModule","SharedExploreModule","OverlayModule","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","ErrorHandler","showDialog","deps","Router","APP_INITIALIZER","useFactory","BrowserModule","BrowserAnimationsModule","MatProgressBarModule","ServiceWorkerModule","register","defaultLanguage","loader","TranslateLoader","HttpClient","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/common/src/lib/async-handler.class.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/icon.component.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./apps/signage/src/environments/settings.ts","./libs/common/src/lib/version.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/user.class.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/settings.service.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/common/src/lib/notifications.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/region.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/booking-rules.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/fixed-device-helpers.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/users/src/lib/wfh-settings-modal.component.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/components/src/lib/work-location-tooltip.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/desk-height-presets.component.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/zone.pipe.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/unauthorised.component.ts","./apps/signage/src/app/bootstrap.component.ts","./apps/signage/src/app/media-cache.service.ts","./apps/signage/src/app/signage.service.ts","./apps/signage/src/app/media-player.component.ts","./apps/signage/src/app/signage.component.ts","./apps/signage/src/app/app-routing.module.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/events/src/lib/helpers.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/events/src/lib/event.class.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/staff.fn.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/validators.ts","./libs/events/src/lib/utilities.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.service.ts","./libs/common/src/lib/calendar-links.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/events/src/lib/event-form.service.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/mocks.ts","./libs/components/src/lib/app.component.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/group-event-details-modal.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/group-event-card.component.ts","./libs/events/src/lib/events.module.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/users.module.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/explore/src/lib/explore.module.ts","./apps/signage/src/app/app.module.ts","./apps/signage/src/environments/environment.prod.ts","./apps/signage/src/main.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name,\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args,\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Pad the start of a string or number with given character\n * @param value String or number to pad\n * @param length Length of the final string\n * @param character Character to pad output string with. Defaults to `0`.\n */\nexport function padLength(\n    value: number | string,\n    length: number = 2,\n    character = '0',\n): string {\n    let str = `${value}`;\n    while (str.length < length) str = `${character}${str}`;\n    return str;\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog,\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        },\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi',\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3],\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|'),\n                    )\n                    .join(seperator),\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents),\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(''),\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number,\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language,\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, ''],\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number,\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n\nexport function extractTextFromHTML(html_string: string) {\n    // Create a temporary DOM element\n    const temp_element = document.createElement('div');\n\n    // Set the innerHTML to our HTML string\n    temp_element.innerHTML = html_string;\n\n    // Extract and return the text content\n    return temp_element.textContent || temp_element.innerText || '';\n}\n\n/**\n * Shuffle the items in array into random order\n * @param array List of items to shuffle\n */\nexport function shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/**\n * Shuffle the items in array into random order with a specific item as the first\n * @param array List of items to shuffle\n * @param first_index Index of the item in the list to set as first\n */\nexport function shuffleArrayWithFirstItem(array: any[], first_index: number) {\n    // Move the specified item to the beginning\n    const firstItem = array.splice(first_index, 1)[0];\n    array.unshift(firstItem);\n\n    // Shuffle the rest of the array (starting from index 1)\n    for (let i = array.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i - 1)) + 1;\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","const app = {\n    name: 'Signage',\n    title: 'PlaceOS',\n    description: 'Signage Panel',\n    short_name: 'PlaceOS',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    diagnostics: true,\n    default_animation_time: 1000,\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/signage',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"84989d7\",\n    \"hash\": \"84989d7\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"84989d7\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1727934173844\n};\n/* tslint:enable */\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n              ? 'declined'\n              : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    blocks: WorktimeBlock[];\n}\n\nexport interface WorktimeBlock {\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public work_preference(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        if (this.work_overrides[date_string]?.blocks?.length) {\n            for (const block of this.work_overrides[date_string].blocks) {\n                const start = block.start_time;\n                const end = block.end_time;\n                if (\n                    start <= date.getHours() + date.getMinutes() / 60 &&\n                    end >= date.getHours() + date.getMinutes() / 60\n                ) {\n                    return block;\n                }\n            }\n        }\n        for (const pref of this.work_preferences) {\n            if (pref.day_of_week === day && pref.blocks?.length) {\n                for (const block of pref.blocks) {\n                    if (\n                        block.start_time <=\n                            date.getHours() + date.getMinutes() / 60 &&\n                        block.end_time >=\n                            date.getHours() + date.getMinutes() / 60\n                    ) {\n                        return block;\n                    }\n                }\n            }\n        }\n    }\n\n    public location_time(datetime: number = Date.now()) {\n        return this.work_preference(datetime)?.location || 'wfo';\n    }\n\n    public get location_name() {\n        return this.location_name_time();\n    }\n\n    public location_name_time(datetime: number = Date.now()) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public outsideHours(datetime: number = Date.now()) {\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        return location.includes('w') && !in_hours;\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number = Date.now()) {\n        const block = this.work_preference(datetime);\n        return !!block;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\nconst _change = new BehaviorSubject(0);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    combineLatest([showUser('current'), _change])\n        .pipe(\n            delay(1000),\n            retry(10),\n            map(([i]) => new StaffUser(i as any)),\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\nexport function reloadUserData() {\n    setTimeout(async () => {\n        const user = await showUser('current').toPromise();\n        _current_user.next(new StaffUser(user as any));\n    }, 300);\n}\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Address of the region */\n    public readonly address: string;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n        this.address = _data.address || '';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceMetadata,\n    PlaceZone,\n    authority,\n    isFixedDevice,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings,\n        ),\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1),\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        if (!this._service.get('dont_load_metadata')) {\n            this.loadBuildingData(bld).then(() =>\n                this._updateSettingOverrides(),\n            );\n        }\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id,\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(\n        private _service: SettingsService,\n        private _router: Router,\n    ) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300),\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id,\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id),\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone,\n                ) || org_list[0];\n\n            const load_metadata = !this._service.get('dont_load_metadata');\n            const bindings: Record<string, any> = (\n                await (\n                    load_metadata\n                        ? showMetadata(org.id, 'bindings')\n                        : of({ details: {} })\n                ).toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([])),\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const load_metadata = !this._service.get('dont_load_metadata');\n        const settings_request = load_metadata\n            ? showMetadata(region.id, this.app_key)\n            : of(new PlaceMetadata());\n        const bindings_request = load_metadata\n            ? showMetadata(region.id, 'bindings')\n            : of(new PlaceMetadata());\n        const [settings, bindings, buildings]: any = await Promise.all([\n            settings_request.pipe(map((_) => _?.details)).toPromise(),\n            bindings_request.pipe(map((_) => _?.details)).toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id'),\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id,\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None,\n                                    ) || { settings_string: '' },\n                                );\n                            } catch {\n                                return {};\n                            }\n                        }),\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        let level_list = await queryZones({\n            tags: 'level',\n            authority_id: authority().id,\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        level_list = level_list.filter((_) => _.parent_id);\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || ''),\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const load_metadata = !this._service.get('dont_load_metadata');\n        if (load_metadata) {\n            const app_settings = (\n                await showMetadata(\n                    this._organisation?.id,\n                    this.app_key,\n                ).toPromise()\n            )?.details;\n            const global_settings = (\n                await showMetadata(\n                    this._organisation?.id,\n                    'settings',\n                ).toPromise()\n            )?.details;\n            this._settings = [global_settings, app_settings];\n        }\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2),\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2),\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id),\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id,\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300,\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\nimport { padLength } from './general';\n\nexport const LOCAL_TIMEZONE =\n    Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function getTimezoneOffsetString(tz: string) {\n    const offset = getTimezoneOffsetInMinutes(tz);\n    const hours = Math.floor(Math.abs(offset) / 60);\n    const minutes = Math.abs(offset) % 60;\n    return `${offset > 0 ? '+' : '-'}${padLength(hours, 2)}${padLength(\n        minutes,\n        2,\n    )}`;\n}\n\nexport function getTimezoneOffsetInMinutes(timeZone, date = new Date()) {\n    const options: Intl.DateTimeFormatOptions = {\n        timeZone,\n        hour12: false,\n        timeZoneName: 'short',\n    };\n    const formatter = new Intl.DateTimeFormat([], options);\n    const parts = formatter.formatToParts(date);\n\n    // Find the timeZoneName part which contains the GMT offset\n    const tzOffsetPart = parts.find((part) => part.type === 'timeZoneName');\n    const tzOffsetString = tzOffsetPart ? tzOffsetPart.value : 'GMT';\n\n    // Match the offset from the string (e.g., \"GMT+0530\")\n    const offsetMatch = tzOffsetString.match(/GMT([+-])(\\d{1,2})(\\d{2})?/);\n    if (!offsetMatch) {\n        return 0; // If no match, assume UTC (offset 0)\n    }\n\n    const sign = offsetMatch[1] === '+' ? 1 : -1;\n    const hours = parseInt(offsetMatch[2], 10);\n    const minutes = offsetMatch[3] ? parseInt(offsetMatch[3], 10) : 0;\n\n    return sign * (hours * 60 + minutes);\n}\n\nexport function getTimezoneDifferenceInHours(\n    src_tz: string,\n    dest_tz: string = LOCAL_TIMEZONE,\n    date: Date = new Date(),\n) {\n    const offset1 = getTimezoneOffsetInMinutes(src_tz, date);\n    const offset2 = getTimezoneOffsetInMinutes(dest_tz, date);\n\n    // Calculate the difference in hours\n    return (offset1 - offset2) / 60;\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","let _wake_lock: WakeLockSentinel | null = null;\n\nexport async function requestScreenWakeLock() {\n    if (_wake_lock) {\n        await _wake_lock.release();\n    }\n    // create an async function to request a wake lock\n    try {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    } catch (err) {\n        throw err;\n    }\n}\n\ndocument.addEventListener('visibilitychange', async () => {\n    if (_wake_lock !== null && document.visibilityState === 'visible') {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    }\n});\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img auth class=\"h-full w-full\" [source]=\"user.photo\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[])),\n            ),\n        ),\n        shareReplay(1),\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || ''),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        }),\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        }),\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id,\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles',\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n\n    public has(\n        type: 'style' | 'feature' | 'action' | 'label',\n        id: string,\n        exclude: string[] = [],\n    ): boolean {\n        if (type === 'style') {\n            const styles_map = this._styles.getValue();\n            for (const group in styles_map) {\n                if (exclude.includes(group)) continue;\n                const styles = styles_map[group];\n                if (id in styles || `#${id}` in styles) return true;\n            }\n        } else if (type === 'feature') {\n            const feature_map = this._features.getValue();\n            for (const group in feature_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of feature_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        } else if (type === 'action') {\n            const actions_map = this._actions.getValue();\n            for (const group in actions_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of actions_map[group]) {\n                    if (feature.id === id) return true;\n                }\n            }\n        } else if (type === 'label') {\n            const labels_map = this._labels.getValue();\n            for (const group in labels_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of labels_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase()),\n            ),\n        ),\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            }),\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            }),\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show),\n            ),\n        );\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '', { async: false }) as any;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, notifyError, reloadUserData } from '@placeos/common';\nimport { addDays, set, startOfMinute, startOfWeek } from 'date-fns';\nimport { WorktimeBlock, WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <header class=\"relative flex items-center justify-between\">\n            <h2 class=\"font-medium text-xl\">Working Location Settings</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"bg-base-200\"\n                *ngIf=\"!loading\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"relative flex flex-col rounded w-[40rem] max-w-full p-4 space-y-2 max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <h3>Working Days</h3>\n            <div\n                class=\"flex items-center justify-between w-full pb-4 space-x-2\"\n            >\n                <mat-checkbox\n                    *ngFor=\"let day of days\"\n                    [(ngModel)]=\"weekdays_enabled[day.getDay()]\"\n                    (ngModelChange)=\"$event && initialiseDay(day.getDay())\"\n                >\n                    {{ day | date: 'EEE' }}\n                </mat-checkbox>\n            </div>\n            <h3>Work Hours</h3>\n            <ng-container *ngIf=\"has_working_days; else empty_state\">\n                <ng-container *ngFor=\"let day of days\">\n                    <ng-container *ngIf=\"weekdays_enabled[day.getDay()]\">\n                        <div\n                            class=\"flex w-full space-x-2 hover:bg-base-200 rounded px-2 pt-1\"\n                        >\n                            <label class=\"w-12 min-w-0 px-2 pt-3\">\n                                {{ day | date: 'EEE' }}\n                            </label>\n                            <div class=\"flex-1 w-1/2\">\n                                <div\n                                    class=\"flex items-center space-x-2\"\n                                    *ngFor=\"\n                                        let block of settings[day.getDay()]\n                                            .blocks;\n                                        let i = index\n                                    \"\n                                >\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.start_time)\"\n                                        (ngModelChange)=\"\n                                            setStartTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(\n                                                (i > 0\n                                                    ? settings[day.getDay()]\n                                                          .blocks[i - 1]\n                                                          ?.end_time\n                                                    : 0) || 0\n                                            )\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.end_time)\"\n                                        (ngModelChange)=\"\n                                            setEndTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(block.start_time + 0.25)\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <mat-form-field\n                                        appearance=\"outline\"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    >\n                                        <mat-select\n                                            [(ngModel)]=\"block.location\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"let type of options\"\n                                                [value]=\"type.id\"\n                                            >\n                                                {{ type.name }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [disabled]=\"\n                                            settings[day.getDay()].blocks\n                                                .length > 2\n                                        \"\n                                        (click)=\"\n                                            addBlock(settings[day.getDay()], i)\n                                        \"\n                                    >\n                                        <app-icon>add</app-icon>\n                                    </button>\n                                    <button\n                                        icon\n                                        matRipple\n                                        class=\"text-error\"\n                                        [class.opacity-0]=\"i === 0\"\n                                        [class.pointer-events-none]=\"i === 0\"\n                                        (click)=\"\n                                            removeBlock(\n                                                settings[day.getDay()],\n                                                i\n                                            )\n                                        \"\n                                    >\n                                        <app-icon>delete</app-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #empty_state>\n                <div\n                    class=\"flex flex-col items-center justify-center px-8 py-16 space-y-4\"\n                >\n                    <img src=\"assets/icons/no-results.svg\" class=\"m-auto\" />\n                    <p class=\"opacity-30\">\n                        No work days are currently set for this user\n                    </p>\n                </div>\n            </ng-template>\n        </main>\n        <footer\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">\n                    Saving changes to work location settings...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Office' },\n        { id: 'wfh', name: 'Home' },\n        { id: 'aol', name: 'Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays_enabled: Record<number, boolean> = {};\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n\n    public get has_working_days() {\n        return Object.keys(this.weekdays_enabled).some(\n            (day) => this.weekdays_enabled[day],\n        );\n    }\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = [\n            ...(user.work_preferences || []).map((_) => ({\n                ..._,\n                blocks: [...(_?.blocks || [])],\n            })),\n        ];\n        for (const day of this.settings) {\n            if (day.blocks.length)\n                this.weekdays_enabled[day.day_of_week] = true;\n        }\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(addDays(new Date(), 1), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n            }),\n        ).getTime();\n    }\n\n    public fromTime(time: number) {\n        const date = new Date(time);\n        return date.getHours() + date.getMinutes() / 60;\n    }\n\n    public initialiseDay(day: number) {\n        if (!this.settings[day])\n            this.settings[day] = { day_of_week: day as any, blocks: [] };\n        if (!this.settings[day].blocks) this.settings[day].blocks = [];\n        if (this.settings[day].blocks.length === 0) {\n            this.addBlock(this.settings[day], 0);\n        }\n    }\n\n    public addBlock(pref: WorktimePreference, index: number) {\n        pref.blocks.splice(index + 1, 0, {\n            start_time: 9,\n            end_time: 17,\n            location: 'wfo',\n        });\n        this.cleanupBlocks(pref);\n    }\n\n    public removeBlock(pref: WorktimePreference, index: number) {\n        if (pref.blocks.length <= 1) return;\n        pref.blocks.splice(index, 1);\n    }\n\n    public setEndTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.end_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public setStartTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.start_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public cleanupBlocks(pref: WorktimePreference) {\n        if (!pref?.blocks?.length) return;\n        for (let i = 0; i < pref.blocks.length; i++) {\n            const block = pref.blocks[i];\n            if (i > 0) {\n                if (block.start_time < pref.blocks[i - 1].end_time) {\n                    block.start_time = pref.blocks[i - 1].end_time;\n                }\n            }\n            if (block.end_time <= block.start_time) {\n                block.end_time = block.start_time + 1;\n            }\n        }\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const user = await showUser('current').toPromise();\n        const new_settings = new Array(7)\n            .fill(0)\n            .map((_, idx) => ({ day_of_week: idx, blocks: [] }));\n        for (const day of this.days) {\n            const day_of_week = day.getDay();\n            if (this.weekdays_enabled[day_of_week]) {\n                new_settings[day_of_week] = {\n                    day_of_week: day_of_week,\n                    blocks: this.settings[day_of_week].blocks,\n                };\n            }\n        }\n        console.log('Update user...');\n        await updateUser(user.id, {\n            ...user,\n            groups: user.groups.filter((_) => !_.startsWith('placeos_')),\n            work_preferences: new_settings,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError('Unable to save user work preferences.');\n                throw e;\n            });\n        console.log('Updated user');\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            reloadUserData();\n            console.log('Close WFH Modal');\n            this._dialog_ref.close();\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.',\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type,\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    '',\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>',\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, reloadUserData } from '@placeos/common';\nimport { updateUser } from '@placeos/ts-client';\nimport { WorktimePreference } from '@placeos/users';\nimport {\n    format,\n    parse,\n    set,\n    startOfMinute,\n    isBefore,\n    addDays,\n    startOfDay,\n} from 'date-fns';\n\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\n\n@Component({\n    selector: 'work-location-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center justify-between px-2\">\n                <h3 class=\"px-2 py-4 font-medium\">Work Location</h3>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Work Location Preferences\"\n                    matTooltipPosition=\"left\"\n                    class=\"hover:bg-base-200\"\n                    (click)=\"editSettings()\"\n                >\n                    <app-icon>edit_note</app-icon>\n                </button>\n            </div>\n\n            <h3 class=\"px-4 font-medium text-sm\">\n                {{ now | date: 'fullDate' }}\n            </h3>\n            <div\n                class=\"pb-2\"\n                *ngIf=\"active_preference?.blocks?.length; else empty_state\"\n            >\n                <div\n                    class=\"relative flex items-center px-4 py-2\"\n                    *ngFor=\"\n                        let block of active_preference?.blocks;\n                        let i = index\n                    \"\n                    [class.opacity-30]=\"now > timeFrom(block.end_time)\"\n                >\n                    <div\n                        class=\"rounded-full h-10 w-10 flex items-center justify-center bg-base-200 z-20\"\n                        [class.bg-base-200]=\"\n                            now < timeFrom(block.start_time) ||\n                            now > timeFrom(block.end_time)\n                        \"\n                        [class.bg-info]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                        [class.text-info-content]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                    >\n                        <app-icon class=\"text-2xl\">{{\n                            location_icon(timeFrom(block.start_time))\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 ml-2\">\n                        <button\n                            matRipple\n                            class=\"font-medium flex items-center space-x-2 rounded hover:bg-base-200 px-2 py-1\"\n                            [matMenuTriggerFor]=\"menu\"\n                        >\n                            <div>\n                                {{ location(timeFrom(block.start_time)) }}\n                            </div>\n                            <app-icon>expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button\n                                mat-menu-item\n                                *ngFor=\"let loc of locations\"\n                                (click)=\"setLocation(i, loc.id)\"\n                            >\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl\">{{\n                                        loc.icon\n                                    }}</app-icon>\n                                    <div class=\"pr-8\">{{ loc.name }}</div>\n                                </div>\n                            </button>\n                        </mat-menu>\n                        <div class=\"text-xs opacity-60 px-2\">\n                            {{ timeFrom(block.start_time) | date: 'shortTime' }}\n                            &ndash;\n                            {{ timeFrom(block.end_time) | date: 'shortTime' }}\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"i > 0\"\n                        class=\"absolute -top-2 left-7 h-4 w-0 border-l-2 border-dashed border-base-200 -translate-x-px\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 w-full opacity-30\"\n            >\n                <app-icon class=\"text-6xl\">event_busy</app-icon>\n                <p class=\"text-center text-sm\">No work location for today.</p>\n                <p class=\"text-center text-sm\">\n                    Click the edit button on the top right to edit your work\n                    location preferences.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WorkLocationTooltipComponent {\n    public readonly locations = [\n        { id: 'wfo', name: 'Office', icon: 'business' },\n        { id: 'wfh', name: 'Home', icon: 'home' },\n        { id: 'aol', name: 'Leave', icon: 'event_busy' },\n    ];\n    public settings: WorktimePreference[];\n    public overrides: Record<string, WorktimePreference>;\n\n    public get active_preference() {\n        const date = format(new Date(), 'yyyy-MM-dd');\n        if (this.overrides[date]) return this.overrides[date];\n        return this.settings.find(\n            (pref) => pref.day_of_week === new Date().getDay(),\n        );\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.overrides = user.work_overrides;\n    }\n\n    public location_icon(time: number) {\n        const user = currentUser();\n        return user.location_icon(time + 1 * 60 * 1000);\n    }\n\n    public location(time: number) {\n        const user = currentUser();\n        return user.location_name_time(time + 1 * 60 * 1000);\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(new Date(), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n                seconds: 0,\n                milliseconds: 0,\n            }),\n        ).getTime();\n    }\n\n    public editSettings() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async setLocation(index: number, location: string) {\n        const user = currentUser();\n        const active_preference = this.active_preference;\n        const date = format(Date.now(), 'yyyy-MM-dd');\n        const new_overrides = {\n            ...user.work_overrides,\n            [date]: {\n                ...active_preference,\n                blocks: [\n                    ...active_preference.blocks.slice(0, index),\n                    {\n                        ...active_preference.blocks[index],\n                        location,\n                    },\n                    ...active_preference.blocks.slice(index + 1),\n                ],\n            },\n        };\n        for (const key in new_overrides) {\n            const key_date = parse(key, 'yyyy-MM-dd', new Date());\n            if (\n                !new_overrides[key].blocks.length ||\n                isBefore(key_date, addDays(startOfDay(Date.now()), -1))\n            ) {\n                delete new_overrides[key];\n            }\n        }\n        this.overrides = new_overrides;\n        await updateUser(user.id, {\n            ...user,\n            work_overrides: new_overrides,\n        } as any).toPromise();\n        reloadUserData();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                *ngIf=\"features.includes('wfh')\"\n                customTooltip\n                [content]=\"work_location_tooltip\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <desk-height-presets></desk-height-presets>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n    public readonly work_location_tooltip = WorkLocationTooltipComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank',\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md',\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth], video [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        let response = null;\n        try {\n            response = await fetch(this.source).catch((_) => null);\n        } catch {}\n        if (!response || !response.ok) {\n            console.info('Failed to load image:', this.source);\n            return;\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _binding = new BehaviorSubject('');\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = combineLatest([\n        this._org.active_building,\n        this._binding,\n    ]).pipe(\n        filter(([b]) => !!b),\n        map(([_, biniding]) => biniding || this._org.binding('chat_room')),\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1),\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                '',\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => {\n                        log('CHAT', 'Connection error:', [e], 'error');\n                        this._cleanup();\n                    },\n                    () => this._cleanup(),\n                ),\n            );\n            return this._socket;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setBinding(system_id: string) {\n        this._binding.next(system_id);\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay,\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message, { async: false }) as any,\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message, { async: false }) as any,\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-full px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string): Observable<Space[]> {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { padLength } from '@placeos/common';\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(period_length: number, show_ms: boolean = false): string {\n        const hours = Math.floor(period_length / 60 / 60);\n        const minutes = Math.floor((period_length / 60) % 60);\n        const seconds = Math.floor(period_length % 60);\n        const milliseconds = Math.floor((period_length * 1000) % 1000);\n        let str = `${padLength(minutes)}:${padLength(seconds)}`;\n        if (show_ms) {\n            str += `.${padLength(milliseconds, 3)}`;\n        }\n        if (hours > 0) str = `${padLength(hours)}:${str}`;\n        return str;\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>,\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n              ? 'template'\n              : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue,\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300,\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                try {\n                    updateViewer(this.viewer, {\n                        styles: this.styles,\n                        features: [],\n                        labels: this.labels,\n                        actions: this.actions,\n                        options: this.options,\n                    });\n                    removeViewer(this.viewer);\n                } catch (e) {\n                    console.warn(e);\n                    return;\n                }\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            }).catch((e) => {\n                console.warn(e);\n                return '';\n            });\n            this.loading = false;\n            if (!this.viewer) return;\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                }),\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e)),\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id,\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                }),\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n    private _last_building: string;\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService,\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP),\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options,\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options,\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token,\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e),\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e),\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e),\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e),\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100,\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public clearDirections() {\n        this._services.directions_renderer.setRoute(null);\n        this.viewing_directions = false;\n    }\n\n    private _last_position: GeolocationPosition;\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this.clearDirections();\n            this._focusOnLocation();\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError(`Unable to find location \"${this.focus}\".`);\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                this._last_position = position;\n                this.setDirectionsFromLocation(\n                    {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    { lat: d_lat, lng: d_lng },\n                );\n            },\n            () => {\n                if (this._last_position) {\n                    this.setDirectionsFromLocation(\n                        {\n                            lat: this._last_position.coords.latitude,\n                            lng: this._last_position.coords.longitude,\n                        },\n                        { lat: d_lat, lng: d_lng },\n                    );\n                } else notifyError('Failed to get your current location.');\n            },\n            options,\n        );\n    }\n\n    public async setDirectionsFromLocation(\n        from: { lat: number; lng: number },\n        to: { lat: number; lng: number },\n    ) {\n        const distance = calculateDistance(to.lat, to.lng, from.lat, from.lng);\n        const routeParameters = {\n            origin: {\n                lat: from.lat,\n                lng: from.lng,\n            },\n            destination: { lat: to.lat, lng: to.lng },\n            travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n        };\n        const result = await this._services.directions\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                this.loading_directions = false;\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        this._services.directions_renderer.setRoute(result);\n        this.viewing_directions = true;\n        this.loading_directions = false;\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50,\n                );\n            },\n            100,\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id,\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n        this._last_building = bld.id;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple,\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        this.clearDirections();\n        if (!items?.length) {\n            notifyError(`Unable to find location ${this.focus}.`);\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [lng, lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (\n            !this._services ||\n            !this.zone ||\n            this.zone.parent_id === this._last_building ||\n            this.zone.id === this._last_building\n        )\n            return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id,\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            if (!this.focus) {\n                this._services.map.setCenter({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(long),\n                });\n            }\n            this._setFloorFromZone();\n            this._last_building = this.zone.id;\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id ||\n                _.externalId === map_id ||\n                _.id === map_id,\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-height-presets',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg mb-2\" i18n>Desk Height Presets</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Desk height presets allow you to store and recall your preferred\n                desk height when checking into a booked desk that supports\n                height adjustment.\n            </div>\n            <div\n                class=\"text-xs mb-4 -mx-2 p-2 rounded bg-warning text-warning-content\"\n                *ngIf=\"not_set && show_close\"\n            >\n                Before you can set a desk height, presets must be set\n            </div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience.\n            </div>\n            <div class=\"flex flex-col mt-2\">\n                <label>Sitting Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"80\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_sitting_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_sitting_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ desk_sitting_height.toFixed(1) }}cm\n                    </div>\n                </div>\n                <label>Standing Height</label>\n                <div class=\"flex items-center space-x-2  mr-2\">\n                    <mat-slider\n                        min=\"90\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_standing_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_standing_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right mr-2\">\n                        {{ desk_standing_height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button\n                btn\n                matRipple\n                (click)=\"onClose()\"\n                class=\"w-full mt-2\"\n                *ngIf=\"show_close\"\n            >\n                Save Presets\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskHeightPresetsComponent {\n    @Input() public show_close = false;\n    @Output() public close = new EventEmitter<void>();\n    public not_set = false;\n    public desk_sitting_height = 71;\n    public desk_standing_height = 101;\n\n    constructor(private _settings: SettingsService) {}\n\n    public ngOnInit() {\n        this.not_set =\n            !this._settings.get('desk_sitting_height') &&\n            !this._settings.get('desk_standing_height');\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public onClose() {\n        this.saveSetting('desk_sitting_height', this.desk_sitting_height);\n        this.saveSetting('desk_standing_height', this.desk_standing_height);\n        this.close.emit();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PlaceZone, showZone } from '@placeos/ts-client';\n\nconst ZONE_LIST: Record<string, PlaceZone> = {};\nconst EMPTY_ZONE = new PlaceZone();\n\n@Pipe({\n    name: 'zone',\n})\nexport class ZonePipe implements PipeTransform {\n    public async transform(id: string): Promise<PlaceZone> {\n        if (ZONE_LIST[id]) return ZONE_LIST[id];\n        const zone = await showZone(id)\n            .toPromise()\n            .catch((_) => null);\n        if (!zone) return EMPTY_ZONE;\n        ZONE_LIST[id] = zone;\n        return zone;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\nimport { DeskHeightPresetsComponent } from './desk-height-presets.component';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\nimport { ZonePipe } from './zone.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n    WorkLocationTooltipComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n    ZonePipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n    DeskHeightPresetsComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport { VirtualKeyboardComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nconst STORE_PREFIX = 'PlaceOS.SIGNAGE';\nconst STORE_DISPLAY_KEY = `${STORE_PREFIX}.display`;\nconst STORE_BUILDING_KEY = `${STORE_PREFIX}.building`;\n\n@Component({\n    selector: '[bootstrap]',\n    template: `\n        <div class=\"absolute inset-0 bg-base-300\">\n            <div\n                form\n                class=\"absolute top-2 left-1/2 transform -translate-x-1/2 bg-base-100 overflow-hidden flex flex-col items-center shadow rounded w-[30rem] max-w-[calc(100vw-2rem)]\"\n            >\n                <header\n                    class=\"px-4 py-3 bg-secondary text-secondary-content w-full text-lg font-medium mb-2\"\n                >\n                    Signage Kiosk Setup\n                </header>\n                <main *ngIf=\"!loading; else load_state\" class=\"px-4 py-2\">\n                    <!-- <label>Select a Building from the dropdown below</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            building\n                            [ngModel]=\"(active_building | async)?.id\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of buildings | async\"\n                                [value]=\"option.id\"\n                            >\n                                {{ option.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field> -->\n                    <label>Select a display from the dropdown below</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            building\n                            [(ngModel)]=\"active_display\"\n                            placeholder=\"Select Display\"\n                            [disabled]=\"!(displays | async)?.length\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of displays | async\"\n                                [value]=\"option.id\"\n                            >\n                                <div class=\"flex flex-col leading-tight\">\n                                    <div>{{ option.name }}</div>\n                                    <div class=\"text-xs opacity-30\">\n                                        {{\n                                            building(option)?.display_name ||\n                                                building(option)?.name ||\n                                                'Unknown Building'\n                                        }}\n                                        -\n                                        {{\n                                            level(option)?.display_name ||\n                                                level(option)?.name ||\n                                                'Unknown Level'\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        btn\n                        matRipple\n                        class=\"mb-2 w-full\"\n                        [disabled]=\"!active_building || !active_display\"\n                        (click)=\"bootstrapKiosk()\"\n                    >\n                        Finish Setup\n                    </button>\n                </main>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 m-auto\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n\n            [form] > div {\n                padding: 0 1em;\n            }\n        `,\n    ],\n})\nexport class BootstrapComponent extends AsyncHandler implements OnInit {\n    /** Loading state of the bootstrap */\n    public loading: string = '';\n    /** Actively selected building */\n    public readonly active_building = this._org.active_building;\n    /** Actively selected building */\n    public active_display: any;\n\n    public rotations: Identity[] = [];\n\n    public readonly buildings = this._org.building_list;\n\n    public readonly displays = this.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            querySystems({\n                zone_id: this._org.organisation?.id,\n                limit: 500,\n                signage: true,\n            }).pipe(catchError(() => of({ data: [] }))),\n        ),\n        map((r) =>\n            r.data.sort((a, b) =>\n                (a.display_name || a.name).localeCompare(\n                    b.display_name || b.name,\n                ),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public level(system: PlaceSystem) {\n        return this._org.levelWithID(system.zones as any);\n    }\n\n    public building(system: PlaceSystem) {\n        return this._org.buildings.find(({ id }) => system.zones.includes(id));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('clear') && params.get('clear') === 'true') {\n                    localStorage.removeItem(STORE_DISPLAY_KEY);\n                    localStorage.removeItem(STORE_BUILDING_KEY);\n                }\n                if (params.has('building')) {\n                    this.setBuilding(params.get('building'));\n                }\n                if (params.has('display')) {\n                    this.active_display = params.get('display');\n                    this.bootstrapKiosk();\n                }\n            }),\n        );\n        this.timeout('check', () => this.checkBootstrap(), 1000);\n    }\n\n    public setBuilding(bld_id: string) {\n        const bld = this._org.buildings.find(({ id }) => id === bld_id);\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    /**\n     * Store bootstrapped values and navigate to the main page\n     */\n    public async bootstrapKiosk() {\n        this.loading = 'Bootstrapping application...';\n        const bld = await this.active_building\n            .pipe(first((_) => !!_))\n            .toPromise();\n        if (!bld?.id || !this.active_display || !localStorage) {\n            this.loading = '';\n            return;\n        }\n        localStorage.setItem(STORE_BUILDING_KEY, bld.id);\n        localStorage.setItem(STORE_DISPLAY_KEY, this.active_display);\n        this._router.navigate(['/signage', this.active_display]);\n        this.loading = '';\n    }\n\n    /**\n     * Check for any existing bootstrapped values\n     */\n    private checkBootstrap() {\n        this.loading = 'Checking for existing parameters...';\n        const bld_id = localStorage?.getItem(STORE_BUILDING_KEY);\n        const display_id = localStorage?.getItem(STORE_DISPLAY_KEY);\n        if (bld_id && display_id) {\n            this._router.navigate(['/signage', display_id]);\n        }\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.loading = '';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, log, randomString } from '@placeos/common';\nimport { apiKey, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nconst STORE_KEY = 'PlaceOS.SIGNAGE.cached_files';\n\nexport type CacheItemStatus =\n    | 'preparing'\n    | 'downloading'\n    | 'storing'\n    | 'cached'\n    | 'invalidated';\n\nexport interface CacheItem {\n    id: string;\n    url: string;\n    status: CacheItemStatus;\n    on_change: Subject<CacheItemStatus>;\n}\n\nfunction cacheStatus(item: CacheItem, status: CacheItemStatus) {\n    item.status = status;\n    item.on_change.next(status);\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MediaCacheService extends AsyncHandler {\n    private _cache_db: IDBDatabase;\n    private _file_cache_index = new BehaviorSubject<CacheItem[]>([]);\n\n    private get _cache_index() {\n        return this._file_cache_index.getValue();\n    }\n\n    constructor() {\n        super();\n        const request = indexedDB.open('SignageMedia', 1);\n\n        request.onerror = (event: any) => {\n            log(\n                'MediaCache',\n                `DB Error: ${event.target.error}.`,\n                undefined,\n                'error',\n            );\n        };\n\n        request.onsuccess = (event: any) => {\n            this._cache_db = event.target.result;\n            log('MediaCache', `Connected to database successfully.`);\n        };\n\n        request.onupgradeneeded = (event: any) => {\n            this._cache_db = event.target.result;\n            const objectStore = this._cache_db.createObjectStore('files', {\n                keyPath: 'name',\n            });\n            log('MediaCache', `Object store created successfully.`);\n        };\n\n        this._loadCacheMetadata();\n        this._file_cache_index.subscribe(() => this._saveCacheMetadata());\n    }\n\n    public async requestFilesToCache(url_list: string[]): Promise<boolean> {\n        let failures = false;\n        for (const url of url_list) {\n            const existing = this._cache_index.find((_) => _.url === url);\n            if (existing?.status === 'cached') continue;\n            const cache_item: CacheItem = {\n                id: randomString(16, '0123456789ABCDEF'),\n                url,\n                status: 'preparing',\n                on_change: new Subject(),\n            };\n            this._file_cache_index.next([\n                ...this._cache_index.filter((_) => _.id !== existing?.id),\n                cache_item,\n            ]);\n            await this.requestAndCacheFile(url, cache_item).catch((_) => {\n                failures = true;\n            });\n        }\n        this._file_cache_index.next(this._cache_index);\n        return failures;\n    }\n\n    public async requestAndCacheFile(url: string, cache_item: CacheItem) {\n        cacheStatus(cache_item, 'downloading');\n        // If not an API call, just load the image\n        if (url.includes('/api/engine/v2/uploads')) {\n            this._applyAuthenticationCookie();\n        }\n        // Fetch the file from the server\n        const response = await fetch(url);\n        if (!response.ok) {\n            log(\n                'MediaCache',\n                `Error fetching resource. ${response.status}`,\n                [url],\n                'error',\n            );\n            throw new Error();\n        }\n\n        // Get the file as a blob\n        const blob = await response.blob();\n\n        cacheStatus(cache_item, 'storing');\n\n        // Create a File object (or you can use the blob directly)\n        const file = new File([blob], cache_item.id, { type: blob.type });\n        // Store the file in IndexedDB\n        const transaction = this._cache_db.transaction(['files'], 'readwrite');\n        const objectStore = transaction.objectStore('files');\n        const request = objectStore.add({ name: cache_item.id, file: file });\n\n        return new Promise<void>((resolve, reject) => {\n            request.onerror = (event: any) => {\n                log(\n                    'MediaCache',\n                    `Error caching resource. ${event.target.error}`,\n                    url,\n                    'error',\n                );\n                cacheStatus(cache_item, 'invalidated');\n                reject(event.target.error);\n            };\n\n            request.onsuccess = () => {\n                log('MediaCache', `Cached resource.`, [cache_item.id, url]);\n                cacheStatus(cache_item, 'cached');\n                resolve();\n            };\n        });\n    }\n\n    public availableFiles() {\n        return this._cache_index.map((_) => _.url);\n    }\n\n    public getFile(url: string) {\n        return new Promise<File>((resolve, reject) => {\n            const cache_item = this._cache_index.find((_) => _.url === url);\n            if (!cache_item) return reject('Unable to find file with URL');\n            const transaction = this._cache_db.transaction(\n                ['files'],\n                'readonly',\n            );\n            const objectStore = transaction.objectStore('files');\n            const request = objectStore.get(cache_item.id);\n\n            request.onerror = (event: any) => {\n                log(\n                    'MediaCache',\n                    `Error retrieving cached resource. ${event.target.error}`,\n                    [url],\n                    'error',\n                );\n                reject(event.target.error);\n            };\n\n            request.onsuccess = (event: any) => {\n                if (request.result) {\n                    resolve(request.result.file);\n                } else {\n                    log(\n                        'MediaCache',\n                        `Unable to find cached resource. ${event.target.error}`,\n                        [url],\n                        'error',\n                    );\n                    resolve(null);\n                }\n            };\n        });\n    }\n\n    public invalidateStore() {\n        return new Promise<void>((resolve, reject) => {\n            const transaction = this._cache_db.transaction(\n                ['files'],\n                'readwrite',\n            );\n            const objectStore = transaction.objectStore('files');\n            const request = objectStore.clear();\n\n            request.onerror = (event: any) => {\n                log(\n                    'MediaCache',\n                    `Error clearing all cached resources. ${event.target.error}`,\n                    undefined,\n                    'error',\n                );\n                console.error(\n                    'Error clearing file store: ' + event.target.error,\n                );\n                reject(event.target.error);\n            };\n\n            request.onsuccess = (_) => {\n                log('MediaCache', `Cleared all cached resources.`);\n                this._file_cache_index.next([]);\n                resolve();\n            };\n        });\n    }\n\n    public invalidateFile(url: string) {\n        return new Promise<void>((resolve, reject) => {\n            const cache_item = this._cache_index.find((_) => _.url === url);\n            if (cache_item.status !== 'cached')\n                return reject('Cached item with URL not found');\n            const transaction = this._cache_db.transaction(\n                ['files'],\n                'readwrite',\n            );\n            const objectStore = transaction.objectStore('files');\n            const request = objectStore.delete(cache_item.id);\n\n            request.onerror = (event: any) => {\n                log(\n                    'MediaCache',\n                    `Error removing cached resource. ${event.target.error}`,\n                    [url],\n                    'error',\n                );\n                reject(event.target.error);\n            };\n\n            request.onsuccess = (event: any) => {\n                log('MediaCache', `Removed resource.`, [cache_item.id, url]);\n                this._file_cache_index.next(\n                    this._cache_index.filter((_) => _.id !== cache_item.id),\n                );\n                resolve();\n            };\n        });\n    }\n\n    private _loadCacheMetadata() {\n        log('MediaCache', 'Loading cache metadata...');\n        const metadata_string = localStorage.getItem(STORE_KEY) || '[]';\n        try {\n            const metadata = JSON.parse(metadata_string);\n            if (metadata instanceof Array) {\n                this._file_cache_index.next(\n                    metadata.map((_) => ({\n                        id: _.id,\n                        url: _.url,\n                        status: 'cached',\n                        on_change: new Subject(),\n                    })),\n                );\n            }\n        } catch {}\n    }\n\n    private _saveCacheMetadata() {\n        this.timeout('save_metadata', () => {\n            log('MediaCache', 'Saving cache metadata...');\n            const metadata = this._cache_index\n                .filter((_) => _.status === 'cached')\n                .map((_) => ({ id: _.id, url: _.url }));\n            localStorage.setItem(STORE_KEY, JSON.stringify(metadata));\n        });\n    }\n\n    private _applyAuthenticationCookie() {\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, log, shuffleArray } from '@placeos/common';\nimport {\n    showSignage,\n    SignageMedia,\n    SignagePlaylist,\n    responseHeaders,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n} from 'rxjs/operators';\nimport { MediaCacheService } from './media-cache.service';\n\nconst DISPLAY_KEY = 'PlaceOS.SIGNAGE.display_details';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageService extends AsyncHandler {\n    private _display = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject(0);\n    private _retry = new BehaviorSubject(0);\n    private _last_modified = 0;\n\n    public readonly display = combineLatest([this._display, this._poll]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([id]) =>\n            showSignage(\n                id,\n                {},\n                {\n                    headers: {\n                        'If-Modified-Since': new Date(\n                            this._last_modified,\n                        ).toUTCString(),\n                    },\n                },\n            ).pipe(\n                catchError((_) => of(null)),\n                map((d) => {\n                    if (!d) {\n                        d = JSON.parse(\n                            localStorage.getItem(DISPLAY_KEY) || '{}',\n                        );\n                        if (d.id !== id) d = {};\n                    }\n                    localStorage.setItem(DISPLAY_KEY, JSON.stringify(d));\n                    const path = `/api/engine/v2/signage/${id}`;\n                    const headers = responseHeaders(\n                        `${location.origin}${path}`,\n                    );\n                    this._last_modified =\n                        new Date(headers['last-modified']).valueOf() ||\n                        Date.now();\n                    return [d, this._last_modified];\n                }),\n            ),\n        ),\n        distinctUntilKeyChanged(1),\n        map(([value]) => {\n            log('Signage', 'Display updated.');\n            value.playlist_media =\n                value.playlist_media?.map((_) => new SignageMedia(_)) || [];\n            return value;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly playlist = this.display.pipe(\n        map((item) => {\n            if (!item) return [];\n            // Constuct list of playlists\n            let playlists = [...item.playlist_mappings[item.id]];\n            for (const zone of item.zones) {\n                if (!item.playlist_mappings[zone]) continue;\n                playlists = playlists.concat(item.playlist_mappings[zone]);\n            }\n            // Map playlists to media\n            let playlist_media = playlists\n                .map((id) => {\n                    const [_, media_list] = item.playlist_config[id] as [\n                        SignagePlaylist,\n                        string[],\n                    ];\n                    const media = media_list.map((media_id) => ({\n                        id: media_id,\n                        playlist_id: id,\n                    }));\n                    return _.random ? shuffleArray(media) : media;\n                })\n                .flat();\n            return playlist_media\n                .map(({ id, playlist_id }) => {\n                    const media_ref: SignageMedia | null =\n                        item.playlist_media.find((item) => item.id === id);\n                    if (!media_ref) return null;\n                    const playlist: SignagePlaylist | undefined =\n                        item.playlist_config[playlist_id][0];\n                    return {\n                        id,\n                        url: media_ref.media_url,\n                        name: media_ref.name,\n                        animation:\n                            media_ref.animation || playlist.default_animation,\n                        playlist_name: playlist?.name || '',\n                        type: media_ref.media_type,\n                        start_time: media_ref.start_time || 0,\n                        duration:\n                            media_ref.play_time ||\n                            media_ref.video_length ||\n                            playlist?.default_duration ||\n                            15 * 1000,\n                        getURL: async () =>\n                            media_ref\n                                ? await this._media_cache\n                                      .getFile(media_ref.media_url)\n                                      .then((_) => URL.createObjectURL(_))\n                                      .catch((_) => '')\n                                : null,\n                    };\n                })\n                .filter((_) => !!_);\n        }),\n        shareReplay(1),\n    );\n\n    public setDisplay(system_id: string) {\n        this._display.next(system_id);\n    }\n\n    constructor(private _media_cache: MediaCacheService) {\n        super();\n        combineLatest([\n            this.display,\n            this._retry.pipe(debounceTime(15 * 1000), startWith(0)),\n        ]).subscribe(async ([_]) => {\n            const available_media = this._media_cache.availableFiles();\n            const media = _.playlist_media.map((_) => _.media_url);\n            const extra_media = available_media.filter(\n                (url) => !media.includes(url),\n            );\n            const has_failures =\n                await this._media_cache.requestFilesToCache(media);\n            // Remove unneeded media items\n            for (const item of extra_media) {\n                this._media_cache.invalidateFile(item);\n            }\n            if (has_failures) this._retry.next(Date.now());\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 60 * 1000);\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler, log, shuffleArrayWithFirstItem } from '@placeos/common';\nimport { MediaAnimation } from '@placeos/ts-client';\n\nexport interface MediaPlayerItem {\n    id: string;\n    name: string;\n    playlist_name: string;\n    animation: MediaAnimation;\n    type: 'image' | 'video';\n    start_time: number;\n    duration: number;\n    getURL: () => Promise<URL>;\n}\n\nexport type MediaPlayerState = 'PAUSED' | 'PLAYING';\n\n@Component({\n    selector: 'media-player',\n    template: `\n        <div #previous_container class=\"absolute top-0 left-0 h-full w-full\">\n            <img\n                #previous_image_el\n                class=\"absolute top-0 left-0 h-full w-full object-contain object-center hidden\"\n            />\n            <video\n                #previous_video_el\n                class=\"absolute top-0 left-0 h-full w-full object-contain object-center hidden\"\n            ></video>\n        </div>\n        <div #media_container class=\"absolute top-0 left-0 h-full w-full\">\n            <img\n                #img_el\n                class=\"absolute top-0 left-0 h-full w-full object-contain object-center\"\n            />\n            <video\n                #video_el\n                class=\"absolute top-0 left-0 h-full w-full object-contain object-center\"\n            ></video>\n        </div>\n        @if (controls) {\n            <div\n                class=\"absolute bottom-[4.5rem] left-1/2 -translate-x-1/2 w-56 rounded-full overflow-hidden p-1 border border-base-300 bg-base-100\"\n                [matTooltip]=\"duration | mediaDuration\"\n                matTooltipPosition=\"above\"\n            >\n                <mat-progress-bar\n                    class=\"rounded-full overflow-hidden\"\n                    mode=\"determinate\"\n                    [value]=\"progress\"\n                ></mat-progress-bar>\n                <div\n                    *ngIf=\"in_animation\"\n                    class=\"absolute inset-1 rounded-full bg-success\"\n                ></div>\n            </div>\n            <div\n                class=\"absolute bottom-2 left-1/2 -translate-x-1/2 rounded-full p-2 flex items-center space-x-2 text-lg overflow-hidden border border-base-300 bg-base-100\"\n            >\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"previousItem()\"\n                    matTooltip=\"Previous Media\"\n                >\n                    <app-icon>skip_previous</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"togglePause()\"\n                    [matTooltip]=\"state === 'PLAYING' ? 'Playing' : 'Paused'\"\n                >\n                    <app-icon>{{\n                        state === 'PLAYING' ? 'pause' : 'play_arrow'\n                    }}</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"nextItem()\"\n                    matTooltip=\"Next Media\"\n                >\n                    <app-icon>skip_next</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"toggleMuted()\"\n                    [matTooltip]=\"'Volume [' + (muted ? 'Off' : 'On') + ']'\"\n                >\n                    <app-icon>{{\n                        muted ? 'volume_off' : 'volume_up'\n                    }}</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"toggleLoop()\"\n                    [matTooltip]=\"\n                        loop === 'ALL'\n                            ? 'Loop [All]'\n                            : loop === 'ONE'\n                              ? 'Loop [One]'\n                              : 'Loop [Off]'\n                    \"\n                >\n                    <app-icon [class.opacity-30]=\"loop === 'NONE'\">\n                        {{\n                            loop === 'ALL'\n                                ? 'repeat'\n                                : loop === 'ONE'\n                                  ? 'repeat_one'\n                                  : 'repeat'\n                        }}\n                    </app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"hover:bg-base-200\"\n                    (click)=\"toggleShuffle()\"\n                    [matTooltip]=\"shuffle ? 'Shuffle [On]' : 'Shuffle [Off]'\"\n                >\n                    <app-icon [class.opacity-30]=\"!shuffle\"> shuffle </app-icon>\n                </button>\n            </div>\n            <div\n                class=\"absolute flex flex-col top-4 bottom-24 right-4 bg-base-100 border border-base-300 overflow-auto rounded-xl p-2 space-y-2\"\n                *ngIf=\"show_playlist\"\n            >\n                <div class=\"flex items-center space-x-4 p-2\">\n                    <h2>Media to play</h2>\n                    <div class=\"text-xs opacity-30\">\n                        ({{ playlist_items?.length || 0 }} items)\n                    </div>\n                </div>\n                <div>\n                    @for (item of playlist_items; track item) {\n                        <button\n                            matRipple\n                            class=\"flex items-center p-2 space-x-2 w-[20rem] text-left hover:bg-base-200 rounded-lg\"\n                            [class.overflow-visible]=\"$index === index\"\n                            [class.pointer-events-none]=\"$index === index\"\n                            (click)=\"setPlaylistItem($index)\"\n                        >\n                            <div\n                                class=\"h-10 w-10 rounded-full flex items-center justify-center\"\n                                [class.bg-info]=\"$index === index\"\n                                [class.text-info-content]=\"$index === index\"\n                                [class.bg-base-300]=\"$index !== index\"\n                            >\n                                <div\n                                    class=\"h-7 w-7 relative flex items-center justify-center\"\n                                >\n                                    <span\n                                        *ngIf=\"$index === index\"\n                                        class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-info opacity-75 z-0\"\n                                    ></span>\n                                    <app-icon\n                                        class=\"text-2xl relative z-10\"\n                                        [class.opacity-30]=\"$index !== index\"\n                                        >{{\n                                            $index === index\n                                                ? 'play_arrow'\n                                                : 'not_started'\n                                        }}</app-icon\n                                    >\n                                </div>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/2\">\n                                <div class=\"truncate\">{{ item.name }}</div>\n                                <div class=\"text-xs opacity-30\">\n                                    {{ item.playlist_name }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"px-2 py-1 rounded bg-info text-info-content font-mono text-xs\"\n                            >\n                                {{ item.duration / 1000 | mediaDuration }}\n                            </div>\n                        </button>\n                    }\n                </div>\n                <div class=\"flex flex-col justify-end\">\n                    <div\n                        class=\"p-2 opacity-30 bg-base-300 text-xs rounded-lg text-center\"\n                    >\n                        End of Player Media\n                    </div>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                class=\"absolute top-6 right-6 bg-base-100 border border-base-200 shadow\"\n                (click)=\"show_playlist = !show_playlist\"\n            >\n                <app-icon>{{\n                    show_playlist ? 'close' : 'queue_music'\n                }}</app-icon>\n            </button>\n        }\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class MediaPlayerComponent extends AsyncHandler {\n    @Input() public playlist: MediaPlayerItem[] = [];\n    @Input() public controls: boolean = false;\n    @Input() public loop: 'NONE' | 'ONE' | 'ALL' = 'ALL';\n    @Input() public shuffle: boolean = false;\n    @Input() public index: number = -1;\n    @Input() public animation_time = 1000;\n    @Input() public muted = false;\n    @Input() public state: MediaPlayerState = 'PLAYING';\n    @Output() public stateChange = new EventEmitter<MediaPlayerState>();\n    @Output() public indexChange = new EventEmitter<number>();\n    @Output() public mutedChange = new EventEmitter<boolean>();\n\n    public duration = 0;\n    public progress = 0;\n    public show_playlist = false;\n    public hold_over_item = true;\n    public in_animation = false;\n\n    private _item_playlist: MediaPlayerItem[] = [];\n\n    private _item_urls: Record<string, URL> = {};\n    private _item_start: number = 0;\n    private _item_progress: number = 0;\n\n    public get playlist_items() {\n        return this._item_playlist;\n    }\n\n    public get active_item() {\n        return this._item_playlist[this.index];\n    }\n\n    @ViewChild('previous_container', { static: true })\n    private _previous_container: ElementRef<HTMLDivElement>;\n    @ViewChild('previous_image_el', { static: true })\n    private _previous_img_element: ElementRef<HTMLImageElement>;\n    @ViewChild('previous_video_el', { static: true })\n    private _previous_video_element: ElementRef<HTMLVideoElement>;\n\n    @ViewChild('media_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n    @ViewChild('img_el', { static: true })\n    private _image_element: ElementRef<HTMLImageElement>;\n    @ViewChild('video_el', { static: true })\n    private _video_element: ElementRef<HTMLVideoElement>;\n\n    public ngOnInit() {\n        this.interval('playlist_check', () => this._updateItem(), 50);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.playlist) {\n            if (this.state === 'PLAYING') this.togglePause();\n            const current_item = this.active_item;\n            this._item_playlist = [...(this.playlist || [])];\n            const current_exists = this._item_playlist.find(\n                (_) => _.id === current_item?.id,\n            );\n            if (this.index >= 0 && current_exists) {\n                this._item_playlist = [current_item, ...this._item_playlist];\n                this.hold_over_item = true;\n                this.index = 0;\n            } else {\n                this.hold_over_item = false;\n            }\n            this.togglePause();\n            this._updateItem();\n        }\n        if (changes.animation_time) {\n            document.documentElement.style.setProperty(\n                '--transition-duration',\n                `${this.animation_time || 3000}ms`,\n            );\n        }\n        if (changes.muted) {\n            this._video_element.nativeElement.muted = !!this.muted;\n        }\n    }\n\n    public url(id: string) {\n        return this._item_urls[id] || '';\n    }\n\n    public previousItem() {\n        const new_index = (this.index - 1) % this._item_playlist.length;\n        this.setPlaylistItem(new_index);\n    }\n\n    public toggleMuted() {\n        this.muted = !this.muted;\n        this.mutedChange.emit(this.muted);\n        this._video_element.nativeElement.muted = this.muted;\n    }\n\n    public togglePause() {\n        this.clearTimeout('re-start');\n        if (this.state === 'PLAYING') {\n            this.state = 'PAUSED';\n            this._item_progress = Date.now() - this._item_start;\n            this._item_start = 0;\n            if (this.active_item?.type === 'video') {\n                this._video_element.nativeElement.pause();\n            }\n        } else {\n            this.state = 'PLAYING';\n            this._item_start = Date.now() - this._item_progress;\n            this._item_progress = 0;\n            if (this.active_item?.type === 'video') {\n                this._video_element.nativeElement.play();\n            }\n            if (this.index === -1) this._updateItem();\n        }\n    }\n\n    public nextItem() {\n        if (this.hold_over_item) {\n            this._item_playlist.shift();\n            this.setPlaylistItem(0);\n            this.hold_over_item = false;\n            return;\n        }\n        let next_index = this.index + 1;\n        if (this.loop === 'ONE') next_index = this.index;\n        else if (\n            this.loop === 'NONE' &&\n            next_index === this._item_playlist.length\n        ) {\n            this.index = -1;\n            this.state = 'PAUSED';\n            this._item_start = 0;\n            this._item_progress = 0;\n            return;\n        }\n        const new_index = next_index % this._item_playlist.length;\n        this.setPlaylistItem(new_index);\n    }\n\n    public toggleLoop() {\n        if (this.loop === 'ALL') this.loop = 'ONE';\n        else if (this.loop === 'NONE') this.loop = 'ALL';\n        else if (this.loop === 'ONE') this.loop = 'NONE';\n    }\n\n    public toggleShuffle() {\n        this.shuffle = !this.shuffle;\n        const current_item = this.active_item;\n        if (this.hold_over_item) {\n            this._item_playlist.shift();\n            this.hold_over_item = false;\n        }\n        if (this.shuffle) {\n            shuffleArrayWithFirstItem(this._item_playlist, this.index);\n            this.setPlaylistItem(0);\n        } else {\n            this._item_playlist = [...this.playlist];\n            this.setPlaylistItem(\n                current_item\n                    ? this._item_playlist.findIndex(\n                          (_) => _.id === current_item.id,\n                      )\n                    : 0,\n            );\n        }\n    }\n\n    private _updateItem() {\n        if (this.state === 'PAUSED') return;\n        const duration = Date.now() - this._item_start;\n        this.progress = Math.floor(\n            (duration / (this.active_item?.duration || 15 * 1000)) * 100,\n        );\n        this.duration = Math.floor(duration / 1000);\n\n        if (!this._item_playlist?.length) return;\n        this._processURLs();\n        if (this.index === -1) {\n            this.setPlaylistItem(0);\n        }\n        const item = this.active_item;\n        if (Date.now() > this._item_start + item.duration) {\n            this.nextItem();\n        }\n    }\n\n    private setPlaylistItem(index: number) {\n        this.index = index;\n        this.indexChange.emit(index);\n        const item = this.active_item;\n        if (!item) return;\n        this._item_start = Date.now();\n        this._item_progress = 0;\n        this.progress = 0;\n        this.duration = 0;\n        const url = this.url(item.id);\n        if (!url) {\n            this.timeout('wait-for-url', () => this.setPlaylistItem(index));\n            return;\n        }\n        if (item.type === 'video') {\n            this._image_element.nativeElement.classList.add('hidden');\n            this._video_element.nativeElement.src = url.toString();\n            this._video_element.nativeElement.classList.remove('hidden');\n            try {\n                this._video_element.nativeElement.play();\n            } catch (e) {\n                this.nextItem();\n            }\n        } else {\n            this._video_element.nativeElement.classList.add('hidden');\n            this._image_element.nativeElement.src = url.toString();\n            this._image_element.nativeElement.classList.remove('hidden');\n            this._video_element.nativeElement.pause();\n        }\n        this._transition();\n    }\n\n    private async _processURLs() {\n        const current_index = Math.max(this.index, 0);\n        const item_count = this._item_playlist.length;\n        // Get current\n        const current_item = this._item_playlist[current_index];\n        // Get previous 2 items\n        const prev_item =\n            this._item_playlist[(current_index - 1 + item_count) % item_count];\n        const prev_prev_item =\n            this._item_playlist[(current_index - 2 + item_count) % item_count];\n        // Get next 2 items\n        const next_item = this._item_playlist[(current_index + 1) % item_count];\n        const next_next_item =\n            this._item_playlist[(current_index + 2) % item_count];\n        const item_list = [\n            current_item,\n            next_item,\n            prev_item,\n            next_next_item,\n            prev_prev_item,\n        ];\n        //\n        // Request new URLs\n        for (const item of item_list) {\n            if (!item?.id || this._item_urls[item.id]) continue;\n            this._item_urls[item.id] = await item.getURL().catch((_) => null);\n        }\n        // Revoke old URLs\n        for (const key in this._item_urls) {\n            if (item_list.find((_) => _.id === key)) continue;\n            const url = this._item_urls[key];\n            if (!url) continue;\n            URL.revokeObjectURL(url.toString());\n            delete this._item_urls[key];\n        }\n    }\n\n    private _transition() {\n        if (!this.active_item) return;\n        if (this.state === 'PLAYING') this.togglePause();\n        this.in_animation = true;\n        if (this.active_item.animation === MediaAnimation.Cut) {\n            this.timeout('re-start', () => this._onTransitionEnd(), 500);\n            return;\n        }\n        if (this.index !== -1) {\n            const img_el = this._previous_img_element.nativeElement;\n            const video_el = this._previous_video_element.nativeElement;\n            let index = this.index - 1;\n            if (index < 0) index = this._item_playlist.length - 1;\n            const item = this._item_playlist[index];\n            const url = this.url(item.id);\n            if (url) {\n                if (item.type === 'video') {\n                    img_el.classList.add('hidden');\n                    video_el.src = url.toString();\n                    video_el.classList.remove('hidden');\n                } else {\n                    video_el.classList.add('hidden');\n                    img_el.src = url.toString();\n                    img_el.classList.remove('hidden');\n                }\n            }\n        }\n        const item = this.active_item;\n        const prev_container_el = this._previous_container.nativeElement;\n        const container_el = this._container.nativeElement;\n        requestAnimationFrame(() => {\n            switch (item.animation) {\n                case MediaAnimation.SlideTop:\n                    container_el.style.transform = 'translate(0, -100%)';\n                    break;\n                case MediaAnimation.SlideLeft:\n                    container_el.style.transform = 'translate(-100%, 0)';\n                    break;\n                case MediaAnimation.SlideRight:\n                    container_el.style.transform = 'translate(100%, 0)';\n                    break;\n                case MediaAnimation.SlideBottom:\n                    container_el.style.transform = 'translate(0, 100%)';\n                    break;\n                case MediaAnimation.CrossFade:\n                    prev_container_el.classList.remove('opacity-0');\n                    container_el.classList.add('opacity-0');\n                    break;\n            }\n            requestAnimationFrame(() => {\n                prev_container_el.classList.add('player-animate');\n                container_el.classList.add('player-animate');\n\n                requestAnimationFrame(() => {\n                    container_el.style.transform = 'translate(0, 0)';\n                    prev_container_el.classList.add('opacity-0');\n                    container_el.classList.remove('opacity-0');\n                });\n            });\n            this.timeout(\n                're-start',\n                () => this._onTransitionEnd(),\n                this.animation_time || 3000,\n            );\n        });\n    }\n\n    private _onTransitionEnd() {\n        const prev_container_el = this._previous_container.nativeElement;\n        const container_el = this._container.nativeElement;\n        prev_container_el.classList.remove('opacity-0');\n        this._previous_video_element.nativeElement.classList.add('hidden');\n        this._previous_img_element.nativeElement.classList.add('hidden');\n        prev_container_el.classList.remove('player-animate');\n        container_el.classList.remove('player-animate');\n        this.in_animation = false;\n        this.togglePause();\n    }\n}\n","import { Component } from '@angular/core';\nimport { SignageService } from './signage.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'signage-panel',\n    template: `\n        <media-player\n            [playlist]=\"playlist | async\"\n            [controls]=\"debug\"\n            [animation_time]=\"animation_time\"\n        ></media-player>\n    `,\n    styles: `\n        :host {\n            display: block;\n            height: 100%;\n            width: 100%;\n        }\n    `,\n})\nexport class SignagePanelComponent extends AsyncHandler {\n    public readonly playlist = this._signage.playlist;\n    public debug = false;\n\n    public get animation_time() {\n        return this._settings.get('app.default_animation_time');\n    }\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _signage: SignageService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.timeout(\n            'not-bootstrapped',\n            () => this._router.navigate(['/bootstrap']),\n            3000,\n        );\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('system_id')) {\n                    this._signage.setDisplay(params.get('system_id'));\n                    this.clearTimeout('not-bootstrapped');\n                }\n            }),\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('debug')) {\n                    this.debug = true;\n                }\n            }),\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UnauthorisedComponent } from '@placeos/components';\nimport { BootstrapComponent } from './bootstrap.component';\nimport { SignagePanelComponent } from './signage.component';\n\nconst routes: Routes = [\n    {\n        path: 'unauthorised',\n        component: UnauthorisedComponent,\n    },\n    { path: 'bootstrap', component: BootstrapComponent },\n    { path: 'signage', component: SignagePanelComponent },\n    { path: 'signage/:system_id', component: SignagePanelComponent },\n    { path: '**', redirectTo: 'bootstrap' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Demo User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { getTimezoneOffsetString } from '@placeos/common';\n\nexport enum TimezoneDiffRange {\n    Both,\n    Start,\n    End,\n}\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <div\n                class=\"flex flex-col px-4 py-2 flex-1 truncate w-1/2 text-left leading-tight\"\n            >\n                <div class=\"font-normal text-base\">\n                    @if (date) {\n                        {{ date | date: date_format }}\n                    } @else {\n                        <span class=\"opacity-30\">No Date Selected</span>\n                    }\n                </div>\n                <div class=\"text-xs opacity-30 truncate\" *ngIf=\"timezone\">\n                    <span *ngIf=\"range !== 2\">\n                        {{\n                            start_of_day\n                                | date\n                                    : 'MMM d, ' +\n                                          time_format +\n                                          (range === 1 ? ' (z)' : '')\n                                    : tz\n                        }}\n                    </span>\n                    <span *ngIf=\"range === 0\"> - </span>\n                    <span *ngIf=\"range !== 1\">\n                        {{\n                            end_of_day\n                                | date: 'MMM d, ' + time_format + ' (z)' : tz\n                        }}\n                    </span>\n                </div>\n            </div>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    @Input() public use_24hr = false;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    @Input() public timezone: string = '';\n    @Input() public range: TimezoneDiffRange = TimezoneDiffRange.Both;\n    /** Currently selected date */\n    public date: number;\n\n    public readonly now = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get date_format() {\n        return this.short ? 'MMM d, yyyy' : 'MMMM d, yyyy';\n    }\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    public get start_of_day() {\n        return startOfDay(this.date).valueOf();\n    }\n\n    public get end_of_day() {\n        return endOfDay(this.date).valueOf();\n    }\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { getTimezoneOffsetString } from '@placeos/common';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-select-trigger>\n                        <div\n                            class=\"flex flex-col leading-tight absolute -translate-y-1/2 top-2\"\n                        >\n                            <div>\n                                {{\n                                    selected?.date\n                                        ? (selected?.date\n                                              | date\n                                                  : (selected.id >= 24 * 60\n                                                        ? 'mediumDate'\n                                                        : time_format)) + ' ('\n                                        : ''\n                                }}{{ selected?.name\n                                }}{{ selected?.date ? ')' : '' }}\n                            </div>\n                            <div class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                                {{\n                                    selected?.date\n                                        | date: time_format + ' (z)' : tz\n                                }}\n                            </div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            <div class=\"flex flex-col leading-tight\">\n                                <div>\n                                    {{\n                                        option.date\n                                            ? (option.date\n                                                  | date\n                                                      : (option.id >= 24 * 60\n                                                            ? 'mediumDate'\n                                                            : time_format)) +\n                                              ' ('\n                                            : ''\n                                    }}{{ option.name\n                                    }}{{ option.date ? ')' : '' }}\n                                </div>\n                                <div\n                                    class=\"text-xs opacity-30\"\n                                    *ngIf=\"timezone\"\n                                >\n                                    {{\n                                        option.date\n                                            | date: time_format + ' (z)' : tz\n                                    }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n    /** Force the display duration value */\n    @Input() public force: string;\n    /** Whether to use 24 hour time when formatting displayed time */\n    @Input() public use_24hr = false;\n    /** Display extra information for displayed times for timezone */\n    @Input() public timezone: string = '';\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    public get selected() {\n        return this.duration_options.find((_) => _.id === this.duration);\n    }\n\n    public get tz() {\n        // Get Timezone as +/-HHMM\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step,\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step,\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                          ? `${formatDuration({\n                                days: Math.floor(time / (24 * 60)),\n                            })}`\n                          : `${formatDuration({\n                                hours: Math.floor(time / 60),\n                                minutes: time % 60,\n                            })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration,\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport {\n    AsyncHandler,\n    getTimezoneOffsetString,\n    Identity,\n} from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-select-trigger>\n                    <div\n                        class=\"flex flex-col leading-tight absolute -translate-y-1/2 top-2\"\n                    >\n                        <div class=\"\">\n                            {{ active_time | date: time_format }}\n                        </div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                            {{ active_time | date: time_format + ' (z)' : tz }}\n                        </div>\n                    </div>\n                </mat-select-trigger>\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    <div class=\"flex flex-col leading-tight\">\n                        <div class=\"\">\n                            {{ force_time | date: time_format }}\n                        </div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                            {{ force_time | date: time_format + ' (z)' : tz }}\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    <div class=\"flex flex-col leading-tight\">\n                        <div class=\"\">\n                            {{ option.date | date: time_format }}\n                            {{ extra_info_fn(option.date) }}\n                        </div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                            {{ option.date | date: time_format + ' (z)' : tz }}\n                        </div>\n                    </div>\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    @Input() public timezone: string = '';\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n\n    public active_time: number = Date.now();\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    public get tz() {\n        // Get Timezone as +/-HHMM\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step || changes.from) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step,\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm'),\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`),\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] }),\n            );\n            this._onChange(date.valueOf());\n        }\n\n        const time = this.force_time || this.time;\n        const date = startOfMinute(\n            set(this.date, { hours: +time[0], minutes: +time[1] }),\n        );\n        this.active_time =\n            this._time_options.find((_) => _.id === time)?.date || date;\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        const time = this.force_time || this.time;\n        this.active_time =\n            this._time_options.find((_) => _.id === time)?.date || date;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step,\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    }),\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15,\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get images() {\n        return this.extension_data.images || [];\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get view_access() {\n        return this.extension_data.view_access || 'PRIVATE';\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    }),\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30),\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            (data as any).host_email ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email',\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1,\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host,\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000,\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000,\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_),\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                  ? 'external'\n                  : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any),\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.images =\n            this.extension_data.images || data.images || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any),\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end,\n        );\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email',\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null }),\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        obj.system_id = this.system?.id;\n        for (const key of [\n            'catering',\n            'date',\n            'date_end',\n            'duration',\n            'status',\n            'linked_bookings',\n            '_valid_asset_cache',\n            '_valid_cache_expiry',\n            'type',\n        ]) {\n            if (key in obj) delete obj[key];\n        }\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport enum RecurrenceDays {\n    SUNDAY = 1 << 6,\n    MONDAY = 1 << 5,\n    TUESDAY = 1 << 4,\n    WEDNESDAY = 1 << 3,\n    THURSDAY = 1 << 2,\n    FRIDAY = 1 << 1,\n    SATURDAY = 1 << 0,\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\nexport enum WeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Fifth = 5,\n    Last = -1,\n    SecondLast = -2,\n    ThirdLast = -3,\n    FourthLast = -4,\n    FifthLast = -5,\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction?: 'tentative' | 'accepted' | 'declined';\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n    /** Time  */\n    public readonly checked_in_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n    /** Unix epoch for the start time of the reccurence instance in seconds */\n    public readonly instance?: number;\n    /** Type of recurrence instance */\n    public readonly recurrence_type: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Bit flags for the recurrence days of the week */\n    public readonly recurrence_days?: number;\n    /** Week of the month to recur on */\n    public readonly recurrence_nth_of_month?: WeekOfMonth;\n    /** How often to recur */\n    public readonly recurrence_interval?: number;\n    /** Unix epoch for the end time of the recurrence in seconds */\n    public readonly recurrence_end?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                }),\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60),\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000,\n                ),\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction = data.induction || undefined;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0),\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf(),\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.checked_in_at = data.checked_in_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected || this.deleted\n                  ? 'declined'\n                  : this.approved\n                    ? 'approved'\n                    : 'tentative';\n        this.process_state = data.process_state || 'pending';\n\n        this.recurrence_type = data.recurrence_type || 'none';\n        this.recurrence_days = data.recurrence_days;\n        this.recurrence_nth_of_month = data.recurrence_nth_of_month;\n        this.recurrence_interval = data.recurrence_interval;\n        this.recurrence_end = data.recurrence_end;\n        this.instance = data.instance;\n\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any),\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        data.zones = data.zones.filter((_) => _);\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response (can be set to apply to only recurring bookings) */\n    include_deleted?: 'all' | 'recurring';\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n    /** Whether to also query rejected bookings */\n    rejected?: boolean;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List resources that are booked within the given parameters\n * @param q Parameters to pass to the API request\n */\nexport function bookedResourceList(\n    q: BookingsQueryParams,\n): Observable<string[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}/booked${query ? '?' + query : ''}`).pipe(\n        map((list) => list as string[]),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams,\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string },\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update the induction status of an existing booking\n * @param id ID of the booking to update\n * @param status New induction status of the booking\n */\nexport function updateBookingInductionStatus(\n    id: string,\n    status: 'tentative' | 'accepted' | 'declined',\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_induction?induction=${encodeURIComponent(status)}`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBookingInstance(\n    id: string,\n    start_time: number,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: {\n        booking_id?: string;\n        event_id?: string;\n        ical_uid?: string;\n        instance?: number;\n    },\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    const instance = q?.instance;\n    if (q) delete (q as any).instance;\n    return id\n        ? instance\n            ? updateBookingInstance(id, data.instance, data)\n            : updateBooking(id, data)\n        : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n */\nexport function removeBooking(id: string, q: any = {}) {\n    if (q.instance) {\n        return removeBookingInstance(id, q.start_time);\n    }\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Remove instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n */\nexport function removeBookingInstance(id: string, start_time: number) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the booking to `approved`\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `approved`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function approveBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to `rejected`\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `rejected`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function rejectBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string,\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true,\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking instance\n * @param id ID of the booking to grab\n * @param start_time Start time of the booking instance\n * @param state New checkin state of the booking instance\n */\nexport function checkinBookingInstance(\n    id: string,\n    start_time: number,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in/${start_time}?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0],\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) =>\n                            b.asset_id === id && (!ignore || ignore !== b.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0,\n        ),\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource,\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise()),\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id)),\n                ),\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id },\n            ).toPromise();\n        }),\n    );\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([])),\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item)),\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch',\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON(),\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams,\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {},\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function addEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/attendee${query ? '?' + query : ''}`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function removeEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}${query ? '?' + query : ''}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0],\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id,\n                    ),\n            );\n            for (const space of ignore_check) {\n                if (!id_list.includes(space.id)) continue;\n                const availability = space.availability.filter(\n                    (i) =>\n                        !(\n                            i.date === ignore_period[0] &&\n                            i.duration === ignore_period[1]\n                        ),\n                );\n                short_list[id_list.indexOf(space.id)] = !availability.find(\n                    (i) => i.status !== 'free',\n                );\n            }\n            return short_list;\n        }),\n    );\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    LOCAL_TIMEZONE,\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { time } from 'console';\nimport { share } from 'rxjs/operators';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService,\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required],\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' }),\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || '',\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || '',\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false,\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n        attendance_type: new FormControl(\n            event.extension_data?.attendance_type || 'ONSITE',\n        ),\n        timezone: new FormControl(event.timezone || LOCAL_TIMEZONE),\n        shared_event: new FormControl(\n            event.extension_data?.shared_event || false,\n        ),\n        view_access: new FormControl(\n            event.extension_data?.view_access || 'PRIVATE',\n        ),\n        images: new FormControl(event.extension_data?.images || []),\n        featured: new FormControl(event.extension_data?.featured || false),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email),\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false },\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date()),\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end,\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n              ? requestable\n                  ? 'Available by Request'\n                  : 'Available'\n              : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n              ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n              : free_tomorrow\n                ? 'Unavailable today'\n                : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number },\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources?.find(\n                (space) => space.email === filter_options.space,\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            }),\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[]),\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory),\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets }) as AssetGroup),\n                    ),\n                ),\n            ),\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        }),\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup),\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[]),\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`,\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder),\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products),\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id,\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id,\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id,\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id,\n                ),\n            );\n            return product;\n        }),\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled',\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id)),\n                        ),\n                ),\n            }));\n        }),\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise()),\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false,\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false,\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration),\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state,\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id),\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id),\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id)),\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration),\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id),\n    ).toPromise();\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id,\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            }),\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id)),\n            ),\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        const asset_data: Partial<Booking> = {\n            type: 'asset-request',\n            booking_type: 'asset-request',\n            date,\n            duration,\n            all_day,\n            description: location_name,\n            user_email: host,\n            asset_id: asset_ids[0],\n            asset_ids,\n            asset_name: request.items.map((_) => _.name).join(', '),\n            title: request.items.map((_) => _.name).join(', '),\n            approved: !reset_state && booking?.approved && !request._changed,\n            rejected: !reset_state && booking?.rejected && !request._changed,\n            extension_data: {\n                parent_id: id,\n                request_id: request.id,\n                location_id,\n                request: new AssetRequest({ ...request, event: null }),\n            },\n            zones: zones || [],\n        };\n        if (from_booking) (asset_data as any).parent_id = id;\n        return createBooking(new Booking(asset_data), {\n            ical_uid,\n            event_id: from_booking ? '' : id,\n        });\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise()),\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}'),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get options_value() {\n        return this._options.getValue();\n    }\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'room_booking_rules').toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_region.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.region?.id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([]))),\n                ),\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features)))),\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces',\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_),\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length)),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings',\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i)),\n                            ),\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                }),\n            );\n        }),\n        shareReplay(1),\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || [],\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid),\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(500),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || [],\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration],\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || [],\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => []),\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1),\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            }),\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        }),\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email,\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000,\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event }),\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}',\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id],\n                        ) || [],\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : '',\n        );\n    }\n\n    public postForm(\n        force: boolean = false,\n        ignore_space_check: string[] = [],\n        ignore_owner: boolean = false,\n    ) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form,\n                    ).join(', ')}]`,\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            let spaces = form.get('resources')?.value || [];\n            if (ignore_space_check.length) {\n                spaces = spaces.filter(\n                    (_) =>\n                        !ignore_space_check.includes(_.email) &&\n                        !ignore_space_check.includes(_.id),\n                );\n            }\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id),\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || '',\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            spaces = form.get('resources')?.value || [];\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource'),\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email',\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner && !ignore_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`,\n                    );\n                    if (overflow?.setup) {\n                        setup = Math.max(setup, overflow.setup);\n                    }\n                    if (overflow?.breakdown) {\n                        breakdown = Math.max(breakdown, overflow.breakdown);\n                    }\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n                (value as any).setup_time = value.setup_time || setup;\n                (value as any).breakdown_time =\n                    value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON(),\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query,\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected,\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {},\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time',\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`,\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any,\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: unique([\n                            this._org.organisation.id,\n                            this._org.region?.id,\n                            this._org.building?.id,\n                            ...spaces[0]?.zones,\n                        ]).filter((_) => !!_),\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times,\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result),\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>,\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any),\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string,\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration],\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore,\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`,\n                ),\n            ]),\n        );\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { current_user, currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false },\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || '',\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        user_name: new FormControl(booking.user_name),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource,\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY',\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n        plate_number: new FormControl(\n            booking.extension_data.plate_number || '',\n        ),\n        recurrence_type: new FormControl(booking.recurrence_type || 'none'),\n        recurrence_days: new FormControl(booking.recurrence_days),\n        recurrence_nth_of_month: new FormControl(\n            booking.recurrence_nth_of_month,\n        ),\n        recurrence_interval: new FormControl(booking.recurrence_interval),\n        recurrence_end: new FormControl(booking.recurrence_end),\n        notes: new FormControl(booking.extension_data.notes || ''),\n        update_master: new FormControl(false),\n        self_registered: new FormControl(false),\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.user.valueChanges.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                user: user,\n                user_id: user?.id,\n                user_email: user?.email,\n                user_name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    current_user.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                booked_by: user,\n                booked_by_id: user?.id,\n                booked_by_email: user?.email,\n                name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0]),\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = [],\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y),\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, uploadFile } from '@placeos/common';\nimport Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container class=\"absolute inset-0\">\n            <div #editor class=\"h-full\"></div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                min-height: 8rem;\n                margin-bottom: 4rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n    @Input() public images_allowed = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: Quill;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string,\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string,\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.images_allowed) {\n            this.timeout('init', () => this._initialiseEditor());\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.timeout('init', () => this._initialiseEditor());\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert({ html: value });\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        if (\n            !this._editor_el?.nativeElement ||\n            !this._container_el?.nativeElement\n        ) {\n            return this.timeout('init', () => this._initialiseEditor());\n        }\n        const toolbarOptions = [\n            [{ font: [] }],\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            ['bold', 'italic', 'underline'], // toggled buttons\n\n            [{ list: 'ordered' }, { list: 'bullet' }, { list: 'check' }],\n            [{ align: [] }],\n        ];\n        if (this.images_allowed) {\n            toolbarOptions.push(['image', 'link']);\n        }\n        if (this._editor) {\n            this.unsub('changes');\n            this._editor_el.nativeElement.innerHTML = '';\n            delete this._editor;\n        }\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: {\n                    container: toolbarOptions,\n                    handlers: {\n                        image: () => this._embedImage(),\n                        link: () => this._embedAttachment(),\n                    },\n                },\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn),\n        );\n    }\n\n    private _embedImage() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.setAttribute('accept', 'image/*');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertEmbed(index, 'image', link);\n            });\n        };\n    }\n\n    private _embedAttachment() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertText(range.index, file.name, 'link', link);\n                this._editor.setSelection(range.index + file.name.length);\n            });\n        };\n    }\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: string[]) {\n        this.list = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id,\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                            [timezone]=\"timezone\"\n                            [range]=\"multiday ? 1 : 0\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                            [timezone]=\"timezone\"\n                            [range]=\"2\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features)))),\n        ),\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180,\n            ),\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: Record<string, CalendarEvent[]> = {};\n    private _statuses: Record<string, string> = {};\n    private _presence: Record<string, boolean> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] })),\n                ),\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1),\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this.unsubWith('c-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d),\n                        ),\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d),\n                        ),\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n                binding = mod.binding('presence');\n                this.subscription(\n                    `c-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handlePresenceChange(list, space, d),\n                        ),\n                );\n                this.subscription(`c-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules,\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.',\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`,\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            },\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[],\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100,\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100,\n        );\n    }\n\n    public handlePresenceChange(\n        spaces: Space[],\n        space: Space,\n        presence: boolean,\n    ) {\n        this._presence[space.id] = presence;\n        this.timeout('update_icons', () => this._updateIcons(spaces), 100);\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private _updateIcons(spaces: Space[]) {\n        if (!this._settings.get('app.show_presence_indicators')) return;\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                content: ExploreIconComponent,\n                data: {\n                    icon: {\n                        class: 'material-symbols-rounded',\n                        content: 'sensor_occupied',\n                    },\n                    color: this._presence[space.id] ? 'var(--su)' : 'var(--bc)',\n                    text_color: this._presence[space.id]\n                        ? 'var(--suc)'\n                        : 'var(--b1)',\n                },\n                z_index: 98,\n            } as ViewerFeature);\n        }\n        this._state.setFeatures('spaces-presence', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300,\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50,\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            })),\n        ),\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            })),\n        ),\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {}),\n        ),\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            }),\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    }),\n);\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { getUnixTime, subMinutes } from 'date-fns';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: getUnixTime(Date.now()),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { first } from 'rxjs/operators';\nimport {\n    apiKey,\n    clientId,\n    convertPairStringToMap,\n    invalidateToken,\n    isFixedDevice,\n    isMock,\n    refreshToken,\n    setAPI_Key,\n    token,\n} from '@placeos/ts-client';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { addHours } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    HotkeysService,\n    notifySuccess,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    GoogleAnalyticsService,\n    isMobileSafari,\n    hasNewVersion,\n    requestScreenWakeLock,\n} from '@placeos/common';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\n\nimport * as Sentry from '@sentry/angular';\nimport { MOCKS } from '@placeos/mocks';\nimport {\n    Amazon,\n    Azure,\n    Google,\n    initialiseUploadService,\n    OpenStack,\n} from '@placeos/cloud-uploads';\nimport { setCustomHeaders } from '@placeos/svg-viewer';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst START_QUERY = location.search;\n\nexport function initSentry(dsn: string, sample_rate = 0.1) {\n    if (!dsn) return;\n    Sentry.init({\n        dsn,\n        integrations: [\n            Sentry.browserTracingIntegration(),\n            Sentry.replayIntegration({\n                maskAllText: false,\n                blockAllMedia: false,\n            }),\n        ],\n        // Performance Monitoring\n        tracesSampleRate: 1.0, //  Capture 100% of the transactions\n        // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n        tracePropagationTargets: [\n            'localhost',\n            /^https:\\/\\/[a-zA-Z0-9_\\-]*\\.[a-zA-Z0-9]*\\/api/,\n            /^https:\\/\\/[a-zA-Z0-9_\\-]*\\.placeos\\.run*\\/api/,\n        ],\n        // Session Replay\n        replaysSessionSampleRate: sample_rate, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n        replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n    });\n}\n\n(window as any).global = window;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <global-banner></global-banner>\n        <div class=\"flex-1 w-full relative h-1/2\">\n            <router-outlet></router-outlet>\n        </div>\n        <global-chat *ngIf=\"has_chat\"></global-chat>\n        <global-loading></global-loading>\n        <debug-console *ngIf=\"debug\"></debug-console>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    public get debug() {\n        return (\n            window.debug && this._settings.get('app.allow_debugging') === true\n        );\n    }\n\n    public get has_chat() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    constructor(\n        private _analytics: GoogleAnalyticsService,\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _maps: MapsPeopleService,\n        @Optional() private _translate: TranslateService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        log('APP', 'MOCKS:', MOCKS);\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem(\n                'mock',\n                `${localStorage.getItem('mock') !== 'true'}`,\n            );\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyD'], () => {\n            this._settings.saveUserSetting(\n                'dark_mode',\n                !this._settings.get('dark_mode'),\n            );\n            notifySuccess('Toggled dark mode.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(`${token()}|${refreshToken()}`);\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard\n                ?.readText()\n                .then((tkn) => this._pasteToken(tkn));\n        });\n        (window as any).pasteToken = (t) => this._pasteToken(t);\n        this._route.queryParamMap.subscribe((params) => {\n            if (params.has('hide_nav'))\n                localStorage.setItem('PlaceOS.hide_nav', 'true');\n            if (params.has('lang')) {\n                const locale = params.get('lang');\n                this._translate?.use(locale);\n                localStorage.setItem('PLACEOS.locale', locale);\n            }\n            if (params.has('x-api-key')) {\n                setAPI_Key(params.get('x-api-key'));\n            }\n        });\n        setNotifyOutlet(this._snackbar);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        /** Add query parameters if removed due to hash routing */\n        if (START_QUERY) {\n            const query = convertPairStringToMap(START_QUERY.substring(1));\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: query,\n            });\n        }\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch((_) => console.error(_));\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        setupCache(this._cache);\n        if (!settings.local_login) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        this._initLocale();\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`,\n        );\n        this._initAnalytics();\n        initSentry(this._settings.get('app.sentry_dsn'));\n        try {\n            const tkn = token();\n            if (isMobileSafari()) {\n                setCustomHeaders(\n                    tkn === 'x-api-key'\n                        ? { 'x-api-key': apiKey() }\n                        : { Authorization: `Bearer ${tkn}` },\n                );\n            }\n            if (this._settings.get('app.has_uploads')) {\n                this.timeout('init_uploads', () => {\n                    initialiseUploadService({\n                        auto_start: true,\n                        token: token(),\n                        endpoint: '/api/engine/v2/uploads',\n                        worker_url: 'assets/md5_worker.js',\n                        providers: [Amazon, Azure, Google, OpenStack] as any,\n                    });\n                });\n            }\n            if (isFixedDevice()) {\n                this.interval(\n                    'auto-update-version',\n                    () => this._checkReload(),\n                    15 * 1000,\n                );\n                await requestScreenWakeLock();\n            }\n        } catch {}\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n\n    private _initAnalytics() {\n        const tracking_id = this._settings.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics.init(tracking_id);\n        this._analytics.load(tracking_id);\n        this._analytics.setUser(currentUser().id);\n    }\n\n    private _initLocale() {\n        try {\n            let locale = localStorage.getItem('PLACEOS.locale');\n            const locales = this._settings.get('app.locales') || [];\n            this._translate?.addLangs(locales.map((_) => _.id));\n            if (locale) {\n                this._translate?.use(locale);\n            } else {\n                const list = navigator.languages;\n                for (const lang of list) {\n                    locale = locales.find((_) => _.id === lang);\n                    if (!locale)\n                        locale = locales.find((_) => lang.includes(_.id));\n                    if (locale) {\n                        this._translate?.use(lang);\n                        localStorage.setItem('PLACEOS.locale', lang);\n                        break;\n                    }\n                }\n            }\n        } catch {}\n    }\n\n    private _pasteToken(tkn: string) {\n        const parts = tkn.split('|');\n        const id = clientId();\n        localStorage.setItem(`${id}_access_token`, `${parts[0]}`);\n        localStorage.setItem(`${id}_refresh_token`, `${parts[1]}`);\n        localStorage.setItem(\n            `${id}_expires_at`,\n            `${addHours(new Date(), 6).valueOf()}`,\n        );\n\n        notifySuccess('Successfully pasted token.');\n        setTimeout(() => location.reload(), 2000);\n    }\n\n    private _checkReload() {\n        if (!hasNewVersion()) return;\n        location.reload();\n\n        this.timeout(\n            'reload',\n            () => (location.href = `${location.origin}${location.pathname}`),\n        );\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                              ? 'Attendee'\n                              : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <ng-container *ngFor=\"let user of list\">\n                    <div\n                        attendee\n                        class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                        *ngIf=\"\n                            !user.resource && (host !== user.email || show_host)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div class=\"flex-1 w-1/2\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div\n                                class=\"opacity-60 text-sm\"\n                                *ngIf=\"host === user.email\"\n                            >\n                                Host\n                            </div>\n                        </div>\n                        <div class=\"p-2\">\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [class.bg-success]=\"user.checked_in\"\n                                [class.bg-pending]=\"!user.checked_in\"\n                                [matTooltip]=\"\n                                    user.checked_in\n                                        ? 'Checked in'\n                                        : 'Not checked in'\n                                \"\n                            ></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public show_host = true;\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    getTimezoneOffsetString,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\nimport { DatePipe } from '@angular/common';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            <div\n                                class=\"flex flex-col leading-tight\"\n                                [class.pr-4]=\"timezone\"\n                            >\n                                <div>{{ period }}</div>\n                                <div\n                                    class=\"opacity-30 text-xs\"\n                                    *ngIf=\"timezone\"\n                                >\n                                    {{ period_tz }}\n                                </div>\n                            </div>\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon class=\"text-2xl\">{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"pr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>\n                            {{ event.date | date: 'EEEE, dd LLLL y' }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div class=\"flex flex-col leading-tight\">\n                            <div>{{ period }}</div>\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"timezone\">\n                                {{ period_tz }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0,\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0,\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0,\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        this._load().then();\n        console.log('Timezone:', this.timezone);\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        return this.formattedTime();\n    }\n\n    public get period_tz() {\n        return this.formattedTime(this.tz);\n    }\n\n    private _date: DatePipe = new DatePipe('en');\n\n    public formattedTime(tz?: string) {\n        const date = this.event.date;\n        const date_end = this.event.date_end;\n        const all_day = this.event.all_day;\n        const tz_format = this._date.transform(date, 'z', tz);\n        const start_date = this._date.transform(date, 'MMM d', tz);\n        const start_time = this._date.transform(date, this.time_format, tz);\n        const end_date = this._date.transform(date_end, 'MMM d', tz);\n        const end_time = this._date.transform(date_end, this.time_format, tz);\n        const is_multiday = this.event?.duration > 24 * 60;\n\n        if (is_multiday) {\n            return `${start_date}${all_day ? '' : ', ' + start_time} - ${end_date}${all_day ? '' : ', ' + end_time}`;\n        } else if (all_day) {\n            return 'All Day';\n        }\n        return `${start_time} - ${end_time} ${'(' + tz_format + ')'}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email,\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id),\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id,\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { CalendarEvent } from './event.class';\nimport {\n    addEventGuest,\n    checkinEventGuest,\n    removeEventGuest,\n} from './events.fn';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.extension_data?.images?.length\"\n                    auth\n                    [source]=\"event.extension_data?.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ event.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"event.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            Event by\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ event.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ event.date | date: time_format }} -\n                                {{\n                                    event.date + event.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ event.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            event-details\n                            [innerHTML]=\"body | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!raw_description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\"p-4 space-y-2\">\n                                <div *ngIf=\"is_onsite && has_space\">\n                                    {{\n                                        (system_id | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                                <div\n                                    *ngIf=\"is_onsite && !has_space\"\n                                    class=\"opacity-30\"\n                                >\n                                    Room to be confirmed\n                                </div>\n                                <div class=\"opacity-30 text-sm !mt-0\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                                <a\n                                    *ngIf=\"is_online\"\n                                    class=\"opacity-30 mt-4\"\n                                    [class.underline]=\"event.meeting_url\"\n                                    [href]=\"event.meeting_url\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {{\n                                        is_onsite\n                                            ? 'Can be attended online'\n                                            : 'Remote Event'\n                                    }}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [show_host]=\"false\"\n                    [list]=\"event.attendees\"\n                    [host]=\"event.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public event: CalendarEvent = this._data.event;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n    public raw_description = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.event as any).featured || this.event.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.event.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get body() {\n        if (this.is_online) return this.event.body;\n        let body = this.event.body;\n        const remove_blocks = [\n            `<div style=\"margin-bottom:24px; overflow:hidden; white-space:nowrap\">________________________________________________________________________________</div>`,\n            `<p>________________________________________________________________________________</p>`,\n        ];\n        for (const block of remove_blocks) {\n            const first = body.indexOf(block);\n            const last = body.lastIndexOf(block);\n            body = body.substring(0, first) + body.substring(last);\n        }\n        for (const block of remove_blocks) {\n            body = body.replace(block, '');\n        }\n        return body;\n    }\n\n    public get attendance() {\n        return (\n            this.event.attendees?.filter((_: any) => _.checked_in)?.length || 0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.space?.id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.event.attendees?.find((_) => _.email === user.email);\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { event: CalendarEvent; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        const map_id = (this.event.extension_data as any)?.map_id;\n        const id = this.space?.map_id || map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        const zones = (this.space?.zones as any) || [];\n        this.level = this._org.levelWithID(zones);\n        this.building =\n            this._org.buildings.find((_) => zones.includes(_.id)) ||\n            this._org.building;\n        this.locate = map_id || '';\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return (doc.body.textContent || '').trim();\n    }\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        if (this.is_interested && user) {\n            await removeEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = (this.event.attendees || []).filter(\n                (_: any) => _.email !== user.email,\n            );\n        } else {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinEventGuest(this.event.id, user.email, !this.is_going, {\n            system_id: this.event.system?.id,\n        }).toPromise();\n        const guest = this.event.attendees.find((_) => _.email === user.email);\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { format, isSameDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    getTimezoneOffsetString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">\n                        <div\n                            class=\"flex flex-col leading-tight\"\n                            [class.pr-4]=\"timezone\"\n                        >\n                            <div>{{ period }}</div>\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"timezone\">\n                                {{ period_tz }}\n                            </div>\n                        </div>\n                    </status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        return this.formattedTime();\n    }\n\n    public get period_tz() {\n        return this.formattedTime(this.tz);\n    }\n\n    private _date: DatePipe = new DatePipe('en');\n\n    public formattedTime(tz?: string) {\n        const date = this.event.date;\n        const date_end = this.event.date_end;\n        const all_day = this.event.all_day;\n        const tz_format = this._date.transform(date, 'z', tz);\n        const start_date = this._date.transform(date, 'MMM d', tz);\n        const start_time = this._date.transform(date, this.time_format, tz);\n        const end_date = this._date.transform(date_end, 'MMM d', tz);\n        const end_time = this._date.transform(date_end, this.time_format, tz);\n        const is_multiday = this.event?.duration > 24 * 60;\n\n        if (is_multiday) {\n            return `${start_date}${all_day ? '' : ', ' + start_time} - ${end_date}${all_day ? '' : ', ' + end_time}`;\n        } else if (all_day) {\n            return 'All Day';\n        }\n        return `${start_time} - ${end_time} ${'(' + tz_format + ')'}`;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email,\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            if (this.event.extension_data?.shared_event) {\n                this._dialog.open(GroupEventDetailsModalComponent, {\n                    data: { event: this.event, concierge: false },\n                });\n                return;\n            }\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_),\n                ),\n            );\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>,\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n            ical_uid: this._event?.ical_uid,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query,\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { CalendarEvent } from './event.class';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition:\n                    box-shadow 300ms,\n                    border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event: this.event, concierge: false },\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\nimport { setDefaultCreator } from './event.class';\nimport { currentUser, current_user } from 'libs/common/src/lib/user-state';\nimport { first } from 'rxjs/operators';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        SharedSpacesModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {\n    public async ngOnInit() {\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        setDefaultCreator(currentUser());\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n    ExploreIconComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { ComponentsModule, UnauthorisedComponent } from '@placeos/components';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from 'libs/components/src/lib/app.component';\nimport { environment } from '../environments/environment';\nimport { BootstrapComponent } from './bootstrap.component';\n\nimport * as Sentry from '@sentry/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { SignagePanelComponent } from './signage.component';\nimport { PaymentsModule } from 'libs/payments/src/lib/payments.module';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { MediaPlayerComponent } from './media-player.component';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        UnauthorisedComponent,\n        BootstrapComponent,\n        SignagePanelComponent,\n        MediaPlayerComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        SharedSpacesModule,\n        ComponentsModule,\n        SharedExploreModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useValue: Sentry.createErrorHandler({\n                showDialog: false,\n            }),\n        },\n        {\n            provide: Sentry.TraceService,\n            deps: [Router],\n        },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: () => () => {},\n            deps: [Sentry.TraceService],\n            multi: true,\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export const environment = {\n    production: true,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n"],"x_google_ignoreList":[]}