{"version":3,"file":"main.js","mappings":"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,qBACA,YAGJ,CACEh3F,MAAS,4BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,sBACRuX,IAAO,CACL,kBACA,uBACA,qBACA,kBACA,cAGJ,CACEh3F,MAAS,kCACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,0CACRuX,IAAO,CACL,oBACA,qBAGJ,CACEh3F,MAAS,yBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,0CACRuX,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACEh3F,MAAS,gCACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,8BACRuX,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACEh3F,MAAS,wBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,yCACRuX,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACEh3F,MAAS,iCACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,kDACRuX,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACEh3F,MAAS,+BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,2BACRuX,IAAO,CACL,iBACA,0BAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,kCACRuX,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACEh3F,MAAS,wBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,yCACRuX,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,6BACRuX,IAAO,CACL,0BACA,wBACA,yBAGJ,CACEh3F,MAAS,0BACT82F,KAAQ,MACRz6D,QAAU,IACV06D,OAAS,EACTtX,KAAQ,sBACRuX,IAAO,CACL,oBAGJ,CACEh3F,MAAS,yBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,qBAGJ,CACEh3F,MAAS,yBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,qCACRuX,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACEh3F,MAAS,kCACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,qBACRuX,IAAO,CACL,uBACA,mBAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,mDACRuX,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,mBACA,sBAGJ,CACEh3F,MAAS,6BACT82F,KAAQ,MACRz6D,QAAU,IACV06D,OAAS,EACTtX,KAAQ,2BACRuX,IAAO,CACL,qBAGJ,CACEh3F,MAAS,iCACT82F,KAAQ,QACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,sBAGJ,CACEh3F,MAAS,0BACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,2BACRuX,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,iCACRuX,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACEh3F,MAAS,0BACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,wBACRuX,IAAO,CACL,oBAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,yBACRuX,IAAO,CACL,uBAGJ,CACEh3F,MAAS,sBACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,kBAGJ,CACEh3F,MAAS,SACT82F,KAAQ,IACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,4CACRuX,IAAO,CACL,kBACA,yBACA,cAGJ,CACEh3F,MAAS,6BACT82F,KAAQ,MACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,iCACRuX,IAAO,IAET,CACEh3F,MAAS,uBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,qBACRuX,IAAO,CACL,uBACA,oBAGJ,CACEh3F,MAAS,2BACT82F,KAAQ,OACRz6D,QAAU,EACV06D,OAAS,EACTtX,KAAQ,6BACRuX,IAAO,CACL,sBACA,cAGJ,CACEh3F,MAAS,wBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,mBACRuX,IAAO,CACL,oBACA,oBAGJ,CACEh3F,MAAS,MACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,mCACRuX,IAAO,CACL,uBACA,YAGJ,CACEh3F,MAAS,oBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,0BACRuX,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEh3F,MAAS,sBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,gCACRuX,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEh3F,MAAS,oBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACEh3F,MAAS,0BACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,4BACRuX,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACEh3F,MAAS,0BACT82F,KAAQ,OACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,+DACRuX,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACEh3F,MAAS,+BACT82F,KAAQ,OACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,gEACRuX,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACEh3F,MAAS,wBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,kDACRuX,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACEh3F,MAAS,iCACT82F,KAAQ,OACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,+CACRuX,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACEh3F,MAAS,kCACT82F,KAAQ,QACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,kCACRuX,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACEh3F,MAAS,wBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,uBACRuX,IAAO,CACL,oBAGJ,CACEh3F,MAAS,oBACT82F,KAAQ,MACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,gCACRuX,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACEh3F,MAAS,4BACT82F,KAAQ,OACRz6D,OAAU,EACV06D,OAAS,EACTtX,KAAQ,qBACRuX,IAAO,CACL,gBAGJ,C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,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAMliN,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKjN,EAAUgN,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_2","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","group_events","_ref18","lockers","lockers$","_ref20","_ref21","system_id","mod","execute","my_lockers","_ref23","_ref24","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref25","_ref26","p","l","ge","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref27","_ref28","filters","_filters$shown_types","_filters$shown_types2","_ignore_cancel","_checkCancel","interval","startWith","_ref29","_ref31","_ref32","_auto_release$resourc","is_home","auto_release","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","time_after","time_before","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","format","confirm_text","cancel_text","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_loop","assetgroup","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r1","item_r5","_r8","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","_r11","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","min","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","groups_cache","queryAssetGroupsExtended","has","forkJoin","limit","setTimeout","delete","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","_booking$asset_ids2","_removeAssetRequests","requests","_$asset_ids","removeBooking","differenceBetweenAssetRequests","new_assets","old_assets","changed","match","_validateAssetRequestsForResource","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref19","_available_groups$fin","idx","_assets$find","_request$items","createBooking","user_email","r","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","validateAssetRequestsForResource","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","ɵɵpureFunction1","period","raw_description","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r18","request_r16","_r20","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r22","_r24","hide_map","has_assets","_this$booking6","ts","booking_start","booking_end","_this$booking15","_toggleCheckedIn","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","booking_status","can_edit","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","available_resources","merge","timer","_this$_org$building","restrictions","_this$form$getRawValu","organisation","user_name","_asset$zone","_asset$groups","_options$features","_asset$zone2","_asset$zone3","is_restricted","rulesForResource","hidden","groups","grp","bookable","assigned_to","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone4","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","_this3$_org$building","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_asset$zone5","_asset$zone6","_unavailable$map","_getNearbyResources","t2","t3","call","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","_data$extension_data5","_b_valid_asset_cache","_b_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","process_state","getTime","removeEmptyFields","_this$extension_data","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","endInFuture","company","featured","other_asset_type","attendance_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","setBookingState","utm_source","queryBookingGuests","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","SharedSpacesModule","SharedUsersModule","_r9","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r12","DeskFiltersComponent_ng_container_12_mat_form_field_1_mat_option_5_Template","lvl_r16","_r18","ctx_r17","DeskFiltersComponent_ng_container_12_mat_form_field_3_mat_option_3_Template","DeskFiltersComponent_ng_container_12_mat_form_field_1_Template","DeskFiltersComponent_ng_container_12_mat_form_field_3_Template","hide_levels","reg_r22","setRegion","DeskFiltersComponent_ng_container_13_mat_form_field_1_mat_option_2_Template","region","regions","level_r28","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r26","_r30","ctx_r29","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_Template","region_levels","DeskFiltersComponent_ng_container_13_mat_form_field_1_Template","DeskFiltersComponent_ng_container_13_mat_form_field_3_Template","_r32","ctx_r31","feat_r34","_r36","ctx_r35","ctx_r33","DeskFiltersComponent_section_32_div_3_Template","_r38","ctx_r37","_bsheet_ref","can_close","active_buildings","active_levels","region_list","active_region","setLevel","reg","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_ng_container_12_Template","DeskFiltersComponent_ng_container_13_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r4","DeskMapComponent_mat_form_field_1_mat_option_2_Template","level_r11","DeskMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","bld_r9","DeskMapComponent_ng_template_2_mat_optgroup_2_Template","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level2","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","DeskMapComponent_ng_template_2_Template","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_div_16_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_div_30_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent","_this$event$linked_ev","space_pipe","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","is_interested","is_going","is_onsite","GroupEventDetailsModalComponent_div_96_interactive_map_3_Template","GroupEventDetailsModalComponent_div_96_span_9_Template","GroupEventDetailsModalComponent_div_96_span_13_Template","GroupEventDetailsModalComponent_div_96_span_14_Template","showing_map","show_attendees","locate","_this$booking$extensi","_this$booking$linked_","_this$booking$attende","guest_details","_this$guest_details","_this$booking$linked_2","_this$booking$attende2","_this$booking$linked_3","_this$space","_this$booking$extensi2","_this$booking$extensi3","_this$space2","notifyInfo","_toggleInterest","toggleInterest","_toggleAttendance","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_11_Template","GroupEventDetailsModalComponent_div_82_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_span_95_Template","GroupEventDetailsModalComponent_div_96_Template","GroupEventDetailsModalComponent_div_97_Template","is_online","attendance","ɵɵsanitizeHtml","notifications_1","general_1","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","lvl_r1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","bld_r10","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r14","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r20","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r26","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r24","_r28","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r30","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r34","_form","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r1","duplicateOrder","editOrder","removeOrder","optionList","item_r16","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","_r25","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_ref2$","zone_ids","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","row","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","degreesToRadians","degrees","PI","hexToRgb","hex","parseInt","interpolateColors","rgb1","rgb2","fraction","round","rgbToHex","componentToHex","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","shiftColorTowards","hex1","hex2","resultRgb","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","KeepAliveService","_system_id","_delay","_bindTo","module","GoogleMaps","Mapbox","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","ENDPOINT","queryShortURLs","showShortURL","QR_STORE","_getShortUrlQRCode","response","cookie","apiKey","fetch","URL","createObjectURL","createShortURL","updateShortURL","getShortUrlQRCode","saveShortURL","patchShortURL","deleteShortURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","cloud_uploads_1","blobUtil","Observable","observer","arrayBufferToBlob","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","ɵɵInputFlags","None","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","TranslatePipe","onConfirm","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r10","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r10","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r8","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","get_location","custom_coordinates","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","getZoom","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_this$metadata2","_focusOnLocation2","_item$properties2","_item$properties3","_$properties","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","MediaDurationPipe","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","building_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_button_23_Template","UserControlsComponent_button_28_Template","disable_building_select","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_7_div_5_Template","user_r5","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_div_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r30","request_r28","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","no_edit_message","act_r39","_r41","ctx_r40","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_assertThisInitialize","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","_this$_org$building6","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","_this6$event","_spaces$","_this6$event2","_this6$event3","_this6$event4","_value$organiser","_value$organiser2","_ref22","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_spaces$6","_this6$_org$building","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","_$extension_data","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","_lvl$tags","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r6","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","_events$find","assigned","week_availablility","day_events","_updateParkingSpaces","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkClick","_this$_el","_this$_input_el","checkButtonPosition","_this$_input_el2","_this$_input_el3","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties2","_$properties3","_$properties4","_$properties5","_$properties6","_$properties7","_points_of_interest","points_of_interest","poi","roled_contacts","mapspeople_items","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_arr","_i2","_arr2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","polygons","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","weekday_r2","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","start_date","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","UserListFieldComponent","MatFormField","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","UserSearchFieldComponent","MatPrefix","MatInput","SpaceListFieldComponent","i13","MatRadioGroup","MatRadioButton","i14","ImageListFieldComponent","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r8","copyLink","viewImage","removeImage","item_r14","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","_r23","view_space","item_r26","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","USER_LIST","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_6","SpaceListFieldComponent_div_15_Template","type_r10","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","location_name_time","location_icon","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r16","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r13","SpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r17","SpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","SpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","SpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r23","SpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r29","SpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_3_mat_option_1_Template","bld_r27","SpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_3_Template","SpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","SpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","_r33","_r39","SpaceFiltersComponent_div_25_div_6_Template","SpaceFiltersComponent_div_25_div_7_Template","_r45","feat_r41","ctx_r43","ctx_r42","feature_display","SpaceFiltersComponent_section_36_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_36_ng_container_3_Template","_r48","ctx_r47","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_ng_container_13_Template","SpaceFiltersComponent_ng_container_14_Template","SpaceFiltersComponent_div_23_Template","SpaceFiltersComponent_div_24_Template","SpaceFiltersComponent_div_25_Template","SpaceFiltersComponent_section_36_Template","SpaceFiltersComponent_div_38_Template","tmp_14_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","SpaceSelectMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","SpaceSelectMapComponent_ng_template_2_mat_optgroup_2_Template","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","SpaceSelectMapComponent_ng_template_2_Template","support_url","configurations","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","updateSpaceList","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","work_preferences","work_overrides","location_time","datetime","_this$work_overrides$","_this$work_preference","date_string","in_hours","in_hours_time","pref","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","type_r9","idx_r7","start_times","end_times","WFHSettingsModalComponent_div_0_div_31_mat_option_8_Template","WFHSettingsModalComponent_div_0_span_24_Template","WFHSettingsModalComponent_div_0_div_31_Template","option_name","available_weekdays","type_r19","_this$options$find","_this$settings","_initWeekdays","_saveChanges","dow","updateUser","setDay","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/group-event-card.component.ts","./libs/bookings/src/lib/group-event-details-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event'\n                    )\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of group event bookings for the selected date */\n    public readonly group_events: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'group-event',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(([e, v, d, p, l, ge]) => {\n            const filtered_events = e.filter(\n                (ev) =>\n                    !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`) &&\n                    ev.linked_bookings[0]?.booking_type !== 'group-event'\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l, ...ge].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) +\n                                    (auto_release.time_before || 0)\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) +\n                        (auto_release.time_before || 0);\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0\n                        );\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} booking`,\n                                content: `You have indicated you are not in the office. \n                                Your booking \"<i>${\n                                    booking.title\n                                }</i>\" for ${format(\n                                    booking.date,\n                                    this._settings.time_format\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format\n                                )}.<br/><br/>\n                                Do you wish to keep this booking?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        console.log('Requests:', value);\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id))\n                        )\n                ),\n            }));\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id)\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id)\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id))\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration)\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id)\n    ).toPromise();\n    console.log('Used IDs:', used_ids);\n    console.log('Changed Assets:', changed_assets);\n    console.log('Requests:', requests);\n    console.log('Bookings:', bookings);\n    console.log('Filtered:', filtered);\n    console.log('Unchanged:', unchanged);\n    console.log('Available Groups:', available_groups);\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            })\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id))\n            )\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        return createBooking(\n            new Booking({\n                type: 'asset-request',\n                booking_type: 'asset-request',\n                date,\n                duration,\n                all_day,\n                description: location_name,\n                user_email: host,\n                asset_id: asset_ids[0],\n                asset_ids,\n                asset_name: request.items.map((_) => _.name).join(', '),\n                title: request.items.map((_) => _.name).join(', '),\n                approved:\n                    !reset_state && booking?.approved && !request._changed,\n                rejected:\n                    !reset_state && booking?.rejected && !request._changed,\n                extension_data: {\n                    parent_id: id,\n                    request_id: request.id,\n                    location_id,\n                    request: new AssetRequest({ ...request, event: null }),\n                },\n                zones: zones || [],\n            }),\n            { ical_uid, event_id: from_booking ? '' : id }\n        );\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise())\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\nexport * from './lib/group-event-details-modal.component';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[\n                                    asset.zone?.id || this._org.building.id\n                                ] || []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    private _b_valid_asset_cache = [];\n    private _b_valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._b_valid_cache_expiry > Date.now() &&\n            this._b_valid_asset_cache.length\n        ) {\n            return this._b_valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._b_valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._b_valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._b_valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction =\n            (data.induction ||\n                data.extension_data?.induction ||\n                data.process_state === 'inducted') ??\n            false;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        this.process_state = data.process_state || 'pending';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY'\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    return id ? updateBooking(id, data) : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {}\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/attendee/${encodeURIComponent(guest.email)}`\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise())\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <label for=\"location\" i18n>Location</label>\n                <ng-container *ngIf=\"!use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngIf=\"use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option [value]=\"\">Any Level</mat-option>\n                            <mat-optgroup\n                                *ngFor=\"let bld of region_levels | async\"\n                                [label]=\"bld.name\"\n                            >\n                                <mat-option\n                                    [value]=\"level.id\"\n                                    *ngFor=\"let level of bld.levels\"\n                                >\n                                    {{ level.display_name || level.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { GroupEventDetailsModalComponent } from '@placeos/bookings';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full w-1/2 max-w-[20rem] bg-base-200 overflow-hidden\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: any;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.event.linked_event?.system_id\n        );\n        this.raw_description = this.removeHtmlTags(this.event.description);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { booking: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    Booking,\n    bookingAddGuest,\n    bookingRemoveGuest,\n    checkinBookingGuest,\n} from '@placeos/bookings';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"booking.images?.length\"\n                    auth\n                    [source]=\"booking.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button icon mat-dialog-close class=\"absolute top-1 right-1\">\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"booking.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>Event by {{ booking.user_name }}</div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ booking.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ booking.date | date: time_format }} -\n                                {{\n                                    booking.date + booking.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ booking.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            [innerHTML]=\"booking.description | sanitize\"\n                        ></span>\n                        <span *ngIf=\"!booking.description\" class=\"opacity-30\">\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                    <div class=\"border border-base-300 w-full\">\n                        <button\n                            matRipple\n                            class=\"relative w-full h-40 bg-base-200\"\n                            (click)=\"viewLocation()\"\n                        >\n                            <interactive-map\n                                *ngIf=\"!showing_map\"\n                                [src]=\"level?.map_id\"\n                                [features]=\"features\"\n                                [styles]=\"styles\"\n                            ></interactive-map>\n                        </button>\n                        <div class=\" p-4 space-y-2\">\n                            <div>\n                                {{\n                                    (\n                                        booking.linked_event?.system_id\n                                        | space\n                                        | async\n                                    )?.display_name\n                                }}\n                                <span\n                                    *ngIf=\"\n                                        !(\n                                            booking.linked_event?.system_id\n                                            | space\n                                            | async\n                                        )?.display_name\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    Remote Event\n                                </span>\n                            </div>\n                            <div class=\"opacity-30 text-sm\">\n                                <span *ngIf=\"building && level\">\n                                    {{\n                                        building.display_name || building.name\n                                    }},\n                                    {{ level?.display_name || level?.name }}\n                                </span>\n                                <span\n                                    *ngIf=\"!building || !level\"\n                                    class=\"opacity-30\"\n                                >\n                                    No location set for this event\n                                </span>\n                            </div>\n                            <div class=\"flex items-center space-x-2 pt-4\">\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"WiFi available\"\n                                >\n                                    <app-icon class=\"text-2xl\">wifi</app-icon>\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Cafe available\"\n                                >\n                                    <app-icon class=\"text-2xl\"\n                                        >local_cafe</app-icon\n                                    >\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Open spaces nearby\"\n                                >\n                                    <app-icon class=\"text-2xl\">chat</app-icon>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"booking.attendees\"\n                    [host]=\"booking.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public booking: Booking = this._data.booking;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.booking as any).featured ||\n            this.booking.extension_data?.featured\n        );\n    }\n    public get is_onsite() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.booking.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.booking.attendees?.filter((_: any) => _.checked_in)?.length ||\n            0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.booking.attendees?.find((_) => _.email === user.email);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { booking: Booking; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.booking.linked_event?.system_id\n        );\n        const id = this.space?.map_id || this.booking.extension_data?.map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        this.level = this._org.levelWithID(this.booking.zones);\n        this.building =\n            this._org.buildings.find((_) =>\n                this.booking.zones.includes(_.id)\n            ) || this._org.building;\n        this.locate = this.booking.extension_data?.map_id || '';\n    }\n\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await bookingRemoveGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = (\n                this.booking.attendees || []\n            ).filter((_: any) => _.email !== user.email);\n        } else {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinBookingGuest(\n            this.booking.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.booking.attendees.find(\n            (_) => _.email === user.email\n        );\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|')\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.31.0/mapsindoors-4.31.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg'\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=60;path=/api/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"5931ee8\",\n    \"hash\": \"5931ee8\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"5931ee8\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1716446435418\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            console.log('View Options:', view_options);\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        console.log('Pairs:', pairs, building);\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                console.log(\n                    'Locations:',\n                    locations,\n                    this.map_instance.getZoom()\n                );\n                this.search_result_items = locations;\n            }\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Using custom coordinates:', this.coordinates);\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_)\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn'\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        console.log('Directions Service:', this.directions_service);\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        console.log('Route Parameters:', routeParameters);\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn'\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        this._initialised.next(true);\n        if (this.zone) this._centerOnZone();\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e)\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e)\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e)\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e)\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100\n        );\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this._services.directions_renderer.setRoute(null);\n            this._focusOnLocation();\n            this.viewing_directions = false;\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates || [0, 0];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                const distance = calculateDistance(\n                    d_lat,\n                    d_lng,\n                    position.coords.latitude,\n                    position.coords.longitude\n                );\n                const routeParameters = {\n                    origin: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    destination: { lat: d_lat, lng: d_lng },\n                    travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n                };\n                console.log('Route Parameters:', routeParameters, distance);\n                const result = await this._services.directions\n                    .getRoute(routeParameters)\n                    .catch((e) => {\n                        log(\n                            'MapsIndoors',\n                            'Error fetching route: ',\n                            e.message || e,\n                            'warn'\n                        );\n                        const origin_error =\n                            e instanceof TypeError &&\n                            e.message?.includes('origin');\n                        this.loading_directions = false;\n                        if (!origin_error) return;\n                        notifyError(\n                            'Error: Origin location is outside of map area.'\n                        );\n                    });\n                if (!result) return;\n                console.log('Route:', result);\n                this._services.directions_renderer.setRoute(result);\n                this.viewing_directions = true;\n                this.loading_directions = false;\n            },\n            () => notifyError('Failed to get your current location.'),\n            options\n        );\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50\n                );\n            },\n            100\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            this._services.mapsindoors.setDisplayRule(id, {\n                polygonVisible: true,\n                polygonFillOpacity: 0.6,\n                polygonZoomFrom: 16,\n                polygonZoomTo: 22,\n                visible: true,\n                polygonFillColor: styles[id].fill,\n            });\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const [lng, lat] = item.properties?.anchor?.coordinates || [0, 0];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (!this._services || !this.zone) return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._services.map.setCenter({\n                lat: parseFloat(lat),\n                lng: parseFloat(long),\n            });\n            this._setFloorFromZone();\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id || _.externalId === map_id || _.id === map_id\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                            ? 'Attendee'\n                            : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div\n                            class=\"opacity-60 text-sm\"\n                            *ngIf=\"host === user.email\"\n                        >\n                            Host\n                        </div>\n                    </div>\n                    <div class=\"p-2\">\n                        <div\n                            class=\"h-3 w-3 rounded-full\"\n                            [class.bg-success]=\"user.checked_in\"\n                            [class.bg-pending]=\"!user.checked_in\"\n                            [matTooltip]=\"\n                                user.checked_in\n                                    ? 'Checked in'\n                                    : 'Not checked in'\n                            \"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        console.log('Valid Assets:', this.event.valid_assets);\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'booking_rules').toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.building?.parent_id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || []\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || []\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || []\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event })\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id]\n                        ) || []\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id)\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource')\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time'\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.level?.parent_id\n                            ? [spaces[0]?.level?.parent_id]\n                            : [this._org.building?.id],\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        delete obj.linked_bookings;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        tap(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels.pipe(\n        map((_) => _.filter((lvl) => !lvl.tags?.includes('parking')))\n    );\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert(value);\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, filter, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(filter(([region, bld]) => !!bld))\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None\n                                    ) || { settings_string: '' }\n                                );\n                            } catch {\n                                return {};\n                            }\n                        })\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_ids\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_ids: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                                [multiple]=\"true\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_ids\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_ids: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                                [multiple]=\"true\"\n                            >\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        console.log('Set Level', level);\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public location_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        return (\n            this.work_overrides[date_string]?.location ||\n            this.work_preferences.find((_) => _.day_of_week === day)\n                ?.location ||\n            'wfo'\n        );\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        const pref =\n            this.work_overrides[date_string] ||\n            this.work_preferences.find((_) => _.day_of_week === day);\n        if (!pref) return false;\n        const start = pref.start_time;\n        const end = pref.end_time;\n        const now = date.getHours() + date.getMinutes() / 60;\n        return start <= now && now < end;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { addDays, format, set, setDay, startOfWeek } from 'date-fns';\nimport { WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[40rem] max-w-full\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-[20rem] max-w-[calc(100%-2rem)] mx-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"flex-1 w-1/2\">{{ option_name }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2 mx-auto\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>{{\n                            option === 'wfh' ? 'home' : 'domain'\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a {{ option === 'aol' ? 'leave' : 'working' }}\n                        <span *ngIf=\"option !== 'aol'\"\n                            >from\n                            {{ option === 'wfh' ? 'home' : 'office' }}</span\n                        >\n                        day<br />\n                        {{ option === 'aol' ? 'Unavailable' : 'Available' }} for\n                        {{ option === 'wfh' ? 'online' : '' }} meetings\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Office Day Defaults\n                </h3>\n                <div\n                    class=\"flex items-center space-x-2 w-full overflow-hidden even:bg-base-200 rounded p-2\"\n                    *ngFor=\"let idx of available_weekdays\"\n                >\n                    <label class=\"w-24 min-w-0 m-0\">{{\n                        days[idx] | date: 'EEEE'\n                    }}</label>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"start_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                    ></a-time-field>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"end_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                        [from]=\"start_times[idx]\"\n                    ></a-time-field>\n                    <mat-form-field\n                        class=\"flex-2 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            [(ngModel)]=\"settings[idx].location\"\n                            (ngModelChange)=\"changed = true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of options\"\n                                [value]=\"type.id\"\n                            >\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Working from office' },\n        { id: 'wfh', name: 'Working from home' },\n        { id: 'aol', name: 'Away on Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n    public start_times: number[] = [];\n    public end_times: number[] = [];\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.option = user.location || 'wfo';\n        if (this.settings?.length < 7) {\n            this.settings = new Array(7).fill({}).map((_, idx) => ({\n                day_of_week: idx as any,\n                start_time: 9,\n                end_time: 17,\n                location: 'wfo',\n            }));\n        }\n        this.start_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.start_time);\n            const minutes = Math.round((_.start_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this.end_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.end_time);\n            const minutes = Math.round((_.end_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this._initWeekdays();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const dow = new Date().getDay();\n        const today = format(Date.now(), 'yyyy-MM-dd');\n        var overrides = {};\n        overrides[today] = {\n            day_of_week: dow,\n            start_time: 9,\n            end_time: 17,\n            location: this.option,\n        };\n        for (const day of this.settings) {\n            const start = new Date(this.start_times[day.day_of_week]);\n            const end = new Date(this.end_times[day.day_of_week]);\n            day.start_time = start.getHours() + start.getMinutes() / 60;\n            day.end_time = end.getHours() + end.getMinutes() / 60;\n            if (day.day_of_week === dow) {\n                overrides[today].start_time = day.start_time;\n                overrides[today].end_time = day.end_time;\n            }\n        }\n        const user = await showUser('current').toPromise();\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: this.settings,\n            work_overrides: overrides,\n        }).toPromise();\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            location.reload();\n            this._dialog_ref.close();\n        }\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n}\n"],"x_google_ignoreList":[]}