{"version":3,"file":"main.js","mappings":"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,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIjM,EAAUoL,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKpL,EAAUmL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,I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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","search","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref9","_$assets","assetAvailable","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","RULE_REQUESTS","zone_id","showMetadata","Array","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","item_r15","BookingDetailsModalComponent_ng_container_40_div_5_Template","_c6","_c7","_booking","_this$booking2$linked","hide_map","has_assets","linked_bookings","ts","booking_start","booking_end","_this$booking9","_this$booking10","_this$booking11","_toggleCheckedIn","checkinBooking","notifySuccess","approved","rejected","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_ng_container_40_Template","viewLocation","BookingDetailsModalComponent_interactive_map_42_Template","BookingDetailsModalComponent_button_53_Template","BookingDetailsModalComponent_button_54_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booking_id","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","_ref13","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","response_type","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","use_24hr","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","index","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","disabled_rooms","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","checkOrder","updated_order","saveEvent","toJSON","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r7","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","sendMessage","messages","toggleChat","ChatComponent_div_0_div_4_Template","ChatComponent","_chat","chat_hint","_this$user","scrollToBottom","connected","startChat","_input_el","_this4$_container_el","_container_el","scrollTop","scrollHeight","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_chat_system","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","diff","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","change","renderSpaceStatus","mapActions","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_this$mapsIndoors_ins2","_this$mapsIndoors_ins3","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","found_level_id","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","accumulator","currentValue","_setPolygonFill2","_this$mapsIndoors_ins4","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","setup_time","breakdown_time","old_system","host_override","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","i12","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","tmp_7_0","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r8","BookingRulesFormComponent_div_58_div_1_Template","BookingRulesFormComponent_div_58_div_2_Template","available_conditions","time_r12","BookingRulesFormComponent_div_59_mat_option_5_Template","duration_blocks","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","time_r17","time_r18","BookingRulesFormComponent_div_61_ng_container_9_mat_option_1_Template","_r22","setIsBetween","BookingRulesFormComponent_div_61_mat_option_6_Template","BookingRulesFormComponent_div_61_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_div_56_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","getMinutes","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","feature_display","SpaceFiltersComponent_section_39_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_39_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_39_Template","SpaceFiltersComponent_div_41_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-pending]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : this._state.resourceUserName(desk.id)\n                        ? free_desks.find((_) => _.id === desk.id)\n                            ? 'free'\n                            : 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) return ruleset.rules;\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"53e5d37\",\n    \"hash\": \"53e5d37\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"53e5d37\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1698203196710\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-gray-100\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-gray-400\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-white rounded-full border border-gray-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-gray-100 rounded-xl border border-gray-200 shadow overflow-hidden w-[20rem]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-white w-full p-2 border-b border-gray-200\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"show = false\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[24rem] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-white border-gray-200 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-black/60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div class=\"text-xs text-black/30 px-2 py-1\">\n                                {{ message.timestamp | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-white border-gray-200 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute bottom-16 right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-slate-400 border border-slate-600\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex items-center bg-white focus-within:outline outline-blue-500 border-t border-gray-200\"\n                >\n                    <input\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none\"\n                        [(ngModel)]=\"message\"\n                        (keyup.enter)=\"sendMessage()\"\n                    />\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, currentUser, log, randomString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(\n                id\n            )}?bearer_token=${encodeURIComponent(token())}`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        this._chat_messages.next([\n            ...this._chat_messages.getValue(),\n            {\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                timestamp: Date.now(),\n            },\n        ]);\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-gray-300 divide-y divide-gray-300 dark:border-neutral-500 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-black/5 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 divide-x divide-gray-300\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : `${hours} hour${hours === 1 ? '' : 's'}`;\n        } else if (diff < 30 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'dd MMM yyyy');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-white rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-gray-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary dark:bg-neutral-800 dark:text-white\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        this.loading = true;\n        await this.initMapView();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n            this.loading = false;\n        }\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name === e.buildingInfo.name;\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e) => {\n            const found_level_id = this.levels_list.find(\n                (level) => level.id === e\n            );\n            this._state.setLevel(found_level_id);\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"absolute inset-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-1 rounded-2xl text-white pl-1 pr-2 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-pending]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'question_mark'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime, set } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, organiser } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((space, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(\n                            result.id,\n                            spaces.length\n                                ? {\n                                      calendar:\n                                          this.form.value.host ||\n                                          currentUser()?.email,\n                                      system_id: spaces[0].id,\n                                  }\n                                : {}\n                        ).toPromise();\n                        notifyError('Unable to book the selected assets.');\n                        this._loading.next('');\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(data.event_end * 1000, this.date) ||\n            30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60, this.duration);\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? addMinutes(date, 24 * 60)\n            : addMinutes(date, this.duration);\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => !events.find((e) => e.asset_id === _.id))\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { set } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\">Groups:</label>\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\">Minimum Booking Length:</label>\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\">Maximum Booking Length:</label>\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\">Start Day is before:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\">Start Day is after:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\">Start Time Must Be Between:</label>\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[1],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">Resources:</label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef, OnChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-gray-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-blue-600]=\"day.id !== active_date\"\n                    [class.hover:bg-opacity-20]=\"day.id !== active_date\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-white]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.dark:text-white]=\"day.id !== active_date\"\n                    [class.dark:text-opacity-30]=\"!day.is_month\"\n                    [class.bg-primary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-primary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-black/30 hover:border-black rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-white px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-red-600 text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}