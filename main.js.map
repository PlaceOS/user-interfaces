{"version":3,"sources":["./apps/visitor-kiosk/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./apps/visitor-kiosk/src/app/ui/shared.module.ts","./apps/visitor-kiosk/src/app/ui/take-photo/take-photo.component.ts","./apps/visitor-kiosk/src/app/ui/topbar-header.component.ts","./libs/components/src/lib/app.component.ts","./apps/visitor-kiosk/src/app/bootstrap/bootstrap.component.html","./apps/visitor-kiosk/src/app/bootstrap/bootstrap.component.ts","./apps/visitor-kiosk/src/app/welcome.component.ts","./apps/visitor-kiosk/src/app/app-routing.module.ts","./apps/visitor-kiosk/src/app/overlays/overlays.module.ts","./apps/visitor-kiosk/src/app/app.module.ts","./apps/visitor-kiosk/src/environments/environment.ts","./apps/visitor-kiosk/src/main.ts","./libs/common/src/lib/hotkeys.service.ts","./apps/visitor-kiosk/src/environments/settings.ts","./libs/common/src/lib/settings.service.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/base.class.ts","./libs/common/src/lib/general.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/helpers.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.utilities.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","MATERIAL_MODULES","CDK_MODULES","SharedContentModule","TakePhotoComponent","photoAccepted","hasPhoto","canvasContext","constraints","audio","video","width","min","max","height","imgSrc","setTimeout","this","getCanvasContext","stopCapture","canvas","console","log","document","getElementById","startCapture","navigator","mediaDevices","getUserMedia","stream","srcObject","getVideoTracks","forEach","track","stop","getContext","drawImage","clearRect","toDataURL","emit","err","error","cancelPhoto","TopbarHeaderComponent","format","AppComponent","_tracing","_settings","_org","_spaces","_cache","_snackbar","_hotkey","_clipboard","super","listen","localStorage","setItem","getItem","location","reload","copy","clipboard","readText","tkn","parts","split","addHours","Date","valueOf","initialised","pipe","first","_","toPromise","get","settings","mock","origin","includes","catch","onInitError","timeout","clearTimeout","email","dsn","sample_rate","S","integrations","tracingOrigins","routingInstrumentation","tracesSampleRate","initSentry","is_logged_in","BootstrapComponent","_route","_router","rotations","buildings","active_building","levelsForBuilding","active_level","locations","subscription","queryParamMap","subscribe","params","has","removeItem","checkBootstrap","orientations","key","hasOwnProperty","push","name","join","value","active_rotation","loading","active_location","navigate","building_id","level_id","checkForOldBootstrapParameters","orientation","routes","path","component","WelcomeComponent","route","level","paramMap","lvl","loadChildren","m","AppExploreModule","VisitorCheckinModule","redirectTo","AppRoutingModule","useHash","SharedOverlaysModule","AppModule","provide","useValue","showDialog","deps","enabled","bootstrapModule","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","window","addEventListener","event","mapKey","toLowerCase","last_down","BehaviorSubject","asObservable","next","indexOf","preventDefault","combo","combination","Array","map","i","length","validCombination","last_key","updateCombinationEndList","count","presses","state","getValue","reduce","a","v","replace","non_meta","DEFAULT_SETTINGS","debug","composer","domain","protocol","port","use_domain","local_login","app","title","description","short_name","logo_light","type","src","logo_dark","general","menu","items","children","copyright","position","checkin","stages","home","background","tiles","icon","class","content","help","link","columns","booking","booking_types","display","show_fields","html_body","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","colors","can_select_building","show_legend_group_names","legend","Spaces","Desks","Zones","Icons","SettingsService","_title","_app_name","_overrides","_subjects","_observables","now","time","built","isSameDay","init","getTitle","setTitle","pathname","slice","toUpperCase","_initialised","application","override_settings","override","opacity","_service","_available","_activated","_timer","setNotifyOutlet","snackbar","notify","message","action","on_action","config","snackbar_ref","open","panelClass","duration","dismiss","onAction","notifySuccess","msg","notifyError","notifyInfo","info","setupCache","cache","interval","isEnabled","unsubscribe","clearInterval","available","current","hash","activateUpdate","activated","setInterval","checkForUpdate","setupPlace","host","hostname","url","href","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","_current_user","current_user","currentUser","jest","delay","retry","user","toQueryString","str","BaseClass","_timers","_intervals","_subscriptions","destroy","unsub","fn","Function","contains","subs","Object","filter","k","setAppName","args","force","app_name","getItemWithKeys","shift","unique","array","el","pos","arr","find","randomInt","ceil","floor","Math","random","openConfirmModal","data","dialog","ref","race","componentInstance","reason","afterClosed","s","close","csvToJson","csv","delimiter","objPattern","RegExp","arrMatches","arrData","exec","headers","splice","row","element","JSON","parse","downloadFile","filename","contents","createElement","setAttribute","encodeURIComponent","style","body","appendChild","click","removeChild","flatten","an_array","stack","res","pop","isArray","reverse","timeFormatString","localeString","toLocaleTimeString","querySelector","getAttribute","language","is24HourTime","getInvalidFields","form","invalid","controls","valid","h","imul","charCodeAt","xmur3","seed","ActionIconComponent","className","PopoutMenuComponent","actions","show","MapPinComponent","_details","fill","stroke","show_message","MapRadiusComponent","_el","zoom","radius","last_seen","formatDistanceToNow","updateRadius","box","nativeElement","getBoundingClientRect","StatusOverlayComponent","links","MAT_MODULES","ComponentsModule","CONFIRM_METADATA","maxHeight","maxWidth","ConfirmModalComponent","_dialog_ref","_data","confirm_text","cancel_text","disableClose","enableClose","injector","CustomTooltipData","d","CustomTooltipComponent","_element","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onEnter","onLeave","changes","_updateInjector","x_pos","y_pos","ngOnDestroy","_updateType","_portal","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","providers","parent","GlobalLoadingComponent","IconComponent","MAP_FEATURE_DATA","InteractiveMapComponent","center","x","y","injectors","_on_changes","updateDisplay","features","f","idx","_feature_list","toArray","viewer","createView","focus","focusOn","styles","labels","updateView","feature_list","options","desired_zoom","desired_center","_outlet_el","rect","mappings","w","MapPolygonComponent","_cdr","color","padding","scale","offset_x","offset_y","points","point_list","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ratio","edge_padding","detectChanges","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","SecurityContext","SanitizePipe","sanitize","RESOURCE_URL","URL","SCRIPT","STYLE","HTML","UserAvatarComponent","DEFAULT_KEYS","VirtualKeyboardComponent","keyset","onFocus","onBlur","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","focusInput","selectionEnd","CateringItem","category","unit_price","quantity","discount_cap","accept_points","tags","total_cost","c","options_string","sort","b","localeCompare","CateringOrder","system_id","event_id","item_count","amount","item","charge_code","status","invoice_number","deliver_at","date","getTime","_default_user","setDefaultCreator","CalendarEvent","event_start","getUnixTime","roundToNearestMinutes","addMinutes","nearestTo","event_end","calendar","creator","attendees","resource","u","resources","private","all_day","differenceInMinutes","timezone","recurring","recurring_master_id","organiser","master","recurrence","start","range_start","end","range_end","pattern","days_of_week","system","old_system","attachments","extension_data","is_external","catering","obj","set","hours","breakdown","isBefore","add","minutes","is_today","isAfter","eventStatus","details","every","response_status","some","DURATION_MAP","month","months","week","weeks","day","days","hour","minute","DEFAULT_RULES","auto_approve","hidden","stringToMinutes","addToDate","filterSpacesFromRules","spaces","rulemap","space","zone","zones","ruleset","checkRulesMatch","rules","rulesForSpace","matches","conditions","groups","is_before","is_after","min_length","max_length","Desk","toJSON","map_id","bookable","qr_code","BuildingLevel","parent_id","display_name","capacity","number","Organisation","raw_data","bindings","Building","disc_info","discovery_info","zone_id","extras","extra_id","extra_name","loan_items","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","_location","longitude","latitude","room_configurations","attributes","searchables","neighbourhoods","lvl_features","feature","catering_hours","visitor_space","holding_bay","address","booking_details","booking_rules","catering_restricted_from","currency","OrganisationService","_buildings","_active_building","_levels","building_list","level_list","active_levels","combineLatest","bld","_building_settings","overrides","buildingSettings","bld_id","building","_organisation","id_list","tries","load","orgs","loadOrganisation","loadBuildings","loadLevels","loadSettings","org_list","auth","org","list","org_zone","limit","prev","curr","concat","Space","support_url","image","configurations","availability","SpacesService","_list","_compare","loadSpaces","predicate","valid_spaces","organisation","sys","levelWithID","NewUserModalComponent","markAllAsTouched","new_user","metadata","UserFormComponent","touched","SharedUsersModule","MapLocation","map_width","map_height","variance","at_location","coordinates_from","GUEST_ENDPOINT","searchGuests","q","query","showGuest","listGuestMeetings","STAFF_ENDPOINT","searchStaff","showStaff","User","first_name","last_name","phone","notes","photo","username","organizer","checked_in","required","sys_admin","support","assistance_required","endsWith","visit_expected","GuestUser","preferred_beverage","accepted_terms_conditions","StaffUser","card_number","staff_id","USER_DOMAIN","setInternalUserDomain","generateUserForm","fields","generateGuestForm"],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8174;\nmodule.exports = webpackEmptyAsyncContext;","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { TopbarHeaderComponent } from './topbar-header.component';\nimport { FooterMenuComponent } from './footer-menu/footer-menu.component';\n\nimport { UserFormComponent } from './forms/user-form/user-form.component';\nimport { BookingFormComponent } from './forms/booking-form/booking-form.component';\n\nimport { MapControlsComponent } from './map-controls/map-controls.component';\nimport { TakePhotoComponent } from './take-photo/take-photo.component';\nimport { ComponentsModule } from '@placeos/components';\n\nconst COMPONENTS: Type<any>[] = [\n    TopbarHeaderComponent,\n    FooterMenuComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    TakePhotoComponent\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatRadioModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        RouterModule,\n        EditorModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        ComponentsModule,\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import {\n    Component,\n    OnInit,\n    HostBinding,\n    OnDestroy,\n    Output,\n    EventEmitter,\n} from '@angular/core';\n\n@Component({\n    selector: 'a-take-photo',\n    template: `\n        <div name=\"camera\" class=\"flex flex-col items-center justify-center rounded overflow-hidden relative\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n            <div class=\"text\">Please wait...</div>\n            <video\n                id=\"video\"\n                #video\n                autoplay\n                width=\"360\"\n                height=\"400\"\n                class=\"absolute inset-0\"\n            ></video>\n            <canvas\n                id=\"canvas\"\n                #canvas\n                class=\"absolute inset-0\"\n                width=\"360\"\n                height=\"400\"\n            ></canvas>\n        </div>\n        <div class=\"flex items-center justify-center mt-4 space-x-2\">\n            <button class=\"take-photo\" *ngIf=\"!hasPhoto; else accept_state\" mat-button (click)=\"takePhoto()\">\n                Take Photo\n            </button>\n        </div>\n        <ng-template #accept_state>\n            <button class=\"inverse\" mat-button (click)=\"cancelPhoto()\">\n                Cancel\n            </button>\n            <button mat-button (click)=\"acceptPhoto()\">\n                Accept\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n            }\n\n            [name=\"camera\"] {\n                width: 22.5rem;\n                height: 25rem;\n            }\n\n            button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class TakePhotoComponent implements OnInit, OnDestroy {\n    @Output() public photoAccepted = new EventEmitter();\n    @HostBinding('class.has-photo') public hasPhoto = false;\n    public video: any;\n    public canvas: any;\n    private canvasContext = null;\n\n    private constraints = {\n        audio: false,\n        video: {\n            width: { min: 360, max: 360 },\n            height: { min: 400, max: 400 },\n        },\n    };\n\n    public imgSrc = null;\n\n    constructor() {}\n\n    public ngOnInit() {\n        setTimeout(() => this.getCanvasContext(), 500);\n    }\n\n    public ngOnDestroy() {\n        this.stopCapture();\n        this.video = null;\n        this.canvasContext = null;\n        this.canvas = null;\n        this.imgSrc = null;\n    }\n\n    private startCapture() {\n        this.imgSrc = null;\n        console.log('TakePhotoComponent::startCapture');\n        this.video = document.getElementById('video') as any;\n        if (!this.video) {\n            return setTimeout(() => this.startCapture(), 200);\n        } else {\n            navigator.mediaDevices\n                .getUserMedia(this.constraints)\n                .then((stream) => {\n                    this.video.srcObject = stream;\n                });\n        }\n    }\n\n    private stopCapture() {\n        console.log('TakePhotoComponent::stopCapture');\n        if (this.video && this.video.srcObject) {\n            this.video.srcObject\n                .getVideoTracks()\n                .forEach((track) => track.stop());\n        }\n    }\n\n    private getCanvasContext() {\n        console.log('TakePhotoComponent::getCanvasContext');\n        this.canvas = document.getElementById('canvas') as any;\n        if (!this.canvas) {\n            return setTimeout(() => this.getCanvasContext(), 200);\n        }\n        this.canvasContext = this.canvas.getContext('2d');\n        setTimeout(() => this.startCapture(), 200);\n    }\n\n    public takePhoto() {\n        console.log('TakePhotoComponent::takePhoto');\n        this.canvasContext.drawImage(\n            this.video,\n            0,\n            0,\n            this.canvas.width,\n            this.canvas.height\n        );\n        this.hasPhoto = true;\n        this.stopCapture();\n    }\n\n    public cancelPhoto() {\n        console.log('TakePhotoComponent::cancelPhoto');\n        this.canvasContext.clearRect(\n            0,\n            0,\n            this.canvas.width,\n            this.canvas.height\n        );\n        this.hasPhoto = false;\n        this.startCapture();\n    }\n\n    public acceptPhoto() {\n        try {\n            this.imgSrc = this.canvas.toDataURL('image/jpeg', 0.75);\n            this.photoAccepted.emit(this.imgSrc);\n            console.log('TakePhotoComponent::acceptPhoto Success');\n        } catch (err) {\n            console.error(\n                'TakePhotoComponent::acceptPhoto Error converting image',\n                err\n            );\n            this.photoAccepted.emit(null);\n            this.cancelPhoto();\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    template: `\n        <div class=\"flex items-center bg-gray-900 shadow\">\n            <a\n                mat-button\n                [routerLink]=\"['/home']\"\n                class=\"h-full flex flex-col justify-center bg-black px-4\"\n            >\n                <img class=\"h-10 my-2\" src=\"assets/logo-dark.svg\" />\n            </a>\n            <div\n                class=\"ml-auto h-full flex flex-col justify-center text-white px-4\"\n            >\n                {{ time }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 3.5rem;\n            }\n\n            a {\n                border-radius: 0;\n            }\n\n            img {\n                max-height: 2.5rem;\n                max-width: 50vw;\n            }\n        `,\n    ],\n})\nexport class TopbarHeaderComponent extends BaseClass {\n    public get time() {\n        return dayjs().format('dddd h:mmA');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Integrations } from '@sentry/tracing';\nimport { first } from 'rxjs/operators';\nimport {\n    clientId,\n    invalidateToken,\n    isMock,\n    refreshToken,\n    token,\n} from '@placeos/ts-client';\n\nimport {\n    BaseClass,\n    current_user,\n    currentUser,\n    HotkeysService,\n    notifySuccess,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\nimport { addHours } from 'date-fns';\n\nimport * as Sentry from '@sentry/angular';\nimport * as MOCKS from '@placeos/mocks';\n\nexport function initSentry(dsn: string, sample_rate: number = 0.2) {\n    if (!dsn) return;\n    Sentry.init({\n        dsn,\n        integrations: [\n            new Integrations.BrowserTracing({\n                tracingOrigins: ['localhost', location.origin],\n                routingInstrumentation: Sentry.routingInstrumentation,\n            }),\n        ],\n        tracesSampleRate: sample_rate,\n    });\n}\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    constructor(\n        private _tracing: Sentry.TraceService,\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _spaces: SpacesService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem(\n                'mock',\n                `${localStorage.getItem('mock') !== 'true'}`\n            );\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(`${token()}|${refreshToken()}`);\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard?.readText().then((tkn) => {\n                const parts = tkn.split('|');\n                const id = clientId();\n                localStorage.setItem(`${id}_access_token`, `${parts[0]}`);\n                localStorage.setItem(`${id}_refresh_token`, `${parts[1]}`);\n                localStorage.setItem(\n                    `${id}_expires_at`,\n                    `${addHours(new Date(), 6).valueOf()}`\n                );\n                notifySuccess('Successfully pasted token.');\n                setTimeout(() => location.reload(), 2000);\n            });\n        });\n        setNotifyOutlet(this._snackbar);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch(() => this.onInitError());\n        setupCache(this._cache);\n        this.timeout('wait_for_user', () => this.onInitError(), 15 * 1000);\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                currentUser()?.email?.split('@')[1]\n        );\n        initSentry(this._settings.get('app.sentry_dsn'));\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        console.error('Error initialising user.');\n        invalidateToken();\n        location.reload();\n    }\n}\n","\n    <div class=\"details\">\n        <header>\n            Visitor Kiosk Setup\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div class=\"field\" *ngIf=\"buildings && buildings.length\">\n                <label>Please select a building from the dropdown below</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"updateRotations()\"\n                        placeholder=\"Select building\"\n                    >\n                        <mat-option *ngFor=\"let option of buildings\" [value]=\"option\">\n                            {{ option.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"levels && levels.length\">\n                <label>Please select a level from the dropdown below</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select #select [(value)]=\"active_level\" placeholder=\"Select level\">\n                        <mat-option *ngFor=\"let option of levels\" [value]=\"option\">\n                            {{ option.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"rotations && rotations.length\">\n                <label>Please select an orientation from the dropdown below</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_rotation\"\n                        placeholder=\"Select orientation\"\n                    >\n                        <mat-option *ngFor=\"let option of rotations\" [value]=\"option\">\n                            {{ option.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"locations && locations.length\">\n                <label>Please select an fixed location from the dropdown below</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select #select [(value)]=\"active_location\" placeholder=\"Select location\">\n                        <mat-option *ngFor=\"let option of locations\" [value]=\"option\">\n                            {{ option.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer *ngIf=\"!loading\">\n            <button\n                mat-button\n                [disabled]=\"!active_building && !active_level\"\n                (click)=\"bootstrapKiosk()\"\n            >\n                Finish Setup\n            </button>\n        </footer>\n    </div>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"64\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BaseClass, Identity } from '@placeos/common';\nimport { Building, BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: '[bootstrap]',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss'],\n})\nexport class BootstrapComponent extends BaseClass implements OnInit {\n    /** Loading state of the bootstrap */\n    public loading: string;\n    /** Actively selected building */\n    public active_building: Building;\n    /** Actively selected level */\n    public active_level: BuildingLevel;\n    /** Actively selected level */\n    public active_rotation: Identity;\n    /** Actively selected location */\n    public active_location: Identity;\n\n    public rotations: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** List of available levels */\n    public get levels(): readonly BuildingLevel[] {\n        if (!this.active_building) {\n            return [];\n        }\n        return this._org.levelsForBuilding(this.active_building) || [];\n    }\n\n    /** List of available locations */\n    public get locations(): readonly Identity[] {\n        if (!this.active_level) {\n            return [];\n        }\n        return this.active_level.locations || [];\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('clear') && params.get('clear') === 'true') {\n                    localStorage.removeItem('KIOSK.building');\n                    localStorage.removeItem('KIOSK.level');\n                    localStorage.removeItem('KIOSK.orientation');\n                }\n            })\n        );\n        this.timeout('check', () => this.checkBootstrap(), 1000);\n    }\n\n    public updateRotations() {\n        const orientations = this.active_building.orientations;\n        const rotations: Identity[] = [];\n        for (const key in orientations) {\n            if (orientations.hasOwnProperty(key)) {\n                rotations.push({\n                    id: key,\n                    name: `${key.split('_').join(' ')} (${orientations[key] * 90}°)`,\n                    value: orientations[key],\n                });\n            }\n        }\n        this.rotations = rotations;\n        this.active_rotation = this.rotations[0];\n    }\n\n    /**\n     * Store bootstrapped values and navigate to the main page\n     */\n    public bootstrapKiosk() {\n        this.loading = 'Bootstrapping application...';\n        if (this.active_building && this.active_level) {\n            if (localStorage) {\n                localStorage.setItem('KIOSK.building', this.active_building.id);\n                localStorage.setItem('KIOSK.level', this.active_level.id);\n                if (this.active_rotation) {\n                    localStorage.setItem('KIOSK.orientation', this.active_rotation.value);\n                }\n                if (this.active_location) {\n                    localStorage.setItem('KIOSK.location', `${this.active_location.id}`);\n                }\n            }\n            this._router.navigate(['/welcome']);\n        }\n        this.loading = null;\n    }\n\n    /**\n     * Check for any existing bootstrapped values\n     */\n    private checkBootstrap() {\n        this.loading = 'Checking for existing parameters...';\n        if (localStorage) {\n            const building_id = localStorage.getItem('KIOSK.building');\n            const level_id = localStorage.getItem('KIOSK.level');\n            if (building_id && level_id) {\n                this._router.navigate(['/welcome']);\n            } else {\n                this.checkForOldBootstrapParameters();\n            }\n        }\n        this.loading = null;\n    }\n\n    private checkForOldBootstrapParameters() {\n        const building_id = localStorage.getItem('KIOSK.bld');\n        const level_id = localStorage.getItem('KIOSK.lvl');\n        const orientation = localStorage.getItem('map_orientation');\n        if (orientation) {\n            switch (orientation) {\n                case 'portrait':\n                    localStorage.setItem('KIOSK.orientation', `1`);\n                    break;\n                case 'landscape_reverse':\n                    localStorage.setItem('KIOSK.orientation', `2`);\n                    break;\n                case 'portrait_reverse':\n                    localStorage.setItem('KIOSK.orientation', `3`);\n                    break;\n            }\n        }\n        if (building_id && level_id) {\n            localStorage.setItem('KIOSK.building', building_id);\n            localStorage.setItem('KIOSK.level', level_id);\n            this._router.navigate(['/welcome']);\n        }\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'app-welcome',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-transparent z-50 flex flex-col items-center justify-center bg-center bg-cover\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <a-topbar-header class=\"w-full\"></a-topbar-header>\n            <div\n                class=\"flex flex-col flex-1 w-full items-center justify-center text-white bg-black bg-opacity-50 space-y-4\"\n            >\n                <h3 class=\"text-2xl\">Welcome to PlaceOS Self Service Kiosk</h3>\n                <a\n                    matRipple\n                    [routerLink]=\"['/checkin']\"\n                    class=\"text-xl py-2 px-8 mt-4 border-2 border-white text-white w-40 whitespace-nowrap flex items-center justify-center\"\n                >\n                    Check In\n                </a>\n                <a\n                    *ngIf=\"level\"\n                    matRipple\n                    [routerLink]=\"['/explore', level]\"\n                    class=\"text-xl py-2 px-8 mt-4 border-2 border-white text-white w-40 whitespace-nowrap flex items-center justify-center\"\n                >\n                    Explore\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [`\n        a {\n            height: 3.5rem;\n            background-color: rgba(255,255,255, .25);\n        }\n    `],\n})\nexport class WelcomeComponent extends BaseClass implements OnInit, OnDestroy {\n    /** Level to initially load on explore */\n    public level: string = '';\n\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this.route.paramMap.subscribe((params) => {\n                if (params.has('level')) {\n                    this.level = params.get('level');\n                }\n            })\n        );\n        this.subscription(\n            'level',\n            this._settings\n                .listen('KIOSK.level')\n                .subscribe((lvl) => (this.level = lvl))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BootstrapComponent } from './bootstrap/bootstrap.component';\nimport { WelcomeComponent } from './welcome.component';\n\nconst routes: Routes = [\n    { path: 'bootstrap', component: BootstrapComponent },\n    { path: 'welcome', component: WelcomeComponent },\n    {\n        path: 'explore',\n        loadChildren: () => import('./explore/explore.module').then((m) => m.AppExploreModule),\n    },\n    {\n        path: 'checkin',\n        loadChildren: () => import('./checkin/checkin.module').then((m) => m.VisitorCheckinModule),\n    },\n    { path: '**', redirectTo: 'bootstrap' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../ui/shared.module';\n\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal/explore-booking-modal.component';\nimport { SharedUsersModule } from '@placeos/users';\n\nconst OVERLAYS: Type<any>[] = [\n    ViewRoomModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedUsersModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppComponent } from '../../../../libs/components/src/lib/app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './ui/shared.module';\nimport { BootstrapComponent } from './bootstrap/bootstrap.component';\nimport { WelcomeComponent } from './welcome.component';\nimport { environment } from '../environments/environment';\n\nimport * as Sentry from '@sentry/angular';\n@NgModule({\n    declarations: [AppComponent, BootstrapComponent, WelcomeComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n        HttpClientModule,\n        FormsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useValue: Sentry.createErrorHandler({\n                showDialog: false,\n            }),\n        },\n        {\n            provide: Sentry.TraceService,\n            deps: [Router],\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced durinx build by using the `fileReplacements` array.\n// `nx build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","\n\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [\n            {\n                name: 'Home',\n                route: '/home',\n            },\n            {\n                name: 'Booking',\n                route: '/book',\n                children: [\n                    {\n                        name: 'Spaces',\n                        route: '/book/spaces',\n                    },\n                    {\n                        name: 'Desks',\n                        route: '/book/desks',\n                    },\n                ],\n            },\n            {\n                name: 'Explore',\n                route: '/explore',\n                children: [\n                    {\n                        name: 'People',\n                        route: '/explore/people',\n                    },\n                    {\n                        name: 'Spaces',\n                        route: '/explore/spaces',\n                    },\n                ],\n            },\n            {\n                name: 'Help',\n                route: '/help',\n            },\n            {\n                name: 'Schedule',\n                route: '/schedule',\n            },\n            {\n                name: 'Control',\n                route: '/control',\n            },\n            {\n                name: 'Directory',\n                route: '/directory',\n            },\n        ],\n        copyright: 'Place Technology',\n        position: 'left',\n    },\n    checkin: {\n        stages: [\n            'qrcode',\n            'details',\n            // 'photo',\n            // 'visitor-pass',\n            'result',\n            'preferences',\n            'final',\n        ],\n    },\n} as any;\n\n/**\n * HOME PAGE SETTINGS\n */\nconst home = {\n    background: 'assets/img/skyline.jpg',\n    tiles: [\n        {\n            name: 'Booking',\n            route: '/book/spaces',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'event',\n            },\n        },\n        {\n            name: 'Desks',\n            route: '/book/desks',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'pin_drop',\n            },\n        },\n        {\n            name: 'Explore',\n            route: '/explore',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'map',\n            },\n        },\n        {\n            name: 'Help',\n            route: '/help',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'help_outline',\n            },\n        },\n        {\n            name: 'Schedule',\n            route: '/schedule',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'today',\n            },\n        },\n        {\n            name: 'Control',\n            route: '/control',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'settings_remote',\n            },\n        },\n        {\n            name: 'Directory',\n            route: '/directory',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'search',\n            },\n        },\n    ],\n};\n\n/**\n * HELP/SUPPORT SETTINGS\n */\n\nconst help = {\n    tiles: [\n        {\n            name: 'About Engine',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact Place',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n\n/**\n * BOOKING FLOW SETTINGS\n */\n\nconst booking = {\n    booking_types: [\n        { display: 'Internal', value: 'internal' },\n        { display: 'Client', value: 'client' },\n        { display: 'External', value: 'external' },\n        { display: 'Setup', value: 'setup' },\n        { display: 'Training', value: 'training' },\n        { display: 'Interview', value: 'interview' },\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n    ],\n    html_body: true,\n    multiple_spaces: false,\n    desk_start: 9,\n};\n\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\n\nconst space_display = {\n    show_images: false,\n};\n\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\n\nconst directory = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\n\nconst explore = {\n    colors: {\n        'space-available': '#43a047',\n        'space-requestable': '#ffb300',\n        'space-unavailable': '#e53935',\n        'space-not-bookable': '#ccc',\n\n        'desk-available': '#43a047',\n        'desk-available-stroke': '#1b5e20',\n        'desk-unavailable': '#e53935',\n        'desk-unavailable-stroke': '#b71c1c',\n        'desk-reserved': '#ffb300',\n        'desk-reserved-stroke': '#ff6f00',\n        'desk-not-bookable': '#fff',\n        'desk-not-bookable-stroke': '#ccc',\n\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: false,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-available', name: 'Space Available' },\n            { key: 'space-requestable', name: 'Space available by request' },\n            { key: 'space-unavailable', name: 'Space in use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n        ],\n        Desks: [\n            { key: 'desk-available', name: 'Desk Available' },\n            { key: 'desk-reserved', name: 'Desk Reserved' },\n            { key: 'desk-unavailable', name: 'Desk in use' },\n            { key: 'desk-not-bookable', name: 'Desk not bookable' },\n        ],\n        Zones: [\n            { key: 'zone-low', name: 'Low Zone Utilisation' },\n            { key: 'zone-medium', name: 'Medium Zone Utilisation' },\n            { key: 'zone-high', name: 'High Zone Utilisation' },\n        ],\n        Icons: [\n            {\n                key: 'icon-bin',\n                name: 'Bin',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n            },\n        ],\n    },\n};\n\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    name: 'VisitorKiosk',\n    title: 'Visitor Kiosk',\n    description: 'Kiosk UI written with Angular Framework',\n    short_name: 'KIOSK',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg'\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg'\n    },\n    general,\n    home,\n    help,\n    booking,\n    space_display,\n    directory,\n    explore\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/visitor-kiosk',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n    mock: false,\n};\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.slice(1).split('/').join('-') || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"076ff52\",\n    \"hash\": \"076ff52\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"076ff52\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1628043839515\n};\n/* tslint:enable */\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        throw new Error(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.debug(msg);\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.error(msg);\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { Subscription } from 'rxjs';\nimport { notifyInfo } from './notifications';\n\nlet _available: Subscription;\nlet _activated: Subscription;\nlet _timer: number;\n\nexport type Notification = (message: string, callback: () => void) => void;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    notify: Notification = () => null,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_available) _available.unsubscribe();\n        if (_activated) _activated.unsubscribe();\n        if (_timer) clearInterval(_timer);\n        _available = cache.available.subscribe((event) => {\n            const current = `current version is ${event.current.hash}`;\n            const available = `available version is ${event.available.hash}`;\n            log('CACHE', `Update available: ${current} ${available}`);\n            activateUpdate(cache);\n        });\n        _activated = cache.activated.subscribe(() => {\n            log('CACHE', `Updates activated. Reloading...`);\n            notify('Newer version of the application is available', () =>\n                location.reload(true)\n            );\n        });\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            cache.checkForUpdate();\n        }, interval);\n    }\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nfunction activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled) {\n        log('CACHE', `Activating changes to the cache...`);\n        cache.activateUpdate().then(() => {\n            notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                location.reload(true)\n            );\n        });\n    }\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    console.log(\n        'Mock:',\n        settings.mock,\n        location.href.includes('mock=true'),\n        localStorage.getItem('mock') === 'true'\n    );\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue();\n}\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseClass implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | (() => void);\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map && map[key] != null) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n) {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = headers[i].split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]);\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n        }\n        return element;\n    });\n    return elements;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys.map((key) => JSON.stringify(item[key])).join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup) {\n    const invalid = [];\n    for (const key in form.controls) {\n        if (!form.controls[key].valid) {\n            invalid.push(key);\n        }\n    }\n    return invalid;\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            mat-icon-button\n            class=\"relative flex items-center justify-center h-8 w-8\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                name=\"message\"\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [name='message'] {\n                transform: translate(-50%, -120%);\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        mat-button\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\n\nexport * from './action-icon.component';\nexport * from './binding.directive';\nexport * from './confirm-modal.component';\nexport * from './icon.component';\nexport * from './login.component';\nexport * from './popout-menu.component';\nexport * from './unauthorised.component';\nexport * from './user-avatar.component';\nexport * from './interactive-map.component';\nexport * from './map-pin.component';\nexport * from './map-radius.component';\nexport * from './misconfigured.component';\nexport * from './status-overlay.component';\nexport * from './custom-table.component';\nexport * from './custom-tooltip.component';\nexport * from './fixed.pipe';\nexport * from './safe.pipe';\nexport * from './sanitise.pipe';\nexport * from './virtual-keyboard.component';\nexport * from './global-loading.component';\n\nexport * from './authorised-admin.guard';\nexport * from './authorised-user.guard';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, ...MAT_MODULES],\n    providers: [\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n    ],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button mat-button name=\"accept\" class=\"w-32\" (click)=\"onConfirm()\">\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends BaseClass\n    implements OnChanges, OnDestroy {\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this._updateType();\n        if (this._overlay_ref) this.close();\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            hasBackdrop: !!this.backdrop,\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withPositions([\n                    {\n                        originX: this.x_pos || 'end',\n                        originY:\n                            (this.y_pos === 'top'\n                                ? 'bottom'\n                                : this.y_pos == 'bottom'\n                                ? 'top'\n                                : this.y_pos) || 'bottom',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'top',\n                    },\n                ]),\n        });\n        this._overlay_ref.attach(this._portal);\n        if (this.backdrop) {\n            this.subscription(\n                'backdrop',\n                this._overlay_ref.backdropClick().subscribe(() => this.close())\n            );\n        }\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"loading\"\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > div {\n                z-index: 9999;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent implements OnInit {\n    public loading: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        setTimeout(() => (this.loading = false), 300);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"app-icon\">\n            <i *ngIf=\"!icon || icon.type !== 'img'\" [class]=\"icon?.class || className\">\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img *ngIf=\"icon && icon.type === 'img'\" [src]=\"icon.src | safe: 'resource'\" />\n        </div>\n    `,\n    styles: [\n        `\n            .app-icon {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 1.25em;\n                width: 1.25em;\n            }\n\n            i {\n                font-size: 1em;\n            }\n\n            img {\n                height: 1em;\n                width: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken('Data for Map Features');\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\"></div>\n        <mat-spinner\n            *ngIf=\"!viewer || loading\"\n            class=\"absolute\"\n            [diameter]=\"48\"\n        ></mat-spinner>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: element?.location\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends BaseClass\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy {\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    public get feature_list() {\n        return (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (changes.features) {\n            this.injectors = (this.features || []).map((f: any) =>\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                ...f.data,\n                                zoom: this._on_changes.pipe(map((_) => _.zoom)),\n                                position: this._on_changes.pipe(\n                                    map((_) => _.center)\n                                ),\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n            );\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView(), 100);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                removeViewer(this.viewer);\n            }\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) =>\n                    this._on_changes.next(v)\n                )\n            );\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () => this.createView());\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 2),\n        };\n        this.updateDisplay();\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { BaseClass, HashMap } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div polygon class=\"absolute w-full h-full center\">\n            <svg\n                [attr.viewBox]=\"\n                    '0 0 ' + width + padding + ' ' + height + padding\n                \"\n                [style.width]=\"width * (100 / scale) + '%'\"\n                [style.height]=\"height * (100 / scale) + '%'\"\n                class=\"center top-1/2 left-1/2\"\n            >\n                <polygon\n                    [attr.points]=\"points\"\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                />\n                <circle\n                    *ngFor=\"let point of point_list\"\n                    [attr.cx]=\"point[0] || 0\"\n                    [attr.cy]=\"point[1] || 0\"\n                    [attr.r]=\"4\"\n                    [style.stroke]=\"'#000'\"\n                    [style.fill]=\"'#fffd'\"\n                />\n            </svg>\n            <div\n                text\n                class=\"center top-1/2 left-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n            >\n                {{ name }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            polygon {\n                stroke-width: 4;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n\n            .center {\n                position: absolute;\n                transform: translate(-50%, -50%);\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends BaseClass implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n\n    public padding = 32;\n\n    public scale = 8;\n\n    public offset_x = 0;\n    public offset_y = 0;\n    public width = 1;\n    public height = 1;\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: HashMap<number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        this.offset_x = diff.x_min * 100;\n        this.offset_y = diff.y_min * 100;\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        this.width = range.x * 100 * this.scale;\n        this.height = range.y * 100 * (this._details?.ratio || 1) * this.scale;\n        const edge_padding = this.padding / 2 + 8;\n        this.width = Math.floor(this.width * 100) / 100;\n        this.height = Math.floor(this.height * 100) / 100;\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        ((x - diff.x_min) / range.x) * this.width + edge_padding\n                    },${\n                        ((y - diff.y_min) / range.y) * this.height +\n                        edge_padding\n                    }`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            ((x - diff.x_min) / range.x) * this.width + edge_padding,\n            ((y - diff.y_min) / range.y) * this.height + edge_padding,\n        ]);\n        this.width = this.width + this.padding + 8;\n        this.height = this.height + this.padding + 8;\n        this._cdr.detectChanges();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from '../../../users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-black text-opacity-50 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: #ccc;\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const parts = this.user.name\n            .replace(/[()[\\]\\-+=\\\\/]+/gi, '')\n            .split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent extends BaseClass implements OnDestroy {\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n\n    public readonly options_string: string;\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.options = data.options || [];\n        this.tags = data.tags || [];\n        this.total_cost =\n            (this.unit_price +\n                this.options\n                    .map((i) => i.unit_price || 0)\n                    .reduce((c, a) => c + a, 0)) *\n            this.quantity;\n\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            new Date().getTime();\n    }\n}\n","import { HashMap, Identity, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Master event */\n    public master?: CalendarEvent;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees: HashMap = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => user.resource)\n                        .map((s) => new Space(s)),\n                'email'\n            ) || [];\n        this.title = data.title || '';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone = data.timezone || '';\n        this.location = data.location || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus(this) || 'none';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): HashMap {\n        const obj: HashMap = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(this.recurrence.end),\n            };\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(attendees, 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes, addSeconds,\n\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (details.resources.every((i) => i.response_status === 'accepted')) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: start.valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { PlaceZone } from '@placeos/ts-client';\n\nexport class Desk {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n    }\n\n    public format() {\n        const { id, name, bookable, groups } = this;\n        return {\n            id,\n            name,\n            bookable,\n            groups,\n        };\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","import { HashMap, Identity } from '@placeos/common';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** Settings overrides associated with the level */\n    public readonly settings: HashMap = {};\n    /** List of points of interest for the level */\n    public readonly locations: readonly Identity[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys, HashMap } from '@placeos/common';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: HashMap;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { HashMap, Identity, RoomConfiguration } from '@placeos/common';\nimport { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: HashMap;\n    locker_structure: HashMap;\n    roles: HashMap;\n    zone: string;\n    location: string;\n    neighbourhoods: HashMap;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n\n    public readonly orientations: HashMap<number>;\n    public readonly attributes: readonly Identity[];\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location ||\n            disc_info.location || { longitude: null, latitude: null };\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    HashMap,\n    notifyError,\n    RoomConfiguration,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: HashMap = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: HashMap<HashMap> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings(): HashMap {\n        return this._settings;\n    }\n\n    /** Mapping of builgins to settings overrides */\n    public get building_settings(): HashMap<HashMap> {\n        return this._building_settings;\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): HashMap {\n        if (!bld_id && this.building) {\n            bld_id = this.building.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._service.overrides = [\n            this._settings.details,\n            this.buildingSettings(bld.id).details,\n        ];\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadBuildings();\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: HashMap = (\n                await showMetadata(org.id, { name: 'bindings' }).toPromise()\n            )?.details;\n            const settings: HashMap = (\n                await showMetadata(org.id, { name: 'settings' }).toPromise()\n            )?.details;\n            this._settings = { ...this._settings, ...settings };\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const building_list = await queryZones({\n            tags: 'building',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) =>\n                    i.data.filter((_) => _.parent_id === this._organisation.id)\n                )\n            )\n            .toPromise();\n        if (!building_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: HashMap = (\n                await showMetadata(bld.id, { name: 'bindings' }).toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings }));\n        }\n        this._buildings.next(buildings);\n        const id = localStorage.getItem(`PLACEOS.building`);\n        if (id && this.buildings.find((bld) => bld.id === id)) {\n            this._active_building.next(\n                this.buildings.find((bld) => bld.id === id)\n            );\n        }\n        if (!this.building?.id && buildings?.length > 0) {\n            this.building = buildings[0];\n        }\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.get('app.name') || 'workplace'\n        ).toLowerCase()}_app`;\n        this._settings = await showMetadata(this._organisation.id, {\n            name: app_name,\n        }).toPromise();\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = await showMetadata(bld.id, {\n                name: app_name,\n            }).toPromise();\n        }\n        this._service.overrides = [\n            this._settings.details,\n            this.buildingSettings(this.building.id).details,\n        ];\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from '@placeos/organisation';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly image: string;\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.image = data.image || '';\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from './space.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.loadSpaces());\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    /**\n     * Find space with given id/email\n     * @param id ID/Email address associated with the space\n     */\n    public find(id: string) {\n        return this._list\n            .getValue()\n            .find((space) => space.id === id || space.email === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.organisation\">\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    Organisation<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"Organisation\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>Organisation is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.assistance_required\">\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.visit_expected\">\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n\n    public hasError(name: string) {\n        return (\n            this.form.controls[name].invalid && this.form.controls[name].touched\n        );\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\n\n@NgModule({\n    declarations: [NewUserModalComponent, UserFormComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        ComponentsModule,\n        MatCheckboxModule,\n    ],\n    exports: [NewUserModalComponent],\n})\nexport class SharedUsersModule {}\n","import { Point } from '@placeos/svg-viewer';\nimport { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | Point;\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new StaffUser(item)))\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.groups = data.groups || [];\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = 'place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser,\n    host: string = ''\n): FormGroup {\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n"],"sourceRoot":"webpack:///"}