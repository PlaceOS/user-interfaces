{"version":3,"sources":["./apps/booking-panel/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./libs/common/src/lib/base.class.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/hotkeys.service.ts","./apps/booking-panel/src/environments/settings.ts","./libs/common/src/lib/settings.service.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/angular-animations.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/user.class.ts","./libs/common/src/lib/user-state.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/components.module.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/events/src/lib/helpers.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/space.utilities.ts","./apps/booking-panel/src/app/bootstrap.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/utilities.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/users.module.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./apps/booking-panel/src/app/overlays/booking-modal.component.ts","./apps/booking-panel/src/app/overlays/embedded-control-modal.component.ts","./apps/booking-panel/src/app/panel-state.service.ts","./apps/booking-panel/src/app/panel/panel-details.component.ts","./apps/booking-panel/src/app/panel/panel-booking-list.component.ts","./apps/booking-panel/src/app/panel/panel-status.component.ts","./apps/booking-panel/src/app/panel/topbar.component.ts","./apps/booking-panel/src/app/panel/panel.component.ts","./apps/booking-panel/src/app/panel-array.component.ts","./apps/booking-panel/src/app/panel-select.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./apps/booking-panel/src/app/new-panel/panel-view-details.component.ts","./libs/common/src/lib/qr-code.ts","./apps/booking-panel/src/app/new-panel/panel-view-status.component.ts","./apps/booking-panel/src/app/new-panel/panel-view.component.ts","./apps/booking-panel/src/app/checkin/checkin-timetable.component.ts","./apps/booking-panel/src/app/app-routing.module.ts","./apps/booking-panel/src/app/checkin/checkin-view.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./apps/booking-panel/src/app/overlays/overlays.module.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/components/src/lib/app.component.ts","./libs/common/src/lib/placeos.ts","./apps/booking-panel/src/app/new-panel/panel-view.module.ts","./apps/booking-panel/src/app/checkin/checkin.module.ts","./apps/booking-panel/src/app/app.module.ts","./apps/booking-panel/src/environments/environment.prod.ts","./apps/booking-panel/src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BaseClass","_timers","_intervals","_subscriptions","_initialised","initialised","this","asObservable","getValue","destroy","key","clearTimeout","clearInterval","unsub","name","fn","delay","Function","setTimeout","setInterval","Subscription","unsubscribe","contains","subs","Object","filter","k","includes","CONFIRM_METADATA","height","width","maxHeight","maxWidth","ConfirmModalComponent","_dialog_ref","_data","event","title","content","confirm_text","cancel_text","icon","class","disableClose","enableClose","emit","reason","_app_name","setAppName","log","type","msg","args","stream","force","app_name","window","debug","colors","console","getItemWithKeys","map","shift","length","array","el","pos","arr","indexOf","find","i","randomInt","ceil","floor","Math","random","openConfirmModal","data","dialog","ref","open","race","componentInstance","pipe","_","toPromise","afterClosed","loading","s","close","start1","end1","start2","end2","seed","str","h","imul","charCodeAt","xmur3","rand","a","b","c","d","t","timeFormatString","localeString","Date","toLocaleTimeString","document","querySelector","getAttribute","navigator","language","toLowerCase","is24HourTime","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","addEventListener","mapKey","last_down","next","preventDefault","combo","combination","Array","split","validCombination","push","last_key","updateCombinationEndList","subscribe","count","presses","state","reduce","v","replace","non_meta","DEFAULT_SETTINGS","composer","domain","route","protocol","port","use_domain","local_login","app","description","short_name","logo","src","logo_dark","general","SettingsService","_title","super","_overrides","_subjects","_observables","now","time","built","init","value","_applyCssVariables","getTitle","setTitle","get","location","pathname","slice","join","toUpperCase","application","settings","override_settings","override","variable_map","css_string","element","getElementById","createElement","head","appendChild","innerText","hasOwnProperty","_service","_available","_activated","_timer","notify","message","action","on_action","config","snackbar_ref","panelClass","duration","dismiss","onAction","notifySuccess","notifyError","error","notifyInfo","info","opacity","USER_DOMAIN","User","email","first_name","last_name","phone","organisation","notes","photo","username","organizer","groups","checked_in","required","response_status","sys_admin","support","extension_data","assistance_required","is_external","endsWith","visit_expected","preferred_beverage","accepted_terms_conditions","card_number","staff_id","is_logged_in","_current_user","currentUser","jest","retry","user","BuildingLevel","parent_id","display_name","map_id","capacity","locations","parts","number","Organisation","raw_data","tags","bindings","_settings","Building","disc_info","discovery_info","zone_id","zone","extras","extra_id","extra_name","loan_items","levels","building_id","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","_location","longitude","latitude","room_configurations","attributes","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","timezone","catering_hours","start","end","visitor_space","holding_bay","address","orientations","booking_details","booking_rules","catering_restricted_from","currency","OrganisationService","_router","_buildings","_active_building","_levels","building_list","level_list","active_building","active_levels","bld","levelsForBuilding","_building_settings","overrides","buildingSettings","bld_id","building","_organisation","details","buildings","id_list","tries","load","catch","err","min","orgs","loadOrganisation","loadBuildings","loadLevels","loadSettings","org_list","auth","org","list","org_zone","navigate","limit","localStorage","getItem","sort","localeCompare","m","prev","curr","concat","setItem","BindingDirective","_element","_renderer","index","params","modelChange","bindVariable","changes","sys","mod","bind","model","previousValue","execute","on_event","subscription","listen","nativeElement","binding","exec","result","ActionIconComponent","className","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","IconComponent","PopoutMenuComponent","actions","timeout","show","MAP_FEATURE_DATA","StatusOverlayComponent","links","DEFAULT_KEYS","VirtualKeyboardComponent","_overlay","keyset","_overlay_ref","onFocus","enabled","onBlur","ngOnDestroy","blur","focus","_portal","create","positionStrategy","position","global","bottom","centerHorizontally","attach","dispose","cursor_pos","selectionStart","substr","max","dispatchEvent","InputEvent","updateKeyState","focusInput","selectionEnd","Space","feature_list","features","bookable","zones","support_url","image","configurations","level","availability","SpacesService","_org","_list","_compare","space","loadSpaces","predicate","valid_spaces","levelWithID","GlobalLoadingComponent","_spaces","MAT_MODULES","ComponentsModule","provide","useValue","SpaceSelectItemComponent","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minute","minutes","DEFAULT_RULES","auto_approve","hidden","stringToMinutes","addToDate","add","date","checkRulesMatch","host","ruleset","matches","conditions","every","is_before","is_after","min_length","max_length","primary","summary","can_edit","resource","system","starts_at","ends_at","status","valueOf","SpaceSelectModalComponent","spaces","space_types","available_spaces","q","query","cal","zone_ids","period_start","period_end","filtered_spaces","filterSpacesFromRules","rulemap","rules","rulesForSpace","forEach","multiple","space_map","save","metadata","SPACE_COUNT","BootstrapComponent","system_list","filtered_list","selected_system","bootstrap","configure","system_id","clearBootstrap","removeItem","space_list","queryParamMap","has","checkBootstrapped","search","CateringItem","category","unit_price","quantity","discount_cap","accept_points","options","total_cost","options_string","CateringOrder","event_id","items","item_count","amount","item","charge_code","invoice_number","deliver_at","getTime","_default_user","event_start","roundToNearestMinutes","nearestTo","event_end","calendar","creator","attendees","u","resources","body","private","all_day","meeting_url","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring","recurring_master_id","organiser","master","recurrence","range_start","range_end","interval","pattern","days_of_week","old_system","attachments","some","eventStatus","catering","f","obj","set","breakdown","is_today","setMinutes","setHours","NewUserModalComponent","form","fields","generateUserForm","markAllAsTouched","valid","new_user","UserFormComponent","controls","invalid","touched","searchGuests","searchStaff","UserSearchFieldComponent","query_fn","search$","Subject","search_results$","distinctUntilChanged","of","guests","forkJoin","catchError","an_array","stack","res","pop","isArray","reverse","flatten","search_str","cancelReset","blurInput","_input_el","user_list","active_user","new_value","_onChange","resetSearchString","disabled","_onTouch","useExisting","multi","setValue","TimeFieldComponent","step","no_past_times","show_select","_time_options","generateAvailableTimes","getMinutes","select_field","openedChange","datestamp","show_past","blocks","startOfDay","endOfDay","showSelect","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","option","format","BookingModalComponent","room_ids","EmbeddedControlModalComponent","control_url","countdown","tick","reset","$event","currentBooking","bkn","PanelStateService","_dialog","_poll","_bookings","_system","bookings","current","booking","is_active","pending_period","pending","bindTo","l","openBookingModal","makeBooking","startMeeting","meeting","endCurrent","booking_list","control_ui","callWaiter","on_change","updateProperty","PanelDetailsComponent","_state","newEvent","newBooking","confirmWaiter","viewControl","PanelBookingListComponent","started","starting_in","diff","differenceInSeconds","seconds","upcoming","PanelStatusComponent","PanelTopbarComponent","BookingPanelComponent","_route","topbar","paramMap","BookingPanelArrayComponent","BookingPanelSelectComponent","system_name","system_icon","system_status","active_system","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","url","size","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","o","n","g","p","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","x","C","w","E","N","T","eccblocks","y","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","innerHTML","toImage","Image","toDataURL","PanelViewDetailsComponent","setting","origin","qr_code","qr","generateQRCode","PanelViewStatusComponent","free_svg","in_use_svg","pending_svg","next_diff","current_diff","PanelViewComponent","CheckinTimetableComponent","events","current_time","event_blocks","_generateTimeBlocks","_updateCurrentTime","_processEvents","subMinutes","subHours","addHours","routes","path","component","CheckinViewComponent","redirectTo","AppRoutingModule","useHash","FormFieldsModule","SharedOverlaysModule","MOCK_MENU","group","generateCateringOrder","mx","fill","idx","MOCK_ORGS","created_at","updated_at","triggers","MOCK_BUILDINGS","MOCK_LEVELS","num","mockLevel","MOCK_METADATA","contacts","ZONE_MOCKS","padString","method","callback","request","query_params","area_management","location_services","route_params","generateMockDeskMetadata","map_regions","areas","properties","label_location","DESK_FEATURES","desks","registerMocks","DOMAIN","PREDEF_USERS","ACTIVE_USER","MOCK_STAFF","MOCK_GUESTS","randomSpaceFeatures","numFeatures","MOCK_SPACES","linked","long_name","searchable","controlable","cost_hour","setup","linked_rooms","generateMockSpace","EVENT_TIME","startOf","nextEventTime","unix","event_status","randomStatus","rnd","MOCK_EVENTS","PEOPLE","unshift","event_spaces","USER_MOCKS","person","decodeURIComponent","generateLocation","LOCATION_TYPES","level_spaces","last_seen","subtract","geo","lat","lon","RoomModule","help","tabs","inputs","volume","connected","active","input_list","output_list","env_sources","outputs","source","input","output","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display3","Display4","Display5","states","createSystemModule","MockBookingModule","_space","time_zone","disable_book_now","disable_end_meeting","pending_before","catering_ui","last_booking_started","updateBookings","subSeconds","len","createBookingsModule","MockLocationServicesModule","overview","emergency_contacts","padZero","no","createLocationServicesModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","area_id","updateLocations","users","at_location","mac","coordinates_from","s2_cell_id","variance","map_width","map_height","CameraModule","presets","dir","tilt","DisplayModule","MicrophoneModule","CaptureModule","live","remaining","$start","createCaptureModule","MeetingPushModule","supported_meeting_url","createMeetingPushModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","test","Status","visible","layout","digit","dial_number","createVideoConferenceModule","SYSTEM_MOCKS","System","Bookings","AreaManagement","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","MeetingPush","VidConf","createSystem","EVENT_MOCKS","new_event","findIndex","splice","CALENDAR_MOCKS","user2","user3","handleSpaceAvailability","system_ids","TYPES","MOCK_BOOKINGS","lvls","approved","approver","booking_start","booking_end","user_id","user_name","user_email","asset_id","access","rejected","approver_id","approver_name","approver_email","BOOKING_MOCKS","updateBooking","AppComponent","_tracing","_cache","_snackbar","_hotkey","_clipboard","reload","copy","clipboard","readText","tkn","mock","hostname","href","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setupPlace","onInitError","cache","isEnabled","available","hash","activateUpdate","activated","checkForUpdate","setupCache","dsn","sample_rate","S","integrations","tracingOrigins","routingInstrumentation","tracesSampleRate","initSentry","AppPanelViewModule","AppCheckinModule","AppModule","showDialog","deps","bootstrapModule"],"mappings":"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AAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK1B,GAAUyB,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 7004;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseClass implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | (() => void);\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button mat-button name=\"accept\" class=\"w-32\" (click)=\"onConfirm()\">\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map && map[key] != null) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n) {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = headers[i].split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]);\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n        }\n        return element;\n    });\n    return elements;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys.map((key) => JSON.stringify(item[key])).join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup) {\n    const invalid = [];\n    for (const key in form.controls) {\n        if (!form.controls[key].valid) {\n            invalid.push(key);\n        }\n    }\n    return invalid;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","\nconst general = {\n}\n\n\nconst app = {\n    name: 'Bookings',\n    title: 'PlaceOS',\n    description: 'Bookings UI',\n    short_name: 'PlaceOS',\n    logo: {\n        type: 'img',\n        src: 'assets/logo-light.svg'\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg'\n    },\n    general\n}\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/bookings',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app\n};\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.slice(1).split('/').join('-') || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"59e9514\",\n    \"hash\": \"59e9514\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"59e9514\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1632891050010\n};\n/* tslint:enable */\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        throw new Error(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.debug(msg);\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.error(msg);\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { Subscription } from 'rxjs';\nimport { notifyInfo } from './notifications';\n\nlet _available: Subscription;\nlet _activated: Subscription;\nlet _timer: number;\n\nexport type Notification = (message: string, callback: () => void) => void;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    notify: Notification = () => null,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_available) _available.unsubscribe();\n        if (_activated) _activated.unsubscribe();\n        if (_timer) clearInterval(_timer);\n        _available = cache.available.subscribe((event) => {\n            const current = `current version is ${event.current.hash}`;\n            const available = `available version is ${event.available.hash}`;\n            log('CACHE', `Update available: ${current} ${available}`);\n            activateUpdate(cache);\n        });\n        _activated = cache.activated.subscribe(() => {\n            log('CACHE', `Updates activated. Reloading...`);\n            notify('Newer version of the application is available', () =>\n                location.reload(true)\n            );\n        });\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            cache.checkForUpdate();\n        }, interval);\n    }\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nfunction activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled) {\n        log('CACHE', `Activating changes to the cache...`);\n        cache.activateUpdate().then(() => {\n            notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                location.reload(true)\n            );\n        });\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser,\n    host: string = ''\n): FormGroup {\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.groups = data.groups || [];\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue();\n}\n","import { HashMap, Identity } from '@placeos/common';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** Settings overrides associated with the level */\n    public readonly settings: HashMap = {};\n    /** List of points of interest for the level */\n    public readonly locations: readonly Identity[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys, HashMap } from '@placeos/common';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: HashMap;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { HashMap, Identity, RoomConfiguration } from '@placeos/common';\nimport { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: HashMap;\n    locker_structure: HashMap;\n    roles: HashMap;\n    zone: string;\n    location: string;\n    neighbourhoods: HashMap;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n\n    public readonly orientations: HashMap<number>;\n    public readonly attributes: readonly Identity[];\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location ||\n            disc_info.location || { longitude: null, latitude: null };\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    HashMap,\n    notifyError,\n    RoomConfiguration,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: HashMap = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: HashMap<HashMap> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings(): HashMap {\n        return this._settings;\n    }\n\n    /** Mapping of builgins to settings overrides */\n    public get building_settings(): HashMap<HashMap> {\n        return this._building_settings;\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): HashMap {\n        if (!bld_id && this.building) {\n            bld_id = this.building.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._service.overrides = [\n            this._settings.details,\n            this.buildingSettings(bld.id).details,\n        ];\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadBuildings();\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: HashMap = (\n                await showMetadata(org.id, { name: 'bindings' }).toPromise()\n            )?.details;\n            const settings: HashMap = (\n                await showMetadata(org.id, { name: 'settings' }).toPromise()\n            )?.details;\n            this._settings = { ...this._settings, ...settings };\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const building_list = await queryZones({\n            tags: 'building',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) =>\n                    i.data.filter((_) => _.parent_id === this._organisation?.id)\n                )\n            )\n            .toPromise();\n        if (!building_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: HashMap = (\n                await showMetadata(bld.id, { name: 'bindings' }).toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings }));\n        }\n        this._buildings.next(buildings);\n        const id = localStorage.getItem(`PLACEOS.building`);\n        if (id && this.buildings.find((bld) => bld.id === id)) {\n            this._active_building.next(\n                this.buildings.find((bld) => bld.id === id)\n            );\n        }\n        if (!this.building?.id && buildings?.length > 0) {\n            this.building = buildings[0];\n        }\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.get('app.name') || 'workplace'\n        ).toLowerCase()}_app`;\n        this._settings = await showMetadata(this._organisation.id, {\n            name: app_name,\n        }).toPromise();\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = await showMetadata(bld.id, {\n                name: app_name,\n            }).toPromise();\n        }\n        this._service.overrides = [\n            this._settings.details,\n            this.buildingSettings(this.building.id).details,\n        ];\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { BaseClass } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends BaseClass\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string;\n    /** Class name of the module to bind */\n    @Input() public mod: string;\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string;\n    /** Method to execute */\n    @Input() public exec: string;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string;\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T>();\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            changes.model.previousValue !== this.model &&\n            this.model != null\n        ) {\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (authority() && this.bind && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            const binding = module.binding(this.bind);\n            this.subscription('binding', binding.bind());\n            this.subscription(\n                'on_changes',\n                binding.listen().subscribe((value) =>\n                    setTimeout(() => {\n                        this.model = value;\n                        this.modelChange.emit(this.model);\n                    }, 10)\n                )\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            if (this.bind) this.params = [this.model];\n            module.execute(this.exec, this.params).then((result) => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        this.execute();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            mat-icon-button\n            class=\"relative flex items-center justify-center h-8 w-8\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"app-icon\">\n            <i *ngIf=\"!icon || icon.type !== 'img'\" [class]=\"icon?.class || className\">\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img *ngIf=\"icon && icon.type === 'img'\" [src]=\"icon.src | safe: 'resource'\" />\n        </div>\n    `,\n    styles: [\n        `\n            .app-icon {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 1.25em;\n                width: 1.25em;\n            }\n\n            i {\n                font-size: 1em;\n            }\n\n            img {\n                height: 1em;\n                width: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken('Data for Map Features');\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\"></div>\n        <mat-spinner\n            *ngIf=\"!viewer || loading\"\n            class=\"absolute\"\n            [diameter]=\"48\"\n        ></mat-spinner>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: element?.location\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends BaseClass\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy {\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    public get feature_list() {\n        return (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (changes.features) {\n            this.injectors = (this.features || []).map((f: any) =>\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                ...f.data,\n                                ratio$: this._on_changes.pipe(\n                                    map((_) => _.ratio)\n                                ),\n                                zoom: this._on_changes.pipe(map((_) => _.zoom)),\n                                position: this._on_changes.pipe(\n                                    map((_) => _.center)\n                                ),\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n            );\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView(), 100);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) =>\n                    this._on_changes.next(v)\n                )\n            );\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () => this.createView());\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 2),\n        };\n        this.updateDisplay();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        mat-button\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent extends BaseClass implements OnDestroy {\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from '@placeos/organisation';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly image: string;\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.image = data.image || '';\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from './space.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.loadSpaces());\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    /**\n     * Find space with given id/email\n     * @param id ID/Email address associated with the space\n     */\n    public find(id: string) {\n        return this._list\n            .getValue()\n            .find((space) => space.id === id || space.email === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { first } from 'rxjs/operators';\nimport { isOnline } from '@placeos/ts-client';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 9999;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        setTimeout(() => (this.loading = false), 300);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\n\nexport * from './action-icon.component';\nexport * from './binding.directive';\nexport * from './confirm-modal.component';\nexport * from './icon.component';\nexport * from './login.component';\nexport * from './popout-menu.component';\nexport * from './unauthorised.component';\nexport * from './user-avatar.component';\nexport * from './interactive-map.component';\nexport * from './map-pin.component';\nexport * from './map-radius.component';\nexport * from './misconfigured.component';\nexport * from './status-overlay.component';\nexport * from './custom-table.component';\nexport * from './custom-tooltip.component';\nexport * from './fixed.pipe';\nexport * from './safe.pipe';\nexport * from './sanitise.pipe';\nexport * from './virtual-keyboard.component';\nexport * from './global-loading.component';\n\nexport * from './authorised-admin.guard';\nexport * from './authorised-user.guard';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, ...MAT_MODULES],\n    providers: [\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n    ],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES],\n})\nexport class ComponentsModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                mat-icon-button\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button mat-button class=\"w-32\" [class.request]=\"space.by_request\">\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes, addSeconds,\n\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (details.resources.every((i) => i.response_status === 'accepted')) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: start.valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button mat-button (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends BaseClass {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceFreeBusy({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.booking.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [CommonModule, MatDialogModule, ComponentsModule],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\n\n@Component({\n    selector: '[app-bootstrap]',\n    template: `\n        <div\n            class=\"rounded shadow m-4 bg-white overflow-hidden mx-auto text-center flex flex-col items-center\"\n        >\n            <h2 class=\"bg-primary text-white py-2 px-4 m-0 w-full text-2xl\">\n                Booking Panel Setup\n            </h2>\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <p class=\"description py-4\">\n                    Input the PlaceOS <em>System ID</em> to bootstrap\n                </p>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>System ID</mat-label>\n                    <input\n                        matInput\n                        [(ngModel)]=\"system_id\"\n                        [matAutocomplete]=\"auto\"\n                        placeholder=\"System ID\"\n                        (ngModelChange)=\"filter($event)\"\n                    />\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngFor=\"let option of filtered_list\"\n                        [value]=\"option.id\"\n                    >\n                        <div class=\"leading-tight\">\n                            <div class=\"name\">{{ option.name }}</div>\n                            <div class=\"text-xs text-dark-fade\">\n                                {{ option.id }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-autocomplete>\n                <button\n                    mat-button\n                    [disabled]=\"!system_id\"\n                    (click)=\"bootstrap()\"\n                >\n                    Submit\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div load class=\"my-16 flex flex-col items-center\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <div class=\"m-4\">Loading system data...</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23ddd' fill-opacity='1' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            mat-form-field {\n                width: calc(100% - 2rem);\n            }\n\n            button {\n                width: 8rem;\n                margin: 0.5rem;\n                margin-top: 0;\n            }\n        `,\n    ],\n})\nexport class BootstrapComponent extends BaseClass implements OnInit {\n    /** List of available systems */\n    public system_list: Space[] = [];\n    /** List of available systems */\n    public filtered_list: Space[] = [];\n    /** Whether application data is loading */\n    public loading: boolean;\n    /** ID of the system to bootstrap */\n    public system_id: string;\n    /** Selected system to bootstrap */\n    public selected_system: Space = null;\n    /** Whether input field is focused */\n    public input_focus: boolean;\n\n    constructor(\n        private _spaces: SpacesService,\n        private route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.system_list = this._spaces.space_list || [];\n        this.filter('');\n        this.loading = false;\n        this.subscription(\n            'route.query',\n            this.route.queryParamMap.subscribe((params) => {\n                if (params.has('clear') && !!params.get('clear')) {\n                    this.clearBootstrap();\n                }\n                if (params.has('system_id') || params.has('sys_id')) {\n                    this.system_id =\n                        params.get('system_id') || params.get('sys_id');\n                    this.bootstrap();\n                }\n            })\n        );\n        this.checkBootstrapped();\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public readonly bootstrap = () => this.configure(this.system_id);\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private checkBootstrapped(): void {\n        this.loading = true;\n        if (localStorage) {\n            const system_id = localStorage.getItem('PLACEOS.BOOKINGS.system');\n            if (system_id) {\n                this._router.navigate(['panel', system_id]);\n                return;\n            }\n        }\n        this.loading = false;\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        this.loading = true;\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.BOOKINGS.system', system_id);\n            localStorage.setItem('trust', 'true');\n            localStorage.setItem('fixed_device', 'true');\n        }\n        this._router.navigate(['panel', system_id]);\n        this.loading = false;\n    }\n\n    /**\n     * Remove any previously set bootstrapping details\n     */\n    private readonly clearBootstrap = () =>\n        localStorage.removeItem('PLACEOS.BOOKINGS.system');\n\n    public filter(search: string) {\n        const s = search.toLowerCase();\n        this.filtered_list = this.system_list\n            .filter(\n                (i) => i.name.toLowerCase().includes(s) || i.id.includes(search)\n            )\n            .slice(0, 100);\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n\n    public readonly options_string: string;\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.options = data.options || [];\n        this.tags = data.tags || [];\n        this.total_cost =\n            (this.unit_price +\n                this.options\n                    .map((i) => i.unit_price || 0)\n                    .reduce((c, a) => c + a, 0)) *\n            this.quantity;\n\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            new Date().getTime();\n    }\n}\n","import { HashMap, Identity, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Master event */\n    public master?: CalendarEvent;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees: HashMap = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => user.resource)\n                        .map((s) => new Space(s)),\n                'email'\n            ) || [];\n        this.title = data.title || '';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone = data.timezone || '';\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus(this) || 'none';\n        this.location = data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): HashMap {\n        const obj: HashMap = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(this.recurrence.end),\n            };\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(attendees, 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nexport function generateEventForm(event: CalendarEvent): FormGroup {\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(event.host || '', [Validators.required]),\n        organiser: new FormControl(event.organiser || {}, [\n            Validators.required,\n        ]),\n        creator: new FormControl(event.creator, [Validators.required]),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title, [Validators.required]),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering || []),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) =>\n        form.controls.system.setValue(l.length ? l[0] : null)\n    );\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.organisation\">\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    Organisation<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"Organisation\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>Organisation is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.assistance_required\">\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.visit_expected\">\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n\n    public hasError(name: string) {\n        return (\n            this.form.controls[name].invalid && this.form.controls[name].touched\n        );\n    }\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new StaffUser(item)))\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\n\n@NgModule({\n    declarations: [NewUserModalComponent, UserFormComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        ComponentsModule,\n        MatCheckboxModule,\n    ],\n    exports: [NewUserModalComponent],\n})\nexport class SharedUsersModule {}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { searchGuests, searchStaff, User } from '@placeos/users';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field text-black\" form-field>\n            <mat-form-field overlay appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs text-black opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\">\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { BaseClass, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field\n            appearance=\"outline\"\n            [style.display]=\"show_select ? 'none' : ''\"\n            (keydown.enter)=\"showSelect()\"\n        >\n            <input\n                matInput\n                type=\"time\"\n                [disabled]=\"disabled\"\n                [ngModel]=\"time\"\n                (ngModelChange)=\"setValue($event)\"\n            />\n            <button mat-icon-button matSuffix class=\"relative top-1 -right-1\" (click)=\"showSelect()\">\n                <app-icon class=\"text-2xl text-black text-opacity-50\">\n                    arrow_drop_down\n                </app-icon>\n            </button>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends BaseClass\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Identity } from '@placeos/common';\nimport { formatDuration } from 'date-fns';\nimport * as dayjs from 'dayjs';\n\n\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        const date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { Component, OnInit, EventEmitter, Output, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { DialogEvent, HashMap, BaseClass } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { first } from 'rxjs/operators';\n\nexport interface BookingModalData extends HashMap {\n    title?: string;\n    space?: Space;\n    date?: number;\n    min_duration?: number;\n    max_duration?: number;\n}\n\nexport async function openBookingModal(\n    data: BookingModalData,\n    dialog: MatDialog\n) {\n    const ref = dialog.open(BookingModalComponent, {\n        data,\n    });\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event.pipe(first((_) => _.reason === 'done')),\n            ref.afterClosed().toPromise(),\n        ])),\n        close: ref.close,\n    };\n}\n\n@Component({\n    selector: 'booking-modal',\n    template: `\n        <header class=\"bg-primary p-4\">\n            <h3>New Booking</h3>\n        </header>\n        <form\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n            class=\"p-2\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.organiser\">\n                <label for=\"host\">Host<span>*</span>:</label>\n                <a-user-search-field\n                    name=\"host\"\n                    formControlName=\"organiser\"\n                ></a-user-search-field>\n            </div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex-1\" *ngIf=\"form.controls.date\">\n                    <label for=\"start-time\">Start Time:</label>\n                    <a-time-field\n                        name=\"start-time\"\n                        formControlName=\"date\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex-1\" *ngIf=\"form.controls.duration\">\n                    <label for=\"duration\">Duration:</label>\n                    <a-duration-field\n                        name=\"duration\"\n                        formControlName=\"duration\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.title\">\n                <label for=\"host\">Title<span>*</span>:</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center p-2 w-full border-t border-gray-200 space-x-2\"\n        >\n            <button\n                mat-button\n                name=\"close\"\n                class=\"inverse w-32\"\n                mat-dialog-close\n            >\n                Cancel\n            </button>\n            <button mat-button name=\"save\" class=\"w-32\" (click)=\"save()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Processing request...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            form {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n    animations: [],\n})\nexport class BookingModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n    /** Form */\n    public form: FormGroup;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingModalData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            // organiser: new FormControl(null, [Validators.required]),\n            room_ids: new FormControl([this._data.space?.email || '']),\n            date: new FormControl(this._data.date || new Date().valueOf()),\n            duration: new FormControl(30),\n            title: new FormControl(this._data.title || '', [\n                Validators.required,\n            ]),\n        });\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            this.loading = true;\n            this.event.emit({\n                reason: 'done',\n                metadata: new CalendarEvent({ ...this.form.value }),\n            });\n        } else {\n            console.log('Invalid form fields. Valid states:', this.form);\n        }\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseClass } from '@placeos/common';\n\nexport interface EmbeddedControlModalData {\n    control_url: string;\n}\n\n@Component({\n    selector: 'embedded-control-modal',\n    template: `\n        <div class=\"absolute inset-0 bg-white\"></div>\n        <div\n            class=\"absolute w-screen overflow-hidden bg-primary\"\n            modal\n            [@show]\n            (window:click)=\"reset()\"\n        >\n            <div class=\"h-full w-full border-none\">\n                <iframe\n                    class=\"h-full w-full border-none\"\n                    [src]=\"control_url | safe: 'resource'\"\n                ></iframe>\n            </div>\n        </div>\n        <div class=\"absolute top-0 left-0 flex items-center h-12\">\n            <div countdown class=\"text-2xl mx-2\">{{ countdown }}</div>\n            <button\n                mat-icon-button\n                class=\"close\"\n                (click)=\"close()\"\n                (contextmenu)=\"$event.preventDefault()\"\n            >\n                <app-icon class=\"text-2xl mx-2\">close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [modal] {\n                height: calc(100vh - 3em);\n                box-sizing: content-box;\n                border: 2px solid #fff;\n                border-top: 1px solid #ccc;\n                transform: translate(-50%, calc(-50% + 1.75em));\n            }\n\n            .overlay {\n                position: absolute;\n                top: 0;\n                right: 0;\n                display: flex;\n                align-items: center;\n                height: 3em;\n            }\n        `,\n    ],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0 }),\n                animate(500, style({ opacity: 1 })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1 }),\n                animate(1000, style({ opacity: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseClass implements OnInit {\n    /** Control URL to embed into the modal */\n    public readonly control_url: string = this._data.control_url;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<EmbeddedControlModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: EmbeddedControlModalData\n    ) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this._dialog_ref.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, interval, Observable } from 'rxjs';\nimport { filter, map, shareReplay } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { SpacesService } from '@placeos/spaces';\nimport {\n    BaseClass,\n    notifyError,\n    openConfirmModal,\n    timePeriodsIntersect,\n} from '@placeos/common';\n\nimport { openBookingModal } from './overlays/booking-modal.component';\nimport { EmbeddedControlModalComponent } from './overlays/embedded-control-modal.component';\nimport { addSeconds, getUnixTime } from 'date-fns';\n\nexport interface PanelSettings {\n    /**  */\n    status?: string;\n    /** Whether booking has a pending state */\n    pending?: boolean;\n    /** Default title for Ad-hoc bookings */\n    default_title?: string;\n    /** Minimum duration for a booking */\n    min_duration?: number;\n    /** Maximum duration for a booking */\n    max_duration?: number;\n    /** Duration in seconds after the start with which to cancel pending bookings */\n    pending_period?: number;\n    /** Whether user is allowed to interact with the interface */\n    disable_book_now?: boolean;\n    /** URL to the control UI for this space */\n    control_ui?: string;\n    /** URI to the catering UI for this space */\n    catering_ui?: string;\n}\n\nexport function currentBooking(\n    list: CalendarEvent[],\n    date: number = new Date().valueOf()\n) {\n    return list.find((bkn) =>\n        timePeriodsIntersect(\n            date,\n            date,\n            bkn.date,\n            bkn.date + bkn.duration * 1000\n        )\n    );\n}\n\nexport type CalendarEventStatus =\n    | 'available'\n    | 'pending'\n    | 'busy'\n    | 'not-bookable';\n\n@Injectable()\nexport class PanelStateService extends BaseClass {\n    /** Polling observable */\n    private _poll = interval(1000);\n    /** List of current bookings for active system */\n    private _bookings = new BehaviorSubject<CalendarEvent[]>([]);\n    /** Mapping of current settings for the active system */\n    private _settings = new BehaviorSubject<PanelSettings>({});\n    /** Active system */\n    private _system = new BehaviorSubject<string>('');\n    /** Mapping of current settings for the active system */\n    public readonly settings = this._settings.asObservable();\n    /** List of current bookings for active system */\n    public readonly bookings = this._bookings.asObservable();\n    /** List of current bookings for active system */\n    public readonly space = combineLatest([\n        this._system,\n        this._spaces.list,\n    ]).pipe(\n        map(([id, list]) => list.find((_) => _.id === id)),\n        shareReplay(1)\n    );\n    /** List of current bookings */\n    public get booking_list() {\n        return this._bookings.getValue();\n    }\n    /** Active system */\n    public get system() {\n        return this._system.getValue();\n    }\n    public set system(value: string) {\n        this._system.next(value);\n    }\n\n    public setting<T = any>(name: string): T {\n        return this._settings.getValue()[name];\n    }\n    /** Currently active booking */\n    public readonly current: Observable<CalendarEvent> = combineLatest(\n        this._poll,\n        this._bookings\n    ).pipe(map(([_, bookings]) => currentBooking(bookings)));\n    /** Upcoming booking */\n    public readonly next: Observable<CalendarEvent> = combineLatest([\n        this._poll,\n        this._bookings,\n    ]).pipe(\n        map(([_, bookings]) => {\n            const date = new Date().valueOf();\n            return bookings.find((bkn) => bkn.date > date);\n        })\n    );\n\n    public readonly status: Observable<string> = combineLatest([\n        this.current,\n        this.next,\n        this._settings,\n    ]).pipe(\n        map(([current, next, settings]) => {\n            const booking: CalendarEvent = current || next;\n            const is_active =\n                addSeconds(\n                    new Date(),\n                    settings.pending_period || 1440\n                ).valueOf() > booking?.date;\n            switch (booking?.state) {\n                case 'future':\n                    return 'available';\n                case 'upcoming':\n                    return settings.pending && !is_active\n                        ? 'pending'\n                        : 'available';\n                case 'started':\n                    return settings.pending && !is_active ? 'pending' : 'busy';\n                case 'in_progress':\n                    return settings.pending && !is_active ? 'pending' : 'busy';\n            }\n            return 'available';\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _spaces: SpacesService, private _dialog: MatDialog) {\n        super();\n        this._system.pipe(filter((_) => !!_)).subscribe((id) => {\n            this.bindTo(id, 'bookings' as any, 'Bookings', (l) =>\n                this._bookings.next(\n                    l\n                        ?.map((i) => new CalendarEvent(i))\n                        .sort((a, b) => a.date - b.date) || []\n                )\n            );\n            const settings: any[] = [\n                'disable_book_now',\n                'pending',\n                'status',\n                'control_ui',\n                'catering_ui',\n                'pending_period',\n                'pending_before',\n            ];\n            settings.forEach((k) => this.bindTo(id, k));\n        });\n    }\n\n    /**\n     * Open modal to create new booking\n     * @param date Start time of the new booking\n     */\n    public async newBooking(date: number = new Date().valueOf()) {\n        const details = await openBookingModal(\n            {\n                ...this._settings.getValue(),\n                space: this._spaces.find(this.system),\n                date,\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        await this.makeBooking(details.metadata);\n        details.close();\n    }\n\n    /**\n     * Create new booking with the given details\n     * @param details\n     */\n    public async makeBooking(details: Partial<CalendarEvent>) {\n        const module = getModule(this.system, 'Bookings');\n        if (details && module) {\n            await module\n                .execute('book_now', [\n                    details.duration,\n                    getUnixTime(details.date),\n                ])\n                .catch((e) => notifyError(`Error creating meeting. ${e}`));\n        }\n    }\n\n    /**\n     * Open confirmation modal for starting the meeting\n     */\n    public async confirmStart() {\n        const details = await openConfirmModal(\n            {\n                title: 'Do you wish to start your meeting?',\n                content: `If you don't start your meeting it will be cancelled ${\n                    this._settings.getValue().pending_period / 60\n                } minutes after the start time.`,\n                icon: { class: 'material-icons', content: 'play_arrow' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        this.startMeeting();\n    }\n\n    /**\n     * Execute the logic on the engine driver to start the current or upcoming meeting\n     */\n    public async startMeeting() {\n        if (this.space && (await this.status.toPromise()) === 'pending') {\n            const meeting =\n                (await this.current.toPromise()) ||\n                (await this.next.toPromise());\n            const module = getModule(this.system, 'Bookings');\n            if (meeting && module) {\n                await module\n                    .execute('start_meeting', [meeting.date])\n                    .catch((e) => notifyError(`Error starting meeting. ${e}`));\n            }\n        }\n    }\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public async confirmEnd() {\n        const details = await openConfirmModal(\n            {\n                title: 'Are you sure want to end your meeting?',\n                content:\n                    'Ending your meeting early will free up this room for others to use',\n                icon: { class: 'material-icons', content: 'stop' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        this.endCurrent();\n    }\n\n    /**\n     * End the current meeting\n     * @param reason Reason for ending the meeting early\n     */\n    public async endCurrent(reason: string = 'user_input') {\n        const now = new Date().valueOf();\n        const current = this.booking_list.find((bkn) =>\n            timePeriodsIntersect(\n                now,\n                now,\n                bkn.date,\n                bkn.date + bkn.duration * 1000\n            )\n        );\n        const module = getModule(this.system, 'Bookings');\n        if (current && module) {\n            await module\n                .execute('cancel_meeting', [current.date, reason])\n                .catch((e) => notifyError(`Error starting meeting. ${e}`));\n        }\n    }\n    /**\n     * Open confirmation modal for calling waiter\n     */\n    public async viewControl() {\n        const control_url = this._settings.getValue().control_ui;\n        if (!control_url) return;\n        this._dialog.open(EmbeddedControlModalComponent, {\n            data: { control_url },\n        });\n    }\n\n    /**\n     * Open confirmation modal for calling waiter\n     */\n    public async confirmWaiter() {\n        const details = await openConfirmModal(\n            {\n                title: 'Do you wish to call a waiter?',\n                content: `Note that it can take up to 15 minutes for them to turn up.`,\n                icon: { class: 'material-icons', content: 'room_service' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        this.callWaiter();\n    }\n\n    /**\n     * Execute the logic on the engine driver to call waiting staff\n     */\n    public async callWaiter() {\n        const module = getModule(this.system, 'Bookings');\n        if (module) {\n            await module\n                .execute('waiter_call', [Date.now()])\n                .catch((e) => notifyError(`Error calling waiter. ${e}`));\n        }\n    }\n\n    /** List to binding */\n    private bindTo<K extends keyof PanelSettings>(\n        id: string,\n        name: K,\n        mod: string = 'Bookings',\n        on_change: (v: PanelSettings[K]) => void = (v) =>\n            this.updateProperty(name, v)\n    ) {\n        const binding = getModule(id, mod).binding(name);\n        this.subscription(\n            `listen:${name}`,\n            binding.listen().subscribe(on_change)\n        );\n        this.subscription(`bind:${name}`, binding.bind());\n    }\n\n    /** Update properties of the system data */\n    private updateProperty<K extends keyof PanelSettings>(\n        name: K,\n        value: PanelSettings[K]\n    ) {\n        const item = { ...this._settings.getValue() };\n        item[name] = value;\n        this._settings.next(item);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-details',\n    template: `\n        <h1 class=\"text-4xl font-medium mb-8\">\n            {{\n                (space | async)?.display_name ||\n                    (space | async)?.name ||\n                    '&lt;Unknown Space&gt;'\n            }}\n        </h1>\n        <p *ngIf=\"(space | async)?.description\">\n            {{ (space | async)?.description }}\n        </p>\n        <div\n            class=\"flex flex-col items-center space-y-2\"\n            *ngIf=\"!(options | async)?.hide_actions; else empty_state\"\n        >\n            <button\n                event\n                mat-button\n                class=\"w-48\"\n                *ngIf=\"!(options | async)?.disable_book_now\"\n                (click)=\"newEvent()\"\n            >\n                <div class=\"flex items-center justify-center\">\n                    <app-icon class=\"text-xl\">add_circle_outline</app-icon>\n                    <span class=\"mx-2\">New Event</span>\n                </div>\n            </button>\n            <button\n                control\n                mat-button\n                class=\"w-48\"\n                *ngIf=\"(options | async)?.control_ui\"\n                (click)=\"viewControl()\"\n            >\n                <div class=\"flex items-center justify-center\">\n                    <app-icon class=\"text-xl\">settings_remote</app-icon>\n                    <span class=\"mx-2\">View Control</span>\n                </div>\n            </button>\n            <button\n                waiter\n                mat-button\n                class=\"w-48\"\n                *ngIf=\"(options | async)?.catering_ui\"\n                (click)=\"callWaiter()\"\n            >\n                <div class=\"flex items-center justify-center\">\n                    <app-icon class=\"text-xl\">room_service</app-icon>\n                    <span class=\"mx-2\">Call Waiter</span>\n                </div>\n            </button>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center\">\n                <p>No available actions for this space</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            }\n        `,\n    ],\n})\nexport class PanelDetailsComponent {\n    public readonly space = this._state.space;\n    public readonly options = this._state.settings;\n\n    public readonly newEvent = () => this._state.newBooking();\n\n    public readonly callWaiter = () => this._state.confirmWaiter();\n\n    public readonly viewControl = () => this._state.viewControl();\n\n    constructor(private _state: PanelStateService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    differenceInSeconds,\n    formatDuration,\n    isAfter,\n    isSameDay,\n} from 'date-fns';\nimport { combineLatest, interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-booking-list',\n    template: `\n        <h2 class=\"w-full px-4 py-2 mb-2 font-medium\" *ngIf=\"current | async\">\n            Current\n            <span\n                class=\"text-xs shadow px-2 py-1 ml-8 rounded bg-gray-300\"\n                *ngIf=\"!(started | async) && (starting_in | async)\"\n            >\n                Starting in {{ starting_in | async }}\n            </span>\n            <span\n                class=\"text-xs shadow px-2 py-1 ml-8 rounded bg-error text-white\"\n                *ngIf=\"(started | async) && !(pending | async)\"\n            >\n                In Progress\n            </span>\n            <span\n                class=\"text-xs shadow px-2 py-1 ml-8 rounded bg-pending text-white\"\n                *ngIf=\"\n                    ((current | async)?.state === 'upcoming' ||\n                        (current | async)?.state === 'in_progress') &&\n                    (pending | async)\n                \"\n            >\n                Waiting to start\n            </span>\n        </h2>\n        <div class=\"mb-4 w-full\" *ngIf=\"current | async; else empty_state\">\n            <div\n                current\n                class=\"flex items-center bg-white rounded-lg px-4 h-24 text-lg shadow-md w-full border border-gray-100 relative max-w-full\"\n                [class.text-white]=\"started | async\"\n            >\n                <div\n                    color\n                    class=\"absolute -left-2 -right-2 top-2 bottom-2 bg-primary rounded z-0\"\n                    [class.opacity-100]=\"started | async\"\n                    [class.opacity-0]=\"!(started | async)\"\n                ></div>\n                <div\n                    class=\"relative opacity-80 w-24 text-base z-10\"\n                    *ngIf=\"!(started | async)\"\n                >\n                    <span [class.opacity-60]=\"started | async\">{{\n                        (current | async)?.event_start * 1000\n                            | date: 'shortTime'\n                    }}</span\n                    ><br />\n                    <span [class.opacity-60]=\"!(started | async)\">{{\n                        (current | async)?.event_end * 1000 | date: 'shortTime'\n                    }}</span>\n                </div>\n                <div\n                    class=\"relative opacity-80 w-24 text-base z-10 flex flex-col\"\n                    *ngIf=\"started | async\"\n                >\n                    <div class=\"text-xs\">Ends at:</div>\n                    <div>\n                        {{\n                            (current | async)?.date +\n                                (current | async)?.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n                <div class=\"relative truncate z-10\">\n                    {{ (current | async)?.title || '&lt;Private Event&gt;' }}\n                </div>\n            </div>\n        </div>\n        <h2\n            class=\"w-full px-4 py-2 mb-2 font-medium\"\n            *ngIf=\"(upcoming | async)?.length\"\n        >\n            Upcoming\n        </h2>\n        <ul\n            class=\"list-style-none p-0 m-0 bg-white rounded text-base shadow divide-y divide-gray-100 w-full border border-gray-100 max-w-full\"\n            *ngIf=\"(upcoming | async)?.length\"\n        >\n            <li\n                upcoming\n                class=\"flex items-center w-full p-4\"\n                *ngFor=\"let event of upcoming | async | slice: 0:2\"\n            >\n                <div class=\"opacity-60 w-24\">\n                    {{ event?.date | date: 'shortTime' }}\n                </div>\n                <div class=\"truncate\">\n                    {{ event?.title || '&lt;Private Event&gt;' }}\n                </div>\n            </li>\n            <li\n                upcoming\n                class=\"flex items-center w-full p-4\"\n                *ngIf=\"(upcoming | async)?.length > 2\"\n            ></li>\n        </ul>\n        <ng-template #empty_state>\n            <div\n                class=\"flex items-center justify-center bg-white rounded px-4 py-8 shadow-md w-full border border-gray-100\"\n            >\n                <p class=\"opacity-50\">No upcoming events for today</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                color: #000;\n            }\n\n            [current] {\n                transition: color 200ms;\n            }\n\n            [current] [color] {\n                transition: opacity 200ms;\n            }\n        `,\n    ],\n})\nexport class PanelBookingListComponent {\n    /** List of current and future events for the current day */\n    public readonly bookings = this._state.bookings.pipe(\n        map((l) =>\n            l.filter((e) => e.state !== 'done' && isSameDay(e.date, new Date()))\n        )\n    );\n    /** In progress or next event */\n    public readonly current = this.bookings.pipe(\n        map((list) => list.sort((a, b) => a.date - b.date)[0])\n    );\n    /** Whether current event has started */\n    public readonly started = combineLatest([this.current, interval(600)]).pipe(\n        map(([c]) => isAfter(Date.now(), c.date))\n    );\n    /** Display string for time until current event's start */\n    public readonly starting_in = combineLatest([\n        this.current,\n        interval(600),\n    ]).pipe(\n        map(([_]) => {\n            const diff = _ ? differenceInSeconds(_.date, new Date()) : 0;\n            return diff && diff < 60 * 60\n                ? `${formatDuration({\n                      hours: Math.floor(diff / 60 / 60),\n                      minutes: Math.floor(diff / 60) % 60,\n                      seconds: diff < 60 ? diff : 0,\n                  })}`\n                : '';\n        })\n    );\n    /** Whether current event is waiting for the attendees to begin the evnt */\n    public readonly pending = combineLatest([\n        this.current,\n        this._state.settings,\n        interval(600),\n    ]).pipe(\n        map(([i, settings]) => i && settings.pending_period && settings.pending)\n    );\n    /** List of events excluding the current/next event */\n    public readonly upcoming = this.bookings.pipe(\n        map((list) => list.sort((a, b) => a.date - b.date).slice(1))\n    );\n\n    constructor(private _state: PanelStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-status',\n    template: `\n        <div\n            status\n            class=\"h-12 w-[calc(100% - 2rem)] m-2 rounded shadow\"\n            [class.bg-gray-300]=\"(settings | async)?.status === 'not-bookable'\"\n            [class.bg-pending]=\"(settings | async)?.status === 'pending'\"\n            [class.bg-success]=\"(settings | async)?.status === 'free'\"\n            [class.bg-error]=\"(settings | async)?.status === 'busy'\"\n        ></div>\n    `,\n    styles: [``],\n})\nexport class PanelStatusComponent {\n    public readonly settings = this._state.settings;\n\n    constructor(private _state: PanelStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\n@Component({\n    selector: 'panel-topbar',\n    template: `\n        <div\n            class=\"w-full flex items-center justify-between h-16 border-b border-gray-200 bg-secondary text-white\"\n        >\n            <img [src]=\"logo.src\" alt=\"Logo\" class=\"h-12 mx-2\" />\n            <div time class=\"flex items-center space-x-2 mx-4 text-xl\">\n                <span>{{ time | date: 'shortTime' }}</span>\n                <span> • </span>\n                <span>{{ time | date: 'mediumDate' }}</span>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class PanelTopbarComponent {\n    public get logo() {\n        return this._settings.get('app.logo_dark') || {};\n    }\n\n    public get time() {\n        return getUnixTime(new Date()) * 1000;\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass } from '@placeos/common';\n\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'app-booking-panel',\n    template: `\n        <div class=\"flex flex-col absolute inset-0 bg-gray-50\">\n            <panel-topbar *ngIf=\"topbar\"></panel-topbar>\n            <div\n                content\n                class=\"flex flex-1 items-center h-1/2 space-x-2\"\n                [class.p-8]=\"topbar\"\n                [class.p-4]=\"!topbar\"\n            >\n                <panel-details\n                    class=\"flex-1 h-full max-w-[50%]\"\n                    [class.p-4]=\"topbar\"\n                    [class.p-2]=\"!topbar\"\n                ></panel-details>\n                <panel-booking-list\n                    class=\"flex-1 h-full max-w-[50%]\"\n                    [class.p-4]=\"topbar\"\n                    [class.p-2]=\"!topbar\"\n                ></panel-booking-list>\n            </div>\n            <panel-status></panel-status>\n            <!-- <panel-timeline></panel-timeline> -->\n        </div>\n    `,\n    styles: [``],\n    providers: [PanelStateService],\n})\nexport class BookingPanelComponent\n    extends BaseClass\n    implements OnInit, OnChanges {\n    @Input() public system_id: string = localStorage.getItem(\n        'PLACEOS.BOOKINGS.system'\n    );\n\n    @Input() public topbar = true;\n\n    constructor(\n        private _state: PanelStateService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.system = this.system_id || '';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('system_id')) {\n                    this._state.system = params.get('system_id');\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.system_id) {\n            this._state.system = this.system_id;\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass } from '@placeos/common';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col\">\n            <panel-topbar class=\"w-full\"></panel-topbar>\n            <div\n                class=\"flex items-center justify-center flex-wrap w-full flex-1 h-1/2\"\n            >\n                <ng-container *ngIf=\"systems?.length > 0; else none\">\n                    <div\n                        panel\n                        class=\"relative flex-1 border border-grey-300 overflow-hidden\"\n                        *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n                        [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n                    >\n                        <app-booking-panel\n                            *ngIf=\"id\"\n                            [system_id]=\"id\"\n                            [topbar]=\"false\"\n                            classs=\"transform scale-75\"\n                        ></app-booking-panel>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #none>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center\"\n            >\n                <p>No systems are set for displaying on the panel array</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [panel] {\n                min-width: 40%;\n            }\n\n            .container {\n                background-color: var(--bg-dark);\n                background-image: url(\"data:image/svg+xml,%3Csvg width='24' height='20' viewBox='0 0 24 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20 18c0-1.105.887-2 1.998-2 1.104 0 2-.895 2.002-1.994V14v6h-4v-2zM0 13.998C0 12.895.888 12 2 12c1.105 0 2 .888 2 2 0 1.105.888 2 2 2 1.105 0 2 .888 2 2v2H0v-6.002zm16 4.004A1.994 1.994 0 0 1 14 20c-1.105 0-2-.887-2-1.998v-4.004A1.994 1.994 0 0 0 10 12c-1.105 0-2-.888-2-2 0-1.105-.888-2-2-2-1.105 0-2-.887-2-1.998V1.998A1.994 1.994 0 0 0 2 0a2 2 0 0 0-2 2V0h8v2c0 1.105.888 2 2 2 1.105 0 2 .888 2 2 0 1.105.888 2 2 2 1.105 0 2-.888 2-2 0-1.105.888-2 2-2 1.105 0 2-.888 2-2V0h4v6.002A1.994 1.994 0 0 1 22 8c-1.105 0-2 .888-2 2 0 1.105-.888 2-2 2-1.105 0-2 .887-2 1.998v4.004z' fill='%23ffffff' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E\");\n                color: var(--font-light);\n            }\n\n            img {\n                max-width: 12em;\n            }\n        `,\n    ],\n})\nexport class BookingPanelArrayComponent extends BaseClass implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n\n    constructor(private route: ActivatedRoute) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this.route.queryParamMap.subscribe((params) => {\n                if (params.has('system_ids')) {\n                    this.systems = (params.get('system_ids') || '')\n                        .split(',')\n                        .filter((_) => !!_);\n                }\n            })\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass, HashMap } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { currentBooking } from './panel-state.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center justify-center flex-wrap bg-gray-600\"\n            (window:mousedown)=\"reset()\"\n            (window:touchstart)=\"reset()\"\n        >\n            <div\n                class=\"flex items-center justify-center flex-wrap w-full h-full p-8\"\n            >\n                <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n                    <button\n                        matRipple\n                        class=\"item text-white flex flex-col items-center justify-center rounded m-2 p-2\"\n                        *ngFor=\"let id of systems | slice: 0:8; let i = index\"\n                        (click)=\"showPanel(id)\"\n                    >\n                        <div class=\"bindings\" *ngIf=\"id\">\n                            <i\n                                binding\n                                [sys]=\"id\"\n                                mod=\"Bookings\"\n                                bind=\"room_name\"\n                                [(model)]=\"system_name[id]\"\n                            ></i>\n                            <i\n                                binding\n                                [sys]=\"id\"\n                                mod=\"Bookings\"\n                                bind=\"icon\"\n                                [(model)]=\"system_icon[id]\"\n                            ></i>\n                            <i\n                                binding\n                                [sys]=\"id\"\n                                mod=\"Bookings\"\n                                bind=\"status\"\n                                (modelChange)=\"system_status[id] = $event\"\n                            ></i>\n                        </div>\n                        <div\n                            state\n                            [class]=\"\n                                'h-36 w-36 flex items-center justify-center text-6xl bg-white bg-opacity-10 rounded' +\n                                (system_status[id]\n                                    ? ' ' + system_status[id]\n                                    : '')\n                            \"\n                        >\n                            <img\n                                *ngIf=\"system_name[id]\"\n                                [src]=\"system_icon[id]\"\n                            />\n                            <mat-spinner\n                                *ngIf=\"!system_name[id]\"\n                                [diameter]=\"32\"\n                            ></mat-spinner>\n                        </div>\n                        <div\n                            class=\"truncate text-sm p-3 text-white w-full text\"\n                        >\n                            {{ system_name[id] || id + ' connecting...' }}\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n            <div\n                class=\"absolute inset-0 border border-white\"\n                *ngIf=\"active_system\"\n            >\n                <app-booking-panel\n                    [system_id]=\"active_system\"\n                ></app-booking-panel>\n                <div\n                    class=\"absolute top-0 left-1/2 transform -translate-x-1/2 flex items-center bg-white rounded-b p-2\"\n                >\n                    <button\n                        mat-icon-button\n                        class=\"action close\"\n                        (click)=\"close()\"\n                        (contextmenu)=\"$event.preventDefault()\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                    <button\n                        widget\n                        class=\"action countdown w-12 h-10\"\n                        (contextmenu)=\"$event.preventDefault()\"\n                    >\n                        {{ countdown }}\n                    </button>\n                </div>\n            </div>\n            <ng-template #none>\n                <div class=\"absolute inset-0 flex items-center justify-center\">\n                    <p>\n                        No systems are set for displaying on the panel select\n                        list\n                    </p>\n                </div>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            .item {\n                height: 11.5em;\n                width: 10em;\n                background-color: var(--bg-dark);\n                box-shadow: 0 1px 3px 0 rgba(#000, 0.2),\n                    0 1px 1px 0 rgba(#000, 0.14),\n                    0 2px 1px -1px rgba(#000, 0.12);\n            }\n\n            .free {\n                background-color: rgba(var(--success), 0.6);\n            }\n\n            .busy {\n                background-color: rgba(var(--error), 0.6);\n            }\n\n            img {\n                max-width: 1em;\n                max-height: 1em;\n            }\n        `,\n    ],\n})\nexport class BookingPanelSelectComponent extends BaseClass implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.query',\n            this.route.queryParamMap.subscribe((params) => {\n                if (params.has('system_ids')) {\n                    this.systems = (params.get('system_ids') || '').split(',');\n                }\n            })\n        );\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const current = currentBooking(\n            (bookings || []).map((i) => new CalendarEvent(i))\n        );\n        this.system_status[id] = current ? 'unavailable' : 'available';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { Component } from '@angular/core';\nimport { startOfMinute } from 'date-fns';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-view-details',\n    template: `\n        <div class=\"h-full w-full bg-black relative text-white\">\n            <div\n                class=\"bg-cover bg-center absolute inset-0\"\n                [style.background-image]=\"'url(' + room_image + ')'\"\n            ></div>\n            <div class=\"absolute inset-0 bg-black/60\"></div>\n            <div name class=\"absolute top-4 left-4 text-3xl font-medium\">\n                {{\n                    (system | async)?.display_name ||\n                        (system | async)?.name ||\n                        '&lt;Unknown Space&gt;'\n                }}\n            </div>\n            <div\n                qr-checkin\n                class=\"absolute top-4 right-4 text-xl w-40 space-y-4\"\n            >\n                <img class=\"w-full\" [src]=\"qr_code\" />\n                <div class=\"w-full text-lg\">\n                    Scan QR code to book this room or view details\n                </div>\n            </div>\n            <div\n                class=\"absolute top-2/3 left-1/2 -translate-x-1/2 text-3xl font-light\"\n            >\n                {{ time | date: 'EEE, MMM d, y h:mm a' }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class PanelViewDetailsComponent {\n    public readonly system = this._state.space;\n    public qr_code: any;\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get room_image() {\n        return this._state.setting('image');\n    }\n\n    constructor(private _state: PanelStateService) {}\n\n    public ngOnInit() {\n        const url = `${location.origin}${location.pathname}#/checkin/${this._state.system}`;\n        this.qr_code = generateQRCode(url, '#fff0', '#fff');\n    }\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component } from '@angular/core';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    format,\n    formatDuration,\n} from 'date-fns';\nimport { take } from 'rxjs/operators';\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-view-status',\n    template: `\n        <div class=\"flex items-center justify-center h-full w-full\">\n            <div\n                class=\"flex-1 h-full text-white flex flex-col items-center justify-center relative\"\n                [class.bg-error]=\"(state | async) === 'busy'\"\n                [class.bg-success]=\"(state | async) === 'available'\"\n                [class.bg-pending]=\"(state | async) === 'pending'\"\n            >\n                <div\n                    [innerHTML]=\"\n                        ((state | async) === 'busy'\n                            ? in_use_svg\n                            : (state | async) === 'pending'\n                            ? pending_svg\n                            : free_svg\n                        ) | safe\n                    \"\n                ></div>\n                <h3 class=\"text-4xl uppercase font-medium mt-4\">Now</h3>\n                <p class=\"text-2xl font-light mt-4\">\n                    {{ current_period || 'No current event' }}\n                </p>\n                <div class=\"absolute top-0 inset-x-0 flex items-center justify-center text-2xl bg-black/40 p-4 space-x-4\" *ngIf=\"(state | async) === 'pending'\">\n                    <p class=\"uppercase\">Touch or scan to check-in</p>\n                    <app-icon>arrow_forward</app-icon>\n                </div>\n            </div>\n            <div\n                class=\"flex-1 h-full bg-white text-black flex flex-col items-center justify-center space-y-4\"\n            >\n                <div\n                    [innerHTML]=\"\n                        ((state | async) === 'busy' ? free_svg : in_use_svg)\n                            | safe\n                    \"\n                ></div>\n                <h3 class=\"text-4xl uppercase font-medium\">Next</h3>\n                <p class=\"text-2xl font-light\">\n                    {{ next_period || 'No upcoming events' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > div {\n                background-color: #424242;\n            }\n        `,\n    ],\n})\nexport class PanelViewStatusComponent {\n    public readonly state = this._state.status;\n    public readonly current = this._state.current;\n    public readonly next = this._state.next;\n\n    public readonly free_svg = `\n    <svg width=\"129\" height=\"117\" viewBox=\"0 0 129 117\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0)\">\n    <path d=\"M32.9422 90.8456H10.1503L6.37414 54.8238C6.34123 54.4031 6.22286 53.9934 6.02626 53.62C5.82966 53.2465 5.55897 52.9171 5.23075 52.6519C4.90253 52.3867 4.52368 52.1913 4.11737 52.0776C3.71106 51.9639 3.28583 51.9343 2.8677 51.9907C2.44708 52.0236 2.03759 52.142 1.66428 52.3387C1.29098 52.5353 0.961708 52.8061 0.696607 53.1345C0.431506 53.4628 0.236151 53.8418 0.12249 54.2483C0.00882954 54.6547 -0.0207468 55.0801 0.0355704 55.4984L4.21633 94.3534C4.312 95.1416 4.69529 95.8668 5.29265 96.3896C5.89001 96.9125 6.65936 97.1963 7.45305 97.1865H17.4329V109.059L10.0155 111.892C9.68401 112.004 9.37812 112.181 9.1155 112.412C8.85287 112.644 8.63873 112.925 8.48549 113.239C8.33225 113.554 8.24295 113.896 8.22276 114.246C8.20257 114.595 8.2519 114.945 8.36788 115.275C8.48387 115.605 8.6642 115.909 8.89844 116.169C9.13268 116.429 9.41617 116.64 9.73249 116.79C10.0488 116.94 10.3916 117.025 10.7412 117.041C11.0907 117.057 11.4399 117.004 11.7687 116.884L19.8605 113.916L27.9523 116.884H28.8963C29.4326 116.879 29.9541 116.707 30.3889 116.393C30.8236 116.079 31.1503 115.638 31.3238 115.13C31.5533 114.468 31.512 113.742 31.2089 113.11C30.9058 112.478 30.3654 111.992 29.7055 111.757L22.4229 109.194V97.3214H32.9422C33.7971 97.3099 34.6137 96.9651 35.2182 96.3603C35.8227 95.7556 36.1674 94.9387 36.1789 94.0835C36.1845 93.6568 36.1047 93.2332 35.944 92.8378C35.7833 92.4424 35.5451 92.0833 35.2434 91.7815C34.9417 91.4797 34.5827 91.2414 34.1875 91.0806C33.7922 90.9199 33.3688 90.84 32.9422 90.8456Z\" fill=\"currentColor\"/>\n    <path d=\"M125.189 51.9907C124.348 51.9019 123.507 52.1503 122.85 52.6816C122.192 53.2128 121.772 53.9833 121.682 54.8239L117.906 90.7107H94.9794C94.121 90.7107 93.2977 91.0519 92.6907 91.6591C92.0837 92.2663 91.7427 93.0899 91.7427 93.9487C91.7427 94.8074 92.0837 95.631 92.6907 96.2382C93.2977 96.8454 94.121 97.1866 94.9794 97.1866H105.499V109.059L98.2161 111.622C97.5749 111.882 97.0536 112.371 96.7542 112.995C96.4549 113.619 96.3991 114.332 96.5978 114.995C96.7713 115.503 97.098 115.944 97.5327 116.258C97.9675 116.572 98.489 116.744 99.0253 116.749C99.302 116.77 99.5797 116.724 99.8345 116.614L107.926 113.646L116.018 116.614C116.347 116.734 116.696 116.787 117.046 116.771C117.395 116.755 117.738 116.67 118.054 116.52C118.371 116.37 118.654 116.16 118.888 115.9C119.123 115.64 119.303 115.336 119.419 115.005C119.535 114.675 119.584 114.325 119.564 113.976C119.544 113.626 119.455 113.284 119.301 112.97C119.148 112.655 118.934 112.374 118.671 112.143C118.409 111.911 118.103 111.734 117.771 111.622L110.489 109.059V97.1866H120.603C121.397 97.1963 122.166 96.9126 122.764 96.3897C123.361 95.8668 123.744 95.1416 123.84 94.3534L128.021 55.4984C128.11 54.6577 127.861 53.8161 127.33 53.1584C126.799 52.5007 126.029 52.0807 125.189 51.9907Z\" fill=\"currentColor\"/>\n    <path d=\"M95.5186 74.1164V69.7992C95.5241 69.7091 95.5104 69.619 95.4785 69.5346C95.4465 69.4503 95.3971 69.3737 95.3333 69.3099C95.2696 69.2462 95.193 69.1967 95.1087 69.1647C95.0244 69.1328 94.9342 69.1191 94.8443 69.1246H33.0769C32.9869 69.1191 32.8968 69.1328 32.8124 69.1647C32.7281 69.1967 32.6516 69.2462 32.5878 69.3099C32.5241 69.3737 32.4746 69.4503 32.4426 69.5346C32.4107 69.619 32.397 69.7091 32.4026 69.7992V74.1164C32.397 74.2064 32.4107 74.2966 32.4426 74.3809C32.4746 74.4653 32.5241 74.5419 32.5878 74.6056C32.6516 74.6694 32.7281 74.7189 32.8124 74.7509C32.8968 74.7828 32.9869 74.7965 33.0769 74.791H55.1945V115.67C55.1889 115.76 55.2026 115.85 55.2345 115.934C55.2665 116.018 55.3159 116.095 55.3797 116.159C55.4435 116.223 55.52 116.272 55.6043 116.304C55.6886 116.336 55.7788 116.35 55.8688 116.344H72.0524C72.1423 116.35 72.2325 116.336 72.3168 116.304C72.4011 116.272 72.4777 116.223 72.5414 116.159C72.6052 116.095 72.6547 116.018 72.6866 115.934C72.7185 115.85 72.7322 115.76 72.7267 115.67V74.9259H94.8443C95.0399 74.9054 95.2198 74.8093 95.3458 74.6581C95.4717 74.507 95.5337 74.3126 95.5186 74.1164Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0\">\n    <rect width=\"128.03\" height=\"116.141\" fill=\"currentColor\" transform=\"translate(0.000488281 0.858643)\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `;\n\n    public readonly in_use_svg = `\n    <svg width=\"129\" height=\"117\" viewBox=\"0 0 129 117\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0)\">\n    <path d=\"M29.7316 77.5781C29.1922 71.6419 28.6527 64.7613 28.2481 60.8489C28.6527 61.2536 29.1922 61.6583 29.5968 62.0631C32.9684 65.0312 38.9023 65.5708 42.9482 65.5708C44.8363 65.5708 46.3198 65.4359 46.9941 65.4359C48.0088 65.3405 48.9445 64.8473 49.597 64.0641C50.2494 63.2809 50.5656 62.2713 50.4766 61.2557C50.3875 60.2401 49.9004 59.301 49.1216 58.6434C48.3428 57.9858 47.3356 57.6631 46.3198 57.7459C42.6785 58.1506 36.6097 57.7459 34.8564 56.2618C30.5021 52.1921 24.7668 49.926 18.8077 49.9209C12.4691 49.9209 11.2554 52.7541 11.2554 56.1269C11.2554 60.7139 12.7389 80.5462 13.6829 84.8634C14.627 88.641 24.0674 87.9664 28.6527 87.8315C32.711 87.6529 36.7769 87.8789 40.7904 88.506C40.9217 96.0702 40.6516 103.636 39.9812 111.171C39.8928 112.491 40.3224 113.793 41.1786 114.801C42.0349 115.809 43.2504 116.443 44.5666 116.568H44.9712C46.2268 116.57 47.4371 116.099 48.3616 115.249C49.2862 114.399 49.8572 113.233 49.9611 111.981C51.1749 95.9263 51.1749 86.2125 49.8263 83.2444C47.8033 79.0621 42.5437 77.8479 29.7316 77.5781Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M18.6731 47.8973C24.1104 47.8973 28.5182 43.4879 28.5182 38.0486C28.5182 32.6093 24.1104 28.2 18.6731 28.2C13.2359 28.2 8.82812 32.6093 8.82812 38.0486C8.82812 43.4879 13.2359 47.8973 18.6731 47.8973Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M33.9124 90.5297H11.1205L7.34436 54.5079C7.31145 54.0871 7.19307 53.6775 6.99647 53.3041C6.79987 52.9306 6.52919 52.6012 6.20097 52.336C5.87275 52.0708 5.49389 51.8754 5.08758 51.7617C4.68127 51.648 4.25605 51.6184 3.83791 51.6747C3.41729 51.7077 3.0078 51.8261 2.6345 52.0228C2.2612 52.2194 1.93192 52.4902 1.66682 52.8186C1.40172 53.1469 1.20637 53.5259 1.0927 53.9323C0.979044 54.3388 0.949468 54.7642 1.00579 55.1825L5.18655 94.0374C5.28222 94.8257 5.66551 95.5508 6.26287 96.0737C6.86023 96.5966 7.62957 96.8804 8.42327 96.8706H18.4031V108.743L10.9857 111.576C10.6542 111.688 10.3483 111.865 10.0857 112.096C9.82309 112.328 9.60895 112.609 9.45571 112.924C9.30246 113.238 9.21316 113.58 9.19297 113.93C9.17278 114.279 9.22211 114.629 9.3381 114.959C9.45408 115.289 9.63442 115.593 9.86866 115.853C10.1029 116.113 10.3864 116.324 10.7027 116.474C11.019 116.624 11.3619 116.709 11.7114 116.725C12.0609 116.741 12.4102 116.688 12.7389 116.568L20.8307 113.6L28.9225 116.568H29.8665C30.4028 116.563 30.9243 116.391 31.3591 116.077C31.7938 115.763 32.1205 115.322 32.2941 114.814C32.5235 114.152 32.4822 113.426 32.1791 112.794C31.876 112.163 31.3356 111.676 30.6757 111.441L23.3931 108.878V97.0055H33.9124C34.7673 96.994 35.5839 96.6492 36.1884 96.0444C36.7929 95.4397 37.1376 94.6228 37.1491 93.7676C37.1548 93.3408 37.0749 92.9173 36.9142 92.5219C36.7535 92.1265 36.5153 91.7673 36.2136 91.4655C35.912 91.1637 35.5529 90.9254 35.1577 90.7647C34.7624 90.604 34.339 90.5241 33.9124 90.5297Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M89.206 88.5061C93.2205 87.8881 97.2855 87.6622 101.344 87.8315C105.929 87.9664 115.37 88.641 116.314 84.8634C117.392 80.5462 118.741 60.714 118.741 56.1269C118.741 52.7541 117.662 49.9209 111.189 49.9209C105.213 49.8372 99.4458 52.1159 95.14 56.2618C93.3868 57.7459 87.4528 58.0157 83.6766 57.7459C83.1702 57.6982 82.6592 57.7513 82.1733 57.9019C81.6874 58.0526 81.236 58.2978 80.8452 58.6237C80.4544 58.9495 80.1319 59.3494 79.8961 59.8004C79.6604 60.2514 79.5162 60.7445 79.4717 61.2515C79.4273 61.7585 79.4835 62.2692 79.6371 62.7544C79.7907 63.2396 80.0388 63.6895 80.3669 64.0784C80.695 64.4673 81.0968 64.7875 81.5491 65.0205C82.0014 65.2534 82.4953 65.3946 83.0023 65.4359C83.6766 65.4359 85.1601 65.5709 87.0482 65.5709C91.0941 65.5709 97.0281 65.0312 100.4 62.0631C100.879 61.6925 101.33 61.2867 101.748 60.8489C101.344 64.7614 100.804 71.507 100.265 77.5781C87.4528 77.8479 82.1932 79.0622 80.3051 83.2445C78.9564 86.2126 78.8216 95.9263 80.1702 111.981C80.2956 113.224 80.8731 114.378 81.793 115.224C82.7128 116.07 83.911 116.548 85.1601 116.568H85.5647C86.8809 116.443 88.0964 115.809 88.9527 114.801C89.809 113.793 90.2385 112.491 90.1501 111.171C89.3797 103.642 89.0644 96.0733 89.206 88.5061Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M111.216 47.9107C116.653 47.9107 121.061 43.5013 121.061 38.062C121.061 32.6228 116.653 28.2134 111.216 28.2134C105.779 28.2134 101.371 32.6228 101.371 38.062C101.371 43.5013 105.779 47.9107 111.216 47.9107Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M126.159 51.6748C125.319 51.586 124.477 51.8344 123.82 52.3656C123.162 52.8968 122.743 53.6673 122.653 54.5079L118.876 90.3948H95.9496C95.0912 90.3948 94.2679 90.736 93.6609 91.3432C93.0539 91.9504 92.7129 92.774 92.7129 93.6327C92.7129 94.4915 93.0539 95.3151 93.6609 95.9223C94.2679 96.5295 95.0912 96.8706 95.9496 96.8706H106.469V108.743L99.1863 111.306C98.5451 111.566 98.0238 112.056 97.7245 112.679C97.4251 113.303 97.3693 114.016 97.568 114.679C97.7415 115.187 98.0682 115.628 98.503 115.942C98.9377 116.256 99.4592 116.428 99.9955 116.433C100.272 116.454 100.55 116.408 100.805 116.298L108.896 113.33L116.988 116.298C117.317 116.418 117.666 116.471 118.016 116.455C118.365 116.439 118.708 116.354 119.024 116.204C119.341 116.055 119.624 115.844 119.859 115.584C120.093 115.324 120.273 115.02 120.389 114.689C120.505 114.359 120.554 114.009 120.534 113.66C120.514 113.31 120.425 112.968 120.271 112.654C120.118 112.339 119.904 112.058 119.641 111.827C119.379 111.595 119.073 111.419 118.742 111.306L111.459 108.743V96.8706H121.574C122.367 96.8804 123.137 96.5966 123.734 96.0738C124.331 95.5509 124.715 94.8257 124.81 94.0375L128.991 55.1825C129.08 54.3418 128.832 53.5002 128.301 52.8425C127.77 52.1848 126.999 51.7648 126.159 51.6748Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    <path d=\"M96.4888 73.8005V69.4833C96.4943 69.3932 96.4806 69.3031 96.4487 69.2187C96.4168 69.1344 96.3673 69.0578 96.3035 68.994C96.2398 68.9302 96.1632 68.8807 96.0789 68.8488C95.9946 68.8168 95.9045 68.8032 95.8145 68.8087H34.0471C33.9571 68.8032 33.867 68.8168 33.7827 68.8488C33.6983 68.8807 33.6218 68.9302 33.558 68.994C33.4943 69.0578 33.4448 69.1344 33.4129 69.2187C33.3809 69.3031 33.3673 69.3932 33.3728 69.4833V73.8005C33.3673 73.8905 33.3809 73.9807 33.4129 74.065C33.4448 74.1494 33.4943 74.2259 33.558 74.2897C33.6218 74.3535 33.6983 74.403 33.7827 74.4349C33.867 74.4669 33.9571 74.4806 34.0471 74.475H56.1647V115.354C56.1592 115.444 56.1728 115.534 56.2048 115.618C56.2367 115.703 56.2862 115.779 56.3499 115.843C56.4137 115.907 56.4902 115.956 56.5745 115.988C56.6589 116.02 56.749 116.034 56.839 116.028H73.0226C73.1126 116.034 73.2027 116.02 73.287 115.988C73.3713 115.956 73.4479 115.907 73.5116 115.843C73.5754 115.779 73.6249 115.703 73.6568 115.618C73.6887 115.534 73.7024 115.444 73.6969 115.354V74.61H95.8145C96.0101 74.5895 96.19 74.4934 96.316 74.3422C96.4419 74.191 96.5039 73.9967 96.4888 73.8005Z\" fill=\"currentColor\" fill-opacity=\"0.61\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0\">\n    <rect width=\"128.03\" height=\"116.141\" fill=\"currentColor\" transform=\"translate(0.970703 0.542725)\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `;\n\n    public readonly pending_svg = `\n    <svg width=\"129\" height=\"117\" viewBox=\"0 0 129 117\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0)\">\n    <path d=\"M32.9412 90.8456H10.1493L6.37317 54.8238C6.34026 54.4031 6.22188 53.9934 6.02528 53.62C5.82868 53.2465 5.558 52.9171 5.22978 52.6519C4.90156 52.3867 4.5227 52.1913 4.11639 52.0776C3.71008 51.9639 3.28486 51.9343 2.86672 51.9907C2.4461 52.0236 2.03661 52.142 1.66331 52.3387C1.29 52.5353 0.960731 52.8061 0.695631 53.1345C0.43053 53.4628 0.235174 53.8418 0.121514 54.2483C0.00785298 54.6547 -0.0217234 55.0801 0.0345939 55.4984L4.21535 94.3534C4.31102 95.1416 4.69432 95.8668 5.29168 96.3896C5.88904 96.9125 6.65838 97.1963 7.45207 97.1865H17.432V109.059L10.0145 111.892C9.68304 112.004 9.37714 112.181 9.11452 112.412C8.8519 112.644 8.63776 112.925 8.48452 113.239C8.33127 113.554 8.24197 113.896 8.22178 114.246C8.20159 114.595 8.25092 114.945 8.3669 115.275C8.48289 115.605 8.66323 115.909 8.89747 116.169C9.13171 116.429 9.4152 116.64 9.73151 116.79C10.0478 116.94 10.3907 117.025 10.7402 117.041C11.0897 117.057 11.439 117.004 11.7677 116.884L19.8595 113.916L27.9513 116.884H28.8953C29.4316 116.879 29.9531 116.707 30.3879 116.393C30.8227 116.079 31.1493 115.638 31.3229 115.13C31.5523 114.468 31.511 113.742 31.2079 113.11C30.9048 112.478 30.3644 111.992 29.7045 111.757L22.4219 109.194V97.3214H32.9412C33.7961 97.3099 34.6127 96.9651 35.2172 96.3603C35.8217 95.7556 36.1664 94.9387 36.1779 94.0835C36.1836 93.6568 36.1037 93.2332 35.943 92.8378C35.7823 92.4424 35.5441 92.0833 35.2425 91.7815C34.9408 91.4797 34.5817 91.2414 34.1865 91.0806C33.7913 90.9199 33.3678 90.84 32.9412 90.8456Z\" fill=\"currentColor\"/>\n    <path d=\"M125.188 51.9907C124.348 51.9019 123.507 52.1503 122.849 52.6816C122.192 53.2128 121.772 53.9833 121.682 54.8239L117.906 90.7107H94.9789C94.1205 90.7107 93.2972 91.0519 92.6902 91.6591C92.0832 92.2663 91.7422 93.0899 91.7422 93.9487C91.7422 94.8074 92.0832 95.631 92.6902 96.2382C93.2972 96.8454 94.1205 97.1866 94.9789 97.1866H105.498V109.059L98.2156 111.622C97.5744 111.882 97.0531 112.371 96.7538 112.995C96.4544 113.619 96.3986 114.332 96.5973 114.995C96.7708 115.503 97.0975 115.944 97.5323 116.258C97.967 116.572 98.4885 116.744 99.0248 116.749C99.3015 116.77 99.5792 116.724 99.834 116.614L107.926 113.646L116.018 116.614C116.346 116.734 116.696 116.787 117.045 116.771C117.395 116.755 117.737 116.67 118.054 116.52C118.37 116.37 118.654 116.16 118.888 115.9C119.122 115.64 119.302 115.336 119.418 115.005C119.534 114.675 119.584 114.325 119.564 113.976C119.543 113.626 119.454 113.284 119.301 112.97C119.148 112.655 118.933 112.374 118.671 112.143C118.408 111.911 118.102 111.734 117.771 111.622L110.488 109.059V97.1866H120.603C121.397 97.1963 122.166 96.9126 122.763 96.3897C123.361 95.8668 123.744 95.1416 123.84 94.3534L128.02 55.4984C128.109 54.6577 127.861 53.8161 127.33 53.1584C126.799 52.5007 126.029 52.0807 125.188 51.9907Z\" fill=\"currentColor\"/>\n    <path d=\"M95.5186 74.1164V69.7992C95.5241 69.7091 95.5104 69.619 95.4785 69.5346C95.4465 69.4503 95.3971 69.3737 95.3333 69.3099C95.2696 69.2462 95.193 69.1967 95.1087 69.1647C95.0244 69.1328 94.9342 69.1191 94.8443 69.1246H33.0769C32.9869 69.1191 32.8968 69.1328 32.8124 69.1647C32.7281 69.1967 32.6516 69.2462 32.5878 69.3099C32.5241 69.3737 32.4746 69.4503 32.4426 69.5346C32.4107 69.619 32.397 69.7091 32.4026 69.7992V74.1164C32.397 74.2064 32.4107 74.2966 32.4426 74.3809C32.4746 74.4653 32.5241 74.5419 32.5878 74.6056C32.6516 74.6694 32.7281 74.7189 32.8124 74.7509C32.8968 74.7828 32.9869 74.7965 33.0769 74.791H55.1945V115.67C55.1889 115.76 55.2026 115.85 55.2345 115.934C55.2665 116.018 55.3159 116.095 55.3797 116.159C55.4435 116.223 55.52 116.272 55.6043 116.304C55.6886 116.336 55.7788 116.35 55.8688 116.344H72.0524C72.1423 116.35 72.2325 116.336 72.3168 116.304C72.4011 116.272 72.4777 116.223 72.5414 116.159C72.6052 116.095 72.6547 116.018 72.6866 115.934C72.7185 115.85 72.7322 115.76 72.7267 115.67V74.9259H94.8443C95.0399 74.9054 95.2198 74.8093 95.3458 74.6581C95.4717 74.507 95.5337 74.3126 95.5186 74.1164Z\" fill=\"currentColor\"/>\n    <path d=\"M41.042 58.875H85.9587L63.5003 20.0834L41.042 58.875ZM65.542 52.75H61.4587V48.6667H65.542V52.75ZM65.542 44.5834H61.4587V36.4167H65.542V44.5834Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0\">\n    <rect width=\"128.03\" height=\"116.141\" fill=\"currentColor\" transform=\"translate(0 0.858643)\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `;\n\n    public get next_period() {\n        const next = this._state.setting('next');\n        return next\n            ? `${format(next.date, 'h:mm a')} - ${format(\n                  addMinutes(next.date, next.duration),\n                  'h:mm a'\n              )}`\n            : 'No upcoming events';\n    }\n\n    public get current_period() {\n        const current = this._state.setting('current');\n        const next = this._state.setting('next');\n        const next_diff = differenceInMinutes(Date.now(), next?.date);\n        if (!current)\n            return next\n                ? `Free for ${formatDuration({\n                      hours: Math.floor(next_diff / 60),\n                      minutes: next_diff % 60,\n                  })}`\n                : 'No current event';\n        const checked_in = true;\n        const current_diff = differenceInMinutes(\n            Date.now(),\n            current.event_end * 1000\n        );\n        const curr_avail = formatDuration({\n            hours: Math.floor(current_diff / 60),\n            minutes: current_diff % 60,\n        });\n        return checked_in\n            ? `Free in ${curr_avail}`\n            : `You meeting will be cancelled in ${'8 minutes'} if you do not check-in`;\n    }\n\n    constructor(private _state: PanelStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'panel-view',\n    template: `\n        <div class=\"flex flex-col items-center h-full w-full overflow-hidden\">\n            <panel-view-details class=\"flex-1 w-full\"> </panel-view-details>\n            <panel-view-status class=\"flex-1 w-full\"> </panel-view-status>\n        </div>\n    `,\n    styles: [``],\n    providers: [PanelStateService],\n})\nexport class PanelViewComponent extends BaseClass {\n    constructor(\n        private _state: PanelStateService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.system = '';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('system_id')) {\n                    this._state.system = params.get('system_id');\n                }\n            })\n        );\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    format,\n    roundToNearestMinutes,\n    subHours,\n    subMinutes,\n} from 'date-fns';\n\ninterface TimeBlock {\n    id: number;\n    minutes: number;\n    hour: string;\n}\n\ninterface EventBlock {\n    start: number;\n    length: number;\n}\n\n@Component({\n    selector: 'checkin-timetable',\n    template: `\n        <div class=\"flex items-center relative h-20 px-2\">\n            <button\n                *ngFor=\"let blk of blocks\"\n                class=\"h-full relative\"\n                [style.min-width]=\"1 * step + 'px'\"\n                (click)=\"event.emit(blk.id)\"\n            >\n                <div\n                    *ngIf=\"blk.minutes % 60 === 0\"\n                    class=\"absolute top-1 left-0 text-xs whitespace-nowrap\"\n                >\n                    {{ blk.hour }}\n                </div>\n                <div\n                    *ngIf=\"blk.minutes % 15 === 0\"\n                    class=\"absolute w-px bottom-0 left-0 bg-black\"\n                    [style.height]=\"height(blk.minutes)\"\n                ></div>\n            </button>\n            <ng-container *ngFor=\"let blk of event_blocks\">\n                <div\n                    event\n                    *ngIf=\"(blk.start + blk.length) >= 0 && blk.start < 24 * 60\"\n                    class=\"absolute bottom-0 h-[3.5rem] bg-gray-300 opacity-40\"\n                    [style.left]=\"8 + blk.start + 'px'\"\n                    [style.width]=\"blk.length + 'px'\"\n                ></div>\n            </ng-container>\n            <div\n                current\n                class=\"absolute bottom-0 h-[3.5rem] w-0.5 bg-primary pointer-events-none\"\n                [style.left]=\"8 + current_time + 'px'\"\n            >\n                <div\n                    class=\"h-2 w-2 rounded-full bg-primary absolute top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2\"\n                ></div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                --color1: #969696;\n                --color2: #424242;\n                background: repeating-linear-gradient(\n                    -45deg,\n                    var(--color1),\n                    var(--color1) 6px,\n                    var(--color2) 6px,\n                    var(--color2) 8px\n                );\n            }\n        `,\n    ],\n})\nexport class CheckinTimetableComponent extends BaseClass {\n    @Input() public events: CalendarEvent[] = [];\n    @Input() public step = 15;\n    @Output() public event = new EventEmitter<number>();\n\n    public current_time = 0;\n\n    public blocks: TimeBlock[] = [];\n    public event_blocks: EventBlock[] = [];\n\n    public ngOnInit() {\n        this._generateTimeBlocks();\n        this._updateCurrentTime();\n        this.interval(\n            'gen-blocks',\n            () => this._generateTimeBlocks(),\n            1 * 60 * 1000\n        );\n        this.interval(\n            'update-current',\n            () => this._updateCurrentTime(),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.events) {\n            this._processEvents();\n        }\n    }\n\n    public height(minutes: number) {\n        switch (minutes) {\n            case 0:\n                return '3.5rem';\n            case 15:\n            case 45:\n                return '1rem';\n            case 30:\n                return '2rem';\n        }\n        return '';\n    }\n\n    private _generateTimeBlocks() {\n        const blocks: TimeBlock[] = [];\n        const start = roundToNearestMinutes(\n            subMinutes(subHours(Date.now(), 1), this.step / 2),\n            {\n                nearestTo: this.step,\n            }\n        );\n        let date = start;\n        const end = addHours(start, 24);\n        while (date < end) {\n            blocks.push({\n                id: date.valueOf(),\n                minutes: date.getMinutes(),\n                hour: format(date, 'h a'),\n            });\n            date = addMinutes(date, this.step);\n        }\n        this.blocks = blocks;\n    }\n\n    private _processEvents() {\n        if (!this.blocks.length) return;\n        this.event_blocks = (this.events || []).map((_) => ({\n            start: differenceInMinutes(_.date, this.blocks[0].id),\n            length: _.duration,\n        }));\n    }\n\n    private _updateCurrentTime() {\n        if (!this.blocks.length) return;\n        const time = differenceInMinutes(Date.now(), this.blocks[0].id);\n        this.current_time = time;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BootstrapComponent } from './bootstrap.component';\nimport { BookingPanelComponent } from './panel/panel.component';\nimport { BookingPanelArrayComponent } from './panel-array.component';\nimport { BookingPanelSelectComponent } from './panel-select.component';\nimport { PanelViewComponent } from './new-panel/panel-view.component';\nimport { CheckinViewComponent } from './checkin/checkin-view.component';\n\nconst routes: Routes = [\n    { path: 'bootstrap', component: BootstrapComponent },\n    { path: 'panel/:system_id', component: PanelViewComponent },\n    { path: 'checkin/:system_id', component: CheckinViewComponent },\n    { path: 'panel-old/:system_id', component: BookingPanelComponent },\n    { path: 'panel-array', component: BookingPanelArrayComponent },\n    { path: 'panel-select', component: BookingPanelSelectComponent },\n    { path: '**', redirectTo: 'bootstrap' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { startOfMinute } from 'date-fns';\nimport { PanelStateService } from '../panel-state.service';\n\n@Component({\n    selector: 'checkin-view',\n    template: `\n        <div class=\"bg-black relative text-white p-4 h-32\">\n            <div\n                class=\"bg-cover bg-center absolute inset-0\"\n                [style.background-image]=\"'url(' + room_image + ')'\"\n            ></div>\n            <div class=\"absolute inset-0 bg-black/60\"></div>\n            <div name class=\"absolute bottom-4 left-4 text-3xl font-medium z-10\">\n                {{\n                    (system | async)?.display_name ||\n                        (system | async)?.name ||\n                        '&lt;Unknown Space&gt;'\n                }}\n            </div>\n        </div>\n        <h3 class=\"p-4 text-xl font-medium\">Upcoming</h3>\n        <div class=\"bg-white divide-y divide-gray-200\">\n            <div class=\"flex items-center p-2\">\n                <div class=\"w-2 h-full min-h-[3rem] rounded bg-success\"></div>\n                <div class=\"text-sm  flex-1 px-2\">\n                    <div class=\"font-medium uppercase\">Now</div>\n                    <div class=\"\"></div>\n                </div>\n                <button mat-button class=\"w-24\">Check-in</button>\n            </div>\n            <div class=\"flex items-center p-2\">\n                <div class=\"w-2 h-full min-h-[3rem] rounded bg-error\"></div>\n                <div class=\"text-sm flex-1 px-2\">\n                    <div class=\"font-medium uppercase\">Next</div>\n                    <div class=\"\"></div>\n                </div>\n                <button mat-button class=\"w-24\">Book</button>\n            </div>\n        </div>\n        <h3 class=\"p-4 text-xl font-medium\">Schedule</h3>\n        <div class=\"bg-white overflow-auto\">\n            <checkin-timetable [events]=\"bookings | async\"></checkin-timetable>\n        </div>\n        <h3 class=\"p-4 text-xl font-medium\">Features</h3>\n        <div class=\"bg-white overflow-auto flex-1 h-px divide-y divide-gray-200\">\n            <button matRipple class=\"flex items-center p-4 w-full\">\n                <div class=\"text-black/40 bg-black/20 rounded-full p-2 text-2xl\">\n                    <app-icon>lightbulb</app-icon>\n                </div>\n                <div class=\"flex-1 px-4 font-medium text-left\">Lights & Blinds</div>\n                <app-icon class=\"text-2xl opacity-40\">chevron_right</app-icon>\n            </button>\n            <button matRipple class=\"flex items-center p-4 w-full\">\n                <div class=\"text-black/40 bg-black/20 rounded-full p-2 text-2xl\">\n                    <app-icon>add_to_queue</app-icon>\n                </div>\n                <div class=\"flex-1 px-4 font-medium text-left\">TV</div>\n                <app-icon class=\"text-2xl opacity-40\">chevron_right</app-icon>\n            </button>\n            <button matRipple class=\"flex items-center p-4 w-full\">\n                <div class=\"text-black/40 bg-black/20 rounded-full p-2 text-2xl\">\n                    <app-icon>restaurant</app-icon>\n                </div>\n                <div class=\"flex-1 px-4 font-medium text-left\">Catering</div>\n                <app-icon class=\"text-2xl opacity-40\">chevron_right</app-icon>\n            </button>\n            <button matRipple class=\"flex items-center p-4 w-full\">\n                <div class=\"text-black/40 bg-black/20 rounded-full p-2 text-2xl\">\n                    <app-icon>help</app-icon>\n                </div>\n                <div class=\"flex-1 px-4 font-medium text-left\">Help</div>\n                <app-icon class=\"text-2xl opacity-40\">chevron_right</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                background-color: #f8f8fa;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n    providers: [PanelStateService],\n})\nexport class CheckinViewComponent extends BaseClass {\n    public readonly system = this._state.space;\n    public readonly bookings = this._state.bookings;\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get room_image() {\n        return this._state.setting('image');\n    }\n\n    constructor(\n        private _state: PanelStateService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.system = '';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('system_id')) {\n                    this._state.system = params.get('system_id');\n                }\n            })\n        );\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nexport * from './action-field.component';\nexport * from './counter.component';\nexport * from './date-field.component';\nexport * from './duration-field.component';\nexport * from './time-field.component';\nexport * from './user-list-field.component';\nexport * from './user-search-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatDialogModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-10', 'lvl-11'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: number = 10\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, +level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    {\n        id: 'test',\n        parent_id: 'bld-01',\n        name: 'Test',\n        map_id: 'assets/maps/l19.svg',\n    },\n]);\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    function padString(str: string | number, length: number = 5) {\n        str = `${str}`;\n        while (str.length < length) str = `0${str}`;\n        return str;\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    group: '',\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', ''],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n}));\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: 'Conference Room 10.01',\n        map_id: 'area-10.01-status',\n        zones: ['bld-01', 'bld-01_lvl-10'],\n    },\n    {\n        name: 'Conference Room 10.02',\n        map_id: 'area-10.02-status',\n        zones: ['bld-01', 'bld-01_lvl-10'],\n    },\n    {\n        name: 'Conference Room 10.03',\n        map_id: 'area-10.03-status',\n        zones: ['bld-01', 'bld-01_lvl-10'],\n    },\n    {\n        name: 'Conference Room 11.01',\n        map_id: 'area-11.01-status',\n        zones: ['bld-01', 'bld-01_lvl-11'],\n    },\n    {\n        name: 'Conference Room 11.02',\n        map_id: 'area-11.02-status',\n        zones: ['bld-01', 'bld-01_lvl-11'],\n    },\n    {\n        name: 'Conference Room 11.03',\n        map_id: 'area-11.03-status',\n        zones: ['bld-01', 'bld-01_lvl-11'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures() }));\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: unique(attendees, 'email').map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system.id]) {\n        event_spaces[event.system.id] = [];\n    }\n    event_spaces[event.system.id].push(event);\n});\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly environment;\n\n    public readonly help = {\n        'help': {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`\n        }\n    }\n\n    public tabs =[\n        {\n           icon: \"laptop\",\n           name: \"Laptop\",\n           type: 'Display',\n           help: \"laptop-help\"\n         },\n        {\n           icon: \"call\",\n           name: \"VC\",\n           inputs: [\"VidConf_1\"],\n           help: \"vidconf-help\",\n           controls: \"vidconf-controls\"\n         },\n      ]\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        const types = unique(this.env_sources.map((_) => _.type));\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        console.log('Power:', state);\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Display 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Display 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display3: {\n        name: 'Display 3',\n        type: 'Display',\n        source: 'PC2',\n        mod: 'Display_3',\n    },\n    Display4: {\n        name: 'Display 4',\n        type: 'Display',\n        mod: 'Display_4',\n    },\n    Display5: {\n        name: 'Display 5',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n\n    get current() {\n        return this.bookings.find((_) =>\n            timePeriodsIntersect(\n                Date.now(),\n                Date.now(),\n                _.event_start * 1000,\n                _.event_end * 1000\n            )\n        );\n    }\n\n    get next() {\n        return this.bookings.find((_) => _.event_start * 1000 > Date.now());\n    }\n\n    /** Current status of the space */\n    get status(): 'pending' | 'busy' | 'free' | 'not-bookable' {\n        const date = new Date();\n        const { current, next } = this;\n        const start = new Date((current || next)?.event_start);\n        const pending = timePeriodsIntersect(\n            date,\n            date,\n            subSeconds(start, this.pending_before),\n            addSeconds(start, this.pending_period)\n        );\n        return this._space?.bookable\n            ? current\n                ? 'busy'\n                : pending\n                ? 'pending'\n                : 'free'\n            : 'not-bookable';\n    }\n\n    constructor(private _space, _data: Partial<MockBookingModule>) {\n        updateBookings(_space, this);\n        setInterval(() => updateBookings(_space, this), 1000);\n    }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n}\n\nexport function createBookingsModule(\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) {\n    const mod = new MockBookingModule(space, overrides);\n    return mod;\n}\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find((u) => u.email === space.email)\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n}\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockLocationServicesModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        \"First Aid\": MOCK_STAFF.filter(_ => predictableRandomInt(9999) % 5 === 0),\n        \"Fire Warden\": MOCK_STAFF.filter(_ => predictableRandomInt(9999) % 5 === 0),\n    }\n\n    $locate_user(email: string, username: string) {}\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createLocationServicesModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockLocationServicesModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: predictableRandomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: predictableRandomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: predictableRandomInt(50),\n                    name: '.L1 IFS IT',\n                },\n            ],\n        };\n    }\n    updateLocations(mod, MOCK_LEVELS);\n    setInterval(() => updateLocations(mod, MOCK_LEVELS), 60 * 1000);\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockLocationServicesModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 5 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return MOCK_SPACES;\n        },\n    });\n}\n","import { registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        AreaManagement: [createLocationServicesModule(space)],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()]\n    });\n}\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { addMinutes, getUnixTime, setHours, startOfDay } from 'date-fns';\n\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\n\nlet EVENT_TIME = setHours(startOfDay(new Date()), 7);\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = next;\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        asset_id: `desk-${lvl?.id}-${index}`,\n        description: `Desk ${index}`,\n        title: `${type} Booking ${index}`,\n        type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`\n        },\n    };\n});\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && event.type === _.query_params.type\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Integrations } from '@sentry/tracing';\nimport { first } from 'rxjs/operators';\nimport {\n    clientId,\n    invalidateToken,\n    isMock,\n    refreshToken,\n    token,\n} from '@placeos/ts-client';\n\nimport {\n    BaseClass,\n    current_user,\n    currentUser,\n    HotkeysService,\n    notifySuccess,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\nimport { addHours } from 'date-fns';\n\nimport * as Sentry from '@sentry/angular';\nimport * as MOCKS from '@placeos/mocks';\n\nexport function initSentry(dsn: string, sample_rate: number = 0.2) {\n    if (!dsn) return;\n    Sentry.init({\n        dsn,\n        integrations: [\n            new Integrations.BrowserTracing({\n                tracingOrigins: ['localhost', location.origin],\n                routingInstrumentation: Sentry.routingInstrumentation,\n            }),\n        ],\n        tracesSampleRate: sample_rate,\n    });\n}\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    constructor(\n        private _tracing: Sentry.TraceService,\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _spaces: SpacesService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        log('APP', 'MOCKS:', MOCKS);\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem(\n                'mock',\n                `${localStorage.getItem('mock') !== 'true'}`\n            );\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(`${token()}|${refreshToken()}`);\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard?.readText().then((tkn) => {\n                const parts = tkn.split('|');\n                const id = clientId();\n                localStorage.setItem(`${id}_access_token`, `${parts[0]}`);\n                localStorage.setItem(`${id}_refresh_token`, `${parts[1]}`);\n                localStorage.setItem(\n                    `${id}_expires_at`,\n                    `${addHours(new Date(), 6).valueOf()}`\n                );\n                notifySuccess('Successfully pasted token.');\n                setTimeout(() => location.reload(), 2000);\n            });\n        });\n        setNotifyOutlet(this._snackbar);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch(() => this.onInitError());\n        setupCache(this._cache);\n        this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n        initSentry(this._settings.get('app.sentry_dsn'));\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n\n        console.error('Error initialising user.');\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    console.log(\n        'Mock:',\n        settings.mock,\n        location.href.includes('mock=true'),\n        localStorage.getItem('mock') === 'true'\n    );\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ComponentsModule } from \"@placeos/components\";\nimport { PanelViewDetailsComponent } from \"./panel-view-details.component\";\nimport { PanelViewStatusComponent } from \"./panel-view-status.component\";\nimport { PanelViewComponent } from \"./panel-view.component\";\n\nconst COMPONENTS = [\n    PanelViewComponent,\n    PanelViewDetailsComponent,\n    PanelViewStatusComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [CommonModule, ComponentsModule],\n    exports: [...COMPONENTS]\n})\nexport class AppPanelViewModule {}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { ComponentsModule } from \"@placeos/components\";\n\nimport { CheckinTimetableComponent } from \"./checkin-timetable.component\";\nimport { CheckinViewComponent } from \"./checkin-view.component\";\n\nconst COMPONENTS = [\n    CheckinViewComponent,\n    CheckinTimetableComponent\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [CommonModule, ComponentsModule, MatRippleModule],\n    exports: [...COMPONENTS]\n})\nexport class AppCheckinModule {}","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { UnauthorisedComponent } from '@placeos/components';\n\nimport { environment } from '../environments/environment';\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { AppComponent } from 'libs/components/src/lib/app.component';\n\nimport { BootstrapComponent } from './bootstrap.component';\nimport { BookingPanelComponent } from './panel/panel.component';\nimport { BookingPanelArrayComponent } from './panel-array.component';\nimport { BookingPanelSelectComponent } from './panel-select.component';\nimport { PanelTopbarComponent } from './panel/topbar.component';\nimport { PanelDetailsComponent } from './panel/panel-details.component';\nimport { PanelBookingListComponent } from './panel/panel-booking-list.component';\n\nimport * as Sentry from '@sentry/angular';\nimport { PanelStatusComponent } from './panel/panel-status.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { PanelTimelineComponent } from './panel/timeline.component';\nimport { AppPanelViewModule } from './new-panel/panel-view.module';\nimport { AppCheckinModule } from './checkin/checkin.module';\n\nconst MAT_MODULES: any[] = [\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        UnauthorisedComponent,\n        BootstrapComponent,\n        BookingPanelComponent,\n        PanelTopbarComponent,\n        PanelDetailsComponent,\n        PanelStatusComponent,\n        PanelBookingListComponent,\n        PanelTimelineComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        MatSnackBarModule,\n        MatRippleModule,\n        SharedOverlaysModule,\n        AppPanelViewModule,\n        AppCheckinModule,\n        ComponentsModule,\n        ...MAT_MODULES,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useValue: Sentry.createErrorHandler({\n                showDialog: false,\n            }),\n        },\n        {\n            provide: Sentry.TraceService,\n            deps: [Router],\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","export const environment = {\n    production: true,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}